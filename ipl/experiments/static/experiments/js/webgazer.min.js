var webgazer=function(e){function t(r){if(n[r])return n[r].exports;var a=n[r]={i:r,l:!1,exports:{}};return e[r].call(a.exports,a,a.exports,t),a.l=!0,a.exports}var n={};return t.m=e,t.c=n,t.d=function(e,n,r){t.o(e,n)||Object.defineProperty(e,n,{enumerable:!0,get:r})},t.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},t.t=function(e,n){if(1&n&&(e=t(e)),8&n)return e;if(4&n&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(t.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&n&&"string"!=typeof e)for(var a in e)t.d(r,a,function(t){return e[t]}.bind(null,a));return r},t.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(n,"a",n),n},t.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},t.p="",t(t.s=304)}([function(e,t,n){"use strict";function r(){if(!Object(je.c)().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const e="undefined"==typeof window?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(null==t)throw new Error("The current browser does not appear to support IndexedDB.");return t}function a(e){const t=e.result;t.createObjectStore(Fe,{keyPath:"modelPath"}),t.createObjectStore(Re,{keyPath:"modelPath"})}function s(e){return new Me(e)}function i(e){return e.startsWith(Me.URL_SCHEME)?e.slice(Me.URL_SCHEME.length):e}function o(e){return{info:[We,e,Ve].join(Be),topology:[We,e,Ue].join(Be),weightSpecs:[We,e,Ge].join(Be),weightData:[We,e,He].join(Be),modelMetadata:[We,e,qe].join(Be)}}function u(e){const t=e.split(Be);if(t.length<3)throw new Error(`Invalid key format: ${e}`);return t.slice(1,t.length-1).join(Be)}function c(e){return e.startsWith(Ke.URL_SCHEME)?e.slice(Ke.URL_SCHEME.length):e}function l(e){return new Ke(e)}function d(e){if(-1===e.indexOf(Ze))throw new Error("The url string provided does not contain a scheme. Supported schemes are: "+`${Qe.getSchemes().join(",")}`);return{scheme:e.split(Ze)[0],path:e.split(Ze)[1]}}async function h(e,t,n=!1){Object(Pe.b)(e!==t,()=>`Old path and new path are the same: '${e}'`);const r=Te.getLoadHandlers(e);Object(Pe.b)(r.length>0,()=>`Copying failed because no load handler is found for source URL ${e}.`),Object(Pe.b)(r.length<2,()=>`Copying failed because more than one (${r.length}) `+`load handlers for source URL ${e}.`);const a=r[0],s=Te.getSaveHandlers(t);Object(Pe.b)(s.length>0,()=>"Copying failed because no save handler is found for destination "+`URL ${t}.`),Object(Pe.b)(s.length<2,()=>`Copying failed because more than one (${r.length}) `+`save handlers for destination URL ${t}.`);const i=s[0],o=d(e).scheme,u=d(e).path,c=o===d(e).scheme,l=await a.load();n&&c&&await Qe.getManager(o).removeModel(u);const h=await i.save(l);return n&&!c&&await Qe.getManager(o).removeModel(u),h.modelArtifactsInfo}async function p(){const e=Qe.getSchemes(),t={};for(const n of e){const e=await Qe.getManager(n).listModels();for(const r in e){const a=n+Ze+r;t[a]=e[r]}}return t}async function f(e){const t=d(e),n=Qe.getManager(t.scheme);return n.removeModel(t.path)}async function m(e,t){const n=!1;return h(e,t,n)}async function b(e,t){const n=!0;return h(e,t,n)}function g(e){return new Promise(e=>setTimeout(e)).then(e)}function y(e="model"){return new ct(e)}function x(e){return new lt(e)}function v(e,t,n,r){function a(e){Object(Pe.b)(null!=e&&Array.isArray(e)&&e.length>0,()=>"promises must be a none empty array")}function s(e,t){Object(Pe.b)(e>=0&&e<=1,()=>"Progress fraction must be in range [0, 1], but "+`got startFraction ${e}`),Object(Pe.b)(t>=0&&t<=1,()=>"Progress fraction must be in range [0, 1], but "+`got endFraction ${t}`),Object(Pe.b)(t>=e,()=>"startFraction must be no more than endFraction, but "+`got startFraction ${e} and endFraction `+`${t}`)}a(e),n=null==n?0:n,r=null==r?1:r,s(n,r);let i=0;const o=a=>(a.then(a=>{const s=n+ ++i/e.length*(r-n);return t(s),a}),a);return Promise.all(e.map(o))}async function w(e,t){null==t&&(t={});const n=null==t.fetchFunc?Object(je.c)().platform.fetch:t.fetchFunc,r=e.map(e=>n(e,t.requestInit,{isBinary:!0})),a=0,s=.5,i=null==t.onProgress?await Promise.all(r):await v(r,t.onProgress,a,s),o=i.map(e=>e.arrayBuffer()),u=.5,c=1,l=null==t.onProgress?await Promise.all(o):await v(o,t.onProgress,u,c);return l}async function k(e,t="",n,r){const a=e=>w(e,{requestInit:r}),s=O(a);return s(e,t,n)}function O(e){return async(t,n="",r)=>{const a=t.map(()=>!1),s={},i=null!=r?r.map(()=>!1):[],o=[];if(t.forEach((e,t)=>{let n=0;e.weights.forEach(e=>{const u="quantization"in e?e.quantization.dtype:e.dtype,c=ht.a[u]*Pe.O(e.shape),l=()=>{a[t]=!0,null==s[t]&&(s[t]=[]),s[t].push({manifestEntry:e,groupOffset:n,sizeBytes:c})};null!=r?r.forEach((t,n)=>{t===e.name&&(l(),i[n]=!0)}):l(),o.push(e.name),n+=c})}),!i.every(e=>e)){const e=r.filter((e,t)=>!i[t]);throw new Error("Could not find weights in manifest with names: "+`${e.join(", ")}. \n`+"Manifest JSON has weights with names: "+`${o.join(", ")}.`)}const u=a.reduce((e,t,n)=>(t&&e.push(n),e),[]),c=[];u.forEach(e=>{t[e].paths.forEach(e=>{const t=n+(n.endsWith("/")?"":"/")+e;c.push(t)})});const l=await e(c),d={};let h=0;return u.forEach(e=>{const n=t[e].paths.length;let r=0;for(let e=0;e<n;e++)r+=l[h+e].byteLength;const a=new ArrayBuffer(r),i=new Uint8Array(a);let o=0;for(let e=0;e<n;e++){const t=new Uint8Array(l[h+e]);i.set(t,o),o+=t.byteLength}const u=s[e];u.forEach(e=>{const t=a.slice(e.groupOffset,e.groupOffset+e.sizeBytes),n=Object(Se.e)(t,[e.manifestEntry]);for(const e in n)d[e]=n[e]}),h+=n}),d}}function I(e){const t=e.lastIndexOf("/"),n=e.lastIndexOf("?"),r=e.substring(0,t),a=n>t?e.substring(n):"";return[r+"/",a]}function N(e){return null!=e.match(mt.URL_SCHEME_REGEX)}function j(e,t){return new mt(e,t)}function S(e,t){return j(e,t)}function T(e,t,n,r){if(1===arguments.length){const t=null!=e.modelTopology||null!=e.weightSpecs;return t?new gt(e):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new gt({modelTopology:e}))}return console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new gt({modelTopology:e,weightSpecs:t,weightData:n,trainingConfig:r})}function C(e){return new yt(e)}function E(e,t,n){const r=Object(xt.a)(e,"labels","confusionMatrix"),a=Object(xt.a)(t,"predictions","confusionMatrix");Pe.b(null==n||n>0&&Number.isInteger(n),()=>"If provided, numClasses must be a positive integer, "+`but got ${n}`),Pe.b(1===r.rank,()=>`Expected the rank of labels to be 1, but got ${r.rank}`),Pe.b(1===a.rank,()=>"Expected the rank of predictions to be 1, "+`but got ${a.rank}`),Pe.b(r.shape[0]===a.shape[0],()=>"Mismatch in the number of examples: "+`${r.shape[0]} vs. ${a.shape[0]}. `+"Labels and predictions should have the same number of elements."),Pe.b(n>0&&Number.isInteger(n),()=>"numClasses is required to be a positive integer, but got "+`${n}`);const s=Object(wt.a)(Object(tt.a)(r,"int32"),n),i=Object(wt.a)(Object(tt.a)(a,"int32"),n),o=Object(Ot.a)(s),u=Object(vt.a)(o,i);return Object(tt.a)(u,"int32")}function $(e,t=3){if(t>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(null==e)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,r=!1,a=!1,s=!1,i=!1,o=!1;if(e.data instanceof Uint8Array)n=!0;else if("undefined"!=typeof ImageData&&e instanceof ImageData)r=!0;else if("undefined"!=typeof HTMLVideoElement&&e instanceof HTMLVideoElement)a=!0;else if("undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement)s=!0;else if(null!=e.getContext)i=!0;else{if(!("undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap))throw new Error("pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, "+`but was ${e.constructor.name}`);o=!0}if(a){const t=2;if(a&&e.readyState<t)throw new Error("The video element has not loaded data yet. Please wait for `loadeddata` event on the <video> element.")}const u=Object(jt.c)(Nt.ib,Ne.a.backendName);if(null!=u){const n={pixels:e},r={numChannels:t};return Ne.a.runKernel(Nt.ib,n,r)}const[c,l]=a?[e.videoWidth,e.videoHeight]:[e.width,e.height];let d,h;if(i?d=e.getContext("2d").getImageData(0,0,c,l).data:r||n?d=e.data:(s||a||o)&&(null==Tt&&(Tt=document.createElement("canvas").getContext("2d")),Tt.canvas.width=c,Tt.canvas.height=l,Tt.drawImage(e,0,0,c,l),d=Tt.getImageData(0,0,c,l).data),4===t)h=new Int32Array(d);else{const e=c*l;h=new Int32Array(e*t);for(let n=0;n<e;n++)for(let e=0;e<t;++e)h[n*t+e]=d[4*n+e]}const p=[l,c,t];return Object(St.a)(h,p,"int32")}function A(e){return null!=e&&e.data instanceof Uint8Array}function _(){return"undefined"!=typeof window&&"undefined"!=typeof ImageBitmap&&window.hasOwnProperty("createImageBitmap")}function D(e){return null!=e&&0!==e.width&&0!==e.height}function F(e){return _()&&!(e instanceof ImageBitmap)&&D(e)&&!A(e)}async function R(e,t=3){let n=null;if(Object(je.c)().getBool("WRAP_TO_IMAGEBITMAP")&&F(e)){let t;try{t=await createImageBitmap(e,{premultiplyAlpha:"none"})}catch(e){t=null}n=null!=t&&t.width===e.width&&t.height===e.height?t:e}else n=e;return $(n,t)}async function M(e,t){let n=Object(xt.a)(e,"img","toPixels");if(!(e instanceof at.a)){const e=n;n=Object(tt.a)(e,"int32"),e.dispose()}if(2!==n.rank&&3!==n.rank)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${n.rank}.`);const[r,a]=n.shape.slice(0,2),s=2===n.rank?1:n.shape[2];if(s>4||2===s)throw new Error("toPixels only supports depth of size "+`1, 3 or 4 but got ${s}`);if("float32"!==n.dtype&&"int32"!==n.dtype)throw new Error(`Unsupported type for toPixels: ${n.dtype}.`+" Please use float32 or int32 tensors.");const i=await n.data(),o="float32"===n.dtype?255:1,u=new Uint8ClampedArray(a*r*4);for(let e=0;e<r*a;++e){const t=[0,0,0,255];for(let r=0;r<s;r++){const a=i[e*s+r];if("float32"===n.dtype){if(a<0||a>1)throw new Error("Tensor values for a float32 Tensor must be in the "+`range [0 - 1] but encountered ${a}.`)}else if("int32"===n.dtype&&(a<0||a>255))throw new Error("Tensor values for a int32 Tensor must be in the "+`range [0 - 255] but encountered ${a}.`);1===s?(t[0]=a*o,t[1]=a*o,t[2]=a*o):t[r]=a*o}const r=4*e;u[r+0]=Math.round(t[0]),u[r+1]=Math.round(t[1]),u[r+2]=Math.round(t[2]),u[r+3]=Math.round(t[3])}if(null!=t){t.width=a,t.height=r;const e=t.getContext("2d"),n=new ImageData(u,a,r);e.putImageData(n,0,0)}return n!==e&&n.dispose(),u}function z(e,t){const n=e.shape.length,r=t.shape.length;if(n<1)throw new Error("tf.gatherND() expects the input to be rank 1 or higher,"+` but the rank was ${n}.`);if(r<1)throw new Error("tf.gatherND() expects the indices to be rank 1 or higher,"+` but the rank was ${r}.`);if("int32"!==t.dtype)throw new Error("tf.gatherND() expects the indices to be int32 type,"+` but the dtype was ${t.dtype}.`);if(t.shape[r-1]>n)throw new Error("index innermost dimension length must be <= tensor rank; saw: "+`${t.shape[r-1]} vs. ${n}`);if(0===Object(Pe.O)(e.shape))throw new Error("Requested more than 0 entries, but input is empty."+` Input shape: ${e.shape}.`);const a=t.shape,s=a[a.length-1];let i=1;for(let e=0;e<a.length-1;++e)i*=a[e];const o=e.shape,u=a.slice();u.pop();let c=1;for(let e=s;e<n;++e)c*=o[e],u.push(o[e]);const l=[...Object(Pe.j)(e.shape).map(e=>e/c),1].slice(0,s);return[u,i,c,l]}function L(e){Object(Pe.b)(null!=e.className,()=>"Class being registered does not have the static className property defined."),Object(Pe.b)("string"==typeof e.className,()=>"className is required to be a string, but got type "+typeof e.className),Object(Pe.b)(e.className.length>0,()=>"Class being registered has an empty-string as its className, which is disallowed."),_t.register(e)}function P(e,t){const n=e[0].length;e.forEach((e,t)=>{Pe.b(e.length===n,()=>`Error in concat${n}D: rank of tensors[${t}] must be the same `+`as the rank of the rest (${n})`)}),Pe.b(t>=0&&t<n,()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`);const r=e[0];e.forEach((e,a)=>{for(let s=0;s<n;s++)Pe.b(s===t||e[s]===r[s],()=>`Error in concat${n}D: Shape of tensors[${a}] (${e}) `+`does not match the shape of the rest (${r}) `+`along the non-concatenated axis ${a}.`)})}function B(e,t){const n=e[0].slice();for(let r=1;r<e.length;r++)n[t]+=e[r][t];return n}function W(e){return e<=gn?e:Object(Pe.G)(e,Math.floor(Math.sqrt(e)))}function V(e,t,n){const r=n*("number"==typeof e?e:e[0]),a=t*("number"==typeof e?e:e[1]);return[r,a]}function U(e,t,n,r=!0){let a=[];if(r)a=a.concat(t.slice(0)),a.push(e[0]/n),a=a.concat(e.slice(1));else{a=a.concat(e[0]);const n=t.length;for(let r=0;r<n;++r)a=a.concat([e[r+1]/t[r],t[r]]);a=a.concat(e.slice(n+1))}return a}function G(e,t,n=!0){const r=[];if(n){r.push(t);for(let n=t+1;n<e;++n)n<=2*t?(r.push(n),r.push(n-(t+1))):r.push(n)}else{const n=[],a=[];for(let r=1;r<e;++r)r>=2*t+1||r%2==1?a.push(r):n.push(r);r.push(...n),r.push(0),r.push(...a)}return r}function H(e,t,n,r=!0){const a=[];r?a.push(e[0]/n):a.push(e[0]*n);for(let n=1;n<e.length;++n)n<=t.length?r?a.push(t[n-1]*e[n]):a.push(e[n]/t[n-1]):a.push(e[n]);return a}function q(e,t){const n=[0];for(let r=0;r<t;++r)n.push(e[r][0]);return n}function K(e,t,n){const r=e.slice(0,1);for(let a=0;a<n;++a)r.push(e[a+1]-t[a][0]-t[a][1]);return r}function X(...e){Object(je.c)().getBool("IS_TEST")||console.warn(...e)}function Y(...e){Object(je.c)().getBool("IS_TEST")||console.log(...e)}function Z(e,t){if(e.length!==t.length)throw new Error("Cannot merge real and imag arrays of different lengths. real:"+`${e.length}, imag: ${t.length}.`);const n=new Float32Array(2*e.length);for(let r=0;r<n.length;r+=2)n[r]=e[r/2],n[r+1]=t[r/2];return n}function Q(e){const t=new Float32Array(e.length/2),n=new Float32Array(e.length/2);for(let r=0;r<e.length;r+=2)t[r/2]=e[r],n[r/2]=e[r+1];return{real:t,imag:n}}function J(e){const t=Math.ceil(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let t=0;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],r[Math.floor(t/4)]=e[t+1];return{real:n,imag:r}}function ee(e){const t=Math.floor(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let t=2;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],r[Math.floor(t/4)]=e[t+1];return{real:n,imag:r}}function te(e,t){const n=e[2*t],r=e[2*t+1];return{real:n,imag:r}}function ne(e,t,n,r){e[2*r]=t,e[2*r+1]=n}function re(e,t){const n=new Float32Array(e/2),r=new Float32Array(e/2);for(let a=0;a<Math.ceil(e/2);a++){const s=(t?2:-2)*Math.PI*(a/e);n[a]=Math.cos(s),r[a]=Math.sin(s)}return{real:n,imag:r}}function ae(e,t,n){const r=(n?2:-2)*Math.PI*(e/t),a=Math.cos(r),s=Math.sin(r);return{real:a,imag:s}}function se(e,t){e=e.replace(/\s/g,"");const n=(e.length-e.replace(jn,"").length)/Nn.length;if(n<1)throw new Error("Equations without an arrow are not supported.");if(n>1)throw new Error(`Equation must contain exactly one arrow ("${Nn}").`);const[r,a]=e.split(Nn);Object(Pe.b)(-1===r.indexOf(Tn),()=>`The ellipsis notation ("${Tn}") is not supported yet.`);const s=r.split(Sn),i=s.length;if(t!==i)throw new Error(`Expected ${i} input tensors, received ${t}`);if(i>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const o=[];for(let e=0;e<a.length;++e){const t=a[e];if(!s.some(e=>-1!==e.indexOf(t)))throw new Error(`Output subscripts contain the label ${t} `+"not present in the input subscripts.");-1===o.indexOf(t)&&o.push(t)}for(let e=0;e<r.length;++e){const t=r[e];-1===o.indexOf(t)&&t!==Sn&&o.push(t)}const u=new Array(s.length);for(let e=0;e<i;++e){if(new Set(s[e].split("")).size!==s[e].length)throw new Error(`Found duplicate axes in input component ${s[e]}. `+"Support for duplicate axes in input is not implemented yet.");u[e]=[];for(let t=0;t<s[e].length;++t)u[e].push(o.indexOf(s[e][t]))}const c=o.length,l=a.length,d=[];for(let e=l;e<c;++e)d.push(e);return{allDims:o,summedDims:d,idDims:u}}function ie(e,t){let n=new Array(e);n.fill(-1);for(let e=0;e<t.length;++e)n[t[e]]=e;const r=[];for(let t=0;t<e;++t)-1===n[t]&&r.push(t);return n=n.filter(e=>-1!==e),{permutationIndices:n,expandDims:r}}function oe(e,t,n){const r=new Array(e);for(let e=0;e<n.length;++e){const a=n[e].shape;for(let n=0;n<t[e].length;++n)void 0===r[t[e][n]]?r[t[e][n]]=a[n]:Object(Pe.b)(r[t[e][n]]===a[n],()=>`Expected dimension ${r[t[e][n]]} at axis ${n} `+`of input shaped ${JSON.stringify(a)}, `+`but got dimension ${a[n]}`)}}function ue(e,t){const n=e,r=[];let a=0;0===e.length&&n.push(-1),a=e.length+1;for(let e=0;e<a;++e)r.push([]);const s=[];for(let e=0;e<n.length;++e){const a=n[e],i=le(t,a);for(const t of i)-1===s.indexOf(t)&&(r[e].push(t),s.push(t))}return{path:n,steps:r}}function ce(e){return e.every((e,t)=>e===t)}function le(e,t){const n=[];for(let r=0;r<e.length;++r)0!==e[r].length&&-1===e[r].indexOf(t)&&-1!==t||n.push(r);return n}function de(e,t,n=0){let r=[];if("number"==typeof t)Object(Pe.b)(e.shape[n]%t==0,()=>"Number of splits must evenly divide the axis."),r=new Array(t).fill(e.shape[n]/t);else{const a=t.reduce((e,t)=>(-1===t&&(e+=1),e),0);Object(Pe.b)(a<=1,()=>"There should be only one negative value in split array.");const s=t.indexOf(-1);if(-1!==s){const r=t.reduce((e,t)=>t>0?e+t:e);t[s]=e.shape[n]-r}Object(Pe.b)(e.shape[n]===t.reduce((e,t)=>e+t),()=>"The sum of sizes must match the size of the axis dimension."),r=t}return r}function he(e,t){let n,r=!1;for(e<=gn?(n=e,r=!0):n=Object(Pe.G)(e,Math.floor(Math.sqrt(e)));!r;)n>t||n===e?r=!0:n=Object(Pe.G)(e,n+1);return n}function pe(e,t,n){const r=[],a=e.length;for(let s=0;s<a;s++)s!==t?r.push(e[s]):r.push(n);return r}function fe(e,t,n,r){const a=t.shape.length,s=e.shape.length;if(0!==r&&(r<-a||r>a))throw new Error(`Expect batchDims in the range of [-${a}, ${a}], but got ${r}`);if(r<0&&(r+=a),r>s)throw new Error(`batchDims (${r}) must be less than rank(x) (\n    ${s}).`);if(n<r)throw new Error(`batchDims (${r}) must be less than or equal to axis (${n}).`);for(let n=0;n<r;++n)if(e.shape[n]!==t.shape[n])throw new Error(`x.shape[${n}]: ${e.shape[n]} should be equal to indices.shape[${n}]: ${t.shape[n]}.`);const i=e.shape[n],o=[];let u=1,c=1,l=1;for(let t=0;t<r;++t)o.push(e.shape[t]),u*=e.shape[t];for(let t=r;t<n;t++)o.push(e.shape[t]),c*=e.shape[t];for(let e=r;e<a;e++)o.push(t.shape[e]);for(let t=n+1;t<s;t++)o.push(e.shape[t]),l*=e.shape[t];return{batchSize:u,sliceSize:l,outerSize:c,dimSize:i,outputShape:o}}function me(e){try{return e.map(e=>Object(Rt.decodeString)(e))}catch(e){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${e}`)}}function be(e){return e.map(e=>Object(Rt.encodeString)(e))}n.r(t),n.d(t,"AdadeltaOptimizer",function(){return Kt}),n.d(t,"AdagradOptimizer",function(){return Yt}),n.d(t,"AdamOptimizer",function(){return Jt}),n.d(t,"AdamaxOptimizer",function(){return nn}),n.d(t,"MomentumOptimizer",function(){return an}),n.d(t,"Optimizer",function(){return qt}),n.d(t,"RMSPropOptimizer",function(){return sn}),n.d(t,"SGDOptimizer",function(){return rn}),n.d(t,"Tensor",function(){return at.a}),n.d(t,"TensorBuffer",function(){return at.b}),n.d(t,"Variable",function(){return at.c}),n.d(t,"Rank",function(){return on.a}),n.d(t,"sumOutType",function(){return on.b}),n.d(t,"upcastType",function(){return on.c}),n.d(t,"abs",function(){return un.b}),n.d(t,"acos",function(){return un.c}),n.d(t,"acosh",function(){return un.d}),n.d(t,"add",function(){return un.e}),n.d(t,"addN",function(){return un.f}),n.d(t,"all",function(){return un.g}),n.d(t,"any",function(){return un.h}),n.d(t,"argMax",function(){return un.i}),n.d(t,"argMin",function(){return un.j}),n.d(t,"asin",function(){return un.k}),n.d(t,"asinh",function(){return un.l}),n.d(t,"atan",function(){return un.m}),n.d(t,"atan2",function(){return un.n}),n.d(t,"atanh",function(){return un.o}),n.d(t,"avgPool",function(){return un.p}),n.d(t,"avgPool3d",function(){return un.q}),n.d(t,"basicLSTMCell",function(){return un.r}),n.d(t,"batchToSpaceND",function(){return un.w}),n.d(t,"batchNorm",function(){return un.s}),n.d(t,"batchNorm2d",function(){return un.t}),n.d(t,"batchNorm3d",function(){return un.u}),n.d(t,"batchNorm4d",function(){return un.v}),n.d(t,"bincount",function(){return un.x}),n.d(t,"broadcastTo",function(){return un.z}),n.d(t,"buffer",function(){return un.A}),n.d(t,"cast",function(){return un.B}),n.d(t,"ceil",function(){return un.C}),n.d(t,"clipByValue",function(){return un.D}),n.d(t,"clone",function(){return un.E}),n.d(t,"complex",function(){return un.F}),n.d(t,"concat",function(){return un.G}),n.d(t,"concat1d",function(){return un.H}),n.d(t,"concat2d",function(){return un.I}),n.d(t,"concat3d",function(){return un.J}),n.d(t,"concat4d",function(){return un.K}),n.d(t,"conv1d",function(){return un.L}),n.d(t,"conv2d",function(){return un.M}),n.d(t,"conv2dTranspose",function(){return un.N}),n.d(t,"conv3d",function(){return un.O}),n.d(t,"conv3dTranspose",function(){return un.P}),n.d(t,"cos",function(){return un.Q}),n.d(t,"cosh",function(){return un.R}),n.d(t,"cumsum",function(){return un.T}),n.d(t,"denseBincount",function(){return un.U}),n.d(t,"depthToSpace",function(){return un.V}),n.d(t,"depthwiseConv2d",function(){return un.W}),n.d(t,"diag",function(){return un.X}),n.d(t,"dilation2d",function(){return un.Y}),n.d(t,"div",function(){return un.Z}),n.d(t,"divNoNan",function(){return un.ab}),n.d(t,"dot",function(){return un.bb}),n.d(t,"einsum",function(){return un.db}),n.d(t,"elu",function(){return un.eb}),n.d(t,"equal",function(){return un.gb}),n.d(t,"erf",function(){return un.hb}),n.d(t,"exp",function(){return un.ib}),n.d(t,"expandDims",function(){return un.jb}),n.d(t,"expm1",function(){return un.kb}),n.d(t,"eye",function(){return un.lb}),n.d(t,"fill",function(){return un.nb}),n.d(t,"floor",function(){return un.ob}),n.d(t,"floorDiv",function(){return un.pb}),n.d(t,"gather",function(){return un.rb}),n.d(t,"greater",function(){return un.tb}),n.d(t,"greaterEqual",function(){return un.ub}),n.d(t,"imag",function(){return un.wb}),n.d(t,"isFinite",function(){return un.Ab}),n.d(t,"isInf",function(){return un.Bb}),n.d(t,"isNaN",function(){return un.Cb}),n.d(t,"leakyRelu",function(){return un.Db}),n.d(t,"less",function(){return un.Eb}),n.d(t,"lessEqual",function(){return un.Fb}),n.d(t,"linspace",function(){return un.Hb}),n.d(t,"localResponseNormalization",function(){return un.Ib}),n.d(t,"log",function(){return un.Jb}),n.d(t,"log1p",function(){return un.Kb}),n.d(t,"logSigmoid",function(){return un.Lb}),n.d(t,"logSoftmax",function(){return un.Mb}),n.d(t,"logSumExp",function(){return un.Nb}),n.d(t,"logicalAnd",function(){return un.Ob}),n.d(t,"logicalNot",function(){return un.Pb}),n.d(t,"logicalOr",function(){return un.Qb}),n.d(t,"logicalXor",function(){return un.Rb}),n.d(t,"matMul",function(){return un.Tb}),n.d(t,"max",function(){return un.Ub}),n.d(t,"maxPool",function(){return un.Vb}),n.d(t,"maxPool3d",function(){return un.Wb}),n.d(t,"maxPoolWithArgmax",function(){return un.Xb}),n.d(t,"maximum",function(){return un.Yb}),n.d(t,"mean",function(){return un.Zb}),n.d(t,"meshgrid",function(){return un.ac}),n.d(t,"min",function(){return un.bc}),n.d(t,"minimum",function(){return un.cc}),n.d(t,"mirrorPad",function(){return un.dc}),n.d(t,"mod",function(){return un.ec}),n.d(t,"moments",function(){return un.fc}),n.d(t,"mul",function(){return un.hc}),n.d(t,"multiRNNCell",function(){return un.ic}),n.d(t,"multinomial",function(){return un.jc}),n.d(t,"neg",function(){return un.kc}),n.d(t,"notEqual",function(){return un.mc}),n.d(t,"oneHot",function(){return un.nc}),n.d(t,"ones",function(){return un.oc}),n.d(t,"onesLike",function(){return un.pc}),n.d(t,"outerProduct",function(){return un.rc}),n.d(t,"pad",function(){return un.sc}),n.d(t,"pad1d",function(){return un.tc}),n.d(t,"pad2d",function(){return un.uc}),n.d(t,"pad3d",function(){return un.vc}),n.d(t,"pad4d",function(){return un.wc}),n.d(t,"pool",function(){return un.xc}),n.d(t,"pow",function(){return un.yc}),n.d(t,"prelu",function(){return un.zc}),n.d(t,"print",function(){return un.Ac}),n.d(t,"prod",function(){return un.Bc}),n.d(t,"rand",function(){return un.Cc}),n.d(t,"randomGamma",function(){return un.Dc}),n.d(t,"randomNormal",function(){return un.Ec}),n.d(t,"randomUniform",function(){return un.Fc}),n.d(t,"range",function(){return un.Gc}),n.d(t,"real",function(){return un.Hc}),n.d(t,"reciprocal",function(){return un.Ic}),n.d(t,"relu",function(){return un.Jc}),n.d(t,"relu6",function(){return un.Kc}),n.d(t,"reshape",function(){return un.Lc}),n.d(t,"reverse",function(){return un.Mc}),n.d(t,"reverse1d",function(){return un.Nc}),n.d(t,"reverse2d",function(){return un.Oc}),n.d(t,"reverse3d",function(){return un.Pc}),n.d(t,"reverse4d",function(){return un.Qc}),n.d(t,"round",function(){return un.Sc}),n.d(t,"rsqrt",function(){return un.Tc}),n.d(t,"scalar",function(){return un.Uc}),n.d(t,"selu",function(){return un.Wc}),n.d(t,"separableConv2d",function(){return un.Xc}),n.d(t,"setdiff1dAsync",function(){return un.Yc}),n.d(t,"sigmoid",function(){return un.Zc}),n.d(t,"sign",function(){return un.ad}),n.d(t,"sin",function(){return un.cd}),n.d(t,"sinh",function(){return un.dd}),n.d(t,"slice",function(){return un.ed}),n.d(t,"slice1d",function(){return un.fd}),n.d(t,"slice2d",function(){return un.gd}),n.d(t,"slice3d",function(){return un.hd}),n.d(t,"slice4d",function(){return un.id}),n.d(t,"softmax",function(){return un.jd}),n.d(t,"softplus",function(){return un.kd}),n.d(t,"spaceToBatchND",function(){return un.ld}),n.d(t,"fft",function(){return un.mb}),n.d(t,"ifft",function(){return un.vb}),n.d(t,"irfft",function(){return un.zb}),n.d(t,"rfft",function(){return un.Rc}),n.d(t,"split",function(){return un.pd}),n.d(t,"sqrt",function(){return un.qd}),n.d(t,"square",function(){return un.rd}),n.d(t,"squaredDifference",function(){return un.sd}),n.d(t,"squeeze",function(){return un.td}),n.d(t,"stack",function(){return un.ud}),n.d(t,"step",function(){return un.vd}),n.d(t,"stridedSlice",function(){return un.wd}),n.d(t,"sub",function(){return un.xd}),n.d(t,"sum",function(){return un.yd}),n.d(t,"tan",function(){return un.zd}),n.d(t,"tanh",function(){return un.Ad}),n.d(t,"tensor",function(){return un.Bd}),n.d(t,"tensor1d",function(){return un.Cd}),n.d(t,"tensor2d",function(){return un.Dd}),n.d(t,"tensor3d",function(){return un.Ed}),n.d(t,"tensor4d",function(){return un.Fd}),n.d(t,"tensor5d",function(){return un.Gd}),n.d(t,"tensor6d",function(){return un.Hd}),n.d(t,"tile",function(){return un.Id}),n.d(t,"topk",function(){return un.Jd}),n.d(t,"truncatedNormal",function(){return un.Ld}),n.d(t,"unique",function(){return un.Md}),n.d(t,"unsortedSegmentSum",function(){return un.Nd}),n.d(t,"unstack",function(){return un.Od}),n.d(t,"variable",function(){return un.Pd}),n.d(t,"where",function(){return un.Qd}),n.d(t,"whereAsync",function(){return un.Rd}),n.d(t,"zeros",function(){return un.Sd}),n.d(t,"zerosLike",function(){return un.Td}),n.d(t,"booleanMaskAsync",function(){return un.y}),n.d(t,"transpose",function(){return un.Kd}),n.d(t,"norm",function(){return un.lc}),n.d(t,"movingAverage",function(){return un.gc}),n.d(t,"scatterND",function(){return un.Vc}),n.d(t,"sparseToDense",function(){return un.nd}),n.d(t,"gatherND",function(){return un.sb}),n.d(t,"dropout",function(){return un.cb}),n.d(t,"enclosingPowerOfTwo",function(){return un.fb}),n.d(t,"cosineWindow",function(){return un.S}),n.d(t,"inTopKAsync",function(){return un.yb}),n.d(t,"op",function(){return un.qc}),n.d(t,"OP_SCOPE_SUFFIX",function(){return un.a}),n.d(t,"image",function(){return un.xb}),n.d(t,"linalg",function(){return un.Gb}),n.d(t,"losses",function(){return un.Sb}),n.d(t,"spectral",function(){return un.od}),n.d(t,"fused",function(){return un.qb}),n.d(t,"signal",function(){return un.bd}),n.d(t,"sparse",function(){return un.md}),n.d(t,"Reduction",function(){return cn.a}),n.d(t,"train",function(){return dn}),n.d(t,"enableProdMode",function(){return zt.g}),n.d(t,"enableDebugMode",function(){return zt.f}),n.d(t,"disableDeprecationWarnings",function(){return zt.c}),n.d(t,"deprecationWarn",function(){return zt.b}),n.d(t,"disposeVariables",function(){return zt.e}),n.d(t,"engine",function(){return zt.h}),n.d(t,"memory",function(){return zt.m}),n.d(t,"profile",function(){return zt.n}),n.d(t,"tidy",function(){return zt.t}),n.d(t,"dispose",function(){return zt.d}),n.d(t,"keep",function(){return zt.l}),n.d(t,"time",function(){return zt.u}),n.d(t,"setBackend",function(){return zt.r}),n.d(t,"ready",function(){return zt.o}),n.d(t,"getBackend",function(){return zt.k}),n.d(t,"removeBackend",function(){return zt.q}),n.d(t,"findBackend",function(){return zt.i}),n.d(t,"findBackendFactory",function(){return zt.j}),n.d(t,"registerBackend",function(){return zt.p}),n.d(t,"backend",function(){return zt.a}),n.d(t,"setPlatform",function(){return zt.s}),n.d(t,"getKernel",function(){return jt.c}),n.d(t,"getGradient",function(){return jt.b}),n.d(t,"getKernelsForBackend",function(){return jt.d}),n.d(t,"registerKernel",function(){return jt.f}),n.d(t,"registerGradient",function(){return jt.e}),n.d(t,"unregisterKernel",function(){return jt.h}),n.d(t,"unregisterGradient",function(){return jt.g}),n.d(t,"copyRegisteredKernels",function(){return jt.a}),n.d(t,"customGrad",function(){return Gt.a}),n.d(t,"grad",function(){return Gt.b}),n.d(t,"grads",function(){return Gt.c}),n.d(t,"valueAndGrad",function(){return Gt.d}),n.d(t,"valueAndGrads",function(){return Gt.e}),n.d(t,"variableGrads",function(){return Gt.f}),n.d(t,"Environment",function(){return je.b}),n.d(t,"env",function(){return je.c}),n.d(t,"ENV",function(){return je.a}),n.d(t,"version_core",function(){return Mt}),n.d(t,"nextFrame",function(){return hn.a}),n.d(t,"browser",function(){return xe}),n.d(t,"io",function(){return ge}),n.d(t,"math",function(){return ye}),n.d(t,"serialization",function(){return we}),n.d(t,"test_util",function(){return Ft}),n.d(t,"util",function(){return Rt}),n.d(t,"backend_util",function(){return Oe}),n.d(t,"tensor_util",function(){return Dt}),n.d(t,"slice_util",function(){return $t}),n.d(t,"gather_util",function(){return ve}),n.d(t,"scatter_util",function(){return Et}),n.d(t,"device_util",function(){return Cn}),n.d(t,"kernel_impls",function(){return Ie}),n.d(t,"KernelBackend",function(){return An.b}),n.d(t,"DataStorage",function(){return An.a}),n.d(t,"Abs",function(){return Nt.a}),n.d(t,"Acos",function(){return Nt.b}),n.d(t,"Acosh",function(){return Nt.c}),n.d(t,"Add",function(){return Nt.d}),n.d(t,"AddN",function(){return Nt.e}),n.d(t,"All",function(){return Nt.f}),n.d(t,"Any",function(){return Nt.g}),n.d(t,"ArgMax",function(){return Nt.h}),n.d(t,"ArgMin",function(){return Nt.i}),n.d(t,"Asin",function(){return Nt.j}),n.d(t,"Asinh",function(){return Nt.k}),n.d(t,"Atan",function(){return Nt.l}),n.d(t,"Atanh",function(){return Nt.n}),n.d(t,"Atan2",function(){return Nt.m}),n.d(t,"AvgPool",function(){return Nt.o}),n.d(t,"AvgPoolGrad",function(){return Nt.r}),n.d(t,"AvgPool3D",function(){return Nt.p}),n.d(t,"AvgPool3DGrad",function(){return Nt.q}),n.d(t,"BatchMatMul",function(){return Nt.s}),n.d(t,"BatchToSpaceND",function(){return Nt.t}),n.d(t,"Bincount",function(){return Nt.u}),n.d(t,"BroadcastTo",function(){return Nt.v}),n.d(t,"Cast",function(){return Nt.w}),n.d(t,"Ceil",function(){return Nt.x}),n.d(t,"ClipByValue",function(){return Nt.y}),n.d(t,"Complex",function(){return Nt.z}),n.d(t,"ComplexAbs",function(){return Nt.A}),n.d(t,"Concat",function(){return Nt.B}),n.d(t,"Conv2D",function(){return Nt.C}),n.d(t,"Conv2DBackpropFilter",function(){return Nt.D}),n.d(t,"Conv2DBackpropInput",function(){return Nt.E}),
n.d(t,"Conv3D",function(){return Nt.F}),n.d(t,"Conv3DBackpropFilterV2",function(){return Nt.G}),n.d(t,"Conv3DBackpropInputV2",function(){return Nt.H}),n.d(t,"Cos",function(){return Nt.I}),n.d(t,"Cosh",function(){return Nt.J}),n.d(t,"Cumsum",function(){return Nt.L}),n.d(t,"CropAndResize",function(){return Nt.K}),n.d(t,"DenseBincount",function(){return Nt.M}),n.d(t,"DepthToSpace",function(){return Nt.N}),n.d(t,"DepthwiseConv2dNative",function(){return Nt.O}),n.d(t,"DepthwiseConv2dNativeBackpropFilter",function(){return Nt.P}),n.d(t,"DepthwiseConv2dNativeBackpropInput",function(){return Nt.Q}),n.d(t,"Diag",function(){return Nt.R}),n.d(t,"Dilation2D",function(){return Nt.S}),n.d(t,"Dilation2DBackpropInput",function(){return Nt.U}),n.d(t,"Dilation2DBackpropFilter",function(){return Nt.T}),n.d(t,"RealDiv",function(){return Nt.lc}),n.d(t,"Einsum",function(){return Nt.V}),n.d(t,"Elu",function(){return Nt.W}),n.d(t,"EluGrad",function(){return Nt.X}),n.d(t,"Erf",function(){return Nt.Z}),n.d(t,"Equal",function(){return Nt.Y}),n.d(t,"Exp",function(){return Nt.ab}),n.d(t,"ExpandDims",function(){return Nt.bb}),n.d(t,"Expm1",function(){return Nt.cb}),n.d(t,"FFT",function(){return Nt.db}),n.d(t,"Fill",function(){return Nt.eb}),n.d(t,"FlipLeftRight",function(){return Nt.fb}),n.d(t,"Floor",function(){return Nt.gb}),n.d(t,"FloorDiv",function(){return Nt.hb}),n.d(t,"FusedBatchNorm",function(){return Nt.jb}),n.d(t,"GatherV2",function(){return Nt.nb}),n.d(t,"GatherNd",function(){return Nt.mb}),n.d(t,"Greater",function(){return Nt.ob}),n.d(t,"GreaterEqual",function(){return Nt.pb}),n.d(t,"Identity",function(){return Nt.rb}),n.d(t,"IFFT",function(){return Nt.qb}),n.d(t,"Imag",function(){return Nt.sb}),n.d(t,"IsFinite",function(){return Nt.tb}),n.d(t,"IsInf",function(){return Nt.ub}),n.d(t,"IsNan",function(){return Nt.vb}),n.d(t,"LeakyRelu",function(){return Nt.yb}),n.d(t,"Less",function(){return Nt.zb}),n.d(t,"LessEqual",function(){return Nt.Ab}),n.d(t,"LinSpace",function(){return Nt.Bb}),n.d(t,"Log",function(){return Nt.Cb}),n.d(t,"Log1p",function(){return Nt.Db}),n.d(t,"LogicalAnd",function(){return Nt.Fb}),n.d(t,"LogicalNot",function(){return Nt.Gb}),n.d(t,"LogicalOr",function(){return Nt.Hb}),n.d(t,"LogSoftmax",function(){return Nt.Eb}),n.d(t,"LRN",function(){return Nt.wb}),n.d(t,"LRNGrad",function(){return Nt.xb}),n.d(t,"Max",function(){return Nt.Ib}),n.d(t,"Maximum",function(){return Nt.Ob}),n.d(t,"MaxPool",function(){return Nt.Jb}),n.d(t,"MaxPoolGrad",function(){return Nt.Mb}),n.d(t,"MaxPool3D",function(){return Nt.Kb}),n.d(t,"MaxPool3DGrad",function(){return Nt.Lb}),n.d(t,"MaxPoolWithArgmax",function(){return Nt.Nb}),n.d(t,"Mean",function(){return Nt.Pb}),n.d(t,"Min",function(){return Nt.Qb}),n.d(t,"Minimum",function(){return Nt.Rb}),n.d(t,"MirrorPad",function(){return Nt.Sb}),n.d(t,"Mod",function(){return Nt.Tb}),n.d(t,"Multinomial",function(){return Nt.Ub}),n.d(t,"Multiply",function(){return Nt.Vb}),n.d(t,"Neg",function(){return Nt.Wb}),n.d(t,"NotEqual",function(){return Nt.ac}),n.d(t,"NonMaxSuppressionV3",function(){return Nt.Xb}),n.d(t,"NonMaxSuppressionV4",function(){return Nt.Yb}),n.d(t,"NonMaxSuppressionV5",function(){return Nt.Zb}),n.d(t,"OnesLike",function(){return Nt.cc}),n.d(t,"OneHot",function(){return Nt.bc}),n.d(t,"Pack",function(){return Nt.dc}),n.d(t,"PadV2",function(){return Nt.ec}),n.d(t,"Pool",function(){return Nt.fc}),n.d(t,"Pow",function(){return Nt.gc}),n.d(t,"Prelu",function(){return Nt.hc}),n.d(t,"Prod",function(){return Nt.ic}),n.d(t,"Range",function(){return Nt.jc}),n.d(t,"Real",function(){return Nt.kc}),n.d(t,"Reciprocal",function(){return Nt.mc}),n.d(t,"Relu",function(){return Nt.nc}),n.d(t,"Reshape",function(){return Nt.pc}),n.d(t,"ResizeNearestNeighbor",function(){return Nt.sc}),n.d(t,"ResizeNearestNeighborGrad",function(){return Nt.tc}),n.d(t,"ResizeBilinear",function(){return Nt.qc}),n.d(t,"ResizeBilinearGrad",function(){return Nt.rc}),n.d(t,"Relu6",function(){return Nt.oc}),n.d(t,"Reverse",function(){return Nt.uc}),n.d(t,"Round",function(){return Nt.wc}),n.d(t,"Rsqrt",function(){return Nt.xc}),n.d(t,"ScatterNd",function(){return Nt.yc}),n.d(t,"Select",function(){return Nt.zc}),n.d(t,"Selu",function(){return Nt.Ac}),n.d(t,"Slice",function(){return Nt.Fc}),n.d(t,"Sin",function(){return Nt.Dc}),n.d(t,"Sinh",function(){return Nt.Ec}),n.d(t,"Sign",function(){return Nt.Cc}),n.d(t,"Sigmoid",function(){return Nt.Bc}),n.d(t,"Softplus",function(){return Nt.Hc}),n.d(t,"Sqrt",function(){return Nt.Mc}),n.d(t,"Sum",function(){return Nt.Sc}),n.d(t,"SpaceToBatchND",function(){return Nt.Ic}),n.d(t,"SplitV",function(){return Nt.Lc}),n.d(t,"Softmax",function(){return Nt.Gc}),n.d(t,"SparseReshape",function(){return Nt.Jc}),n.d(t,"SparseToDense",function(){return Nt.Kc}),n.d(t,"SquaredDifference",function(){return Nt.Oc}),n.d(t,"Square",function(){return Nt.Nc}),n.d(t,"StridedSlice",function(){return Nt.Qc}),n.d(t,"Sub",function(){return Nt.Rc}),n.d(t,"Tan",function(){return Nt.Tc}),n.d(t,"Tanh",function(){return Nt.Uc}),n.d(t,"Tile",function(){return Nt.Vc}),n.d(t,"TopK",function(){return Nt.Wc}),n.d(t,"Transform",function(){return Nt.Xc}),n.d(t,"Transpose",function(){return Nt.Yc}),n.d(t,"Unique",function(){return Nt.Zc}),n.d(t,"Unpack",function(){return Nt.ad}),n.d(t,"UnsortedSegmentSum",function(){return Nt.bd}),n.d(t,"ZerosLike",function(){return Nt.cd}),n.d(t,"Step",function(){return Nt.Pc}),n.d(t,"FromPixels",function(){return Nt.ib}),n.d(t,"RotateWithOffset",function(){return Nt.vc}),n.d(t,"_FusedMatMul",function(){return Nt.dd}),n.d(t,"FusedConv2D",function(){return Nt.kb}),n.d(t,"FusedDepthwiseConv2D",function(){return Nt.lb});var ge={};n.r(ge),n.d(ge,"copyModel",function(){return m}),n.d(ge,"listModels",function(){return p}),n.d(ge,"moveModel",function(){return b}),n.d(ge,"removeModel",function(){return f}),n.d(ge,"browserFiles",function(){return x}),n.d(ge,"browserHTTPRequest",function(){return S}),n.d(ge,"concatenateArrayBuffers",function(){return Se.d}),n.d(ge,"decodeWeights",function(){return Se.e}),n.d(ge,"encodeWeights",function(){return Se.f}),n.d(ge,"fromMemory",function(){return T}),n.d(ge,"getLoadHandlers",function(){return Ae}),n.d(ge,"getModelArtifactsInfoForJSON",function(){return Se.g}),n.d(ge,"getSaveHandlers",function(){return $e}),n.d(ge,"http",function(){return j}),n.d(ge,"isHTTPScheme",function(){return N}),n.d(ge,"loadWeights",function(){return k}),n.d(ge,"registerLoadRouter",function(){return Ee}),n.d(ge,"registerSaveRouter",function(){return Ce}),n.d(ge,"weightsLoaderFactory",function(){return O}),n.d(ge,"withSaveHandler",function(){return C});var ye={};n.r(ye),n.d(ye,"confusionMatrix",function(){return It});var xe={};n.r(xe),n.d(xe,"fromPixelsAsync",function(){return R}),n.d(xe,"toPixels",function(){return M}),n.d(xe,"fromPixels",function(){return Ct});var ve={};n.r(ve),n.d(ve,"prepareAndValidate",function(){return z});var we={};n.r(we),n.d(we,"Serializable",function(){return At}),n.d(we,"SerializationMap",function(){return _t}),n.d(we,"registerClass",function(){return L});var ke={};n.r(ke),n.d(ke,"segOpComputeOptimalWindowSize",function(){return he}),n.d(ke,"computeOutShape",function(){return pe}),n.d(ke,"collectGatherOpShapeInfo",function(){return fe});var Oe={};n.r(Oe),n.d(Oe,"axesAreInnerMostDims",function(){return pn.b}),n.d(Oe,"combineLocations",function(){return pn.c}),n.d(Oe,"computeOutAndReduceShapes",function(){return pn.d}),n.d(Oe,"expandShapeToKeepDim",function(){return pn.e}),n.d(Oe,"assertAxesAreInnerMostDims",function(){return pn.a}),n.d(Oe,"getAxesPermutation",function(){return pn.f}),n.d(Oe,"getUndoAxesPermutation",function(){return pn.h}),n.d(Oe,"getInnerMostAxes",function(){return pn.g}),n.d(Oe,"getBroadcastDims",function(){return fn.b}),n.d(Oe,"getReductionAxes",function(){return fn.c}),n.d(Oe,"assertAndGetBroadcastShape",function(){return fn.a}),n.d(Oe,"assertParamsConsistent",function(){return P}),n.d(Oe,"computeOutShape",function(){return B}),n.d(Oe,"computeDilation2DInfo",function(){return mn.d}),n.d(Oe,"computePool2DInfo",function(){return mn.e}),n.d(Oe,"computePool3DInfo",function(){return mn.f}),n.d(Oe,"computeConv2DInfo",function(){return mn.a}),n.d(Oe,"computeConv3DInfo",function(){return mn.b}),n.d(Oe,"computeDefaultPad",function(){return mn.c}),n.d(Oe,"tupleValuesAreOne",function(){return mn.i}),n.d(Oe,"eitherStridesOrDilationsAreOne",function(){return mn.h}),n.d(Oe,"convertConv2DDataFormat",function(){return mn.g}),n.d(Oe,"getFusedDyActivation",function(){return bn.c}),n.d(Oe,"getFusedBiasGradient",function(){return bn.b}),n.d(Oe,"applyActivation",function(){return bn.a}),n.d(Oe,"shouldFuse",function(){return bn.d}),n.d(Oe,"PARALLELIZE_THRESHOLD",function(){return gn}),n.d(Oe,"computeOptimalWindowSize",function(){return W}),n.d(Oe,"slice_util",function(){return $t}),n.d(Oe,"upcastType",function(){return on.c}),n.d(Oe,"getImageCenter",function(){return V}),n.d(Oe,"getReshaped",function(){return U}),n.d(Oe,"getPermuted",function(){return G}),n.d(Oe,"getReshapedPermuted",function(){return H}),n.d(Oe,"getSliceBeginCoords",function(){return q}),n.d(Oe,"getSliceSize",function(){return K}),n.d(Oe,"prepareAndValidate",function(){return z}),n.d(Oe,"validateUpdateShape",function(){return Et.validateUpdateShape}),n.d(Oe,"validateInput",function(){return Et.validateInput}),n.d(Oe,"calculateShapes",function(){return Et.calculateShapes}),n.d(Oe,"SELU_SCALEALPHA",function(){return yn.b}),n.d(Oe,"SELU_SCALE",function(){return yn.a}),n.d(Oe,"ERF_P",function(){return xn}),n.d(Oe,"ERF_A1",function(){return vn}),n.d(Oe,"ERF_A2",function(){return wn}),n.d(Oe,"ERF_A3",function(){return kn}),n.d(Oe,"ERF_A4",function(){return On}),n.d(Oe,"ERF_A5",function(){return In}),n.d(Oe,"warn",function(){return X}),n.d(Oe,"log",function(){return Y}),n.d(Oe,"mergeRealAndImagArrays",function(){return Z}),n.d(Oe,"splitRealAndImagArrays",function(){return Q}),n.d(Oe,"complexWithEvenIndex",function(){return J}),n.d(Oe,"complexWithOddIndex",function(){return ee}),n.d(Oe,"getComplexWithIndex",function(){return te}),n.d(Oe,"assignToTypedArray",function(){return ne}),n.d(Oe,"exponents",function(){return re}),n.d(Oe,"exponent",function(){return ae}),n.d(Oe,"decodeEinsumEquation",function(){return se}),n.d(Oe,"getEinsumPermutation",function(){return ie}),n.d(Oe,"checkEinsumDimSizes",function(){return oe}),n.d(Oe,"getEinsumComputePath",function(){return ue}),n.d(Oe,"isIdentityPermutation",function(){return ce}),n.d(Oe,"prepareSplitSize",function(){return de}),n.d(Oe,"segment_util",function(){return ke}),n.d(Oe,"fromUint8ToStringArray",function(){return me}),n.d(Oe,"fromStringArrayToUint8",function(){return be});var Ie={};n.r(Ie),n.d(Ie,"nonMaxSuppressionV3Impl",function(){return En.a}),n.d(Ie,"nonMaxSuppressionV4Impl",function(){return En.b}),n.d(Ie,"nonMaxSuppressionV5Impl",function(){return En.c}),n.d(Ie,"whereImpl",function(){return $n.a});var Ne=n(5),je=(n(143),n(22)),Se=n(40);class Te{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==Te.instance&&(Te.instance=new Te),Te.instance}static registerSaveRouter(e){Te.getInstance().saveRouters.push(e)}static registerLoadRouter(e){Te.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return Te.getHandlers(e,"save")}static getLoadHandlers(e,t){return Te.getHandlers(e,"load",t)}static getHandlers(e,t,n){const r=[],a="load"===t?Te.getInstance().loadRouters:Te.getInstance().saveRouters;return a.forEach(t=>{const a=t(e,n);null!==a&&r.push(a)}),r}}const Ce=e=>Te.registerSaveRouter(e),Ee=e=>Te.registerLoadRouter(e),$e=e=>Te.getSaveHandlers(e),Ae=(e,t)=>Te.getLoadHandlers(e,t),_e="tensorflowjs",De=1,Fe="models_store",Re="model_info_store";class Me{constructor(e){if(this.indexedDB=r(),null==e||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise((e,n)=>{const r=this.indexedDB.open(_e,De);r.onupgradeneeded=(()=>a(r)),r.onsuccess=(()=>{const a=r.result;if(null==t){const t=a.transaction(Fe,"readonly"),r=t.objectStore(Fe),s=r.get(this.modelPath);s.onsuccess=(()=>{if(null==s.result)return a.close(),n(new Error(`Cannot find model with path '${this.modelPath}' `+"in IndexedDB."));e(s.result.modelArtifacts)}),s.onerror=(e=>(a.close(),n(s.error))),t.oncomplete=(()=>a.close())}else{const r=Object(Se.g)(t),s=a.transaction(Re,"readwrite");let i=s.objectStore(Re);const o=i.put({modelPath:this.modelPath,modelArtifactsInfo:r});let u;o.onsuccess=(()=>{u=a.transaction(Fe,"readwrite");const o=u.objectStore(Fe),c=o.put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:r});c.onsuccess=(()=>e({modelArtifactsInfo:r})),c.onerror=(e=>{i=s.objectStore(Re);const t=i.delete(this.modelPath);t.onsuccess=(()=>(a.close(),n(c.error))),t.onerror=(e=>(a.close(),n(c.error)))})}),o.onerror=(e=>(a.close(),n(o.error))),s.oncomplete=(()=>{null==u?a.close():u.oncomplete=(()=>a.close())})}}),r.onerror=(e=>n(r.error))})}}Me.URL_SCHEME="indexeddb://";const ze=e=>Object(je.c)().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Me.URL_SCHEME)?s(e.slice(Me.URL_SCHEME.length)):null;Te.registerSaveRouter(ze),Te.registerLoadRouter(ze);class Le{constructor(){this.indexedDB=r()}async listModels(){return new Promise((e,t)=>{const n=this.indexedDB.open(_e,De);n.onupgradeneeded=(()=>a(n)),n.onsuccess=(()=>{const r=n.result,a=r.transaction(Re,"readonly"),s=a.objectStore(Re),i=s.getAll();i.onsuccess=(()=>{const t={};for(const e of i.result)t[e.modelPath]=e.modelArtifactsInfo;e(t)}),i.onerror=(e=>(r.close(),t(i.error))),a.oncomplete=(()=>r.close())}),n.onerror=(e=>t(n.error))})}async removeModel(e){return e=i(e),new Promise((t,n)=>{const r=this.indexedDB.open(_e,De);r.onupgradeneeded=(()=>a(r)),r.onsuccess=(()=>{const a=r.result,s=a.transaction(Re,"readwrite"),i=s.objectStore(Re),o=i.get(e);let u;o.onsuccess=(()=>{if(null==o.result)return a.close(),n(new Error(`Cannot find model with path '${e}' `+"in IndexedDB."));{const r=i.delete(e),s=()=>{u=a.transaction(Fe,"readwrite");const r=u.objectStore(Fe),s=r.delete(e);s.onsuccess=(()=>t(o.result.modelArtifactsInfo)),s.onerror=(e=>n(o.error))};r.onsuccess=s,r.onerror=(e=>(s(),a.close(),n(o.error)))}}),o.onerror=(e=>(a.close(),n(o.error))),s.oncomplete=(()=>{null==u?a.close():u.oncomplete=(()=>a.close())})}),r.onerror=(e=>n(r.error))})}}var Pe=n(8);const Be="/",We="tensorflowjs_models",Ve="info",Ue="model_topology",Ge="weight_specs",He="weight_data",qe="model_metadata";class Ke{constructor(e){if(!Object(je.c)().getBool("IS_BROWSER")||"undefined"==typeof window||void 0===window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==e||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=o(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const t=JSON.stringify(e.modelTopology),n=JSON.stringify(e.weightSpecs),r=Object(Se.g)(e);try{this.LS.setItem(this.keys.info,JSON.stringify(r)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,Object(Se.a)(e.weightData));const a={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};return null!=e.signature&&(a.signature=e.signature),null!=e.userDefinedMetadata&&(a.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(a.modelInitializer=e.modelInitializer),this.LS.setItem(this.keys.modelMetadata,JSON.stringify(a)),{modelArtifactsInfo:r}}catch(e){throw this.LS.removeItem(this.keys.info),this.LS.removeItem(this.keys.topology),this.LS.removeItem(this.keys.weightSpecs),this.LS.removeItem(this.keys.weightData),this.LS.removeItem(this.keys.modelMetadata),new Error(`Failed to save model '${this.modelPath}' to local storage: `+"size quota being exceeded is a possible cause of this failure: "+`modelTopologyBytes=${r.modelTopologyBytes}, `+`weightSpecsBytes=${r.weightSpecsBytes}, `+`weightDataBytes=${r.weightDataBytes}.`)}}}async load(){const e=JSON.parse(this.LS.getItem(this.keys.info));if(null==e)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if("JSON"!==e.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error(`In local storage, the topology of model '${this.modelPath}' `+"is missing.");t.modelTopology=n;const r=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==r)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' `+"are missing.");t.weightSpecs=r;const a=this.LS.getItem(this.keys.modelMetadata);if(null!=a){const e=JSON.parse(a);t.format=e.format,t.generatedBy=e.generatedBy,t.convertedBy=e.convertedBy,null!=e.signature&&(t.signature=e.signature),null!=e.userDefinedMetadata&&(t.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(t.modelInitializer=e.modelInitializer)}const s=this.LS.getItem(this.keys.weightData);if(null==s)throw new Error("In local storage, the binary weight values of model "+`'${this.modelPath}' are missing.`);return t.weightData=Object(Se.b)(s),t}}Ke.URL_SCHEME="localstorage://";const Xe=e=>Object(je.c)().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Ke.URL_SCHEME)?l(e.slice(Ke.URL_SCHEME.length)):null;Te.registerSaveRouter(Xe),Te.registerLoadRouter(Xe);class Ye{constructor(){Object(Pe.b)(Object(je.c)().getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),Object(Pe.b)("undefined"==typeof window||void 0!==window.localStorage,()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}async listModels(){const e={},t=We+Be,n=Be+Ve;for(let r=0;r<this.LS.length;++r){const a=this.LS.key(r);if(a.startsWith(t)&&a.endsWith(n)){const t=u(a);e[t]=JSON.parse(this.LS.getItem(a))}}return e}async removeModel(e){e=c(e);const t=o(e);if(null==this.LS.getItem(t.info))throw new Error(`Cannot find model at path '${e}'`);const n=JSON.parse(this.LS.getItem(t.info));return this.LS.removeItem(t.info),this.LS.removeItem(t.topology),this.LS.removeItem(t.weightSpecs),this.LS.removeItem(t.weightData),n}}const Ze="://";class Qe{constructor(){this.managers={}}static getInstance(){return null==Qe.instance&&(Qe.instance=new Qe),Qe.instance}static registerManager(e,t){Object(Pe.b)(null!=e,()=>"scheme must not be undefined or null."),e.endsWith(Ze)&&(e=e.slice(0,e.indexOf(Ze))),Object(Pe.b)(e.length>0,()=>"scheme must not be an empty string.");const n=Qe.getInstance();Object(Pe.b)(null==n.managers[e],()=>`A model store manager is already registered for scheme '${e}'.`),n.managers[e]=t}static getManager(e){const t=this.getInstance().managers[e];if(null==t)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(this.getInstance().managers)}}class Je{fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}}if(Object(je.c)().get("IS_BROWSER")){Object(je.c)().setPlatform("browser",new Je);try{Qe.registerManager(Ke.URL_SCHEME,new Ye)}catch(e){}try{Qe.registerManager(Me.URL_SCHEME,new Le)}catch(e){}}n(278);var et=n(47),tt=n(12),nt=n(70),rt=n(150),at=n(6);Object(Ne.b)();const st={buffer:et.a,cast:tt.a,clone:nt.a,print:rt.a};Object(at.f)(st);const it="model",ot=".json",ut=".weights.bin";class ct{constructor(e){if(!Object(je.c)().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(ct.URL_SCHEME)&&(e=e.slice(ct.URL_SCHEME.length)),null!=e&&0!==e.length||(e=it),this.modelTopologyFileName=e+ot,this.weightDataFileName=e+ut}async save(e){if("undefined"==typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");const t=window.URL.createObjectURL(new Blob([e.weightData],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const n=[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}],r={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:n};null!=e.signature&&(r.signature=e.signature),null!=e.userDefinedMetadata&&(r.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(r.modelInitializer=e.modelInitializer);const a=window.URL.createObjectURL(new Blob([JSON.stringify(r)],{type:"application/json"})),s=null==this.jsonAnchor?document.createElement("a"):this.jsonAnchor;if(s.download=this.modelTopologyFileName,s.href=a,await g(()=>s.dispatchEvent(new MouseEvent("click"))),null!=e.weightData){const e=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;e.download=this.weightDataFileName,e.href=t,await g(()=>e.dispatchEvent(new MouseEvent("click")))}return{modelArtifactsInfo:Object(Se.g)(e)}}}}ct.URL_SCHEME="downloads://";class lt{constructor(e){if(null==e||e.length<1)throw new Error("When calling browserFiles, at least 1 file is required, "+`but received ${e}`);this.files=e}async load(){const e=this.files[0],t=this.files.slice(1);return new Promise((n,r)=>{const a=new FileReader;a.onload=(a=>{const s=JSON.parse(a.target.result),i=s.modelTopology;if(null==i)return void r(new Error(`modelTopology field is missing from file ${e.name}`));0===t.length&&n({modelTopology:i});const o=s.weightsManifest;if(null==o)return void r(new Error(`weightManifest field is missing from file ${e.name}`));let u;try{u=this.checkManifestAndWeightFiles(o,t)}catch(e){return void r(e)}const c=[],l=[],d=[];o.forEach(e=>{e.paths.forEach(e=>{l.push(e),d.push(null)}),c.push(...e.weights)}),o.forEach(e=>{e.paths.forEach(e=>{const t=new FileReader;t.onload=(t=>{const r=t.target.result,a=l.indexOf(e);if(d[a]=r,-1===d.indexOf(null)){const e={modelTopology:i,weightSpecs:c,weightData:Object(Se.d)(d),format:s.format,generatedBy:s.generatedBy,convertedBy:s.convertedBy};null!=s.signature&&(e.signature=s.signature),null!=s.userDefinedMetadata&&(e.userDefinedMetadata=s.userDefinedMetadata),null!=s.modelInitializer&&(e.modelInitializer=s.modelInitializer),n(e)}}),t.onerror=(t=>r(`Failed to weights data from file of path '${e}'.`)),t.readAsArrayBuffer(u[e])})})}),a.onerror=(t=>r("Failed to read model topology and weights manifest JSON "+`from file '${e.name}'. BrowserFiles supports loading `+"Keras-style tf.Model artifacts only.")),a.readAsText(e)})}checkManifestAndWeightFiles(e,t){const n=[],r=t.map(e=>Object(Se.c)(e.name)),a={};for(const s of e)s.paths.forEach(e=>{const s=Object(Se.c)(e);if(-1!==n.indexOf(s))throw new Error("Duplicate file basename found in weights manifest: "+`'${s}'`);if(n.push(s),-1===r.indexOf(s))throw new Error(`Weight file with basename '${s}' is not provided.`);a[e]=t[r.indexOf(s)]});if(n.length!==t.length)throw new Error("Mismatch in the number of files in weights manifest "+`(${n.length}) and the number of weight files provided `+`(${t.length}).`);return a}}const dt=e=>Object(je.c)().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(ct.URL_SCHEME)?y(e.slice(ct.URL_SCHEME.length)):null;Te.registerSaveRouter(dt);var ht=n(148);const pt="application/octet-stream",ft="application/json";class mt{constructor(e,t){if(this.DEFAULT_METHOD="POST",null==t&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.onProgress=t.onProgress,this.weightUrlConverter=t.weightUrlConverter,null!=t.fetchFunc?(Object(Pe.b)("function"==typeof t.fetchFunc,()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"),this.fetch=t.fetchFunc):this.fetch=Object(je.c)().platform.fetch,Object(Pe.b)(null!=e&&e.length>0,()=>"URL path for http must not be null, undefined or empty."),Array.isArray(e)&&Object(Pe.b)(2===e.length,()=>"URL paths for http must have a length of 2, "+`(actual length is ${e.length}).`),this.path=e,null!=t.requestInit&&null!=t.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{}}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;const n=[{paths:["./model.weights.bin"],weights:e.weightSpecs}],r={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:n};null!=e.signature&&(r.signature=e.signature),null!=e.userDefinedMetadata&&(r.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(r.modelInitializer=e.modelInitializer),t.body.append("model.json",new Blob([JSON.stringify(r)],{type:ft}),"model.json"),null!=e.weightData&&t.body.append("model.weights.bin",new Blob([e.weightData],{type:pt}),"model.weights.bin");const a=await this.fetch(this.path,t);if(a.ok)return{modelArtifactsInfo:Object(Se.g)(e),responses:[a]};throw new Error("BrowserHTTPRequest.save() failed due to HTTP response status "+`${a.status}.`)}async load(){const e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code `+`${e.status}. Please verify this URL points to `+"the model JSON of the model to load.");let t;try{t=await e.json()}catch(e){let t=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?t+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":t+=" Please make sure the server is serving valid JSON for this request.",new Error(t)}const n=t.modelTopology,r=t.weightsManifest,a=t.generatedBy,s=t.convertedBy,i=t.format,o=t.signature,u=t.userDefinedMetadata;if(null==n&&null==r)throw new Error(`The JSON from HTTP path ${this.path} contains neither model `+"topology or manifest for weights.");let c,l;if(null!=r){const e=await this.loadWeights(r);[c,l]=e}const d={modelTopology:n,weightSpecs:c,weightData:l,generatedBy:a,convertedBy:s,format:i};null!=o&&(d.signature=o),null!=u&&(d.userDefinedMetadata=u);const h=t.modelInitializer;return h&&(d.modelInitializer=h),d}async loadWeights(e){const t=Array.isArray(this.path)?this.path[1]:this.path,[n,r]=I(t),a=this.weightPathPrefix||n,s=[];for(const t of e)s.push(...t.weights);const i=[],o=[];for(const t of e)for(const e of t.paths)null!=this.weightUrlConverter?o.push(this.weightUrlConverter(e)):i.push(a+e+r);this.weightUrlConverter&&i.push(...await Promise.all(o));const u=await w(i,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress});return[s,Object(Se.d)(u)]}}mt.URL_SCHEME_REGEX=/^https?:\/\//;const bt=(e,t)=>{if("undefined"==typeof fetch&&(null==t||null==t.fetchFunc))return null;{let n=!0;if(n=Array.isArray(e)?e.every(e=>N(e)):N(e),n)return j(e,t)}return null};Te.registerSaveRouter(bt),Te.registerLoadRouter(bt);class gt{constructor(e){this.modelArtifacts=e}async load(){return this.modelArtifacts}}class yt{constructor(e){this.saveHandler=e}async save(e){return this.saveHandler(e)}}var xt=n(2),vt=n(24),wt=n(106),kt=n(4),Ot=n(52);const It=Object(kt.b)({confusionMatrix_:E});var Nt=n(3),jt=n(62),St=n(178);let Tt;const Ct=Object(kt.b)({fromPixels_:$});var Et=n(112),$t=n(113);class At{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}}class _t{constructor(){this.classNameMap={}}static getMap(){return null==_t.instance&&(_t.instance=new _t),_t.instance}static register(e){_t.getMap().classNameMap[e.className]=[e,e.fromConfig]}}var Dt=n(23),Ft=n(139),Rt=n(10);const Mt="3.5.0";var zt=n(26),Lt=n(13),Pt=n(15),Bt=n(9),Wt=n(37),Vt=n(25),Ut=n(20),Gt=n(34),Ht=n(16);class qt extends At{minimize(e,t=!1,n){const{value:r,grads:a}=this.computeGradients(e,n);if(null!=n){const e=n.map(e=>({name:e.name,tensor:a[e.name]}));this.applyGradients(e)}else this.applyGradients(a);return Object(zt.d)(a),t?r:(r.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return Object(Gt.f)(e,t)}dispose(){null!=this.iterations_&&Object(zt.d)(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:Object(Ht.a)(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for this optimizer class "+`${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}}Object.defineProperty(qt,Symbol.hasInstance,{value:e=>null!=e.minimize&&null!=e.computeGradients&&null!=e.applyGradients});class Kt extends qt{constructor(e,t,n=null){super(),this.learningRate=e,this.rho=t,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==n&&(this.epsilon=Ne.a.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map(e=>e.name):Object.keys(e);t.forEach((t,n)=>{const r=Ne.a.registeredVariables[t],a=!1;null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:`${t}/accum_grad`,variable:Object(zt.t)(()=>Object(Ut.a)(r).variable(a))}),null==this.accumulatedUpdates[n]&&(this.accumulatedUpdates[n]={originalName:`${t}/accum_var`,variable:Object(zt.t)(()=>Object(Ut.a)(r).variable(a))});const s=Array.isArray(e)?e[n].tensor:e[t];if(null==s)return;const i=this.accumulatedGrads[n].variable,o=this.accumulatedUpdates[n].variable;Object(zt.t)(()=>{const e=Object(Lt.a)(Object(Bt.a)(i,this.rho),Object(Bt.a)(Object(Vt.a)(s),1-this.rho)),t=Object(Bt.a)(Object(Pt.a)(Object(Wt.a)(Object(Lt.a)(o,this.epsilon)),Object(Wt.a)(Object(Lt.a)(i,this.epsilon))),s),n=Object(Lt.a)(Object(Bt.a)(o,this.rho),Object(Bt.a)(Object(Vt.a)(t),1-this.rho));i.assign(e),o.assign(n);const a=Object(Lt.a)(Object(Bt.a)(t,-this.learningRate),r);r.assign(a)})}),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&(Object(zt.d)(this.accumulatedGrads.map(e=>e.variable)),Object(zt.d)(this.accumulatedUpdates.map(e=>e.variable)))}async getWeights(){const e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);const t=e.length/2,n=!1;this.accumulatedGrads=e.slice(0,t).map(e=>({originalName:e.name,variable:e.tensor.variable(n)})),this.accumulatedUpdates=e.slice(t,2*t).map(e=>({originalName:e.name,variable:e.tensor.variable(n)}))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}}Kt.className="Adadelta",L(Kt);var Xt=n(115);class Yt extends qt{constructor(e,t=.1){super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){const t=Array.isArray(e)?e.map(e=>e.name):Object.keys(e);t.forEach((t,n)=>{const r=Ne.a.registeredVariables[t];if(null==this.accumulatedGrads[n]){const e=!1
;this.accumulatedGrads[n]={originalName:`${t}/accumulator`,variable:Object(zt.t)(()=>Object(Xt.a)(r.shape,this.initialAccumulatorValue).variable(e))}}const a=Array.isArray(e)?e[n].tensor:e[t];if(null==a)return;const s=this.accumulatedGrads[n].variable;Object(zt.t)(()=>{const e=Object(Lt.a)(s,Object(Vt.a)(a));s.assign(e);const t=Object(Lt.a)(Object(Bt.a)(Object(Pt.a)(a,Object(Wt.a)(Object(Lt.a)(e,Ne.a.backend.epsilon()))),-this.learningRate),r);r.assign(t)})}),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&Object(zt.d)(this.accumulatedGrads.map(e=>e.variable))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);const t=!1;this.accumulatedGrads=e.map(e=>({originalName:e.name,variable:e.tensor.variable(t)}))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}}Yt.className="Adagrad",L(Yt);var Zt=n(53),Qt=n(14);class Jt extends qt{constructor(e,t,n,r=null){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],Object(zt.t)(()=>{this.accBeta1=Object(Ht.a)(t).variable(),this.accBeta2=Object(Ht.a)(n).variable()}),null==r&&(this.epsilon=Ne.a.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map(e=>e.name):Object.keys(e);Object(zt.t)(()=>{const n=Object(Qt.a)(1,this.accBeta1),r=Object(Qt.a)(1,this.accBeta2);t.forEach((t,a)=>{const s=Ne.a.registeredVariables[t],i=!1;null==this.accumulatedFirstMoment[a]&&(this.accumulatedFirstMoment[a]={originalName:`${t}/m`,variable:Object(zt.t)(()=>Object(Ut.a)(s).variable(i))}),null==this.accumulatedSecondMoment[a]&&(this.accumulatedSecondMoment[a]={originalName:`${t}/v`,variable:Object(zt.t)(()=>Object(Ut.a)(s).variable(i))});const o=Array.isArray(e)?e[a].tensor:e[t];if(null==o)return;const u=this.accumulatedFirstMoment[a].variable,c=this.accumulatedSecondMoment[a].variable,l=Object(Lt.a)(Object(Bt.a)(u,this.beta1),Object(Bt.a)(o,1-this.beta1)),d=Object(Lt.a)(Object(Bt.a)(c,this.beta2),Object(Bt.a)(Object(Vt.a)(o),1-this.beta2)),h=Object(Pt.a)(l,n),p=Object(Pt.a)(d,r);u.assign(l),c.assign(d);const f=Object(Lt.a)(Object(Bt.a)(Object(Pt.a)(h,Object(Lt.a)(Object(Wt.a)(p),this.epsilon)),-this.learningRate),s);s.assign(f)}),this.accBeta1.assign(Object(Bt.a)(this.accBeta1,this.beta1)),this.accBeta2.assign(Object(Bt.a)(this.accBeta2,this.beta2))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&Object(zt.d)(this.accumulatedFirstMoment.map(e=>e.variable)),null!=this.accumulatedSecondMoment&&Object(zt.d)(this.accumulatedSecondMoment.map(e=>e.variable))}async getWeights(){const e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e),Object(zt.t)(()=>{this.accBeta1.assign(Object(Zt.a)(this.beta1,this.iterations_+1)),this.accBeta2.assign(Object(Zt.a)(this.beta2,this.iterations_+1))});const t=e.length/2,n=!1;this.accumulatedFirstMoment=e.slice(0,t).map(e=>({originalName:e.name,variable:e.tensor.variable(n)})),this.accumulatedSecondMoment=e.slice(t,2*t).map(e=>({originalName:e.name,variable:e.tensor.variable(n)}))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}}Jt.className="Adam",L(Jt);var en=n(43),tn=n(90);class nn extends qt{constructor(e,t,n,r=null,a=0){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.decay=a,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],Object(zt.t)(()=>{this.iteration=Object(Ht.a)(0).variable(),this.accBeta1=Object(Ht.a)(t).variable()}),null==r&&(this.epsilon=Ne.a.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map(e=>e.name):Object.keys(e);Object(zt.t)(()=>{const n=Object(Qt.a)(1,this.accBeta1),r=Object(Pt.a)(-this.learningRate,Object(Lt.a)(Object(Bt.a)(this.iteration,this.decay),1));t.forEach((t,a)=>{const s=Ne.a.registeredVariables[t],i=!1;null==this.accumulatedFirstMoment[a]&&(this.accumulatedFirstMoment[a]={originalName:`${t}/m`,variable:Object(Ut.a)(s).variable(i)}),null==this.accumulatedWeightedInfNorm[a]&&(this.accumulatedWeightedInfNorm[a]={originalName:`${t}/v`,variable:Object(Ut.a)(s).variable(i)});const o=Array.isArray(e)?e[a].tensor:e[t];if(null==o)return;const u=this.accumulatedFirstMoment[a].variable,c=this.accumulatedWeightedInfNorm[a].variable,l=Object(Lt.a)(Object(Bt.a)(u,this.beta1),Object(Bt.a)(o,1-this.beta1)),d=Object(Bt.a)(c,this.beta2),h=Object(en.a)(o),p=Object(tn.a)(d,h);u.assign(l),c.assign(p);const f=Object(Lt.a)(Object(Bt.a)(Object(Pt.a)(r,n),Object(Pt.a)(l,Object(Lt.a)(p,this.epsilon))),s);s.assign(f)}),this.iteration.assign(Object(Lt.a)(this.iteration,1)),this.accBeta1.assign(Object(Bt.a)(this.accBeta1,this.beta1))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&Object(zt.d)(this.accumulatedFirstMoment.map(e=>e.variable)),null!=this.accumulatedWeightedInfNorm&&Object(zt.d)(this.accumulatedWeightedInfNorm.map(e=>e.variable))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}}nn.className="Adamax",L(nn);class rn extends qt{constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){const t=Array.isArray(e)?e.map(e=>e.name):Object.keys(e);t.forEach((t,n)=>{const r=Array.isArray(e)?e[n].tensor:e[t];if(null==r)return;const a=Ne.a.registeredVariables[t];Object(zt.t)(()=>{const e=Object(Lt.a)(Object(Bt.a)(this.c,r),a);a.assign(e)})}),this.incrementIterations()}setLearningRate(e){this.learningRate=e,null!=this.c&&this.c.dispose(),this.c=Object(zt.l)(Object(Ht.a)(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(e=await this.extractIterations(e),0!==e.length)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}}rn.className="SGD",L(rn);class an extends rn{constructor(e,t,n=!1){super(e),this.learningRate=e,this.momentum=t,this.useNesterov=n,this.accumulations=[],this.m=Object(Ht.a)(this.momentum)}applyGradients(e){const t=Array.isArray(e)?e.map(e=>e.name):Object.keys(e);t.forEach((t,n)=>{const r=Ne.a.registeredVariables[t];if(null==this.accumulations[n]){const e=!1;this.accumulations[n]={originalName:`${t}/momentum`,variable:Object(zt.t)(()=>Object(Ut.a)(r).variable(e))}}const a=this.accumulations[n].variable,s=Array.isArray(e)?e[n].tensor:e[t];null!=s&&Object(zt.t)(()=>{let e;const t=Object(Lt.a)(Object(Bt.a)(this.m,a),s);e=this.useNesterov?Object(Lt.a)(Object(Bt.a)(this.c,Object(Lt.a)(s,Object(Bt.a)(t,this.m))),r):Object(Lt.a)(Object(Bt.a)(this.c,t),r),a.assign(t),r.assign(e)})}),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&Object(zt.d)(this.accumulations.map(e=>e.variable))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);const t=!1;this.accumulations=e.map(e=>({originalName:e.name,variable:e.tensor.variable(t)}))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}}an.className="Momentum",L(an);class sn extends qt{constructor(e,t=.9,n=0,r=null,a=!1){if(super(),this.learningRate=e,this.decay=t,this.momentum=n,this.epsilon=r,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=a,null==r&&(this.epsilon=Ne.a.backend.epsilon()),null==e)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){const t=Array.isArray(e)?e.map(e=>e.name):Object.keys(e);t.forEach((t,n)=>{const r=Ne.a.registeredVariables[t],a=!1;null==this.accumulatedMeanSquares[n]&&(this.accumulatedMeanSquares[n]={originalName:`${t}/rms`,variable:Object(zt.t)(()=>Object(Ut.a)(r).variable(a))}),null==this.accumulatedMoments[n]&&(this.accumulatedMoments[n]={originalName:`${t}/momentum`,variable:Object(zt.t)(()=>Object(Ut.a)(r).variable(a))}),null==this.accumulatedMeanGrads[n]&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:`${t}/mg`,variable:Object(zt.t)(()=>Object(Ut.a)(r).variable(a))});const s=Array.isArray(e)?e[n].tensor:e[t];if(null==s)return;const i=this.accumulatedMeanSquares[n].variable,o=this.accumulatedMoments[n].variable;Object(zt.t)(()=>{const e=Object(Lt.a)(Object(Bt.a)(i,this.decay),Object(Bt.a)(Object(Vt.a)(s),1-this.decay));if(this.centered){const t=this.accumulatedMeanGrads[n].variable,a=Object(Lt.a)(Object(Bt.a)(t,this.decay),Object(Bt.a)(s,1-this.decay)),u=Object(Pt.a)(Object(Bt.a)(s,this.learningRate),Object(Wt.a)(Object(Qt.a)(e,Object(Lt.a)(Object(Vt.a)(a),this.epsilon)))),c=Object(Lt.a)(Object(Bt.a)(o,this.momentum),u);i.assign(e),t.assign(a),o.assign(c);const l=Object(Qt.a)(r,c);r.assign(l)}else{const e=Object(Lt.a)(Object(Bt.a)(i,this.decay),Object(Bt.a)(Object(Vt.a)(s),1-this.decay)),t=Object(Lt.a)(Object(Bt.a)(o,this.momentum),Object(Pt.a)(Object(Bt.a)(s,this.learningRate),Object(Wt.a)(Object(Lt.a)(e,this.epsilon))));i.assign(e),o.assign(t);const n=Object(Qt.a)(r,t);r.assign(n)}})}),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&Object(zt.d)(this.accumulatedMeanSquares.map(e=>e.variable)),null!=this.accumulatedMeanGrads&&this.centered&&Object(zt.d)(this.accumulatedMeanGrads.map(e=>e.variable)),null!=this.accumulatedMoments&&Object(zt.d)(this.accumulatedMoments.map(e=>e.variable))}async getWeights(){const e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);const t=this.centered?e.length/3:e.length/2,n=!1;this.accumulatedMeanSquares=e.slice(0,t).map(e=>({originalName:e.name,variable:e.tensor.variable(n)})),this.accumulatedMoments=e.slice(t,2*t).map(e=>({originalName:e.name,variable:e.tensor.variable(n)})),this.centered&&(this.accumulatedMeanGrads=e.slice(2*t,3*t).map(e=>({originalName:e.name,variable:e.tensor.variable(n)})))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}}sn.className="RMSProp",L(sn);var on=n(89),un=n(21),cn=n(35);class ln{static sgd(e){return new rn(e)}static momentum(e,t,n=!1){return new an(e,t,n)}static rmsprop(e,t=.9,n=0,r=null,a=!1){return new sn(e,t,n,r,a)}static adam(e=.001,t=.9,n=.999,r=null){return new Jt(e,t,n,r)}static adadelta(e=.001,t=.95,n=null){return new Kt(e,t,n)}static adamax(e=.002,t=.9,n=.999,r=null,a=0){return new nn(e,t,n,r,a)}static adagrad(e,t=.1){return new Yt(e,t)}}const dn={sgd:ln.sgd,momentum:ln.momentum,adadelta:ln.adadelta,adagrad:ln.adagrad,rmsprop:ln.rmsprop,adamax:ln.adamax,adam:ln.adam};var hn=n(252),pn=n(39),fn=n(17),mn=n(31),bn=n(44);const gn=30;var yn=n(147);const xn=.3275911,vn=.254829592,wn=-.284496736,kn=1.421413741,On=-1.453152027,In=1.061405429,Nn="->",jn=/->/g,Sn=",",Tn="...";var Cn=n(149),En=n(79),$n=n(182),An=n(144)},function(e,t,n){"use strict";function r(e,t,n,r,s){const i=t.inputParams[e];if(i&&void 0!==i.inputIndexStart){const e=i.inputIndexStart,o=0===i.inputIndexEnd?void 0:void 0===i.inputIndexEnd?e+1:i.inputIndexEnd;if("tensor"===i.type)return a(t.inputNames[i.inputIndexStart],n,r,s);if("tensors"===i.type){const i=t.inputNames.slice(e,o);return i.map(e=>a(e,n,r,s))}const u=a(t.inputNames.slice(e)[0],n,r,s),c=u.dataSync();return"number"===i.type?c[0]:d.util.toNestedArray(u.shape,c)}const o=t.attrParams[e];return o&&o.value}function a(e,t,n,r){const[a,s]=u(e);if(null!=r){const e=r.getHashTableHandleByName(a);if(null!=e)return e}const i=n.currentContextIds.find(e=>!!t[o(a,e)]);return void 0!==i?t[o(a,i)][s]:void 0}function s(e,t,n){return t[o(e,n.currentContextId)]}function i(e,t){const[n,r]=u(e);return[o(n,t&&t.currentContextId),r]}function o(e,t){return t?`${e}-${t}`:e}function u(e){const t=e.split(":");if(1===t.length)return[e,0];const n=t[0];return[n,Number(t[t.length-1])]}function c(e,t,n){let a=r("pad",e,t,n);if("explicit"===a){a=r("explicitPaddings",e,t,n);const s=[[0,0],[0,0],[0,0],[0,0]];for(let e=0;e<4;e++)s[e][0]=a[2*e],s[e][1]=a[2*e+1];return s}return a}function l(e){return e.kept?e:Object(d.clone)(e)}n.d(t,"d",function(){return r}),n.d(t,"e",function(){return a}),n.d(t,"f",function(){return s}),n.d(t,"b",function(){return i}),n.d(t,"g",function(){return u}),n.d(t,"c",function(){return c}),n.d(t,"a",function(){return l});var d=n(0)},function(e,t,n){"use strict";function r(e,t){let n=e;if(Object(d.A)(e))return"string"===t?[]:[e.length];if(!Array.isArray(e))return[];const r=[];for(;Array.isArray(n)||Object(d.A)(n)&&"string"!==t;)r.push(n.length),n=n[0];return Array.isArray(e)&&Object(c.c)().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&a(e,r,[]),r}function a(e,t,n){if(n=n||[],!Array.isArray(e)&&!Object(d.A)(e))return void Object(d.b)(0===t.length,()=>`Element arr[${n.join("][")}] is a primitive, `+`but should be an array/TypedArray of ${t[0]} elements`);Object(d.b)(t.length>0,()=>`Element arr[${n.join("][")}] should be a primitive, `+`but is an array of ${e.length} elements`),Object(d.b)(e.length===t[0],()=>`Element arr[${n.join("][")}] should have ${t[0]} `+`elements, but has ${e.length} elements`);const r=t.slice(1);for(let t=0;t<e.length;++t)a(e[t],r,n.concat(t))}function s(e,t,n,r){if("string_or_numeric"!==e){if(null==e)throw new Error("Expected dtype cannot be null.");if("numeric"!==e&&e!==t||"numeric"===e&&"string"===t)throw new Error(`Argument '${n}' passed to '${r}' must `+`be ${e} tensor, but got ${t} tensor`)}}function i(e,t,n,a="numeric"){if(e instanceof l.a)return s(a,e.dtype,t,n),e;let i=Object(d.r)(e);if("string"!==i&&["bool","int32","float32"].indexOf(a)>=0&&(i=a),s(a,i,t,n),null==e||!Object(d.A)(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e){const r=null==e?"null":e.constructor.name;throw new Error(`Argument '${t}' passed to '${n}' must be a `+`Tensor or TensorLike, but got '${r}'`)}const o=r(e,i);Object(d.A)(e)||Array.isArray(e)||(e=[e]);const c=!0,p="string"!==i?Object(h.toTypedArray)(e,i):Object(d.m)(e,[],c);return u.a.makeTensor(p,o,i)}function o(e,t,n,r="numeric"){if(!Array.isArray(e))throw new Error(`Argument ${t} passed to ${n} must be a `+"`Tensor[]` or `TensorLike[]`");const a=e;return a.map((e,a)=>i(e,`${t}[${a}]`,n,r))}n.d(t,"c",function(){return r}),n.d(t,"a",function(){return i}),n.d(t,"b",function(){return o});var u=n(5),c=n(22),l=n(6),d=n(8),h=n(10)},function(e,t,n){"use strict";n.d(t,"a",function(){return r}),n.d(t,"b",function(){return a}),n.d(t,"c",function(){return s}),n.d(t,"d",function(){return i}),n.d(t,"e",function(){return o}),n.d(t,"f",function(){return u}),n.d(t,"g",function(){return c}),n.d(t,"h",function(){return l}),n.d(t,"i",function(){return d}),n.d(t,"j",function(){return h}),n.d(t,"k",function(){return p}),n.d(t,"l",function(){return f}),n.d(t,"n",function(){return m}),n.d(t,"m",function(){return b}),n.d(t,"o",function(){return g}),n.d(t,"r",function(){return y}),n.d(t,"p",function(){return x}),n.d(t,"q",function(){return v}),n.d(t,"s",function(){return w}),n.d(t,"t",function(){return k}),n.d(t,"u",function(){return O}),n.d(t,"v",function(){return I}),n.d(t,"w",function(){return N}),n.d(t,"x",function(){return j}),n.d(t,"y",function(){return S}),n.d(t,"z",function(){return T}),n.d(t,"A",function(){return C}),n.d(t,"B",function(){return E}),n.d(t,"C",function(){return $}),n.d(t,"D",function(){return A}),n.d(t,"E",function(){return _}),n.d(t,"F",function(){return D}),n.d(t,"G",function(){return F}),n.d(t,"H",function(){return R}),n.d(t,"I",function(){return M}),n.d(t,"J",function(){return z}),n.d(t,"L",function(){return L}),n.d(t,"K",function(){return P}),n.d(t,"M",function(){return B}),n.d(t,"N",function(){return W}),n.d(t,"O",function(){return V}),n.d(t,"P",function(){return U}),n.d(t,"Q",function(){return G}),n.d(t,"R",function(){return H}),n.d(t,"S",function(){return q}),n.d(t,"U",function(){return K}),n.d(t,"T",function(){return X}),n.d(t,"lc",function(){return Y}),n.d(t,"V",function(){return Z}),n.d(t,"W",function(){return Q}),n.d(t,"X",function(){return J}),n.d(t,"Z",function(){return ee}),n.d(t,"Y",function(){return te}),n.d(t,"ab",function(){return ne}),n.d(t,"bb",function(){return re}),n.d(t,"cb",function(){return ae}),n.d(t,"db",function(){return se}),n.d(t,"eb",function(){return ie}),n.d(t,"fb",function(){return oe}),n.d(t,"gb",function(){return ue}),n.d(t,"hb",function(){return ce}),n.d(t,"jb",function(){return le}),n.d(t,"nb",function(){return de}),n.d(t,"mb",function(){return he}),n.d(t,"ob",function(){return pe}),n.d(t,"pb",function(){return fe}),n.d(t,"rb",function(){return me}),n.d(t,"qb",function(){return be}),n.d(t,"sb",function(){return ge}),n.d(t,"tb",function(){return ye}),n.d(t,"ub",function(){return xe}),n.d(t,"vb",function(){return ve}),n.d(t,"yb",function(){return we}),n.d(t,"zb",function(){return ke}),n.d(t,"Ab",function(){return Oe}),n.d(t,"Bb",function(){return Ie}),n.d(t,"Cb",function(){return Ne}),n.d(t,"Db",function(){return je}),n.d(t,"Fb",function(){return Se}),n.d(t,"Gb",function(){return Te}),n.d(t,"Hb",function(){return Ce}),n.d(t,"Eb",function(){return Ee}),n.d(t,"wb",function(){return $e}),n.d(t,"xb",function(){return Ae}),n.d(t,"Ib",function(){return _e}),n.d(t,"Ob",function(){return De}),n.d(t,"Jb",function(){return Fe}),n.d(t,"Mb",function(){return Re}),n.d(t,"Kb",function(){return Me}),n.d(t,"Lb",function(){return ze}),n.d(t,"Nb",function(){return Le}),n.d(t,"Pb",function(){return Pe}),n.d(t,"Qb",function(){return Be}),n.d(t,"Rb",function(){return We}),n.d(t,"Sb",function(){return Ve}),n.d(t,"Tb",function(){return Ue}),n.d(t,"Ub",function(){return Ge}),n.d(t,"Vb",function(){return He}),n.d(t,"Wb",function(){return qe}),n.d(t,"ac",function(){return Ke}),n.d(t,"Xb",function(){return Xe}),n.d(t,"Yb",function(){return Ye}),n.d(t,"Zb",function(){return Ze}),n.d(t,"cc",function(){return Qe}),n.d(t,"bc",function(){return Je}),n.d(t,"dc",function(){return et}),n.d(t,"ec",function(){return tt}),n.d(t,"fc",function(){return nt}),n.d(t,"gc",function(){return rt}),n.d(t,"hc",function(){return at}),n.d(t,"ic",function(){return st}),n.d(t,"jc",function(){return it}),n.d(t,"kc",function(){return ot}),n.d(t,"mc",function(){return ut}),n.d(t,"nc",function(){return ct}),n.d(t,"pc",function(){return lt}),n.d(t,"sc",function(){return dt}),n.d(t,"tc",function(){return ht}),n.d(t,"qc",function(){return pt}),n.d(t,"rc",function(){return ft}),n.d(t,"oc",function(){return mt}),n.d(t,"uc",function(){return bt}),n.d(t,"wc",function(){return gt}),n.d(t,"xc",function(){return yt}),n.d(t,"yc",function(){return xt}),n.d(t,"zc",function(){return vt}),n.d(t,"Ac",function(){return wt}),n.d(t,"Fc",function(){return kt}),n.d(t,"Dc",function(){return Ot}),n.d(t,"Ec",function(){return It}),n.d(t,"Cc",function(){return Nt}),n.d(t,"Bc",function(){return jt}),n.d(t,"Hc",function(){return St}),n.d(t,"Mc",function(){return Tt}),n.d(t,"Sc",function(){return Ct}),n.d(t,"Ic",function(){return Et}),n.d(t,"Lc",function(){return $t}),n.d(t,"Gc",function(){return At}),n.d(t,"Jc",function(){return _t}),n.d(t,"Kc",function(){return Dt}),n.d(t,"Oc",function(){return Ft}),n.d(t,"Nc",function(){return Rt}),n.d(t,"Qc",function(){return Mt}),n.d(t,"Rc",function(){return zt}),n.d(t,"Tc",function(){return Lt}),n.d(t,"Uc",function(){return Pt}),n.d(t,"Vc",function(){return Bt}),n.d(t,"Wc",function(){return Wt}),n.d(t,"Xc",function(){return Vt}),n.d(t,"Yc",function(){return Ut}),n.d(t,"Zc",function(){return Gt}),n.d(t,"ad",function(){return Ht}),n.d(t,"bd",function(){return qt}),n.d(t,"cd",function(){return Kt}),n.d(t,"Pc",function(){return Xt}),n.d(t,"ib",function(){return Yt}),n.d(t,"vc",function(){return Zt}),n.d(t,"dd",function(){return Qt}),n.d(t,"kb",function(){return Jt}),n.d(t,"lb",function(){return en});const r="Abs",a="Acos",s="Acosh",i="Add",o="AddN",u="All",c="Any",l="ArgMax",d="ArgMin",h="Asin",p="Asinh",f="Atan",m="Atanh",b="Atan2",g="AvgPool",y="AvgPoolGrad",x="AvgPool3D",v="AvgPool3DGrad",w="BatchMatMul",k="BatchToSpaceND",O="Bincount",I="BroadcastTo",N="Cast",j="Ceil",S="ClipByValue",T="Complex",C="ComplexAbs",E="Concat",$="Conv2D",A="Conv2DBackpropFilter",_="Conv2DBackpropInput",D="Conv3D",F="Conv3DBackpropFilterV2",R="Conv3DBackpropInputV2",M="Cos",z="Cosh",L="Cumsum",P="CropAndResize",B="DenseBincount",W="DepthToSpace",V="DepthwiseConv2dNative",U="DepthwiseConv2dNativeBackpropFilter",G="DepthwiseConv2dNativeBackpropInput",H="Diag",q="Dilation2D",K="Dilation2DBackpropInput",X="Dilation2DBackpropFilter",Y="RealDiv",Z="Einsum",Q="Elu",J="EluGrad",ee="Erf",te="Equal",ne="Exp",re="ExpandDims",ae="Expm1",se="FFT",ie="Fill",oe="FlipLeftRight",ue="Floor",ce="FloorDiv",le="FusedBatchNorm",de="GatherV2",he="GatherNd",pe="Greater",fe="GreaterEqual",me="Identity",be="IFFT",ge="Imag",ye="IsFinite",xe="IsInf",ve="IsNan",we="LeakyRelu",ke="Less",Oe="LessEqual",Ie="LinSpace",Ne="Log",je="Log1p",Se="LogicalAnd",Te="LogicalNot",Ce="LogicalOr",Ee="LogSoftmax",$e="LRN",Ae="LRNGrad",_e="Max",De="Maximum",Fe="MaxPool",Re="MaxPoolGrad",Me="MaxPool3D",ze="MaxPool3DGrad",Le="MaxPoolWithArgmax",Pe="Mean",Be="Min",We="Minimum",Ve="MirrorPad",Ue="Mod",Ge="Multinomial",He="Multiply",qe="Neg",Ke="NotEqual",Xe="NonMaxSuppressionV3",Ye="NonMaxSuppressionV4",Ze="NonMaxSuppressionV5",Qe="OnesLike",Je="OneHot",et="Pack",tt="PadV2",nt="Pool",rt="Pow",at="Prelu",st="Prod",it="Range",ot="Real",ut="Reciprocal",ct="Relu",lt="Reshape",dt="ResizeNearestNeighbor",ht="ResizeNearestNeighborGrad",pt="ResizeBilinear",ft="ResizeBilinearGrad",mt="Relu6",bt="Reverse",gt="Round",yt="Rsqrt",xt="ScatterNd",vt="Select",wt="Selu",kt="Slice",Ot="Sin",It="Sinh",Nt="Sign",jt="Sigmoid",St="Softplus",Tt="Sqrt",Ct="Sum",Et="SpaceToBatchND",$t="SplitV",At="Softmax",_t="SparseReshape",Dt="SparseToDense",Ft="SquaredDifference",Rt="Square",Mt="StridedSlice",zt="Sub",Lt="Tan",Pt="Tanh",Bt="Tile",Wt="TopK",Vt="Transform",Ut="Transpose",Gt="Unique",Ht="Unpack",qt="UnsortedSegmentSum",Kt="ZerosLike",Xt="Step",Yt="FromPixels",Zt="RotateWithOffset",Qt="_FusedMatMul",Jt="FusedConv2D",en="FusedDepthwiseConv2D"},function(e,t,n){"use strict";function r(e){const t=Object.keys(e);if(1!==t.length)throw new Error("Please provide an object with a single key (operation name) mapping to a function. Got an object with "+`${t.length} keys.`);let n=t[0];const r=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+=i;const o=(...e)=>{a.a.startScope(n);try{const t=r(...e);return Object(s.x)(t)&&console.error("Cannot return a Promise inside of tidy."),a.a.endScope(t),t}catch(e){throw a.a.endScope(null),e}};return Object.defineProperty(o,"name",{value:n,configurable:!0}),o}n.d(t,"a",function(){return i}),n.d(t,"b",function(){return r});var a=n(5),s=n(8);const i="__op"},function(e,t,n){"use strict";function r(e,t,n){if("float32"!==t)return!1;for(let t=0;t<e.length;t++){const r=e[t];if(isNaN(r)||!isFinite(r))return console.warn(`Found ${r} in the result of '${n}'`),!0}return!1}function a(e,t,n){const r={},a={};for(let e=0;e<t.length;e++)r[t[e].id]=!0;for(let n=0;n<e.length;n++){const s=e[n],i=s.inputs;for(const e in i){const n=i[e];let o=!1;for(let e=0;e<t.length;e++)if(r[n.id]){s.outputs.forEach(e=>r[e.id]=!0),o=!0,a[s.id]=!0;break}if(o)break}}const s={};s[n.id]=!0;const i={};for(let t=e.length-1;t>=0;t--){const n=e[t],r=n.inputs;for(let e=0;e<n.outputs.length;e++)if(s[n.outputs[e].id]){for(const e in r)s[r[e].id]=!0,i[n.id]=!0;break}}const o=[];for(let t=0;t<e.length;t++){const n=e[t];if(a[n.id]&&i[n.id]){const e={};for(const t in n.inputs){const a=n.inputs[t];r[a.id]&&(e[t]=a)}const t=Object.assign({},n);t.inputs=e,t.outputs=n.outputs,o.push(t)}}return o}function s(e,t,n,r){for(let a=t.length-1;a>=0;a--){const s=t[a],i=[];if(s.outputs.forEach(t=>{const n=e[t.id];null!=n?i.push(n):i.push(null)}),null==s.gradient)throw new Error("Cannot compute gradient: gradient function not found "+`for ${s.kernelName}.`);const o=s.gradient(i);for(const t in s.inputs){if(!(t in o))throw new Error(`Cannot backprop through input ${t}. `+`Available gradients found: ${Object.keys(o)}.`);const a=n(()=>o[t]());if("float32"!==a.dtype)throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input `+`${t} must have 'float32' dtype, but has '${a.dtype}'`);const i=s.inputs[t];if(!b.a(a.shape,i.shape))throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input `+`'${t}' has shape '${a.shape}', which does not match `+`the shape of the input '${i.shape}'`);if(null==e[i.id])e[i.id]=a;else{const t=e[i.id];e[i.id]=r(t,a),t.dispose()}}}}function i(e){return null!=e.kernelName}function o(e){const t=Object(b.D)(Object(b.O)(e),"float32");return O.makeTensor(t,e,"float32")}function u(){const e=Object(h.b)();if(null==e._tfengine){const t=new d.b(e);e._tfengine=new k(t)}return Object(d.d)(e._tfengine.ENV),Object(x.g)(()=>e._tfengine),e._tfengine}function c(e,t){const n={a:e,b:t};return O.runKernel(p.d,n)}n.d(t,"b",function(){return u}),n.d(t,"a",function(){return O});var l=n(144),d=n(22),h=n(109),p=n(3),f=n(62),m=n(10),b=n(8);class g{constructor(e,t){this.backendTimer=e,this.logger=t,null==t&&(this.logger=new y)}profileKernel(e,t,n){let a;const s=()=>{a=n()};let i;const o=m.now();if(this.backendTimer.timerAvailable())i=this.backendTimer.time(s);else{s();for(const e of a)e.dataSync();i=Promise.resolve({kernelMs:m.now()-o})}if(Object(d.c)().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let t=0;t<a.length;t++){const n=a[t];n.data().then(t=>{r(t,n.dtype,e)})}const u={kernelName:e,outputs:a,inputs:t,timeMs:i.then(e=>e.kernelMs),extraInfo:i.then(e=>null!=e.getExtraProfileInfo?e.getExtraProfileInfo():"")};return u}logKernelProfile(e){const{kernelName:t,outputs:n,timeMs:r,inputs:a,extraInfo:s}=e;n.forEach(e=>{Promise.all([e.data(),r,s]).then(n=>{this.logger.logKernelProfile(t,e,n[0],n[1],a,n[2])})})}}class y{logKernelProfile(e,t,n,r,a,s){const i="number"==typeof r?b.L(`${r}ms`,9):r.error,o=b.L(e,25),u=t.rank,c=t.size,l=b.L(t.shape.toString(),14);let d="";for(const e in a){const n=a[e];if(null!=n){const r=n.shape||t.shape,a=r.length;d+=`${e}: ${a}D ${a>0?r:""} `}}console.log(`%c${o}\t%c${i}\t%c${u}D ${l}\t%c${c}\t%c${d}\t%c${s}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}var x=n(6),v=n(23);class w{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map(e=>e.name)))}}}dispose(){for(const e in this.registeredVariables)this.registeredVariables[e].dispose()}}class k{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new w}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then(()=>{});if(null!=this.backendInstance)return;const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t],r=await this.initializeBackend(n).success;if(r)return void await this.setBackend(n)}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make `+"sure to await tf.ready() or await tf.setBackend() before calling other methods");if(null==this.backendInstance){const{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been `+"initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods");this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry)){if(!(e in this.registryFactory))return null;{const{asyncInit:t}=this.initializeBackend(e);if(t)return null}}return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,n=1){return e in this.registryFactory?(console.warn(`${e} backend was already registered. `+"Reusing existing backend factory."),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(null==this.registryFactory[e])throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,null==this.registry[e]){this.backendInstance=null;const{success:t,asyncInit:n}=this.initializeBackend(e),r=n?await t:t;if(!r)return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new g(this.backendInstance),!0}setupRegisteredKernels(){const e=Object(f.d)(this.backendName);e.forEach(e=>{null!=e.setupFunc&&e.setupFunc(this.backendInstance)})}disposeRegisteredKernels(e){const t=Object(f.d)(e);t.forEach(t=>{null!=t.disposeFunc&&t.disposeFunc(this.registry[e])})}initializeBackend(e){const t=this.registryFactory[e];if(null==t)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{const n=t.factory();if(!n||n instanceof l.b||"function"!=typeof n.then)return this.registry[e]=n,{success:!0,asyncInit:!1};{const t=++this.pendingBackendInitId,r=n.then(n=>!(t<this.pendingBackendInitId)&&(this.registry[e]=n,this.pendingBackendInit=null,!0)).catch(n=>!(t<this.pendingBackendInitId)&&(this.pendingBackendInit=null,console.warn(`Initialization of backend ${e} failed`),console.warn(n.stack||n.message),!1));return this.pendingBackendInit=r,{success:r,asyncInit:!0}}}catch(t){return console.warn(`Initialization of backend ${e} failed`),console.warn(t.stack||t.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority)}initializeBackendsAndReturnBest(){const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t],{success:r,asyncInit:a}=this.initializeBackend(n);if(a||r)return{name:n,asyncInit:a}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){const n=this.state.tensorInfo.get(t),r=n.backend,a=this.readSync(t),s=r.refCount(t);r.disposeData(t,!0),n.backend=e,e.move(t,a,n.shape,n.dtype,s),
this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n,r=null;if(null==t){if("function"!=typeof e)throw new Error("Please provide a function to tidy()");t=e}else{if("string"!=typeof e&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!=typeof t)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");r=e}return this.scopedRun(()=>this.startScope(r),()=>this.endScope(n),()=>(n=t(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n))}scopedRun(e,t,n){e();try{const e=n();return t(),e}catch(e){throw t(),e}}nextTensorId(){return k.nextTensorId++}nextVariableId(){return k.nextVariableId++}clone(e){const t=O.runKernel(p.rb,{x:e}),n={x:e},r=e=>({x:()=>{const t="float32",n={x:e},r={dtype:t};return O.runKernel(p.w,n,r)}}),a=[];return this.addTapeNode(this.state.activeScope.name,n,[t],r,a,{}),t}runKernel(e,t,n){const r=null!=Object(f.c)(e,this.backendName);if(!r)throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){const r=this.backend.numDataIds();let a=0;n.forEach(e=>{a+="complex64"===e.dtype?3:1});const s=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],i=r-t-a-s;if(i>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak `+`(${i} data ids) after running '${e}'`)}runKernelFunc(e){let t,n=[];const r=this.isTapeOn(),a=this.state.numBytes,s=this.state.numTensors;let o,u;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0),null==this.backendName&&this.backend;const c=i(e)?e.kernelName:null!=this.state.activeScope?this.state.activeScope.name:"";if(i(e)){const{kernelName:t,inputs:a,attrs:s}=e;null==this.backendName&&this.backend;const i=Object(f.c)(t,this.backendName);b.b(null!=i,()=>`Cannot find registered kernel '${t}' for backend '${this.backendName}'`),o=(()=>{const e=this.backend.numDataIds();u=i.kernelFunc({inputs:a,attrs:s,backend:this.backend});const o=Array.isArray(u)?u:[u];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(t,e,o);const c=o.map(e=>{if(null!=e.rank)return e;const{dataId:t,shape:n,dtype:r}=e;return this.makeTensorFromDataId(t,n,r)});if(r){const e=this.getTensorsForGradient(t,a,c);n=this.saveTensorsForBackwardMode(e)}return c})}else{const{forwardFunc:t}=e,a=e=>{r&&(n=e.map(e=>this.keep(this.clone(e))))};o=(()=>{const e=this.backend.numDataIds();u=this.tidy(()=>t(this.backend,a));const n=Array.isArray(u)?u:[u];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(c,e,n),n})}const{inputs:l,attrs:d}=e,h=i(e)?null:e.backwardsFunc;let p;return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(p=this.profiler.profileKernel(c,l,()=>o()),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(p),t=p.outputs):t=o()}),r&&this.addTapeNode(c,l,t,h,n,d),this.state.profiling&&this.state.activeProfile.kernels.push({name:c,bytesAdded:this.state.numBytes-a,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-s,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(l).map(e=>null!=l[e]?l[e].shape:null),outputShapes:t.map(e=>e.shape),kernelTimeMs:p.timeMs,extraInfo:p.extraInfo}),Array.isArray(u)?t:t[0]}saveTensorsForBackwardMode(e){const t=e.map(e=>this.keep(this.clone(e)));return t}getTensorsForGradient(e,t,n){const r=Object(f.b)(e);if(null!=r){const e=r.inputsToSave||[],a=r.outputsToSave||[];let s;r.saveAllInputs?(b.b(Array.isArray(t),()=>"saveAllInputs is true, expected inputs to be an array."),s=Object.keys(t).map(e=>t[e])):s=e.map(e=>t[e]);const i=n.filter((e,t)=>a[t]);return s.concat(i)}return[]}makeTensor(e,t,n,r){if(null==e)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",r=r||this.backend;let a=e;"string"===n&&b.z(e[0])&&(a=e.map(e=>m.encodeString(e)));const s=r.write(a,t,n),i=new x.a(t,n,s,this.nextTensorId());if(this.trackTensor(i,r),"string"===n){const e=this.state.tensorInfo.get(s),t=Object(b.f)(a);this.state.numBytes+=t-e.bytes,e.bytes=t}return i}makeTensorFromDataId(e,t,n,r){n=n||"float32";const a=new x.a(t,n,e,this.nextTensorId());return this.trackTensor(a,r),a}makeVariable(e,t=!0,n,r){n=n||this.nextVariableId().toString(),null!=r&&r!==e.dtype&&(e=e.cast(r));const a=new x.c(e,t,n,this.nextTensorId());if(null!=this.state.registeredVariables[a.name])throw new Error(`Variable with name ${a.name} was already registered`);return this.state.registeredVariables[a.name]=a,this.incRef(a,this.backend),a}trackTensor(e,t){this.state.numTensors++,"string"===e.dtype&&this.state.numStringTensors++;let n=0;"complex64"!==e.dtype&&"string"!==e.dtype&&(n=e.size*b.g(e.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n})),e instanceof x.c||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;const t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,"string"===e.dtype&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),"complex64"!==e.dtype&&"string"!==e.dtype){const t=e.size*b.g(e.dtype);this.state.numBytes-=t}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(const e in this.state.registeredVariables){const t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),null!=this.state.registeredVariables[e.name]&&delete this.state.registeredVariables[e.name]}memory(){const e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,null==e.reasons&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;const t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map(e=>e.totalBytesSnapshot)),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(const e of this.state.activeProfile.kernels)e.kernelTimeMs=await e.kernelTimeMs,e.extraInfo=await e.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(e,t,n,r,a,s){const i={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:a},o=Object(f.b)(e);null!=o&&(r=o.gradFunc),null!=r&&(i.gradient=(e=>(e=e.map((e,t)=>{if(null==e){const e=n[t],r=b.F(e.size,e.dtype);return this.makeTensor(r,e.shape,e.dtype)}return e}),r(e.length>1?e:e[0],a,s)))),this.state.activeTape.push(i)}keep(e){return e.kept=!0,e}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){const t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){const t=Object(v.getTensorsInContainer)(e),n=new Set(t.map(e=>e.id));for(let e=0;e<this.state.activeScope.track.length;e++){const t=this.state.activeScope.track[e];t.kept||n.has(t.id)||t.dispose()}const r=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach(e=>{e.kept||e.scopeId!==r.id||this.track(e)})}gradients(e,t,n,r=!1){if(b.b(t.length>0,()=>"gradients() received an empty list of xs."),null!=n&&"float32"!==n.dtype)throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);const i=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",e));b.b(i instanceof x.a,()=>"The result y returned by f() must be a tensor.");const u=a(this.state.activeTape,t,i);if(!r&&0===u.length&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{const e={};e[i.id]=null==n?o(i.shape):n,s(e,u,e=>this.tidy(e),c);const r=t.map(t=>e[t.id]);return 0===this.state.gradientDepth&&(this.state.activeTape.forEach(e=>{for(const t of e.saved)t.dispose()}),this.state.activeTape=null),{value:i,grads:r}})}customGrad(e){return b.b(b.u(e),()=>"The f passed in customGrad(f) must be a function."),(...t)=>{let n;b.b(t.every(e=>e instanceof x.a),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");const r={};t.forEach((e,t)=>{r[t]=e});const a=(r,a)=>(n=e(...t,a),b.b(n.value instanceof x.a,()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),b.b(b.u(n.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),n.value),s=(e,r)=>{const a=n.gradFunc(e,r),s=Array.isArray(a)?a:[a];b.b(s.length===t.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),b.b(s.every(e=>e instanceof x.a),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");const i={};return s.forEach((e,t)=>{i[t]=(()=>e)}),i};return this.runKernelFunc({forwardFunc:a,backwardsFunc:s,inputs:r})}}readSync(e){const t=this.state.tensorInfo.get(e);return t.backend.readSync(e)}read(e){const t=this.state.tensorInfo.get(e);return t.backend.read(e)}async time(e){const t=Object(m.now)(),n=await this.backend.time(e);return n.wallMs=Object(m.now)()-t,n}track(e){return null!=this.state.activeScope&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new w;for(const e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}k.nextTensorId=0,k.nextVariableId=0;const O=u()},function(e,t,n){"use strict";function r(e,t,n,r){const s=Object(f.j)(t),i=a(e,t,n,s),u=t.length,c=o(e,t,n,s,i),l=["Tensor"];return r&&(l.push(`  dtype: ${n}`),l.push(`  rank: ${u}`),l.push(`  shape: [${t}]`),l.push("  values:")),l.push(c.map(e=>"    "+e).join("\n")),l.join("\n")}function a(e,t,n,r){const a=Object(f.O)(t),i=r[r.length-1],o=new Array(i).fill(0),c=t.length,l="complex64"===n?u(e):e;if(c>1)for(let e=0;e<a/i;e++){const t=e*i;for(let e=0;e<i;e++)o[e]=Math.max(o[e],s(l[t+e],0,n).length)}return o}function s(e,t,n){let r;return r=Array.isArray(e)?`${parseFloat(e[0].toFixed(g))} + `+`${parseFloat(e[1].toFixed(g))}j`:Object(f.z)(e)?`'${e}'`:"bool"===n?i(e):parseFloat(e.toFixed(g)).toString(),Object(f.L)(r,t)}function i(e){return 0===e?"false":"true"}function o(e,t,n,r,a,c=!0){const l="complex64"===n?2:1,d=t[0],h=t.length;if(0===h){if("complex64"===n){const t=u(e);return[s(t[0],0,n)]}return"bool"===n?[i(e[0])]:[e[0].toString()]}if(1===h){if(d>m){const t=b*l;let r=Array.from(e.slice(0,t)),i=Array.from(e.slice((d-b)*l,d*l));return"complex64"===n&&(r=u(r),i=u(i)),["["+r.map((e,t)=>s(e,a[t],n)).join(", ")+", ..., "+i.map((e,t)=>s(e,a[d-b+t],n)).join(", ")+"]"]}const t="complex64"===n?u(e):Array.from(e);return["["+t.map((e,t)=>s(e,a[t],n)).join(", ")+"]"]}const p=t.slice(1),f=r.slice(1),g=r[0]*l,y=[];if(d>m){for(let t=0;t<b;t++){const r=t*g,s=r+g;y.push(...o(e.slice(r,s),p,n,f,a,!1))}y.push("...");for(let t=d-b;t<d;t++){const r=t*g,s=r+g;y.push(...o(e.slice(r,s),p,n,f,a,t===d-1))}}else for(let t=0;t<d;t++){const r=t*g,s=r+g;y.push(...o(e.slice(r,s),p,n,f,a,t===d-1))}const x=2===h?",":"";y[0]="["+y[0]+x;for(let e=1;e<y.length-1;e++)y[e]=" "+y[e]+x;let v=",\n";for(let e=2;e<h;e++)v+="\n";return y[y.length-1]=" "+y[y.length-1]+"]"+(c?"":v),y}function u(e){const t=[];for(let n=0;n<e.length;n+=2)t.push([e[n],e[n+1]]);return t}function c(e){v=e}function l(e){w=e}function d(e){k=e}function h(){return Object(p.a)("Tensor",()=>O)}n.d(t,"b",function(){return x}),n.d(t,"g",function(){return c}),n.d(t,"f",function(){return l}),n.d(t,"e",function(){return d}),n.d(t,"a",function(){return O}),n.d(t,"d",function(){return h}),n.d(t,"c",function(){return I});var p=n(109),f=n(8);const m=20,b=3,g=7;var y=n(10);class x{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=f.O(e),null!=n){const e=n.length;f.b(e===this.size,()=>`Length of values '${e}' does not match the size `+`inferred by the shape '${this.size}'.`)}if("complex64"===t)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||f.n(t,this.size),this.strides=Object(f.j)(e)}set(e,...t){0===t.length&&(t=[0]),f.b(t.length===this.rank,()=>`The number of provided coordinates (${t.length}) must `+`match the rank (${this.rank})`);const n=this.locToIndex(t);this.values[n]=e}get(...e){0===e.length&&(e=[0]);let t=0;for(const n of e){if(n<0||n>=this.shape[t]){const t=`Requested out of range element at ${e}. `+`  Buffer shape=${this.shape}`;throw new Error(t)}t++}let n=e[e.length-1];for(let t=0;t<e.length-1;++t)n+=this.strides[t]*e[t];return this.values[n]}locToIndex(e){if(0===this.rank)return 0;if(1===this.rank)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(0===this.rank)return[];if(1===this.rank)return[e];const t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return v().makeTensor(this.values,this.shape,this.dtype)}}let v=null,w=null,k=null;class O{constructor(e,t,n,r){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=f.O(e),this.strides=Object(f.j)(e),this.dataId=n,this.id=r,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const e=await this.data();return w.buffer(this.shape,this.dtype,e)}bufferSync(){return w.buffer(this.shape,this.dtype,this.dataSync())}async array(){const e=await this.data();return Object(f.T)(this.shape,e,"complex64"===this.dtype)}arraySync(){return Object(f.T)(this.shape,this.dataSync(),"complex64"===this.dtype)}async data(){this.throwIfDisposed();const e=v().read(this.dataId);if("string"===this.dtype){const t=await e;try{return t.map(e=>y.decodeString(e))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataSync(){this.throwIfDisposed();const e=v().readSync(this.dataId);if("string"===this.dtype)try{return e.map(e=>y.decodeString(e))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();const e=await v().read(this.dataId);return"string"===this.dtype?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(v().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return w.print(this,e)}clone(){return this.throwIfDisposed(),w.clone(this)}toString(e=!1){const t=this.dataSync();return r(t,this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),w.cast(this,e)}variable(e=!0,t,n){return this.throwIfDisposed(),v().makeVariable(this,e,t,n)}}Object.defineProperty(O,Symbol.hasInstance,{value:e=>!!e&&null!=e.data&&null!=e.dataSync&&null!=e.throwIfDisposed}),h();class I extends O{constructor(e,t,n,r){super(e.shape,e.dtype,e.dataId,r),this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and `+`previous value (${this.dtype}) must match`);if(!f.a(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and `+`previous value (${this.shape}) must match`);v().disposeTensor(this),this.dataId=e.dataId,v().incRef(this,null)}dispose(){v().disposeVariable(this),this.isDisposedInternal=!0}}Object.defineProperty(I,Symbol.hasInstance,{value:e=>e instanceof O&&null!=e.assign&&e.assign instanceof Function})},function(e,t,n){"use strict";function r(e,t){const n=Object(i.a)(e,"x","reshape","string_or_numeric"),r={x:n},o={shape:t};return a.a.runKernel(s.pc,r,o)}n.d(t,"a",function(){return u});var a=n(5),s=n(3),i=n(2),o=n(4);const u=Object(o.b)({reshape_:r})},function(e,t,n){"use strict";function r(e){let t=e.length,n=0,r=0;for(;t>0;)r=Math.random()*t|0,t--,n=e[t],e[t]=e[r],e[r]=n}function a(e,t){if(e.length!==t.length)throw new Error("Array sizes must match to be shuffled together "+`First array length was ${e.length}`+`Second array length was ${t.length}`);let n,r,a=e.length,s=0;for(;a>0;)s=Math.random()*a|0,a--,n=e[a],r=t[a],e[a]=e[s],t[a]=t[s],e[s]=n,t[s]=r}function s(e,t,n){return Math.max(e,Math.min(t,n))}function i(e){return e%2==0?e:e+1}function o(e){let t=0;for(let n=0;n<e.length;n++)t+=e[n];return t}function u(e,t){const n=Math.random();return t*n+(1-n)*e}function c(e,t){let n=0;for(let r=0;r<e.length;r++){const a=Number(e[r])-Number(t[r]);n+=a*a}return n}function l(e,t){if(!e)throw new Error("string"==typeof t?t:t())}function d(e,t,n=""){l(b(e,t),()=>n+` Shapes ${e} and ${t} must match`)}function h(e){l(null!=e,()=>"The input to the tensor constructor must be a non-null value.")}function p(e,t=[],n=!1){if(null==t&&(t=[]),Array.isArray(e)||$(e)&&!n)for(let r=0;r<e.length;++r)p(e[r],t,n);else t.push(e);return t}function f(e){if(0===e.length)return 1;let t=e[0];for(let n=1;n<e.length;n++)t*=e[n];return t}function m(e){return 0===e.length}function b(e,t){if(e===t)return!0;if(null==e||null==t)return!1;if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}function g(e){return e%1==0}function y(e){if(null!=Math.tanh)return Math.tanh(e);if(e===1/0)return 1;if(e===-1/0)return-1;{const t=Math.exp(2*e);return(t-1)/(t+1)}}function x(e){const t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}function v(e){const t=new Uint32Array(e);for(let n=0;n<e;++n)t[n]=n;return r(t),t}function w(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function k(e,t=(e=>0),n){return new Promise((r,a)=>{let s=0;const i=()=>{if(e())return void r();s++;const o=t(s);null!=n&&s>=n?a():setTimeout(i,o)};i()})}function O(e,t){let n=1,r=-1;for(let t=0;t<e.length;++t)if(e[t]>=0)n*=e[t];else if(-1===e[t]){if(-1!==r)throw Error("Shapes can only have 1 implicit size. "+`Found -1 at dim ${r} and dim ${t}`);r=t}else if(e[t]<0)throw Error(`Shapes can not be < 0. Found ${e[t]} at dim ${t}`);if(-1===r){if(t>0&&t!==n)throw Error(`Size(${t}) must match the product of shape ${e}`);return e}if(0===n)throw Error(`Cannot infer the missing size in [${e}] when `+"there are 0 elements");if(t%n!=0)throw Error("The implicit shape can't be a fractional number. "+`Got ${t} / ${n}`);const a=e.slice();return a[r]=t/n,a}function I(e,t){const n=t.length;return e=null==e?t.map((e,t)=>t):[].concat(e),l(e.every(e=>e>=-n&&e<n),()=>`All values in axis param must be in range [-${n}, ${n}) but `+`got axis ${e}`),l(e.every(e=>g(e)),()=>"All values in axis param must be integers but "+`got axis ${e}`),e.map(e=>e<0?n+e:e)}function N(e,t){const n=[],r=[],a=null!=t&&Array.isArray(t)&&0===t.length,s=null==t||a?null:I(t,e).sort();let i=0;for(let t=0;t<e.length;++t){if(null!=s){if(s[i]===t&&1!==e[t])throw new Error(`Can't squeeze axis ${t} since its dim '${e[t]}' is not 1`);(null==s[i]||s[i]>t)&&1===e[t]&&(n.push(e[t]),r.push(t)),s[i]<=t&&i++}1!==e[t]&&(n.push(e[t]),r.push(t))}return{newShape:n,keptDims:r}}function j(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else{if("bool"!==e)throw new Error(`Unknown data type ${e}`);n=new Uint8Array(t)}return n}function S(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else if("bool"===e)n=new Uint8Array(t);else{if("string"!==e)throw new Error(`Unknown data type ${e}`);n=new Array(t)}return n}function T(e,t){for(let n=0;n<e.length;n++){const r=e[n];if(isNaN(r)||!isFinite(r))throw Error(`A tensor of type ${t} being uploaded contains ${r}.`)}}function C(e){return"bool"===e||"complex64"===e||"float32"===e||"int32"===e||"string"===e}function E(e,t){return"complex64"!==t&&(("float32"!==t||"complex64"===e)&&(("int32"!==t||"float32"===e||"complex64"===e)&&("bool"!==t||"bool"!==e)))}function $(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array}function A(e){if("float32"===e||"int32"===e)return 4;if("complex64"===e)return 8;if("bool"===e)return 1;throw new Error(`Unknown dtype ${e}`)}function _(e){if(null==e)return 0;let t=0;return e.forEach(e=>t+=e.length),t}function D(e){return"string"==typeof e||e instanceof String}function F(e){return"boolean"==typeof e}function R(e){return"number"==typeof e}function M(e){return Array.isArray(e)?M(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array?"int32":R(e)?"float32":D(e)?"string":F(e)?"bool":"float32"}function z(e){return!!(e&&e.constructor&&e.call&&e.apply)}function L(e,t){for(let n=t;n<e;++n)if(e%n==0)return n;return e}function P(e){const t=e.length;if(t<2)return[];const n=new Array(t-1);n[t-2]=e[t-1];for(let r=t-3;r>=0;--r)n[r]=n[r+1]*e[r+1];return n}function B(e,t,n,r=!1){const a=new Array;if(1===t.length){const s=t[0]*(r?2:1);for(let t=0;t<s;t++)a[t]=n[e+t]}else{const s=t[0],i=t.slice(1),o=i.reduce((e,t)=>e*t)*(r?2:1);for(let t=0;t<s;t++)a[t]=B(e+t*o,i,n,r)}return a}function W(e,t,n=!1){if(0===e.length)return t[0];const r=e.reduce((e,t)=>e*t)*(n?2:1);if(0===r)return[];if(r!==t.length)throw new Error(`[${e}] does not match the input size ${t.length}${n?" for a complex tensor":""}.`);return B(0,e,t,n)}function V(e,t){const n=U(e,t);for(let e=0;e<n.length;e++)n[e]=1;return n}function U(e,t){if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t)return new Uint8Array(e);throw new Error(`Unknown data type ${t}`)}function G(e,t){const n=e.reduce((e,t)=>e*t,1);if(null==t||"float32"===t)return W(e,new Float32Array(n));if("int32"===t)return W(e,new Int32Array(n));if("bool"===t)return W(e,new Uint8Array(n));throw new Error(`Unknown data type ${t}`)}function H(e){e.forEach(t=>{l(Number.isInteger(t)&&t>=0,()=>"Tensor must have a shape comprised of positive integers but got "+`shape [${e}].`)})}function q(e,t,n){if(0===t)return 0;if(1===t)return e[0];let r=e[e.length-1];for(let t=0;t<e.length-1;++t)r+=n[t]*e[t];return r}function K(e,t,n){if(0===t)return[];if(1===t)return[e];const r=new Array(t);for(let t=0;t<r.length-1;++t)r[t]=Math.floor(e/n[t]),e-=r[t]*n[t];return r[r.length-1]=e,r}function X(e){return e&&e.then&&"function"==typeof e.then}n.d(t,"M",function(){return r}),n.d(t,"N",function(){return a}),n.d(t,"i",function(){return s}),n.d(t,"H",function(){return i}),n.d(t,"R",function(){return o}),n.d(t,"J",function(){return u}),n.d(t,"l",function(){return c}),n.d(t,"b",function(){return l}),n.d(t,"e",function(){return d}),n.d(t,"d",function(){return h}),n.d(t,"m",function(){return p}),n.d(t,"O",function(){return f}),n.d(t,"y",function(){return m}),n.d(t,"a",function(){return b}),n.d(t,"v",function(){return g}),n.d(t,"S",function(){return y}),n.d(t,"P",function(){return x}),n.d(t,"k",function(){return v}),n.d(t,"L",function(){return w}),n.d(t,"K",function(){return k}),n.d(t,"s",function(){return O}),n.d(t,"I",function(){return I}),n.d(t,"Q",function(){return N}),n.d(t,"o",function(){return j}),n.d(t,"n",function(){return S}),n.d(t,"h",function(){return T}),n.d(t,"B",function(){return C}),n.d(t,"p",function(){return E}),n.d(t,"A",function(){return $}),n.d(t,"g",function(){return A}),n.d(t,"f",function(){return _}),n.d(t,"z",function(){return D}),n.d(t,"t",function(){return F}),n.d(t,"w",function(){return R}),n.d(t,"r",function(){return M}),n.d(t,"u",function(){return z}),n.d(t,"G",function(){return L}),n.d(t,"j",function(){return P}),n.d(t,"T",function(){return W}),n.d(t,"D",function(){return V}),n.d(t,"F",function(){return U}),n.d(t,"E",function(){return G}),n.d(t,"c",function(){return H}),n.d(t,"C",function(){return q}),n.d(t,"q",function(){return K}),n.d(t,"x",function(){return X})},function(e,t,n){"use strict";function r(e,t){let n=Object(o.a)(e,"a","mul"),r=Object(o.a)(t,"b","mul");[n,r]=Object(i.makeTypesMatch)(n,r);const u={a:n,b:r};return a.a.runKernel(s.Vb,u)}n.d(t,"a",function(){return c});var a=n(5),s=n(3),i=n(23),o=n(2),u=n(4);const c=Object(u.b)({mul_:r})},function(e,t,n){"use strict";function r(e,t){return"string"===t?u(e):s([e],t)}function a(e,t){return e instanceof Float32Array&&"float32"===t||e instanceof Int32Array&&"int32"===t||e instanceof Uint8Array&&"bool"===t}function s(e,t){if("string"===t)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=d.m(e)),Object(l.c)().getBool("DEBUG")&&d.h(e,t),a(e,t))return e;if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t){const t=new Uint8Array(e.length);for(let n=0;n<t.length;++n)0!==Math.round(e[n])&&(t[n]=1);return t}throw new Error(`Unknown data type ${t}`)}function i(){return Object(l.c)().platform.now()}function o(e,t){return Object(l.c)().platform.fetch(e,t)}function u(e,t="utf-8"){return t=t||"utf-8",Object(l.c)().platform.encode(e,t)}function c(e,t="utf-8"){return t=t||"utf-8",Object(l.c)().platform.decode(e,t)}n.r(t),n.d(t,"createScalarValue",function(){return r}),n.d(t,"toTypedArray",function(){return s}),n.d(t,"now",function(){return i}),n.d(t,"fetch",function(){return o}),n.d(t,"encodeString",function(){return u}),n.d(t,"decodeString",function(){return c});var l=n(22),d=n(8);n.d(t,"shuffle",function(){return d.M}),n.d(t,"shuffleCombo",function(){return d.N}),n.d(t,"clamp",function(){return d.i}),n.d(t,"nearestLargerEven",function(){return d.H}),n.d(t,"sum",function(){return d.R}),n.d(t,"randUniform",function(){return d.J}),n.d(t,"distSquared",function(){return d.l}),n.d(t,"assert",function(){return d.b}),n.d(t,"assertShapesMatch",function(){return d.e}),n.d(t,"assertNonNull",function(){return d.d}),n.d(t,"flatten",function(){return d.m}),n.d(t,"sizeFromShape",function(){return d.O}),n.d(t,"isScalarShape",function(){return d.y}),n.d(t,"arraysEqual",function(){return d.a}),n.d(t,"isInt",function(){return d.v}),n.d(t,"tanh",function(){return d.S}),n.d(t,"sizeToSquarishShape",function(){return d.P}),n.d(t,"createShuffledIndices",function(){return d.k}),n.d(t,"rightPad",function(){return d.L}),n.d(t,"repeatedTry",function(){return d.K}),n.d(t,"inferFromImplicitShape",function(){return d.s}),n.d(t,"parseAxisParam",function(){return d.I}),n.d(t,"squeezeShape",function(){return d.Q}),n.d(t,"getTypedArrayFromDType",function(){return d.o}),n.d(t,"getArrayFromDType",function(){return d.n}),n.d(t,"checkConversionForErrors",function(){return d.h}),n.d(t,"isValidDtype",function(){return d.B}),n.d(t,"hasEncodingLoss",function(){return d.p}),n.d(t,"isTypedArray",function(){return d.A}),n.d(t,"bytesPerElement",function(){return d.g}),n.d(t,"bytesFromStringArray",function(){return d.f}),n.d(t,"isString",function(){return d.z}),n.d(t,"isBoolean",function(){return d.t}),n.d(t,"isNumber",function(){return d.w}),n.d(t,"inferDtype",function(){return d.r}),n.d(t,"isFunction",function(){return d.u}),n.d(t,"nearestDivisor",function(){return d.G}),n.d(t,"computeStrides",function(){return d.j}),n.d(t,"toNestedArray",function(){return d.T}),n.d(t,"makeOnesTypedArray",function(){return d.D}),n.d(t,"makeZerosTypedArray",function(){return d.F}),n.d(t,"makeZerosNestedTypedArray",function(){return d.E}),n.d(t,"assertNonNegativeIntegerDimensions",function(){return d.c}),n.d(t,"locToIndex",function(){return d.C}),n.d(t,"indexToLoc",function(){return d.q}),n.d(t,"isPromise",function(){return d.x})},function(e,t,n){"use strict";function r(e,t){Array.isArray(e)||(e=[e]),e.forEach(e=>{null!=e&&a.util.assert("complex64"!==e.dtype,()=>`${t} does not support complex64 tensors in the CPU backend.`)})}n.d(t,"a",function(){return r});var a=n(0)},function(e,t,n){"use strict";function r(e,t){const n=Object(i.a)(e,"x","cast");if(!o.B(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if("string"===t&&"string"!==n.dtype||"string"!==t&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");const r={x:n},u={dtype:t};return a.a.runKernel(s.w,r,u)}n.d(t,"a",function(){return c});var a=n(5),s=n(3),i=n(2),o=n(8),u=n(4);const c=Object(u.b)({cast_:r})},function(e,t,n){"use strict";function r(e,t){let n=Object(o.a)(e,"a","add"),r=Object(o.a)(t,"b","add");[n,r]=Object(i.makeTypesMatch)(n,r);const u={a:n,b:r};return a.a.runKernel(s.d,u)}n.d(t,"a",function(){return c});var a=n(5),s=n(3),i=n(23),o=n(2),u=n(4);const c=Object(u.b)({add_:r})},function(e,t,n){"use strict";function r(e,t){let n=Object(o.a)(e,"a","sub"),r=Object(o.a)(t,"b","sub");[n,r]=Object(i.makeTypesMatch)(n,r);const u={a:n,b:r};return a.a.runKernel(s.Rc,u)}n.d(t,"a",function(){return c});var a=n(5),s=n(3),i=n(23),o=n(2),u=n(4);const c=Object(u.b)({sub_:r})},function(e,t,n){"use strict";function r(e,t){let n=Object(o.a)(e,"a","div"),r=Object(o.a)(t,"b","div");if([n,r]=Object(i.makeTypesMatch)(n,r),"int32"===n.dtype&&"int32"===r.dtype)return Object(u.a)(n,r);const c={a:n,b:r},l={};return a.a.runKernel(s.lc,c,l)}n.d(t,"a",function(){return l});var a=n(5),s=n(3),i=n(23),o=n(2),u=n(114),c=n(4);const l=Object(c.b)({div_:r})},function(e,t,n){"use strict";function r(e,t){if((Object(a.A)(e)&&"string"!==t||Array.isArray(e))&&"complex64"!==t)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===t&&Object(a.A)(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");const n=[],r=[];return Object(s.a)(e,n,r,t)}n.d(t,"a",function(){return r});var a=n(8),s=n(51)},function(e,t,n){"use strict";function r(e,t){const n=e.length,r=[];for(let a=0;a<n;a++){const s=n-1-a,i=e[s]||1,o=t[t.length-1-a]||1;o>1&&1===i&&r.unshift(s)}return r}function a(e,t){const n=[];for(let r=0;r<t.length;r++){const a=e[e.length-r-1],s=t.length-r-1,i=t[s];(null==a||1===a&&i>1)&&n.unshift(s)}return n}function s(e,t){const n=[],r=Math.max(e.length,t.length);for(let a=0;a<r;a++){let r=e[e.length-a-1];null==r&&(r=1);let s=t[t.length-a-1];if(null==s&&(s=1),1===r)n.unshift(s);else if(1===s)n.unshift(r);else{if(r!==s){const n="Operands could not be broadcast together with shapes "+`${e} and ${t}.`;throw Error(n)}n.unshift(r)}}return n}n.d(t,"b",function(){return r}),n.d(t,"c",function(){return a}),n.d(t,"a",function(){return s})},function(e,t,n){"use strict";function r(e,t,n){return({inputs:r,attrs:a,backend:o})=>{const{x:u}=r;if(Object(i.a)(u,e),"string"===u.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const c=o,l=c.data.get(u.dataId).values,d=s.util.sizeFromShape(u.shape),h=n||u.dtype,p=s.util.getArrayFromDType(h,d);for(let e=0;e<d;++e)p[e]=t(l[e],a);return c.makeTensorInfo(u.shape,h,p)}}function a(e,t,n){
return({inputs:r,attrs:a,backend:s})=>{const{x:o}=r;if(Object(i.a)(o,e),"string"===o.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const u=s,c=u.data.get(o.dataId).values,l=n||o.dtype,d=t(c,l,a);return u.makeTensorInfo(o.shape,l,d)}}n.d(t,"a",function(){return r}),n.d(t,"b",function(){return a});var s=n(0),i=n(11)},function(e,t,n){"use strict";function r(e,t=null,n=!1){let r=Object(i.a)(e,"x","sum");"bool"===r.dtype&&(r=Object(o.a)(r,"int32"));const u={x:r},c={axis:t,keepDims:n};return a.a.runKernel(s.Sc,u,c)}n.d(t,"a",function(){return c});var a=n(5),s=n(3),i=n(2),o=n(12),u=n(4);const c=Object(u.b)({sum_:r})},function(e,t,n){"use strict";function r(e){const t=Object(i.a)(e,"x","zerosLike"),n={x:t};return a.a.runKernel(s.cd,n)}n.d(t,"a",function(){return u});var a=n(5),s=n(3),i=n(2),o=n(4);const u=Object(o.b)({zerosLike_:r})},function(e,t,n){"use strict";function r(e,t,n,r,a,s){const i=Object(We.a)(e,"forgetBias","basicLSTMCell"),o=Object(We.a)(t,"lstmKernel","basicLSTMCell"),u=Object(We.a)(n,"lstmBias","basicLSTMCell"),c=Object(We.a)(r,"data","basicLSTMCell"),l=Object(We.a)(a,"c","basicLSTMCell"),d=Object(We.a)(s,"h","basicLSTMCell"),h=Object(Ve.a)([c,d],1),p=Object(Ue.a)(h,o),f=Object(Ce.a)(p,u),m=f.shape[0],b=f.shape[1]/4,g=[m,b],y=Object(Ke.a)(f,[0,0],g),x=Object(Ke.a)(f,[0,b],g),v=Object(Ke.a)(f,[0,2*b],g),w=Object(Ke.a)(f,[0,3*b],g),k=Object(Ce.a)(Object(Ge.a)(Object(qe.a)(y),Object(Xe.a)(x)),Object(Ge.a)(l,Object(qe.a)(Object(Ce.a)(i,v)))),O=Object(Ge.a)(Object(Xe.a)(k),Object(qe.a)(w));return[k,O]}function a(e,t,n,r,a,s){const i=Object(We.a)(e,"x","batchNorm"),o=Object(We.a)(t,"mean","batchNorm"),u=Object(We.a)(n,"variance","batchNorm");let c,l;return null!=a&&(c=Object(We.a)(a,"scale","batchNorm")),null!=r&&(l=Object(We.a)(r,"offset","batchNorm")),Je.b(2===i.rank,()=>"Error in batchNorm2D: x must be rank 2 but got rank "+`${i.rank}.`),Je.b(2===o.rank||1===o.rank,()=>"Error in batchNorm2D: mean must be rank 2 or rank 1 but "+`got rank ${o.rank}.`),Je.b(2===u.rank||1===u.rank,()=>"Error in batchNorm2D: variance must be rank 2 or rank 1 "+`but got rank ${u.rank}.`),null!=c&&Je.b(2===c.rank||1===c.rank,()=>"Error in batchNorm2D: scale must be rank 2 or rank 1 "+`but got rank ${c.rank}.`),null!=l&&Je.b(2===l.rank||1===l.rank,()=>"Error in batchNorm2D: offset must be rank 2 or rank 1 "+`but got rank ${l.rank}.`),Object(Qe.a)(i,o,u,l,c,s)}function s(e,t,n,r,a,s){const i=Object(We.a)(e,"x","batchNorm"),o=Object(We.a)(t,"mean","batchNorm"),u=Object(We.a)(n,"variance","batchNorm");let c,l;return null!=a&&(c=Object(We.a)(a,"scale","batchNorm")),null!=r&&(l=Object(We.a)(r,"offset","batchNorm")),Je.b(3===i.rank,()=>"Error in batchNorm3D: x must be rank 3 but got rank "+`${i.rank}.`),Je.b(3===o.rank||1===o.rank,()=>"Error in batchNorm3D: mean must be rank 3 or rank 1 but "+`got rank ${o.rank}.`),Je.b(3===u.rank||1===u.rank,()=>"Error in batchNorm3D: variance must be rank 3 or rank 1 "+`but got rank ${u.rank}.`),null!=c&&Je.b(3===c.rank||1===c.rank,()=>"Error in batchNorm3D: scale must be rank 3 or rank 1 "+`but got rank ${c.rank}.`),null!=l&&Je.b(3===l.rank||1===l.rank,()=>"Error in batchNorm3D: offset must be rank 3 or rank 1 "+`but got rank ${l.rank}.`),Object(Qe.a)(i,o,u,l,c,s)}function i(e,t,n,r,a,s){const i=Object(We.a)(e,"x","batchNorm"),o=Object(We.a)(t,"mean","batchNorm"),u=Object(We.a)(n,"variance","batchNorm");let c,l;return null!=a&&(c=Object(We.a)(a,"scale","batchNorm")),null!=r&&(l=Object(We.a)(r,"offset","batchNorm")),Je.b(4===i.rank,()=>"Error in batchNorm4D: x must be rank 4 but got rank "+`${i.rank}.`),Je.b(4===o.rank||1===o.rank,()=>"Error in batchNorm4D: mean must be rank 4 or rank 1 but "+`got rank ${o.rank}.`),Je.b(4===u.rank||1===u.rank,()=>"Error in batchNorm4D: variance must be rank 4 or rank 1 "+`but got rank ${u.rank}.`),null!=c&&Je.b(4===c.rank||1===c.rank,()=>"Error in batchNorm4D: scale must be rank 4 or rank 1 "+`but got rank ${c.rank}.`),null!=l&&Je.b(4===l.rank||1===l.rank,()=>"Error in batchNorm4D: offset must be rank 4 or rank 1 "+`but got rank ${l.rank}.`),Object(Qe.a)(i,o,u,l,c,s)}function o(e){return Object(Ve.a)(e,0)}function u(e,t){return Object(Ve.a)(e,t)}function c(e,t){return Object(Ve.a)(e,t)}function l(e,t){return Object(Ve.a)(e,t)}function d(e,t,n,r,a){const s=Object(We.a)(e,"x","conv3dTranspose"),i=Object(We.a)(t,"filter","conv3dTranspose");return Object(xt.a)(n,s,i,r,a)}function h(e){const t=Object(We.a)(e,"x","diag"),n={x:t};return St.a.runKernel(Tt.R,n)}function p(e,t,n,r="float32"){null==t&&(t=e);const a=Object(st.a)([e,t],r),s=e<=t?e:t;for(let e=0;e<s;++e)a.set(1,e,e);const i=Object(Bt.a)(a.toTensor(),[e,t]);if(null==n)return i;if(1===n.length)return Object(Wt.a)(Object(Lt.a)(i,0),[n[0],1,1]);if(2===n.length)return Object(Wt.a)(Object(Lt.a)(Object(Lt.a)(i,0),0),[n[0],n[1],1,1]);if(3===n.length)return Object(Wt.a)(Object(Lt.a)(Object(Lt.a)(Object(Lt.a)(i,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error("eye() currently supports only 1D and 2D "+`batchShapes, but received ${n.length}D.`)}function f(e,t,{indexing:n="xy"}={}){if("xy"!==n&&"ij"!==n)throw new TypeError(`${n} is not a valid third argument to meshgrid`);if(void 0===e)return[];let r=Object(We.a)(e,"x","meshgrid",e instanceof kn.a?e.dtype:"float32");if(void 0===t)return[r];let a=Object(We.a)(t,"y","meshgrid",t instanceof kn.a?t.dtype:"float32");const s=Object(Je.O)(r.shape),i=Object(Je.O)(a.shape);return"xy"===n?(r=Object(Bt.a)(r,[1,-1]),a=Object(Bt.a)(a,[-1,1]),[Object(Ue.a)(Object(wn.a)([i,1],r.dtype),r),Object(Ue.a)(a,Object(wn.a)([1,s],a.dtype))]):(r=Object(Bt.a)(r,[-1,1]),a=Object(Bt.a)(a,[1,-1]),[Object(Ue.a)(r,Object(wn.a)([1,i],r.dtype)),Object(Ue.a)(Object(wn.a)([s,1],a.dtype),a)])}function m(e,t=null,n=!1){e=Object(We.a)(e,"x","moments");const r=Object(Je.I)(t,e.shape),a=Object(vn.a)(e,r,n);let s=a.shape;n||(s=Object(Sn.e)(a.shape,r));const i=Object(Tn.a)(Object(Cn.a)(Object(it.a)(e,"float32"),Object(Bt.a)(a,s))),o=Object(vn.a)(i,r,n);return{mean:a,variance:o}}function b(e,t,n,r){const a=Object(We.a)(t,"data","multiRNNCell"),s=Object(We.b)(n,"c","multiRNNCell"),i=Object(We.b)(r,"h","multiRNNCell");let o=a;const u=[];for(let t=0;t<e.length;t++){const n=e[t](o,s[t],i[t]);u.push(n[0]),u.push(n[1]),o=n[1]}const c=[],l=[];for(let e=0;e<u.length;e+=2)c.push(u[e]),l.push(u[e+1]);return[c,l]}function g(e,t){const n=Object(We.a)(e,"v1","outerProduct"),r=Object(We.a)(t,"v2","outerProduct");Je.b(1===n.rank&&1===r.rank,()=>"Error in outerProduct: inputs must be rank 1, but got ranks "+`${n.rank} and ${r.rank}.`);const a=Object(Bt.a)(n,[-1,1]),s=Object(Bt.a)(r,[1,-1]);return Object(Ue.a)(a,s)}function y(e,t,n=0){return Object(Je.b)(2===t.length,()=>"Invalid number of paddings. Must be length of 2."),Object(zn.a)(e,[t],n)}function x(e,t,n=0){return Object(Je.b)(2===t.length&&2===t[0].length&&2===t[1].length,()=>"Invalid number of paddings. Must be length of 2 each."),Object(zn.a)(e,t,n)}function v(e,t,n=0){return Object(Je.b)(3===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length,()=>"Invalid number of paddings. Must be length of 2 each."),Object(zn.a)(e,t,n)}function w(e,t,n=0){return Object(Je.b)(4===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length&&2===t[3].length,()=>"Invalid number of paddings. Must be length of 2 each."),Object(zn.a)(e,t,n)}function k(e,t,n){const r=Object(Je.O)(e);let a=null;if(null==n||"float32"===n)a=new Float32Array(r);else if("int32"===n)a=new Int32Array(r);else{if("bool"!==n)throw new Error(`Unknown data type ${n}`);a=new Uint8Array(r)}for(let e=0;e<r;e++)a[e]=t();return St.a.makeTensor(a,e,n)}function O(e,t,n=1,r="float32",a){if(null==n&&(n=1),null==r&&(r="float32"),"float32"!==r&&"int32"!==r)throw new Error(`Unsupported data type ${r}`);const s=new Xn.b(t,n,r,a),i=Object(st.a)(e,r);for(let e=0;e<i.values.length;e++)i.values[e]=s.nextValue();return i.toTensor()}function I(e,t=0,n=1,r,a){if(null!=r&&"bool"===r)throw new Error(`Unsupported data type ${r}`);const s=new Xn.a(t,n,r,!1,a),i=Object(st.a)(e,r);for(let e=0;e<i.values.length;e++)i.values[e]=s.nextValue();return i.toTensor()}function N(e){const t=Object(We.a)(e,"x","reverse");return Je.b(1===t.rank,()=>`Error in reverse1D: x must be rank 1 but got rank ${t.rank}.`),Object(ar.a)(t,0)}function j(e,t){const n=Object(We.a)(e,"x","reverse");return Je.b(2===n.rank,()=>`Error in reverse2D: x must be rank 2 but got rank ${n.rank}.`),Object(ar.a)(n,t)}function S(e,t){const n=Object(We.a)(e,"x","reverse");return Je.b(3===n.rank,()=>`Error in reverse3D: x must be rank 3 but got rank ${n.rank}.`),Object(ar.a)(n,t)}function T(e,t){const n=Object(We.a)(e,"x","reverse");return Je.b(4===n.rank,()=>`Error in reverse4D: x must be rank 4 but got rank ${n.rank}.`),Object(ar.a)(n,t)}function C(e,t,n){const r=Object(We.a)(e,"x","slice1d");return Je.b(1===r.rank,()=>`slice1d expects a rank-1 tensor, but got a rank-${r.rank} tensor`),Object(Ke.a)(r,[t],[n])}function E(e,t,n){const r=Object(We.a)(e,"x","slice2d");return Je.b(2===r.rank,()=>`slice2d expects a rank-2 tensor, but got a rank-${r.rank} tensor`),Object(Ke.a)(r,t,n)}function $(e,t,n){const r=Object(We.a)(e,"x","slice3d");return Je.b(3===r.rank,()=>`slice3d expects a rank-3 tensor, but got a rank-${r.rank} tensor`),Object(Ke.a)(r,t,n)}function A(e,t,n){const r=Object(We.a)(e,"x","slice4d");return Je.b(4===r.rank,()=>`slice4d expects a rank-4 tensor, but got a rank-${r.rank} tensor`),Object(Ke.a)(r,t,n)}function _(e,t,n){if(Object(Je.d)(e),null!=t&&2!==t.length)throw new Error("tensor2d() requires shape to have two numbers");const r=Object(We.c)(e,n);if(2!==r.length&&1!==r.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return Object(Pr.a)(e,t,r,n)}function D(e,t,n){if(Object(Je.d)(e),null!=t&&4!==t.length)throw new Error("tensor4d() requires shape to have four numbers");const r=Object(We.c)(e,n);if(4!==r.length&&1!==r.length)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return Object(Pr.a)(e,t,r,n)}function F(e,t,n){if(Object(Je.d)(e),null!=t&&5!==t.length)throw new Error("tensor5d() requires shape to have five numbers");const r=Object(We.c)(e,n);if(5!==r.length&&1!==r.length)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return Object(Pr.a)(e,t,r,n)}function R(e,t,n){if(Object(Je.d)(e),null!=t&&6!==t.length)throw new Error("tensor6d() requires shape to have six numbers");const r=Object(We.c)(e,n);if(6!==r.length&&1!==r.length)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return t=t||r,Object(Pr.a)(e,t,r,n)}function M(e,t=!0,n,r){return St.a.makeVariable(e,t,n,r)}async function z(e,t,n){const r=Object(We.a)(e,"tensor","boolMask"),a=Object(We.a)(t,"mask","boolMask","bool"),s=null==n?0:n,i=a.rank,o=r.shape;Je.b(i>0,()=>"mask cannot be scalar"),Je.e(o.slice(s,s+i),a.shape,"mask's shape must match the first K dimensions of tensor's shape,");let u=1;for(let e=s;e<s+i;e++)u*=o[e];const c=o.slice(0,s).concat([u],o.slice(s+i)),l=Object(Bt.a)(r,c),d=Object(Bt.a)(a,[-1]),h=await Object(Kr.a)(d),p=Object(Ar.a)(h,[1]),f=Object(qt.a)(l,p,s);return e!==r&&r.dispose(),t!==a&&a.dispose(),p.dispose(),l.dispose(),d.dispose(),h.dispose(),f}function L(e,t,n,r,a=!0){const s=Object(We.a)(e,"v","movingAverage"),i=Object(We.a)(t,"x","movingAverage"),o=Object(We.a)(n,"decay","movingAverage");Object(ea.assertTypesMatch)(s,i),Je.b(Je.a(s.shape,i.shape),()=>"Shape mismatch in v and x");const u=Object(dr.a)(1),c=Object(Cn.a)(u,o);let l=Object(Ge.a)(Object(Cn.a)(i,s),c);if(a){Je.b(null!=r,()=>"When using zeroDebias: true, step is required.");const e=Object(We.a)(r,"step","movingAverage");l=Object($t.a)(l,Object(Cn.a)(u,Object(Un.a)(o,e)))}return Object(Ce.a)(s,l)}function P(e,t){if(null==t)return e.shape.slice();if(Je.a(e.shape,t))return t;if(e.shape.length===t.length){const n=[];for(let r=0;r<e.shape.length;r++)null==t[r]&&null!=e.shape[r]?n.push(e.shape[r]):n.push(t[r]);return n}return t}function B(e,t,n,r){const a=Object(We.a)(e,"x","dropout");if(Je.b("float32"===a.dtype,()=>"x has to be a floating point tensor since it's going to be "+`scaled, but got a ${a.dtype} tensor instead.`),Je.b(t>=0&&t<1,()=>`rate must be a float in the range [0, 1), but got ${t}.`),0===t)return e instanceof kn.a?a.clone():a;const s=P(a,n),i=1-t,o=Object($t.a)(Object(Gt.a)(Object(Ce.a)(Object(Qn.a)(s,0,1,"float32",r),i)),i);return Object(Ge.a)(a,o)}function W(e){return Math.floor(Math.pow(2,Math.ceil(Math.log(e)/Math.log(2))))}function V(e,t,n){const r=1-e%2,a=new Float32Array(e);for(let s=0;s<e;++s){const i=2*Math.PI*s/(e+r-1);a[s]=t-n*Math.cos(i)}return Object(Lr.a)(a,"float32")}async function U(e,t,n=1){const r=Object(We.a)(e,"predictions","inTopK"),a=Object(We.a)(t,"targets","inTopK");Object(Je.b)(r.rank>1,()=>"inTopK() expects the predictions to be of rank 2 or higher, "+`but got ${r.rank}`),Object(Je.b)(r.rank-1===a.rank,()=>"predictions rank should be 1 larger than targets rank, but got predictions rank "+`${r.rank} and targets rank ${a.rank}`),Object(Je.e)(r.shape.slice(0,r.shape.length-1),a.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");const s=r.shape[r.shape.length-1];Object(Je.b)(n>0&&n<=s,()=>"'k' passed to inTopK() must be > 0 && <= the predictions last "+`dimension (${s}), but got ${n}`);const i=await r.data(),o=await a.data(),[u,c]=[i.length/s,s],l=Object(Je.o)("bool",u);for(let e=0;e<u;e++){const t=e*c,r=i.subarray(t,t+c),a=[];for(let e=0;e<r.length;e++)a.push({value:r[e],index:e});a.sort((e,t)=>t.value-e.value),l[e]=0;for(let t=0;t<n;t++)if(a[t].index===o[e]){l[e]=1;break}}return e!==r&&r.dispose(),t!==a&&a.dispose(),Object(zr.a)(l,a.shape,"bool")}function G({x:e,filter:t,strides:n,pad:r,dataFormat:a="NHWC",dilations:s=[1,1],dimRoundingMode:i,bias:o,activation:u="linear",preluActivationWeights:c,leakyreluAlpha:l}){if(u=u||"linear",!1===Object(ha.d)(St.a.state.gradientDepth,u)){let d=Object(bt.a)(e,t,n,r,a,s,i);return null!=o&&(d=Object(Ce.a)(d,o)),Object(ha.a)(d,u,c,l)}const d=Object(We.a)(e,"x","conv2d"),h=Object(We.a)(t,"filter","conv2d");let p=d,f=!1;3===d.rank&&(f=!0,p=Object(Bt.a)(d,[1,d.shape[0],d.shape[1],d.shape[2]])),Je.b(4===p.rank,()=>"Error in fused conv2d: input must be rank 4, but got rank "+`${p.rank}.`),Je.b(4===h.rank,()=>"Error in fused conv2d: filter must be rank 4, but got rank "+`${h.rank}.`),null!=i&&Je.b(Je.v(r),()=>"Error in fused conv2d: pad must be an integer when using, "+`dimRoundingMode ${i} but got pad ${r}.`),Je.b(p.shape[3]===h.shape[2],()=>`Error in conv2d: depth of input (${p.shape[3]}) must match `+`input depth for filter ${h.shape[2]}.`),Je.b(da.h(n,s),()=>"Error in conv2D: Either strides or dilations must be 1. "+`Got strides ${n} and dilations '${s}'`),Je.b("NHWC"===a,()=>`Error in conv2d: got dataFormat of ${a} but only NHWC is currently supported.`);const m=da.a(p.shape,h.shape,n,s,r,i);let b,g;null!=o&&(b=Object(We.a)(o,"bias","fused conv2d"),[b]=Object(ea.makeTypesMatch)(b,d),ua.a(m.outShape,b.shape)),null!=c&&(g=Object(We.a)(c,"prelu weights","fused conv2d"));const y=(e,t)=>{const[a,i,o,c]=t,l=Object(ha.c)(e,o,u);Je.b(da.i(s),()=>"Error in gradient of fused conv2D: dilation rates greater than 1 "+`are not yet supported in gradients. Got dilations '${s}'`);const d=Object(la.a)(i.shape,l,a,n,r),h=Object(ca.a)(i,l,a.shape,n,r),p=[d,h];if(null!=c){const e=Object(ha.b)(c,l);p.push(e)}return p},x={x:p,filter:h,bias:b,preluActivationWeights:g},v={strides:n,pad:r,dataFormat:a,dilations:s,dimRoundingMode:i,activation:u,leakyreluAlpha:l};if(null==o){const e=Object(oa.a)((e,t,n)=>{let r=St.a.runKernel(Tt.kb,x,v);return n([t,e,r]),f&&(r=Object(Bt.a)(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:y}});return e(p,h)}{const e=Object(oa.a)((e,t,n,r)=>{let a=St.a.runKernel(Tt.kb,x,v);return r([t,e,a,n]),f&&(a=Object(Bt.a)(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:y}});return e(p,h,b)}}function H({x:e,filter:t,strides:n,pad:r,dataFormat:a="NHWC",dilations:s=[1,1],dimRoundingMode:i,bias:o,activation:u="linear",preluActivationWeights:c,leakyreluAlpha:l}){if(!1===Object(ha.d)(St.a.state.gradientDepth,u)){let d=Object(jt.a)(e,t,n,r,a,s,i);return null!=o&&(d=Object(Ce.a)(d,o)),Object(ha.a)(d,u,c,l)}const d=Object(We.a)(e,"x","depthwiseConv2d"),h=Object(We.a)(t,"filter","depthwiseConv2d");let p=d,f=!1;3===d.rank&&(f=!0,p=Object(Bt.a)(d,[1,d.shape[0],d.shape[1],d.shape[2]])),Je.b(4===p.rank,()=>"Error in fused depthwiseConv2d: input must be rank 4, but got "+`rank ${p.rank}.`),Je.b(4===h.rank,()=>"Error in fused depthwiseConv2d: filter must be rank 4, "+`but got rank ${h.rank}.`),Je.b(p.shape[3]===h.shape[2],()=>"Error in fused depthwiseConv2d: number of input channels "+`(${p.shape[3]}) must match the inChannels dimension in `+`filter ${h.shape[2]}.`),null==s&&(s=[1,1]),Je.b(da.h(n,s),()=>"Error in fused depthwiseConv2d: Either strides or dilations must "+`be 1. Got strides ${n} and dilations '${s}'`),null!=i&&Je.b(Je.v(r),()=>"Error in fused depthwiseConv2d: pad must be an integer when "+`using dimRoundingMode ${i} but got pad ${r}.`);const m=da.a(p.shape,h.shape,n,s,r,i,!0);let b,g;null!=o&&(b=Object(We.a)(o,"bias","fused conv2d"),[b]=Object(ea.makeTypesMatch)(b,d),ua.a(m.outShape,b.shape)),null!=c&&(g=Object(We.a)(c,"prelu weights","fused depthwiseConv2d"));const y=(e,t)=>{Je.b(da.i(s),()=>"Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations "+`'${s}'`);const[a,o,c,l]=t,d=Object(ha.c)(e,c,u),h=Object(ma.a)(o.shape,d,a,n,r,s,i),p=Object(fa.a)(o,d,a.shape,n,r,s,i);if(null!=l){const e=Object(ha.b)(b,d);return[h,p,e]}return[h,p]},x={x:p,filter:h,bias:b,preluActivationWeights:g},v={strides:n,pad:r,dataFormat:a,dilations:s,dimRoundingMode:i,activation:u,leakyreluAlpha:l};if(null==o){const e=Object(oa.a)((e,t,n)=>{let r=St.a.runKernel(Tt.lb,x,v);return n([t,e,r]),f&&(r=Object(Bt.a)(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:y}});return e(p,h)}{const e=Object(oa.a)((e,t,n,r)=>{let a=St.a.runKernel(Tt.lb,x,v);return r([t,e,a,n]),f&&(a=Object(Bt.a)(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:y}});return e(p,h,b)}}function q({a:e,b:t,transposeA:n=!1,transposeB:r=!1,bias:a,activation:s="linear",preluActivationWeights:i,leakyreluAlpha:o}){if(!1===Object(ha.d)(St.a.state.gradientDepth,s)){let u=Object(Ue.a)(e,t,n,r);return null!=a&&(u=Object(Ce.a)(u,a)),Object(ha.a)(u,s,i,o)}let u=Object(We.a)(e,"a","fused matMul"),c=Object(We.a)(t,"b","fused matMul");[u,c]=Object(ea.makeTypesMatch)(u,c);const l=n?u.shape[u.rank-2]:u.shape[u.rank-1],d=r?c.shape[c.rank-1]:c.shape[c.rank-2],h=n?u.shape[u.rank-1]:u.shape[u.rank-2],p=r?c.shape[c.rank-2]:c.shape[c.rank-1],f=u.shape.slice(0,-2),m=c.shape.slice(0,-2),b=Je.O(f),g=Je.O(m);Je.b(u.rank>=2&&c.rank>=2&&u.rank===c.rank,()=>"Error in fused matMul: inputs must have the same rank of at "+`least 2, got ranks ${u.rank} and ${c.rank}.`),Je.b(Je.a(f,m),()=>`Error in fused matMul: outer dimensions (${f}) and (`+`${m}) of Tensors with shapes ${u.shape} and `+`${c.shape} must match.`),Je.b(l===d,()=>`Error in fused matMul: inner shapes (${l}) and (`+`${d}) of Tensors with shapes ${u.shape} and `+`${c.shape} and transposeA=${n}`+` and transposeB=${r} must match.`);const y=u.shape.slice(0,-2).concat([h,p]),x=n?Object(Bt.a)(u,[b,l,h]):Object(Bt.a)(u,[b,h,l]),v=r?Object(Bt.a)(c,[g,p,d]):Object(Bt.a)(c,[g,d,p]);let w,k;null!=a&&(w=Object(We.a)(a,"bias","fused matMul"),[w]=Object(ea.makeTypesMatch)(w,u),ua.a(y,w.shape)),null!=i&&(k=Object(We.a)(i,"prelu weights","fused matMul"));const O=(e,t)=>{const[i,o,u,c]=t,l=Object(ha.c)(Object(Bt.a)(e,u.shape),u,s);let d,h;if(n||r?!n&&r?(d=Object(Ue.a)(l,o,!1,!1),h=Object(Ue.a)(l,i,!0,!1)):n&&!r?(d=Object(Ue.a)(o,l,!1,!0),h=Object(Ue.a)(i,l,!1,!1)):(d=Object(Ue.a)(o,l,!0,!0),h=Object(Ue.a)(l,i,!0,!0)):(d=Object(Ue.a)(l,o,!1,!0),h=Object(Ue.a)(i,l,!0,!1)),null!=a){const e=Object(ha.b)(c,l);return[d,h,e]}return[d,h]},I={a:x,b:v,bias:w,preluActivationWeights:k},N={transposeA:n,transposeB:r,activation:s,leakyreluAlpha:o};if(null==a){const e=Object(oa.a)((e,t,n)=>{const r=St.a.runKernel(Tt.dd,I,N);return n([e,t,r]),{value:Object(Bt.a)(r,y),gradFunc:O}});return e(x,v)}{const e=Object(oa.a)((e,t,n,r)=>{const a=St.a.runKernel(Tt.dd,I,N);return r([e,t,a,n]),{value:Object(Bt.a)(a,y),gradFunc:O}});return e(x,v,w)}}function K(e){return V(e,.54,.46)}function X(e){return V(e,.5,.5)}function Y(e,t,n,r=!1,a=0){let s=0;const i=[];for(;s+t<=e.size;)i.push(Object(Ke.a)(e,s,t)),s+=n;if(r)for(;s<e.size;){const r=s+t-e.size,o=Object(Ve.a)([Object(Ke.a)(e,s,t-r),Object(Ut.a)([r],a)]);i.push(o),s+=n}return 0===i.length?_([],[0,t]):Object(Bt.a)(Object(Ve.a)(i),[i.length,t])}function Z(e,t,n,r,a=xa){null==r&&(r=W(t));const s=va(e,t,n),i=Object(Ge.a)(s,a(t));return Object(Tr.a)(i,r)}function Q(e,t,n,r,a="bilinear",s=0){const i=Object(We.a)(e,"image","cropAndResize"),o=Object(We.a)(t,"boxes","cropAndResize","float32"),u=Object(We.a)(n,"boxInd","cropAndResize","int32"),c=o.shape[0];Je.b(4===i.rank,()=>"Error in cropAndResize: image must be rank 4,"+`but got rank ${i.rank}.`),Je.b(2===o.rank&&4===o.shape[1],()=>`Error in cropAndResize: boxes must be have size [${c},4] `+`but had shape ${o.shape}.`),Je.b(1===u.rank&&u.shape[0]===c,()=>`Error in cropAndResize: boxInd must be have size [${c}] `+`but had shape ${o.shape}.`),Je.b(2===r.length,()=>"Error in cropAndResize: cropSize must be of length 2, but got "+`length ${r.length}.`),Je.b(r[0]>=1&&r[1]>=1,()=>`cropSize must be atleast [1,1], but was ${r}`),Je.b("bilinear"===a||"nearest"===a,()=>`method must be bilinear or nearest, but was ${a}`);const l={image:i,boxes:o,boxInd:u},d={method:a,extrapolationValue:s,cropSize:r},h=St.a.runKernel(Tt.K,l,d);return h}function J(e){const t=Object(We.a)(e,"image","flipLeftRight","float32");Je.b(4===t.rank,()=>"Error in flipLeftRight: image must be rank 4,"+`but got rank ${t.rank}.`);const n={image:t},r=St.a.runKernel(Tt.fb,n,{});return r}function ee(e,t,n=0,r=.5){const a=Object(We.a)(e,"image","rotateWithOffset","float32");Je.b(4===a.rank,()=>"Error in rotateWithOffset: image must be rank 4,"+`but got rank ${a.rank}.`);const s={image:a},i={radians:t,fillValue:n,center:r},o=St.a.runKernel(Tt.vc,s,i);return o}function te(e,t,n,r,a,s){null==r&&(r=.5),null==a&&(a=Number.NEGATIVE_INFINITY),null==s&&(s=0);const i=e.shape[0];return n=Math.min(n,i),Je.b(0<=r&&r<=1,()=>`iouThreshold must be in [0, 1], but was '${r}'`),Je.b(2===e.rank,()=>`boxes must be a 2D tensor, but was of rank '${e.rank}'`),Je.b(4===e.shape[1],()=>`boxes must have 4 columns, but 2nd dimension was ${e.shape[1]}`),Je.b(1===t.rank,()=>"scores must be a 1D tensor"),Je.b(t.shape[0]===i,()=>`scores has incompatible shape with boxes. Expected ${i}, `+`but was ${t.shape[0]}`),Je.b(0<=s&&s<=1,()=>`softNmsSigma must be in [0, 1], but was '${s}'`),{maxOutputSize:n,iouThreshold:r,scoreThreshold:a,softNmsSigma:s}}function ne(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY){const s=Object(We.a)(e,"boxes","nonMaxSuppression"),i=Object(We.a)(t,"scores","nonMaxSuppression"),o=te(s,i,n,r,a);n=o.maxOutputSize,r=o.iouThreshold,a=o.scoreThreshold;const u={maxOutputSize:n,iouThreshold:r,scoreThreshold:a};return St.a.runKernel(Tt.Xb,{boxes:s,scores:i},u)}async function re(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY){const s=Object(We.a)(e,"boxes","nonMaxSuppressionAsync"),i=Object(We.a)(t,"scores","nonMaxSuppressionAsync"),o=te(s,i,n,r,a);n=o.maxOutputSize,r=o.iouThreshold,a=o.scoreThreshold;const u=await Promise.all([s.data(),i.data()]),c=u[0],l=u[1],{selectedIndices:d}=Object(ja.a)(c,l,n,r,a);return s!==e&&s.dispose(),i!==t&&i.dispose(),Object(Lr.a)(d,"int32")}function ae(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=0){const i=Object(We.a)(e,"boxes","nonMaxSuppression"),o=Object(We.a)(t,"scores","nonMaxSuppression"),u=te(i,o,n,r,a,s);n=u.maxOutputSize,r=u.iouThreshold,a=u.scoreThreshold,s=u.softNmsSigma;const c={boxes:i,scores:o},l={maxOutputSize:n,iouThreshold:r,scoreThreshold:a,softNmsSigma:s},d=St.a.runKernel(Tt.Zb,c,l);return{selectedIndices:d[0],selectedScores:d[1]}}async function se(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=0){const i=Object(We.a)(e,"boxes","nonMaxSuppressionAsync"),o=Object(We.a)(t,"scores","nonMaxSuppressionAsync"),u=te(i,o,n,r,a,s);n=u.maxOutputSize,r=u.iouThreshold,a=u.scoreThreshold,s=u.softNmsSigma;const c=await Promise.all([i.data(),o.data()]),l=c[0],d=c[1],{selectedIndices:h,selectedScores:p}=Object(ja.c)(l,d,n,r,a,s);return i!==e&&i.dispose(),o!==t&&o.dispose(),{selectedIndices:Object(Lr.a)(h,"int32"),selectedScores:Object(Lr.a)(p)}}function ie(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=!1){const i=Object(We.a)(e,"boxes","nonMaxSuppression"),o=Object(We.a)(t,"scores","nonMaxSuppression"),u=te(i,o,n,r,a,null),c=u.maxOutputSize,l=u.iouThreshold,d=u.scoreThreshold,h={boxes:i,scores:o},p={maxOutputSize:c,iouThreshold:l,scoreThreshold:d,padToMaxOutputSize:s},f=St.a.runKernel(Tt.Yb,h,p);return{selectedIndices:f[0],validOutputs:f[1]}}async function oe(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=!1){const i=Object(We.a)(e,"boxes","nonMaxSuppressionAsync"),o=Object(We.a)(t,"scores","nonMaxSuppressionAsync"),u=te(i,o,n,r,a,null),c=u.maxOutputSize,l=u.iouThreshold,d=u.scoreThreshold,[h,p]=await Promise.all([i.data(),o.data()]),{selectedIndices:f,validOutputs:m}=Object(ja.b)(h,p,c,l,d,s);return i!==e&&i.dispose(),o!==t&&o.dispose(),{selectedIndices:Object(Lr.a)(f,"int32"),validOutputs:Object(dr.a)(m,"int32")}}function ue(e,t,n="nearest",r="constant",a=0,s){const i=Object(We.a)(e,"image","transform","float32"),o=Object(We.a)(t,"transforms","transform","float32");Je.b(4===i.rank,()=>"Error in transform: image must be rank 4,"+`but got rank ${i.rank}.`),Je.b(2===o.rank&&(o.shape[0]===i.shape[0]||1===o.shape[0])&&8===o.shape[1],()=>"Error in transform: Input transform should be batch x 8 or 1 x 8"),Je.b(null==s||2===s.length,()=>"Error in transform: outputShape must be [height, width] or null, "+`but got ${s}.`);const u={image:i,transforms:o},c={interpolation:n,fillMode:r,fillValue:a,outputShape:s};return St.a.runKernel(Tt.Xc,u,c)}function ce(e,t,n){Object(Je.b)(t%1==0,()=>`bandPart(): numLower must be an integer, got ${t}.`),Object(Je.b)(n%1==0,()=>`bandPart(): numUpper must be an integer, got ${n}.`);const r=Object(We.a)(e,"a","bandPart");Object(Je.b)(r.rank>=2,()=>`bandPart(): Rank must be at least 2, got ${r.rank}.`);const a=r.shape,[s,i]=r.shape.slice(-2);if(!(t<=s))throw new Error(`bandPart(): numLower (${t})`+` must not be greater than the number of rows (${s}).`);if(!(n<=i))throw new Error(`bandPart(): numUpper (${n})`+` must not be greater than the number of columns (${i}).`);t<0&&(t=s),n<0&&(n=i);const o=Object(Bt.a)(Object(Jn.a)(0,s,1,"int32"),[-1,1]),u=Object(Jn.a)(0,i,1,"int32"),c=Object(Cn.a)(o,u),l=Object(dn.a)(Object(nn.a)(c,Object(dr.a)(+t,"int32")),Object(Xt.a)(c,Object(dr.a)(-n,"int32"))),d=Object(Xr.a)([s,i],r.dtype);return Object(Bt.a)(Object(_r.a)(Object(Hr.a)(Object(Bt.a)(r,[-1,s,i])).map(e=>Object(qr.a)(l,e,d))),a)}function le(e){let t;if(Array.isArray(e)){t=!1,Object(Je.b)(null!=e&&e.length>0,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");const n=e[0].shape[0];for(let t=1;t<e.length;++t)Object(Je.b)(e[t].shape[0]===n,()=>"Gram-Schmidt: Non-unique lengths found in the input vectors: "+`(${e[t].shape[0]} vs. ${n})`)}else t=!0,e=Object(Cr.a)(e,e.shape[0],0).map(e=>Object(Ar.a)(e,[0]));Object(Je.b)(e.length<=e[0].shape[0],()=>`Gram-Schmidt: Number of vectors (${e.length}) exceeds `+`number of dimensions (${e[0].shape[0]}).`);const n=[],r=e;for(let t=0;t<e.length;++t)n.push(St.a.tidy(()=>{let e=r[t];if(t>0)for(let r=0;r<t;++r){const t=Object(Ge.a)(Object(Rr.a)(Object(Ge.a)(n[r],e)),n[r]);e=Object(Cn.a)(e,t)}return Object($t.a)(e,Object(Jr.a)(e,"euclidean"))}));return t?Object(_r.a)(n,0):n}function de(e,t=!1){if(Object(Je.b)(e.rank>=2,()=>`qr() requires input tensor to have a rank >= 2, but got rank ${e.rank}`),2===e.rank)return he(e,t);{const n=e.shape.slice(0,e.shape.length-2).reduce((e,t)=>e*t),r=Object(Hr.a)(Object(Bt.a)(e,[n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),a=[],s=[];r.forEach(e=>{const[n,r]=he(e,t);a.push(n),s.push(r)});const i=Object(Bt.a)(Object(_r.a)(a,0),e.shape),o=Object(Bt.a)(Object(_r.a)(s,0),e.shape);return[i,o]}}function he(e,t=!1){return St.a.tidy(()=>{Object(Je.b)(2===e.shape.length,()=>`qr2d() requires a 2D Tensor, but got a ${e.shape.length}D Tensor.`);const n=e.shape[0],r=e.shape[1];let a=Vt(n),s=Object(ct.a)(e);const i=_([[1]],[1,1]);let o=Object(ct.a)(i);const u=n>=r?r:n;for(let e=0;e<u;++e){const t=s,u=o,c=a;[o,s,a]=St.a.tidy(()=>{const t=Object(Ke.a)(s,[e,e],[n-e,1]),u=Object(Jr.a)(t),c=Object(Ke.a)(s,[e,e],[1,1]),l=Object(qr.a)(Object(Kt.a)(c,0),_([[-1]]),_([[1]])),d=Object(Cn.a)(c,Object(Ge.a)(l,u)),h=Object($t.a)(t,d);o=1===h.shape[0]?Object(ct.a)(i):Object(Ve.a)([i,Object(Ke.a)(h,[1,0],[h.shape[0]-1,h.shape[1]])],0);const p=Object(_n.a)(Object($t.a)(Object(Ue.a)(l,d),u)),f=Object(Ke.a)(s,[e,0],[n-e,r]),m=Object(Ge.a)(p,o),b=Object(Qr.a)(o);if(0===e)s=Object(Cn.a)(f,Object(Ue.a)(m,Object(Ue.a)(b,f)));else{const t=Object(Cn.a)(f,Object(Ue.a)(m,Object(Ue.a)(b,f)));s=Object(Ve.a)([Object(Ke.a)(s,[0,0],[e,r]),t],0)}const g=Object(Qr.a)(m),y=Object(Ke.a)(a,[0,e],[n,a.shape[1]-e]);if(0===e)a=Object(Cn.a)(y,Object(Ue.a)(Object(Ue.a)(y,o),g));else{const t=Object(Cn.a)(y,Object(Ue.a)(Object(Ue.a)(y,o),g));a=Object(Ve.a)([Object(Ke.a)(a,[0,0],[n,e]),t],1)}return[o,s,a]}),Object(Ma.d)([t,u,c])}return!t&&n>r&&(a=Object(Ke.a)(a,[0,0],[n,r]),s=Object(Ke.a)(s,[0,0],[r,r])),[a,s]})}function pe(e,t,n=La.a.SUM_BY_NONZERO_WEIGHTS){const r=Object(We.a)(e,"losses","computeWeightedLoss");let a=null;null!=t&&(a=Object(We.a)(t,"weights","computeWeightedLoss"));const s=null==a?r:Object(Ge.a)(r,a);if(n===La.a.NONE)return s;if(n===La.a.SUM)return Object(Rr.a)(s);if(n===La.a.MEAN){if(null==a)return Object(vn.a)(s);{const e=r.size/a.size,t=Object($t.a)(Object(Rr.a)(s),Object(Rr.a)(a));return e>1?Object($t.a)(t,Object(dr.a)(e)):t}}if(n===La.a.SUM_BY_NONZERO_WEIGHTS){if(null==a)return Object($t.a)(Object(Rr.a)(s),Object(dr.a)(r.size));{const e=Object(Ge.a)(a,Object(wn.a)(r.shape)),t=Object(it.a)(Object(Rr.a)(Object(Dn.a)(e,Object(dr.a)(0))),"float32");return Object($t.a)(Object(Rr.a)(s),t)}}throw Error(`Unknown reduction: ${n}`)}function fe(e,t,n,r=La.a.SUM_BY_NONZERO_WEIGHTS){const a=Object(We.a)(e,"labels","absoluteDifference"),s=Object(We.a)(t,"predictions","absoluteDifference");let i=null;null!=n&&(i=Object(We.a)(n,"weights","absoluteDifference")),Object(Je.e)(a.shape,s.shape,"Error in absoluteDifference: ");const o=Object(je.a)(Object(Cn.a)(a,s));return Pa(o,i,r)}function me(e,t,n,r,a=La.a.SUM_BY_NONZERO_WEIGHTS){const s=Object(We.a)(e,"labels","cosineDistance"),i=Object(We.a)(t,"predictions","cosineDistance");let o=null;null!=r&&(o=Object(We.a)(r,"weights","cosineDistance")),Object(Je.e)(s.shape,i.shape,"Error in cosineDistance: ");const u=Object(dr.a)(1),c=Object(Cn.a)(u,Object(Rr.a)(Object(Ge.a)(s,i),n,!0));return Pa(c,o,a)}function be(e,t,n,r=La.a.SUM_BY_NONZERO_WEIGHTS){let a=Object(We.a)(e,"labels","hingeLoss");const s=Object(We.a)(t,"predictions","hingeLoss");let i=null;null!=n&&(i=Object(We.a)(n,"weights","hingeLoss")),Object(Je.e)(a.shape,s.shape,"Error in hingeLoss: ");const o=Object(dr.a)(1);a=Object(Cn.a)(Object(Ge.a)(Object(dr.a)(2),a),o);const u=Object(nr.a)(Object(Cn.a)(o,Object(Ge.a)(a,s)));return Pa(u,i,r)}
function ge(e,t,n,r=1,a=La.a.SUM_BY_NONZERO_WEIGHTS){const s=Object(We.a)(e,"labels","huberLoss"),i=Object(We.a)(t,"predictions","huberLoss");let o=null;null!=n&&(o=Object(We.a)(n,"weights","huberLoss")),Object(Je.e)(s.shape,i.shape,"Error in huberLoss: ");const u=Object(dr.a)(r),c=Object(je.a)(Object(Cn.a)(i,s)),l=Object(In.a)(c,u),d=Object(Cn.a)(c,l),h=Object(Ce.a)(Object(Ge.a)(Object(dr.a)(.5),Object(Tn.a)(l)),Object(Ge.a)(u,d));return Pa(h,o,a)}function ye(e,t,n,r=1e-7,a=La.a.SUM_BY_NONZERO_WEIGHTS){const s=Object(We.a)(e,"labels","logLoss"),i=Object(We.a)(t,"predictions","logLoss");let o=null;null!=n&&(o=Object(We.a)(n,"weights","logLoss")),Object(Je.e)(s.shape,i.shape,"Error in logLoss: ");const u=Object(dr.a)(1),c=Object(dr.a)(r),l=Object(_n.a)(Object(Ge.a)(s,Object(sn.a)(Object(Ce.a)(i,c)))),d=Object(Ge.a)(Object(Cn.a)(u,s),Object(sn.a)(Object(Ce.a)(Object(Cn.a)(u,i),c))),h=Object(Cn.a)(l,d);return Pa(h,o,a)}function xe(e,t,n,r=La.a.SUM_BY_NONZERO_WEIGHTS){const a=Object(We.a)(e,"labels","meanSquaredError"),s=Object(We.a)(t,"predictions","meanSquaredError");let i=null;null!=n&&(i=Object(We.a)(n,"weights","meanSquaredError")),Object(Je.e)(a.shape,s.shape,"Error in meanSquaredError: ");const o=Object($r.a)(a,s);return Pa(o,i,r)}function ve(e,t){const n=Object(We.a)(e,"labels","sigmoidCrossEntropyWithLogits"),r=Object(We.a)(t,"logits","sigmoidCrossEntropyWithLogits");Object(Je.e)(n.shape,r.shape,"Error in sigmoidCrossEntropyWithLogits: ");const a=Object(nr.a)(r),s=Object(Ge.a)(r,n),i=Object(on.a)(Object(zt.a)(Object(_n.a)(Object(je.a)(r))));return Object(Ce.a)(Object(Cn.a)(a,s),i)}function we(e,t,n,r=0,a=La.a.SUM_BY_NONZERO_WEIGHTS){let s=Object(We.a)(e,"multiClassLabels","sigmoidCrossEntropy");const i=Object(We.a)(t,"logits","sigmoidCrossEntropy");let o=null;if(null!=n&&(o=Object(We.a)(n,"weights","sigmoidCrossEntropy")),Object(Je.e)(s.shape,i.shape,"Error in sigmoidCrossEntropy: "),r>0){const e=Object(dr.a)(r),t=Object(dr.a)(1),n=Object(dr.a)(.5);s=Object(Ce.a)(Object(Ge.a)(s,Object(Cn.a)(t,e)),Object(Ge.a)(n,e))}const u=ve(s,i);return Pa(u,o,a)}function ke(e,t,n=-1){if(-1===n&&(n=t.rank-1),n!==t.rank-1)throw Error("Softmax cross entropy along a non-last dimension is not yet "+`supported. Labels / logits was rank ${t.rank} `+`and dim was ${n}`);const r=Object(oa.a)((e,t,r)=>{const a=!0,s=Object(ln.a)(t,[n],a),i=Object(Cn.a)(Object(it.a)(t,"float32"),s);r([e,i]);const o=Object(_n.a)(Object(Ge.a)(i,e)),u=Object(Rr.a)(o,[n]),c=(e,t)=>{const[r,a]=t,s=Object(Sn.e)(e.shape,[n]);return[Object(Ge.a)(Object(Bt.a)(e,s),Object(Cn.a)(Object(it.a)(r,"float32"),Object(zt.a)(a))),Object(Ge.a)(Object(Bt.a)(e,s),Object(Cn.a)(Object(zt.a)(a),Object(it.a)(r,"float32")))]};return{value:u,gradFunc:c}});return r(e,t)}function Oe(e,t,n,r=0,a=La.a.SUM_BY_NONZERO_WEIGHTS){let s=Object(We.a)(e,"onehotLabels","softmaxCrossEntropy");const i=Object(We.a)(t,"logits","softmaxCrossEntropy");let o=null;if(null!=n&&(o=Object(We.a)(n,"weights","softmaxCrossEntropy")),Object(Je.e)(s.shape,i.shape,"Error in softmaxCrossEntropy: "),r>0){const e=Object(dr.a)(r),t=Object(dr.a)(1),n=Object(dr.a)(s.shape[1]);s=Object(Ce.a)(Object(Ge.a)(s,Object(Cn.a)(t,e)),Object($t.a)(e,n))}const u=ke(s,i);return Pa(u,o,a)}function Ie(e,t,n){const r=Object(We.a)(e,"inputIndices","sparseReshape"),a=Object(We.a)(t,"inputShape","sparseReshape"),s=Object(We.a)(n,"newShape","sparseReshape");if(2!==r.rank)throw new Error(`Input indices should be Tensor2D but received shape\n        ${r.shape}`);if(1!==a.rank)throw new Error(`Input shape should be Tensor1D but received shape ${a.shape}`);if(1!==s.rank)throw new Error(`New shape should be Tensor1D but received shape ${s.shape}`);const i={inputIndices:r,inputShape:a,newShape:s},o=St.a.runKernel(Tt.Jc,i);return{outputIndices:o[0],outputShape:o[1]}}n.d(t,"b",function(){return je.a}),n.d(t,"c",function(){return Se.a}),n.d(t,"d",function(){return Te.a}),n.d(t,"e",function(){return Ce.a}),n.d(t,"f",function(){return Ee.a}),n.d(t,"g",function(){return $e.a}),n.d(t,"h",function(){return Ae.a}),n.d(t,"i",function(){return _e.a}),n.d(t,"j",function(){return De.a}),n.d(t,"k",function(){return Fe.a}),n.d(t,"l",function(){return Re.a}),n.d(t,"m",function(){return Me.a}),n.d(t,"n",function(){return ze.a}),n.d(t,"o",function(){return Le.a}),n.d(t,"p",function(){return Pe.a}),n.d(t,"q",function(){return Be.a}),n.d(t,"r",function(){return Ye}),n.d(t,"w",function(){return Ze.a}),n.d(t,"s",function(){return Qe.a}),n.d(t,"t",function(){return et}),n.d(t,"u",function(){return tt}),n.d(t,"v",function(){return nt}),n.d(t,"x",function(){return rt.a}),n.d(t,"z",function(){return at.a}),n.d(t,"A",function(){return st.a}),n.d(t,"B",function(){return it.a}),n.d(t,"C",function(){return ot.a}),n.d(t,"D",function(){return ut.a}),n.d(t,"E",function(){return ct.a}),n.d(t,"F",function(){return lt.a}),n.d(t,"G",function(){return Ve.a}),n.d(t,"H",function(){return dt}),n.d(t,"I",function(){return ht}),n.d(t,"J",function(){return pt}),n.d(t,"K",function(){return ft}),n.d(t,"L",function(){return mt.a}),n.d(t,"M",function(){return bt.a}),n.d(t,"N",function(){return gt.a}),n.d(t,"O",function(){return yt.a}),n.d(t,"P",function(){return vt}),n.d(t,"Q",function(){return wt.a}),n.d(t,"R",function(){return kt.a}),n.d(t,"T",function(){return Ot.a}),n.d(t,"U",function(){return It.a}),n.d(t,"V",function(){return Nt.a}),n.d(t,"W",function(){return jt.a}),n.d(t,"X",function(){return Ct}),n.d(t,"Y",function(){return Et.a}),n.d(t,"Z",function(){return $t.a}),n.d(t,"ab",function(){return At.a}),n.d(t,"bb",function(){return _t.a}),n.d(t,"db",function(){return Dt.a}),n.d(t,"eb",function(){return Ft.a}),n.d(t,"gb",function(){return Rt.a}),n.d(t,"hb",function(){return Mt.a}),n.d(t,"ib",function(){return zt.a}),n.d(t,"jb",function(){return Lt.a}),n.d(t,"kb",function(){return Pt.a}),n.d(t,"lb",function(){return Vt}),n.d(t,"nb",function(){return Ut.a}),n.d(t,"ob",function(){return Gt.a}),n.d(t,"pb",function(){return Ht.a}),n.d(t,"rb",function(){return qt.a}),n.d(t,"tb",function(){return Kt.a}),n.d(t,"ub",function(){return Xt.a}),n.d(t,"wb",function(){return Yt.a}),n.d(t,"Ab",function(){return Zt.a}),n.d(t,"Bb",function(){return Qt.a}),n.d(t,"Cb",function(){return Jt.a}),n.d(t,"Db",function(){return en.a}),n.d(t,"Eb",function(){return tn.a}),n.d(t,"Fb",function(){return nn.a}),n.d(t,"Hb",function(){return rn.a}),n.d(t,"Ib",function(){return an.a}),n.d(t,"Jb",function(){return sn.a}),n.d(t,"Kb",function(){return on.a}),n.d(t,"Lb",function(){return un.a}),n.d(t,"Mb",function(){return cn.a}),n.d(t,"Nb",function(){return ln.a}),n.d(t,"Ob",function(){return dn.a}),n.d(t,"Pb",function(){return hn.a}),n.d(t,"Qb",function(){return pn.a}),n.d(t,"Rb",function(){return fn.a}),n.d(t,"Tb",function(){return Ue.a}),n.d(t,"Ub",function(){return mn.a}),n.d(t,"Vb",function(){return bn.a}),n.d(t,"Wb",function(){return gn.a}),n.d(t,"Xb",function(){return yn.a}),n.d(t,"Yb",function(){return xn.a}),n.d(t,"Zb",function(){return vn.a}),n.d(t,"ac",function(){return f}),n.d(t,"bc",function(){return On.a}),n.d(t,"cc",function(){return In.a}),n.d(t,"dc",function(){return Nn.a}),n.d(t,"ec",function(){return jn.a}),n.d(t,"fc",function(){return En}),n.d(t,"hc",function(){return Ge.a}),n.d(t,"ic",function(){return $n}),n.d(t,"jc",function(){return An.a}),n.d(t,"kc",function(){return _n.a}),n.d(t,"mc",function(){return Dn.a}),n.d(t,"nc",function(){return Fn.a}),n.d(t,"oc",function(){return wn.a}),n.d(t,"pc",function(){return Rn.a}),n.d(t,"rc",function(){return Mn}),n.d(t,"sc",function(){return zn.a}),n.d(t,"tc",function(){return Ln}),n.d(t,"uc",function(){return Pn}),n.d(t,"vc",function(){return Bn}),n.d(t,"wc",function(){return Wn}),n.d(t,"xc",function(){return Vn.a}),n.d(t,"yc",function(){return Un.a}),n.d(t,"zc",function(){return Gn.a}),n.d(t,"Ac",function(){return Hn.a}),n.d(t,"Bc",function(){return qn.a}),n.d(t,"Cc",function(){return Kn}),n.d(t,"Dc",function(){return Yn}),n.d(t,"Ec",function(){return Zn}),n.d(t,"Fc",function(){return Qn.a}),n.d(t,"Gc",function(){return Jn.a}),n.d(t,"Hc",function(){return er.a}),n.d(t,"Ic",function(){return tr.a}),n.d(t,"Jc",function(){return nr.a}),n.d(t,"Kc",function(){return rr.a}),n.d(t,"Lc",function(){return Bt.a}),n.d(t,"Mc",function(){return ar.a}),n.d(t,"Nc",function(){return sr}),n.d(t,"Oc",function(){return ir}),n.d(t,"Pc",function(){return or}),n.d(t,"Qc",function(){return ur}),n.d(t,"Sc",function(){return cr.a}),n.d(t,"Tc",function(){return lr.a}),n.d(t,"Uc",function(){return dr.a}),n.d(t,"Wc",function(){return hr.a}),n.d(t,"Xc",function(){return pr.a}),n.d(t,"Yc",function(){return fr.a}),n.d(t,"Zc",function(){return qe.a}),n.d(t,"ad",function(){return mr.a}),n.d(t,"cd",function(){return br.a}),n.d(t,"dd",function(){return gr.a}),n.d(t,"ed",function(){return Ke.a}),n.d(t,"fd",function(){return yr}),n.d(t,"gd",function(){return xr}),n.d(t,"hd",function(){return vr}),n.d(t,"id",function(){return wr}),n.d(t,"jd",function(){return kr.a}),n.d(t,"kd",function(){return Or.a}),n.d(t,"ld",function(){return Ir.a}),n.d(t,"mb",function(){return Nr.a}),n.d(t,"vb",function(){return jr.a}),n.d(t,"zb",function(){return Sr.a}),n.d(t,"Rc",function(){return Tr.a}),n.d(t,"pd",function(){return Cr.a}),n.d(t,"qd",function(){return Er.a}),n.d(t,"rd",function(){return Tn.a}),n.d(t,"sd",function(){return $r.a}),n.d(t,"td",function(){return Ar.a}),n.d(t,"ud",function(){return _r.a}),n.d(t,"vd",function(){return Dr.a}),n.d(t,"wd",function(){return Fr.a}),n.d(t,"xd",function(){return Cn.a}),n.d(t,"yd",function(){return Rr.a}),n.d(t,"zd",function(){return Mr.a}),n.d(t,"Ad",function(){return Xe.a}),n.d(t,"Bd",function(){return zr.a}),n.d(t,"Cd",function(){return Lr.a}),n.d(t,"Dd",function(){return _}),n.d(t,"Ed",function(){return Br.a}),n.d(t,"Fd",function(){return D}),n.d(t,"Gd",function(){return F}),n.d(t,"Hd",function(){return R}),n.d(t,"Id",function(){return Wt.a}),n.d(t,"Jd",function(){return Wr.a}),n.d(t,"Ld",function(){return Vr.a}),n.d(t,"Md",function(){return Ur.a}),n.d(t,"Nd",function(){return Gr.a}),n.d(t,"Od",function(){return Hr.a}),n.d(t,"Pd",function(){return M}),n.d(t,"Qd",function(){return qr.a}),n.d(t,"Rd",function(){return Kr.a}),n.d(t,"Sd",function(){return Xr.a}),n.d(t,"Td",function(){return Yr.a}),n.d(t,"y",function(){return Zr}),n.d(t,"Kd",function(){return Qr.a}),n.d(t,"lc",function(){return Jr.a}),n.d(t,"gc",function(){return ta}),n.d(t,"Vc",function(){return na.a}),n.d(t,"nd",function(){return ra.a}),n.d(t,"sb",function(){return aa.a}),n.d(t,"cb",function(){return sa}),n.d(t,"fb",function(){return W}),n.d(t,"S",function(){return V}),n.d(t,"yb",function(){return ia}),n.d(t,"qc",function(){return He.b}),n.d(t,"a",function(){return He.a}),n.d(t,"xb",function(){return Qa}),n.d(t,"Gb",function(){return Ja}),n.d(t,"Sb",function(){return es}),n.d(t,"od",function(){return Ya}),n.d(t,"qb",function(){return Ne}),n.d(t,"bd",function(){return Za}),n.d(t,"md",function(){return ts});var Ne={};n.r(Ne),n.d(Ne,"conv2d",function(){return pa}),n.d(Ne,"depthwiseConv2d",function(){return ba}),n.d(Ne,"matMul",function(){return ga});var je=n(43),Se=n(216),Te=n(217),Ce=n(13),Ee=n(218),$e=n(151),Ae=n(152),_e=n(153),De=n(154),Fe=n(219),Re=n(220),Me=n(221),ze=n(155),Le=n(222),Pe=n(116),Be=n(223),We=n(2),Ve=n(32),Ue=n(24),Ge=n(9),He=n(4),qe=n(71),Ke=n(28),Xe=n(145);const Ye=Object(He.b)({basicLSTMCell_:r});var Ze=n(91),Qe=n(84),Je=n(8);const et=Object(He.b)({batchNorm2d_:a}),tt=Object(He.b)({batchNorm3d_:s}),nt=Object(He.b)({batchNorm4d_:i});var rt=n(224),at=n(101),st=n(47),it=n(12),ot=n(225),ut=n(226),ct=n(70),lt=n(58);const dt=Object(He.b)({concat1d_:o}),ht=Object(He.b)({concat2d_:u}),pt=Object(He.b)({concat3d_:c}),ft=Object(He.b)({concat4d_:l});var mt=n(156),bt=n(65),gt=n(157),yt=n(227),xt=n(209);const vt=Object(He.b)({conv3dTranspose_:d});var wt=n(117),kt=n(158),Ot=n(118),It=n(228),Nt=n(159),jt=n(92),St=n(5),Tt=n(3);const Ct=Object(He.b)({diag_:h});var Et=n(160),$t=n(15),At=n(161),_t=n(162),Dt=n(229),Ft=n(119),Rt=n(93),Mt=n(230),zt=n(41),Lt=n(63),Pt=n(231),Bt=n(7),Wt=n(85);const Vt=Object(He.b)({eye_:p});var Ut=n(115),Gt=n(120),Ht=n(114),qt=n(94),Kt=n(50),Xt=n(66),Yt=n(121),Zt=n(232),Qt=n(233),Jt=n(234),en=n(122),tn=n(123),nn=n(67),rn=n(235),an=n(163),sn=n(75),on=n(164),un=n(236),cn=n(237),ln=n(124),dn=n(59),hn=n(95),pn=n(125),fn=n(166),mn=n(72),bn=n(126),gn=n(238),yn=n(239),xn=n(90),vn=n(88),wn=n(55),kn=n(6),On=n(105),In=n(127),Nn=n(167),jn=n(168),Sn=n(39),Tn=n(25),Cn=n(14);const En=Object(He.b)({moments_:m}),$n=Object(He.b)({multiRNNCell_:b});var An=n(240),_n=n(30),Dn=n(128),Fn=n(106),Rn=n(241);const Mn=Object(He.b)({outerProduct_:g});var zn=n(56);const Ln=Object(He.b)({pad1d_:y}),Pn=Object(He.b)({pad2d_:x}),Bn=Object(He.b)({pad3d_:v}),Wn=Object(He.b)({pad4d_:w});var Vn=n(169),Un=n(53),Gn=n(129),Hn=n(150),qn=n(170);const Kn=Object(He.b)({rand_:k});var Xn=n(102);const Yn=Object(He.b)({randomGamma_:O}),Zn=Object(He.b)({randomNormal_:I});var Qn=n(171),Jn=n(146),er=n(107),tr=n(242),nr=n(81),rr=n(130),ar=n(48);const sr=Object(He.b)({reverse1d_:N}),ir=Object(He.b)({reverse2d_:j}),or=Object(He.b)({reverse3d_:S}),ur=Object(He.b)({reverse4d_:T});var cr=n(243),lr=n(172),dr=n(16),hr=n(173),pr=n(174),fr=n(244),mr=n(245),br=n(175),gr=n(176);const yr=Object(He.b)({slice1d_:C}),xr=Object(He.b)({slice2d_:E}),vr=Object(He.b)({slice3d_:$}),wr=Object(He.b)({slice4d_:A});var kr=n(246),Or=n(165),Ir=n(96),Nr=n(131),jr=n(108),Sr=n(177),Tr=n(132),Cr=n(76),Er=n(37),$r=n(133),Ar=n(97),_r=n(60),Dr=n(82),Fr=n(247),Rr=n(19),Mr=n(248),zr=n(100),Lr=n(77),Pr=n(51),Br=n(178),Wr=n(179),Vr=n(249),Ur=n(180),Gr=n(134),Hr=n(83),qr=n(36),Kr=n(181),Xr=n(80),Yr=n(20);const Zr=z;var Qr=n(52),Jr=n(135),ea=n(23);const ta=Object(He.b)({movingAverage_:L});var na=n(250),ra=n(253),aa=n(251);const sa=Object(He.b)({dropout_:B}),ia=U;var oa=n(34),ua=n(17),ca=n(140),la=n(138),da=n(31),ha=n(44);const pa=Object(He.b)({fusedConv2d_:G});var fa=n(213),ma=n(212);const ba=Object(He.b)({fusedDepthwiseConv2d_:H}),ga=Object(He.b)({fusedMatMul_:q}),ya=Object(He.b)({hammingWindow_:K}),xa=Object(He.b)({hannWindow_:X}),va=Object(He.b)({frame_:Y}),wa=Object(He.b)({stft_:Z}),ka=Object(He.b)({cropAndResize_:Q}),Oa=Object(He.b)({flipLeftRight_:J}),Ia=Object(He.b)({rotateWithOffset_:ee}),Na=Object(He.b)({nonMaxSuppression_:ne});var ja=n(79);const Sa=re,Ta=Object(He.b)({nonMaxSuppressionWithScore_:ae}),Ca=se,Ea=Object(He.b)({nonMaxSuppressionPadded_:ie}),$a=oe;var Aa=n(211),_a=n(210);const Da=Object(He.b)({transform_:ue}),Fa=Object(He.b)({bandPart_:ce}),Ra=Object(He.b)({gramSchmidt_:le});var Ma=n(26);const za=Object(He.b)({qr_:de});var La=n(35);const Pa=Object(He.b)({computeWeightedLoss_:pe}),Ba=Object(He.b)({absoluteDifference_:fe}),Wa=Object(He.b)({cosineDistance_:me}),Va=Object(He.b)({hingeLoss_:be}),Ua=Object(He.b)({huberLoss_:ge}),Ga=Object(He.b)({logLoss_:ye}),Ha=Object(He.b)({meanSquaredError_:xe}),qa=Object(He.b)({sigmoidCrossEntropy_:we}),Ka=Object(He.b)({softmaxCrossEntropy_:Oe}),Xa=Object(He.b)({sparseReshape_:Ie}),Ya={fft:Nr.a,ifft:jr.a,rfft:Tr.a,irfft:Sr.a},Za={hammingWindow:ya,hannWindow:xa,frame:va,stft:wa},Qa={flipLeftRight:Oa,resizeNearestNeighbor:_a.a,resizeBilinear:Aa.a,rotateWithOffset:Ia,cropAndResize:ka,nonMaxSuppression:Na,nonMaxSuppressionAsync:Sa,nonMaxSuppressionWithScore:Ta,nonMaxSuppressionWithScoreAsync:Ca,nonMaxSuppressionPadded:Ea,nonMaxSuppressionPaddedAsync:$a,transform:Da},Ja={bandPart:Fa,gramSchmidt:Ra,qr:za},es={absoluteDifference:Ba,computeWeightedLoss:Pa,cosineDistance:Wa,hingeLoss:Va,huberLoss:Ua,logLoss:Ga,meanSquaredError:Ha,sigmoidCrossEntropy:qa,softmaxCrossEntropy:Ka},ts={sparseReshape:Xa}},function(e,t,n){"use strict";function r(e){const t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(e,...n)=>(a(t,n[0],n[1]),n.join("="))),t}function a(e,t,n){e[decodeURIComponent(t)]=decodeURIComponent(n||"")}function s(e,t){if(t=t.toLowerCase(),"true"===t||"false"===t)return"true"===t;if(`${+t}`===t)return+t;throw new Error(`Could not parse value flag value ${t} for flag ${e}.`)}function i(){return d}function o(e){d=e}n.d(t,"b",function(){return l}),n.d(t,"c",function(){return i}),n.d(t,"a",function(){return d}),n.d(t,"d",function(){return o});var u=n(8);const c="tfjsflags";class l{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=r,this.populateURLFlags()}setPlatform(e,t){null!=this.platform&&console.warn(`Platform ${this.platformName} has already been set. `+`Overwriting the platform with ${t}.`),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},null!=this.urlFlags[e]){const t=this.urlFlags[e];console.warn(`Setting feature override from URL ${e}: ${t}.`),this.set(e,t)}}async getAsync(e){return e in this.flags?this.flags[e]:(this.flags[e]=await this.evaluateFlag(e),this.flags[e])}get(e){if(e in this.flags)return this.flags[e];const t=this.evaluateFlag(e);if(Object(u.x)(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. `+"Please use getAsync() instead.");return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(null==this.flagRegistry[e])throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,null!=this.flagRegistry[e].setHook&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(null==this.flagRegistry[e])throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(void 0===this.global||void 0===this.global.location||void 0===this.global.location.search)return;const e=this.getQueryParams(this.global.location.search);if(c in e){const t=e[c].split(",");t.forEach(e=>{const[t,n]=e.split(":");this.urlFlags[t]=s(t,n)})}}}let d=null},function(e,t,n){"use strict";function r(e,t){if(e.dtype===t.dtype)return[e,t];const n=Object(l.c)(e.dtype,t.dtype);return[e.cast(n),t.cast(n)]}function a(e,t){Object(d.b)(e.dtype===t.dtype,()=>`The dtypes of the first(${e.dtype}) and`+` second(${t.dtype}) input must match`)}function s(e,t){return t.some(t=>t.id===e.id)}function i(e){const t=[],n=new Set;return o(e,t,n),t}function o(e,t,n){if(null==e)return;if(e instanceof c.a)return void t.push(e);if(!u(e))return;const r=e;for(const e in r){const a=r[e];n.has(a)||(n.add(a),o(a,t,n))}}function u(e){return Array.isArray(e)||"object"==typeof e}n.r(t),n.d(t,"makeTypesMatch",function(){return r}),n.d(t,"assertTypesMatch",function(){return a}),n.d(t,"isTensorInList",function(){return s}),n.d(t,"getTensorsInContainer",function(){return i});var c=n(6),l=n(89),d=n(8)},function(e,t,n){"use strict";function r(e,t,n=!1,r=!1){let u=Object(o.a)(e,"a","matMul"),c=Object(o.a)(t,"b","matMul");[u,c]=Object(i.makeTypesMatch)(u,c);const l={a:u,b:c},d={transposeA:n,transposeB:r};return a.a.runKernel(s.s,l,d)}n.d(t,"a",function(){return c});var a=n(5),s=n(3),i=n(23),o=n(2),u=n(4);const c=Object(u.b)({matMul_:r})},function(e,t,n){"use strict";function r(e){const t=Object(s.a)(e,"x","square"),n={};return a.a.runKernel("Square",{x:t},n)}n.d(t,"a",function(){return o});var a=n(5),s=n(2),i=n(4);const o=Object(i.b)({square_:r})},function(e,t,n){"use strict";function r(){Object(N.c)().set("PROD",!0)}function a(){Object(N.c)().set("DEBUG",!0)}function s(){Object(N.c)().set("DEPRECATION_WARNINGS_ENABLED",!1),console.warn("TensorFlow.js deprecation warnings have been disabled.")}function i(e){Object(N.c)().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(e+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}function o(){I.a.disposeVariables()}function u(){return I.a}function c(){return I.a.memory()}function l(e){return I.a.profile(e)}function d(e,t){return I.a.tidy(e,t)}function h(e){const t=Object(S.getTensorsInContainer)(e);t.forEach(e=>e.dispose())}function p(e){return I.a.keep(e)}function f(e){return I.a.time(e)}function m(e){return I.a.setBackend(e)}function b(){return I.a.ready()}function g(){return I.a.backendName}function y(e){I.a.removeBackend(e)}function x(e){return I.a.findBackend(e)}function v(e){return I.a.findBackendFactory(e)}function w(e,t,n=1){return I.a.registerBackend(e,t,n)}function k(){return I.a.backend}function O(e,t){Object(N.c)().setPlatform(e,t)}n.d(t,"g",function(){return r}),n.d(t,"f",function(){return a}),n.d(t,"c",function(){return s}),n.d(t,"b",function(){return i}),n.d(t,"e",function(){return o}),n.d(t,"h",function(){return u}),n.d(t,"m",function(){return c}),n.d(t,"n",function(){return l}),n.d(t,"t",function(){return d}),n.d(t,"d",function(){return h}),n.d(t,"l",function(){return p}),n.d(t,"u",function(){return f}),n.d(t,"r",function(){return m}),n.d(t,"o",function(){return b}),n.d(t,"k",function(){return g}),n.d(t,"q",function(){return y}),n.d(t,"i",function(){return x}),n.d(t,"j",function(){return v}),n.d(t,"p",function(){return w}),n.d(t,"a",function(){return k}),n.d(t,"s",function(){return O});var I=n(5),N=n(22),j=n(6),S=n(23);Object(j.e)(i)},function(e,t,n){"use strict";function r(e){return(t,n,r,s,i)=>{const o=a.backend_util.assertAndGetBroadcastShape(t,n),u=o.length,c=a.util.computeStrides(o),l=a.util.sizeFromShape(o),d=a.util.getTypedArrayFromDType(i,l),h=t.length,p=n.length,f=a.util.computeStrides(t),m=a.util.computeStrides(n),b=a.backend_util.getBroadcastDims(t,o),g=a.backend_util.getBroadcastDims(n,o);if(b.length+g.length===0)for(let t=0;t<d.length;++t)d[t]=e(r[t%r.length],s[t%s.length]);else for(let t=0;t<d.length;++t){const n=a.util.indexToLoc(t,u,c),i=n.slice(-h);b.forEach(e=>i[e]=0);const o=a.util.locToIndex(i,h,f),l=n.slice(-p);g.forEach(e=>l[e]=0);const y=a.util.locToIndex(l,p,m);d[t]=e(r[o],s[y])}return[d,o]}}n.d(t,"a",function(){return r});var a=n(0)},function(e,t,n){"use strict";function r(e,t,n){const r=Object(i.a)(e,"x","slice","string_or_numeric");if(0===r.rank)throw new Error("Slicing scalar is not possible");const o={x:r},u={begin:t,size:n};return a.a.runKernel(s.Fc,o,u)}n.d(t,"a",function(){return u});var a=n(5),s=n(3),i=n(2),o=n(4);const u=Object(o.b)({slice_:r})},function(e,t,n){"use strict";function r(e,t,n,r){return null==n?({inputs:n,backend:a})=>{const{a:s,b:o}=n,u=a;Object(i.a)([s,o],e);const c=u.data.get(s.dataId).values,l=u.data.get(o.dataId).values,d=r||s.dtype,[h,p]=t(s.shape,o.shape,c,l,d);return u.makeTensorInfo(p,d,h)}:({inputs:e,backend:a})=>{const{a:s,b:i}=e,c=a;if("complex64"===s.dtype||"complex64"===i.dtype){const e=Object(o.a)({inputs:{x:s},backend:c,attrs:{dtype:"complex64"}}),t=c.data.get(e.dataId),r=t.complexTensorInfos.real,a=t.complexTensorInfos.imag,l=c.data.get(r.dataId).values,d=c.data.get(a.dataId).values,h=Object(o.a)({inputs:{x:i},backend:c,attrs:{dtype:"complex64"}}),p=c.data.get(h.dataId),f=p.complexTensorInfos.real,m=p.complexTensorInfos.imag,b=c.data.get(f.dataId).values,g=c.data.get(m.dataId).values,[y,x,v]=n(s.shape,i.shape,l,d,b,g),w=c.makeTensorInfo(v,"float32",y),k=c.makeTensorInfo(v,"float32",x),O=Object(u.a)({inputs:{real:w,imag:k},backend:c});return c.disposeIntermediateTensorInfo(e),c.disposeIntermediateTensorInfo(h),c.disposeIntermediateTensorInfo(w),c.disposeIntermediateTensorInfo(k),O}{const e=c.data.get(s.dataId).values,n=c.data.get(i.dataId).values,a=r||s.dtype,[o,u]=t(s.shape,i.shape,e,n,a);return c.makeTensorInfo(u,a,o)}}}function a(e){return(t,n,r,a,i,o)=>{const u=s.backend_util.assertAndGetBroadcastShape(t,n),c=s.util.sizeFromShape(u),l=u.length,d=s.util.computeStrides(u),h=s.util.getTypedArrayFromDType("float32",c),p=s.util.getTypedArrayFromDType("float32",c),f=s.backend_util.getBroadcastDims(t,u),m=s.backend_util.getBroadcastDims(n,u),b=s.backend_util.mergeRealAndImagArrays(r,a),g=s.backend_util.mergeRealAndImagArrays(i,o),y=t.length,x=s.util.computeStrides(t),v=n.length,w=s.util.computeStrides(n);if(f.length+m.length===0)for(let t=0;t<h.length;t++){const n=t%b.length,r=t%g.length,a=e(b[2*n],b[2*n+1],g[2*r],g[2*r+1]);h[t]=a.real,p[t]=a.imag}else for(let t=0;t<h.length;t++){const n=s.util.indexToLoc(t,l,d),r=n.slice(-y);f.forEach(e=>r[e]=0);const a=s.util.locToIndex(r,y,x),i=n.slice(-v);m.forEach(e=>i[e]=0);const o=s.util.locToIndex(i,v,w),u=e(b[2*a],b[2*a+1],g[2*o],g[2*o+1]);h[t]=u.real,p[t]=u.imag}return[h,p,u]}}n.d(t,"a",function(){return r}),n.d(t,"b",function(){return a});var s=n(0),i=n(11),o=n(78),u=n(38)},function(e,t,n){"use strict";function r(e){const t=Object(i.a)(e,"x","neg"),n={x:t};return a.a.runKernel(s.Wb,n)}n.d(t,"a",function(){return u});var a=n(5),s=n(3),i=n(2),o=n(4);const u=Object(o.b)({neg_:r})},function(e,t,n){"use strict";function r(e,t,n,r,a="NHWC",s){const o=e[3],u=[...t,o],c=x(a);return i(e,u,n,s,r,null,null,c)}function a(e,t,n,r,a,s,o="channelsLast"){const[u,c]=d(t);let l;if("channelsLast"===o)l=[u,c,e[3],e[3]];else{if("channelsFirst"!==o)throw new Error(`Unknown dataFormat ${o}`);l=[u,c,e[1],e[1]]}return i(e,l,n,r,a,s,!1,o)}function s(e,t,n,r,a,s,i="NDHWC"){const[u,c,l]=h(t);let d,p;if("NDHWC"===i)p="channelsLast",d=[u,c,l,e[4],e[4]];else{if("NCDHW"!==i)throw new Error(`Unknown dataFormat ${i}`);p="channelsFirst",d=[u,c,l,e[1],e[1]]}return o(e,d,n,r,a,!1,p,s)}function i(e,t,n,r,a,s,i=!1,o="channelsLast"){let[u,c,l,h]=[-1,-1,-1,-1];if("channelsLast"===o)[u,c,l,h]=e;else{if("channelsFirst"!==o)throw new Error(`Unknown dataFormat ${o}`);[u,h,c,l]=e}const[m,b,,g]=t,[y,x]=d(n),[v,w]=d(r),k=p(m,v),O=p(b,w),{padInfo:I,outHeight:N,outWidth:j}=f(a,c,l,y,x,k,O,s,o),S=i?g*h:g;let T;return"channelsFirst"===o?T=[u,S,N,j]:"channelsLast"===o&&(T=[u,N,j,S]),{batchSize:u,dataFormat:o,inHeight:c,inWidth:l,inChannels:h,outHeight:N,outWidth:j,outChannels:S,padInfo:I,strideHeight:y,strideWidth:x,filterHeight:m,filterWidth:b,effectiveFilterHeight:k,effectiveFilterWidth:O,dilationHeight:v,dilationWidth:w,inShape:e,outShape:T,filterShape:t}}function o(e,t,n,r,a,s=!1,i="channelsLast",o){let[u,c,l,d,f]=[-1,-1,-1,-1,-1];if("channelsLast"===i)[u,c,l,d,f]=e;else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);[u,f,c,l,d]=e}const[b,g,y,,x]=t,[v,w,k]=h(n),[O,I,N]=h(r),j=p(b,O),S=p(g,I),T=p(y,N),{padInfo:C,outDepth:E,outHeight:$,outWidth:A}=m(a,c,l,d,v,w,k,j,S,T,o),_=s?x*f:x;let D;return"channelsFirst"===i?D=[u,_,E,$,A]:"channelsLast"===i&&(D=[u,E,$,A,_]),{batchSize:u,dataFormat:i,inDepth:c,inHeight:l,inWidth:d,inChannels:f,outDepth:E,outHeight:$,outWidth:A,outChannels:_,padInfo:C,strideDepth:v,strideHeight:w,strideWidth:k,filterDepth:b,filterHeight:g,filterWidth:y,effectiveFilterDepth:j,effectiveFilterHeight:S,effectiveFilterWidth:T,dilationDepth:O,dilationHeight:I,dilationWidth:N,inShape:e,outShape:D,filterShape:t}}function u(e,t,n,r,a){null==r&&(r=l(e,t,n));const s=e[0],i=e[1],o=b((s-t+2*r)/n+1,a),u=b((i-t+2*r)/n+1,a);return[o,u]}function c(e,t,n,r,a,s){null==a&&(a=l(e,t,r));const i=e[0],o=e[1],u=e[2],c=b((i-t+2*a)/r+1,s),d=b((o-t+2*a)/r+1,s),h=b((u-t+2*a)/r+1,s);return[c,d,h,n]}function l(e,t,n,r=1){const a=p(t,r);return Math.floor((e[0]*(n-1)-n+a)/2)}function d(e){return"number"==typeof e?[e,e,e]:2===e.length?[e[0],e[1],1]:e}function h(e){return"number"==typeof e?[e,e,e]:e}function p(e,t){return t<=1?e:e+(e-1)*(t-1)}function f(e,t,n,r,a,s,i,o,c){let l,d,h;if("number"==typeof e){const a=0===e?"VALID":"NUMBER";l={top:e,bottom:e,left:e,right:e,type:a};const i=u([t,n],s,r,e,o);d=i[0],h=i[1]}else if("same"===e){d=Math.ceil(t/r),h=Math.ceil(n/a);const e=Math.max(0,(d-1)*r+s-t),o=Math.max(0,(h-1)*a+i-n),u=Math.floor(e/2),c=e-u,p=Math.floor(o/2),f=o-p;l={top:u,bottom:c,left:p,right:f,type:"SAME"}}else if("valid"===e)l={top:0,bottom:0,left:0,right:0,type:"VALID"},d=Math.ceil((t-s+1)/r),h=Math.ceil((n-i+1)/a);else{if("object"!=typeof e)throw Error(`Unknown padding parameter: ${e}`);{const u="channelsLast"===c?e[1][0]:e[2][0],p="channelsLast"===c?e[1][1]:e[2][1],f="channelsLast"===c?e[2][0]:e[3][0],m="channelsLast"===c?e[2][1]:e[3][1],g=0===u&&0===p&&0===f&&0===m?"VALID":"EXPLICIT";l={top:u,bottom:p,left:f,right:m,type:g},d=b((t-s+u+p)/r+1,o),h=b((n-i+f+m)/a+1,o)}}return{padInfo:l,outHeight:d,outWidth:h}}function m(e,t,n,r,a,s,i,o,u,l,d){let h,p,f,m;if("number"==typeof e){const s=0===e?"VALID":"NUMBER";h={top:e,bottom:e,left:e,right:e,front:e,back:e,type:s};const i=c([t,n,r,1],o,1,a,e,d);p=i[0],f=i[1],m=i[2]}else if("same"===e){p=Math.ceil(t/a),f=Math.ceil(n/s),m=Math.ceil(r/i);const e=(p-1)*a+o-t,c=(f-1)*s+u-n,d=(m-1)*i+l-r,b=Math.floor(e/2),g=e-b,y=Math.floor(c/2),x=c-y,v=Math.floor(d/2),w=d-v;h={top:y,bottom:x,left:v,right:w,front:b,back:g,type:"SAME"}}else{if("valid"!==e)throw Error(`Unknown padding parameter: ${e}`);h={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},p=Math.ceil((t-o+1)/a),f=Math.ceil((n-u+1)/s),m=Math.ceil((r-l+1)/i)}return{padInfo:h,outDepth:p,outHeight:f,outWidth:m}}function b(e,t){if(!t)return Math.trunc(e);switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error(`Unknown roundingMode ${t}`)}}function g(e){const[t,n,r]=d(e);return 1===t&&1===n&&1===r}function y(e,t){return g(e)||g(t)}function x(e){if("NHWC"===e)return"channelsLast";if("NCHW"===e)return"channelsFirst";throw new Error(`Unknown dataFormat ${e}`)}n.d(t,"d",function(){return r}),n.d(t,"e",function(){return a}),n.d(t,"f",function(){return s}),n.d(t,"a",function(){return i}),n.d(t,"b",function(){return o}),n.d(t,"c",function(){return l}),n.d(t,"i",function(){return g}),n.d(t,"h",function(){return y}),n.d(t,"g",function(){return x})},function(e,t,n){"use strict";function r(e,t=0){Object(o.b)(e.length>=1,()=>"Pass at least one tensor to concat");const n=Object(i.b)(e,"tensors","concat","string_or_numeric");if("complex64"===n[0].dtype&&n.forEach(e=>{if("complex64"!==e.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${e.dtype}. `)}),1===n.length)return Object(u.a)(n[0]);const r=n,c={axis:t};return a.a.runKernel(s.B,r,c)}n.d(t,"a",function(){return l});var a=n(5),s=n(3),i=n(2),o=n(8),u=n(70),c=n(4);const l=Object(c.b)({concat_:r})},function(e,t,n){"use strict";function r(e){const{inputs:t,attrs:n,backend:r}=e,{x:a}=t,{perm:o}=n;Object(s.a)(a,"transpose");const u=a.shape.length,c=new Array(u);for(let e=0;e<c.length;e++)c[e]=a.shape[o[e]];const l=r.data.get(a.dataId).values,d=Object(i.a)(l,a.shape,a.dtype,o,c),h=r.write(d,c,a.dtype);return{dataId:h,shape:c,dtype:a.dtype}}n.d(t,"a",function(){return r}),n.d(t,"b",function(){return o});var a=n(0),s=n(11),i=n(137);const o={kernelName:a.Transpose,backendName:"cpu",kernelFunc:r}},function(e,t,n){"use strict";function r(e){return p.b(p.u(e),()=>"The f passed in grad(f) must be a function"),(t,n)=>{const r=Object(h.a)(t,"x","tf.grad","string_or_numeric"),a=null!=n?Object(h.a)(n,"dy","tf.grad"):null;return l.a.tidy(()=>{const{value:t,grads:n}=l.a.gradients(()=>e(r),[r],a);return null!=a&&p.e(t.shape,a.shape,"The shape of dy passed in grad(f)(x, dy) must match the shape returned by f(x)"),c(n),n[0]})}}function a(e){return p.b(p.u(e),()=>"The f passed in grads(f) must be a function"),(t,n)=>{p.b(Array.isArray(t),()=>"The args passed in grads(f)(args) must be an array of `Tensor`s or `TensorLike`s");const r=Object(h.b)(t,"args","tf.grads","string_or_numeric"),a=null!=n?Object(h.a)(n,"dy","tf.grads"):null;return l.a.tidy(()=>{const{value:t,grads:n}=l.a.gradients(()=>e(...r),r,a);return null!=a&&p.e(t.shape,a.shape,"The shape of dy passed in grads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),c(n),n})}}function s(e){return p.b(p.u(e),()=>"The f passed in valueAndGrad(f) must be a function"),(t,n)=>{p.b(t instanceof d.a,()=>"The x passed in valueAndGrad(f)(x) must be a tensor"),p.b(null==n||n instanceof d.a,()=>"The dy passed in valueAndGrad(f)(x, dy) must be a tensor");const{grads:r,value:a}=l.a.gradients(()=>e(t),[t],n);return c(r),{grad:r[0],value:a}}}function i(e){return p.b(p.u(e),()=>"The f passed in valueAndGrads(f) must be a function"),(t,n)=>{
p.b(Array.isArray(t)&&t.every(e=>e instanceof d.a),()=>"The args passed in valueAndGrads(f)(args) must be array of tensors"),p.b(null==n||n instanceof d.a,()=>"The dy passed in valueAndGrads(f)(args, dy) must be a tensor");const r=l.a.gradients(()=>e(...t),t,n);return null!=n&&p.e(r.value.shape,n.shape,"The shape of dy passed in valueAndGrads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),c(r.grads),r}}function o(e,t){p.b(p.u(e),()=>"The f passed in variableGrads(f) must be a function"),p.b(null==t||Array.isArray(t)&&t.every(e=>e instanceof d.c),()=>"The varList passed in variableGrads(f, varList) must be an array of variables");const n=null!=t;if(!n){t=[];for(const e in l.a.registeredVariables)t.push(l.a.registeredVariables[e])}const r=n?t.filter(e=>!e.trainable):null,a=t.length;t=t.filter(e=>e.trainable),p.b(t.length>0,()=>"variableGrads() expects at least one of the input variables to "+`be trainable, but none of the ${a} variables is `+"trainable.");const s=!0,{value:i,grads:o}=l.a.gradients(e,t,null,s);p.b(o.some(e=>null!=e),()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."),p.b(0===i.rank,()=>"The f passed in variableGrads(f) must return a scalar, but it "+`returned a rank-${i.rank} tensor`);const u={};return t.forEach((e,t)=>{null!=o[t]&&(u[e.name]=o[t])}),null!=r&&r.forEach(e=>u[e.name]=null),{value:i,grads:u}}function u(e){return l.a.customGrad(e)}function c(e){const t=e.filter(e=>null==e).length;if(t>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that\n    the f you passed encloses all operations that lead from x to y.")}n.d(t,"a",function(){return u}),n.d(t,"f",function(){return o}),n.d(t,"d",function(){return s}),n.d(t,"e",function(){return i}),n.d(t,"b",function(){return r}),n.d(t,"c",function(){return a});var l=n(5),d=n(6),h=n(2),p=n(8)},function(e,t,n){"use strict";var r;n.d(t,"a",function(){return r}),function(e){e[e.NONE=0]="NONE",e[e.MEAN=1]="MEAN",e[e.SUM=2]="SUM",e[e.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"}(r||(r={}))},function(e,t,n){"use strict";function r(e,t,n){const r=Object(i.a)(t,"a","where"),c=Object(i.a)(n,"b","where"),l=Object(i.a)(e,"condition","where","bool"),d=Object(u.a)(Object(u.a)(l.shape,r.shape),c.shape),h=Object(o.a)(l,d),p=Object(o.a)(r,d),f=Object(o.a)(c,d),m={condition:h,t:p,e:f};return a.a.runKernel(s.zc,m)}n.d(t,"a",function(){return l});var a=n(5),s=n(3),i=n(2),o=n(101),u=n(17),c=n(4);const l=Object(c.b)({where_:r})},function(e,t,n){"use strict";function r(e){const t=Object(i.a)(e,"x","sqrt"),n={x:t};return a.a.runKernel(s.Mc,n)}n.d(t,"a",function(){return u});var a=n(5),s=n(3),i=n(2),o=n(4);const u=Object(o.b)({sqrt_:r})},function(e,t,n){"use strict";function r(e){const{inputs:t,backend:n}=e,{real:r,imag:a}=t,s=n.data.get(r.dataId).values,i=n.data.get(a.dataId).values,o=n.makeTensorInfo(r.shape,"complex64"),u=n.data.get(o.dataId);return u.complexTensorInfos={real:n.makeTensorInfo(r.shape,"float32",s),imag:n.makeTensorInfo(a.shape,"float32",i)},o}n.d(t,"a",function(){return r}),n.d(t,"b",function(){return s});var a=n(0);const s={kernelName:a.Complex,backendName:"cpu",kernelFunc:r}},function(e,t,n){"use strict";function r(e,t){for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0}function a(e,t,n){const r=e.length+t.length,a=[];let s=0,i=0;for(let o=0;o<r;o++)-1===n.indexOf(o)?a.push(e[s++]):a.push(t[i++]);return a}function s(e,t){const n=[],r=e.length;for(let a=0;a<r;a++)-1===t.indexOf(a)&&n.push(e[a]);const a=t.map(t=>e[t]);return[n,a]}function i(e,t){const n=t.map(e=>1);return a(e,n,t)}function o(e,t,n){d.b(r(t,n),()=>`${e} supports only inner-most axes for now. `+`Got axes ${t} and rank-${n} input.`)}function u(e,t){if(r(e,t))return null;const n=[];for(let r=0;r<t;++r)-1===e.indexOf(r)&&n.push(r);return e.forEach(e=>n.push(e)),n}function c(e){return e.map((e,t)=>[t,e]).sort((e,t)=>e[1]-t[1]).map(e=>e[0])}function l(e,t){const n=[];for(let r=t-e;r<t;++r)n.push(r);return n}n.d(t,"b",function(){return r}),n.d(t,"c",function(){return a}),n.d(t,"d",function(){return s}),n.d(t,"e",function(){return i}),n.d(t,"a",function(){return o}),n.d(t,"f",function(){return u}),n.d(t,"h",function(){return c}),n.d(t,"g",function(){return l});var d=n(8)},function(e,t,n){"use strict";(function(e){async function r(e,t){const n=[],r=[],a=Array.isArray(e)?e.map(e=>e.name):Object.keys(e);for(let s=0;s<a.length;++s){const i=a[s],o=Array.isArray(e)?e[s].tensor:e[i];if("float32"!==o.dtype&&"int32"!==o.dtype&&"bool"!==o.dtype&&"string"!==o.dtype&&"complex64"!==o.dtype)throw new Error(`Unsupported dtype in weight '${i}': ${o.dtype}`);const u={name:i,shape:o.shape,dtype:o.dtype};if("string"===o.dtype){const e=new Promise(async e=>{const t=await o.bytes(),n=t.reduce((e,t)=>e+t.length,0)+v*t.length,r=new Uint8Array(n);let a=0;for(let e=0;e<t.length;e++){const n=t[e],s=new Uint8Array(new Uint32Array([n.length]).buffer);r.set(s,a),a+=v,r.set(n,a),a+=n.length}e(r)});r.push(e)}else r.push(o.data());null!=t&&(u.group=t),n.push(u)}const i=await Promise.all(r);return{data:s(i),specs:n}}function a(e,t){const n={};let r,a=0;for(const s of t){const t=s.name,i=s.dtype,o=s.shape,u=Object(y.O)(o);let c;if("quantization"in s){const n=s.quantization;if("uint8"===n.dtype||"uint16"===n.dtype){if(!("min"in n&&"scale"in n))throw new Error(`Weight ${s.name} with quantization ${n.dtype} `+"doesn't have corresponding metadata min and scale.")}else{if("float16"!==n.dtype)throw new Error(`Weight ${s.name} has unknown `+`quantization dtype ${n.dtype}. `+"Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.");if("float32"!==i)throw new Error(`Weight ${s.name} is quantized with ${n.dtype} `+`which only supports weights of type float32 not ${i}.`)}const o=x.a[n.dtype],l=e.slice(a,a+u*o),d="uint8"===n.dtype?new Uint8Array(l):new Uint16Array(l);if("float32"===i)if("uint8"===n.dtype||"uint16"===n.dtype){c=new Float32Array(d.length);for(let e=0;e<d.length;e++){const t=d[e];c[e]=t*n.scale+n.min}}else{if("float16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} `+"for weight type float32.");void 0===r&&(r=m()),c=r(d)}else{if("int32"!==i)throw new Error(`Unsupported dtype in weight '${t}': ${i}`);if("uint8"!==n.dtype&&"uint16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} `+"for weight type int32.");c=new Int32Array(d.length);for(let e=0;e<d.length;e++){const t=d[e];c[e]=Math.round(t*n.scale+n.min)}}a+=u*o}else if("string"===i){const t=Object(y.O)(s.shape);c=[];for(let n=0;n<t;n++){const t=new Uint32Array(e.slice(a,a+v))[0];a+=v;const n=new Uint8Array(e.slice(a,a+t));c.push(n),a+=t}}else{const r=x.a[i],s=e.slice(a,a+u*r);if("float32"===i)c=new Float32Array(s);else if("int32"===i)c=new Int32Array(s);else if("bool"===i)c=new Uint8Array(s);else{if("complex64"!==i)throw new Error(`Unsupported dtype in weight '${t}': ${i}`);{c=new Float32Array(s);const e=new Float32Array(c.length/2),r=new Float32Array(c.length/2);for(let t=0;t<e.length;t++)e[t]=c[2*t],r[t]=c[2*t+1];const a=Object(g.a)(e,o,"float32"),i=Object(g.a)(r,o,"float32");n[t]=Object(b.a)(a,i),a.dispose(),i.dispose()}}a+=u*r}"complex64"!==i&&(n[t]=Object(g.a)(c,o,i))}return n}function s(e){if(null===e)throw new Error(`Invalid input value: ${JSON.stringify(e)}`);let t=0;const n=[];e.forEach(e=>{if(t+=e.byteLength,n.push(e.byteLength===e.buffer.byteLength?e:new e.constructor(e)),!(e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${e.constructor.name}`)});const r=new Uint8Array(t);let a=0;return n.forEach(e=>{r.set(new Uint8Array(e.buffer),a),a+=e.byteLength}),r.buffer}function i(t){return w?e.byteLength(t):new Blob([t]).size}function o(t){if(w)return e.from(t).toString("base64");const n=new Uint8Array(t);let r="";for(let e=0,t=n.length;e<t;e++)r+=String.fromCharCode(n[e]);return btoa(r)}function u(t){if(w){const n=e.from(t,"base64");return n.buffer.slice(n.byteOffset,n.byteOffset+n.byteLength)}const n=atob(t),r=new Uint8Array(n.length);for(let e=0;e<n.length;++e)r.set([n.charCodeAt(e)],e);return r.buffer}function c(e){if(1===e.length)return e[0];let t=0;e.forEach(e=>{t+=e.byteLength});const n=new Uint8Array(t);let r=0;return e.forEach(e=>{n.set(new Uint8Array(e),r),r+=e.byteLength}),n.buffer}function l(e){const t="/";for(e=e.trim();e.endsWith(t);)e=e.slice(0,e.length-1);const n=e.split(t);return n[n.length-1]}function d(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==e.modelTopology?0:i(JSON.stringify(e.modelTopology)),weightSpecsBytes:null==e.weightSpecs?0:i(JSON.stringify(e.weightSpecs)),weightDataBytes:null==e.weightData?0:e.weightData.byteLength}}function h(){const e=e=>{let t=e<<13,n=0;for(;0==(8388608&t);)n-=8388608,t<<=1;return t&=-8388609,n+=947912704,t|n},t=new Uint32Array(2048);t[0]=0;for(let n=1;n<1024;n++)t[n]=e(n);for(let e=1024;e<2048;e++)t[e]=939524096+(e-1024<<13);return t}function p(){const e=new Uint32Array(64);e[0]=0,e[31]=1199570944,e[32]=2147483648,e[63]=3347054592;for(let t=1;t<31;t++)e[t]=t<<23;for(let t=33;t<63;t++)e[t]=2147483648+(t-32<<23);return e}function f(){const e=new Uint32Array(64);for(let t=0;t<64;t++)e[t]=1024;return e[0]=e[32]=0,e}function m(){const e=h(),t=p(),n=f();return r=>{const a=new ArrayBuffer(4*r.length),s=new Uint32Array(a);for(let a=0;a<r.length;a++){const i=r[a],o=e[n[i>>10]+(1023&i)]+t[i>>10];s[a]=o}return new Float32Array(a)}}n.d(t,"f",function(){return r}),n.d(t,"e",function(){return a}),n.d(t,"a",function(){return o}),n.d(t,"b",function(){return u}),n.d(t,"d",function(){return c}),n.d(t,"c",function(){return l}),n.d(t,"g",function(){return d});var b=n(58),g=n(100),y=n(8),x=n(148);const v=4,w=void 0!==e&&("undefined"==typeof Blob||"undefined"==typeof atob||"undefined"==typeof btoa)}).call(this,n(215).Buffer)},function(e,t,n){"use strict";function r(e){const t=Object(i.a)(e,"x","exp"),n={x:t};return a.a.runKernel(s.ab,n)}n.d(t,"a",function(){return u});var a=n(5),s=n(3),i=n(2),o=n(4);const u=Object(o.b)({exp_:r})},function(e,t,n){"use strict";function r(e){const{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}n.d(t,"a",function(){return r}),n.d(t,"b",function(){return s});var a=n(0);const s={kernelName:a.Identity,backendName:"cpu",kernelFunc:r}},function(e,t,n){"use strict";function r(e){const t=Object(i.a)(e,"x","abs");if("complex64"===t.dtype){const e={x:t};return a.a.runKernel(s.A,e)}{const e={x:t};return a.a.runKernel(s.a,e)}}n.d(t,"a",function(){return u});var a=n(5),s=n(3),i=n(2),o=n(4);const u=Object(o.b)({abs_:r})},function(e,t,n){"use strict";function r(e,t,n){if(null==n||"linear"===n)return e;if("relu"===n)return Object(c.a)(e,Object(m.a)(t));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function a(e,t){let n=t;const r=i.c(e.shape,t.shape);return r.length>0&&(n=Object(b.a)(n,r)),Object(p.a)(n,e.shape)}function s(e,t,n,r){if("linear"===t)return e;if("relu"===t)return Object(d.a)(e);if("elu"===t)return Object(o.a)(e);if("relu6"===t)return Object(h.a)(e);if("prelu"===t)return Object(l.a)(e,n);if("leakyrelu"===t)return Object(u.a)(e,r);if("sigmoid"===t)return Object(f.a)(e);throw new Error(`Unknown fused activation ${t}.`)}n.d(t,"c",function(){return r}),n.d(t,"b",function(){return a}),n.d(t,"a",function(){return s}),n.d(t,"d",function(){return g});var i=n(17),o=n(119),u=n(122),c=n(9),l=n(129),d=n(81),h=n(130),p=n(7),f=n(71),m=n(82),b=n(19);const g=(e,t)=>{const n=e>0;return!n||"linear"===t}},function(e,t,n){"use strict";function r(e){return Object(h.b)(e,a)}function a(e){return e instanceof l.Tensor?{value:e.clone(),recurse:!1}:Object(h.e)(e)?{value:null,recurse:!0}:{value:e,recurse:!1}}function s(e){return new b(e)}function i(e){return new g(e)}function o(e,t){return new T(e,t)}function u(e,t=c.FAIL){return new C(e,t)}n.d(t,"f",function(){return s}),n.d(t,"e",function(){return i}),n.d(t,"d",function(){return o}),n.d(t,"g",function(){return u}),n.d(t,"a",function(){return m}),n.d(t,"b",function(){return j}),n.d(t,"c",function(){return c});var c,l=n(0),d=n(86),h=n(74);class p{constructor(e){if(this.capacity=e,this.begin=0,this.end=0,null==e)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(e<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(e),this.doubledCapacity=2*e}wrap(e){for(;e<0;)e+=this.doubledCapacity;return e%this.doubledCapacity}get(e){if(e<0)throw new RangeError("Can't get item at a negative index.");return this.data[e%this.capacity]}set(e,t){if(e<0)throw new RangeError("Can't set item at a negative index.");this.data[e%this.capacity]=t}length(){let e=this.end-this.begin;return e<0&&(e=this.doubledCapacity+e),e}isFull(){return this.length()===this.capacity}isEmpty(){return 0===this.length()}push(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,e),this.end=this.wrap(this.end+1)}pushAll(e){for(const t of e)this.push(t)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);const e=this.get(this.end);return this.set(this.end,void 0),e}unshift(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,e)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const e=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),e}shuffleExcise(e){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const t=this.wrap(this.begin+e),n=this.get(t);return this.set(t,this.pop()),n}}class f extends p{constructor(){super(f.INITIAL_CAPACITY)}isFull(){return!1}push(e){super.isFull()&&this.expand(),super.push(e)}unshift(e){super.isFull()&&this.expand(),super.unshift(e)}expand(){const e=2*this.capacity,t=new Array(e),n=this.length();for(let e=0;e<n;e++)t[e]=this.get(this.wrap(this.begin+e));this.data=t,this.capacity=e,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}}f.INITIAL_CAPACITY=32;class m{async toArray(){const e=[];let t=await this.next();for(;!t.done;)e.push(t.value),t=await this.next();return e}async toArrayForTest(){const e=this.prefetch(100),t=[];let n=await e.next();for(;!n.done;)t.push(n.value),n=await e.next();return t}async resolveFully(){let e=await this.next();for(;!e.done;)e=await this.next()}async resolveWhile(e){let t=await this.next(),n=e(t.value);for(;!t.done&&n;)t=await this.next(),n=e(t.value)}handleErrors(e){return new I(this,e)}filter(e){return new k(this,e)}map(e){return new O(this,e)}mapAsync(e){return new N(this,e)}serialMapAsync(e){return new N(this,e).serial()}flatmap(e){return new S(this,e)}async forEachAsync(e){return this.map(e).resolveFully()}async serialForEach(e){return this.serialMapAsync(e).resolveWhile(e=>!0===e)}rowMajorBatch(e,t=!0){return new w(this,e,t)}columnMajorBatch(e,t=!0,n=h.f){const r=this.rowMajorBatch(e,t);return r.map(e=>Object(h.d)(e,n))}concatenate(e,t){return new T(s([this,e]),t)}take(e){return e<0||null==e?this:new v(this,e)}skip(e){return e<0||null==e?this:new x(this,e)}prefetch(e){return new E(this,e)}shuffle(e,t){return new $(this,e,t)}serial(){return new y(this)}}class b extends m{constructor(e){super(),this.items=e,this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};const e=this.items[this.trav];return this.trav++,{value:r(e),done:!1}}}class g extends m{constructor(e){super(),this.nextFn=e}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(e){throw e.message=`Error thrown while iterating through a dataset: ${e.message}`,e}}}class y extends m{constructor(e){super(),this.upstream=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Serial`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){return this.upstream.next()}}class x extends m{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Skip`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){const e=await this.upstream.next();if(e.done)return e;l.dispose(e.value)}return this.upstream.next()}}class v extends m{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0}summary(){return`${this.upstream.summary()} -> Take`}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}}class w extends m{constructor(e,t,n=!0){super(),this.upstream=e,this.batchSize=t,this.enableSmallLastBatch=n,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> RowMajorBatch`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){const e=[];for(;e.length<this.batchSize;){const t=await this.upstream.next();if(t.done)return this.enableSmallLastBatch&&e.length>0?{value:e,done:!1}:{value:null,done:!0};e.push(t.value)}return{value:e,done:!1}}}class k extends m{constructor(e,t){super(),this.upstream=e,this.predicate=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Filter`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;;){const e=await this.upstream.next();if(e.done||this.predicate(e.value))return e;l.dispose(e.value)}}}class O extends m{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Map`}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=l.tensor_util.getTensorsInContainer(e.value),n=this.transform(e.value),r=l.tensor_util.getTensorsInContainer(n);for(const e of t)l.tensor_util.isTensorInList(e,r)||e.dispose();return{value:n,done:!1}}}class I extends m{constructor(e,t){super(),this.upstream=e,this.handler=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> handleErrors`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(e){if(!this.handler(e))return{value:null,done:!0}}}}class N extends m{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> AsyncMap`}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=l.tensor_util.getTensorsInContainer(e.value),n=await this.transform(e.value),r=l.tensor_util.getTensorsInContainer(n);for(const e of t)l.tensor_util.isTensorInList(e,r)||e.dispose();return{value:n,done:!1}}}class j extends m{constructor(){super(),this.outputQueue=new f,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;0===this.outputQueue.length();)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}}class S extends j{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Flatmap`}async pump(){const e=await this.upstream.next();if(e.done)return!1;const t=l.tensor_util.getTensorsInContainer(e.value),n=this.transform(e.value),r=l.tensor_util.getTensorsInContainer(n);this.outputQueue.pushAll(n);for(const e of t)l.tensor_util.isTensorInList(e,r)||e.dispose();return!0}}class T extends m{constructor(e,t){super(),this.baseErrorHandler=t,this.lastRead=null,this.iterator=null,this.moreIterators=e}summary(){const e="TODO: fill in upstream of chained summaries";return`${e} -> Chained`}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(e){if(await e,null==this.iterator){const e=await this.moreIterators.next();if(e.done)return{value:null,done:!0};this.iterator=e.value,null!=this.baseErrorHandler&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}const t=await this.iterator.next();return t.done?(this.iterator=null,this.readFromChain(e)):t}}(function(e){e[e.FAIL=0]="FAIL",e[e.SHORTEST=1]="SHORTEST",e[e.LONGEST=2]="LONGEST"})(c||(c={}));class C extends m{constructor(e,t=c.FAIL){super(),this.iterators=e,this.mismatchMode=t,this.count=0,this.currentPromise=null}summary(){const e="TODO: fill in upstream of zip summaries";return`{${e}} -> Zip`}async nextState(e){function t(e){if(e instanceof m){const t=e.next();return{value:t.then(e=>(n++,e.done&&r++,e.value)),recurse:!1}}return{value:null,recurse:!0}}await e;let n=0,r=0;const a=await Object(h.c)(this.iterators,t);if(n===r)return{value:null,done:!0};if(r>0)switch(this.mismatchMode){case c.FAIL:throw new Error("Zipped streams should have the same length. "+`Mismatched at element ${this.count}.`);case c.SHORTEST:return{value:null,done:!0};case c.LONGEST:}return this.count++,{value:a,done:!1}}async next(){return this.currentPromise=this.nextState(this.currentPromise),this.currentPromise}}class E extends m{constructor(e,t){super(),this.upstream=e,this.bufferSize=t,this.buffer=new p(t)}summary(){return`${this.upstream.summary()} -> Prefetch`}refill(){for(;!this.buffer.isFull();){const e=this.upstream.next();this.buffer.push(e)}}next(){return this.refill(),this.buffer.shift()}}class $ extends E{constructor(e,t,n){super(e,t),this.upstream=e,this.windowSize=t,this.upstreamExhausted=!1,this.random=d.alea(n||l.util.now().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}randomInt(e){return Math.floor(this.random()*e)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){const e=this.chooseIndex(),t=await this.buffer.shuffleExcise(e);if(!t.done)return this.refill(),t;this.upstreamExhausted=!0}return{value:null,done:!0}}}},function(module,exports,__webpack_require__){"use strict";(function(global){var numeric=exports;void 0!==global&&(global.numeric=numeric),numeric.version="1.2.6",numeric.bench=function(e,t){var n,r,a,s;for(void 0===t&&(t=15),a=.5,n=new Date;;){for(a*=2,s=a;s>3;s-=4)e(),e(),e(),e();for(;s>0;)e(),s--;if(r=new Date,r-n>t)break}for(s=a;s>3;s-=4)e(),e(),e(),e();for(;s>0;)e(),s--;return r=new Date,1e3*(3*a-1)/(r-n)},numeric._myIndexOf=function(e){var t,n=this.length;for(t=0;t<n;++t)if(this[t]===e)return t;return-1},numeric.myIndexOf=Array.prototype.indexOf?Array.prototype.indexOf:numeric._myIndexOf,numeric.Function=Function,numeric.precision=4,numeric.largeArray=50,numeric.prettyPrint=function(e){function t(e){if(0===e)return"0";if(isNaN(e))return"NaN";if(e<0)return"-"+t(-e);if(isFinite(e)){var n=Math.floor(Math.log(e)/Math.log(10)),r=e/Math.pow(10,n),a=r.toPrecision(numeric.precision);return 10===parseFloat(a)&&(n++,r=1,a=r.toPrecision(numeric.precision)),parseFloat(a).toString()+"e"+n.toString()}return"Infinity"}function n(e){var a;if(void 0===e)return r.push(Array(numeric.precision+8).join(" ")),!1;if("string"==typeof e)return r.push('"'+e+'"'),!1;if("boolean"==typeof e)return r.push(e.toString()),!1;if("number"==typeof e){var s=t(e),i=e.toPrecision(numeric.precision),o=parseFloat(e.toString()).toString(),u=[s,i,o,parseFloat(i).toString(),parseFloat(o).toString()];for(a=1;a<u.length;a++)u[a].length<s.length&&(s=u[a]);return r.push(Array(numeric.precision+8-s.length).join(" ")+s),!1}if(null===e)return r.push("null"),!1;if("function"==typeof e){r.push(e.toString());var c=!1;for(a in e)e.hasOwnProperty(a)&&(c?r.push(",\n"):r.push("\n{"),c=!0,r.push(a),r.push(": \n"),n(e[a]));return c&&r.push("}\n"),!0}if(e instanceof Array){if(e.length>numeric.largeArray)return r.push("...Large Array..."),!0;c=!1;for(r.push("["),a=0;a<e.length;a++)a>0&&(r.push(","),c&&r.push("\n ")),c=n(e[a]);return r.push("]"),!0}r.push("{");c=!1;for(a in e)e.hasOwnProperty(a)&&(c&&r.push(",\n"),c=!0,r.push(a),r.push(": \n"),n(e[a]));return r.push("}"),!0}var r=[];return n(e),r.join("")},numeric.parseDate=function(e){function t(e){if("string"==typeof e)return Date.parse(e.replace(/-/g,"/"));if(!(e instanceof Array))throw new Error("parseDate: parameter must be arrays of strings");var n,r=[];for(n=0;n<e.length;n++)r[n]=t(e[n]);return r}return t(e)},numeric.parseFloat=function(e){function t(e){if("string"==typeof e)return parseFloat(e);if(!(e instanceof Array))throw new Error("parseFloat: parameter must be arrays of strings");var n,r=[];for(n=0;n<e.length;n++)r[n]=t(e[n]);return r}return t(e)},numeric.parseCSV=function(e){var t,n,r=e.split("\n"),a=[],s=/(([^'",]*)|('[^']*')|("[^"]*")),/g,i=/^\s*(([+-]?[0-9]+(\.[0-9]*)?(e[+-]?[0-9]+)?)|([+-]?[0-9]*(\.[0-9]+)?(e[+-]?[0-9]+)?))\s*$/,o=function(e){return e.substr(0,e.length-1)},u=0;for(n=0;n<r.length;n++){var c,l=(r[n]+",").match(s);if(l.length>0){for(a[u]=[],t=0;t<l.length;t++)c=o(l[t]),i.test(c)?a[u][t]=parseFloat(c):a[u][t]=c;u++}}return a},numeric.toCSV=function(e){var t,n,r,a,s,i=numeric.dim(e);for(r=i[0],i[1],s=[],t=0;t<r;t++){for(a=[],n=0;n<r;n++)a[n]=e[t][n].toString();s[t]=a.join(", ")}return s.join("\n")+"\n"},numeric.getURL=function(e){var t=new XMLHttpRequest;return t.open("GET",e,!1),t.send(),t},numeric.imageURL=function(e){function t(e){var t,n,r,a,s,i,o,u,c=e.length,l="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",d="";for(t=0;t<c;t+=3)n=e[t],r=e[t+1],a=e[t+2],s=n>>2,i=((3&n)<<4)+(r>>4),o=((15&r)<<2)+(a>>6),u=63&a,t+1>=c?o=u=64:t+2>=c&&(u=64),d+=l.charAt(s)+l.charAt(i)+l.charAt(o)+l.charAt(u);return d}function n(e,t,n){void 0===t&&(t=0),void 0===n&&(n=e.length);var r,a=[0,1996959894,3993919788,2567524794,124634137,1886057615,3915621685,2657392035,249268274,2044508324,3772115230,2547177864,162941995,2125561021,3887607047,2428444049,498536548,1789927666,4089016648,2227061214,450548861,1843258603,4107580753,2211677639,325883990,1684777152,4251122042,2321926636,335633487,1661365465,4195302755,2366115317,997073096,1281953886,3579855332,2724688242,1006888145,1258607687,3524101629,2768942443,901097722,1119000684,3686517206,2898065728,853044451,1172266101,3705015759,2882616665,651767980,1373503546,3369554304,3218104598,565507253,1454621731,3485111705,3099436303,671266974,1594198024,3322730930,2970347812,795835527,1483230225,3244367275,3060149565,1994146192,31158534,2563907772,4023717930,1907459465,112637215,2680153253,3904427059,2013776290,251722036,2517215374,3775830040,2137656763,141376813,2439277719,3865271297,1802195444,476864866,2238001368,4066508878,1812370925,453092731,2181625025,4111451223,1706088902,314042704,2344532202,4240017532,1658658271,366619977,2362670323,4224994405,1303535960,984961486,2747007092,3569037538,1256170817,1037604311,2765210733,3554079995,1131014506,879679996,2909243462,3663771856,1141124467,855842277,2852801631,3708648649,1342533948,654459306,3188396048,3373015174,1466479909,544179635,3110523913,3462522015,1591671054,702138776,2966460450,3352799412,1504918807,783551873,3082640443,3233442989,3988292384,2596254646,62317068,1957810842,3939845945,2647816111,81470997,1943803523,3814918930,2489596804,225274430,2053790376,3826175755,2466906013,167816743,2097651377,4027552580,2265490386,503444072,1762050814,4150417245,2154129355,426522225,1852507879,4275313526,2312317920,282753626,1742555852,4189708143,2394877945,397917763,1622183637,3604390888,2714866558,953729732,1340076626,3518719985,2797360999,1068828381,1219638859,3624741850,2936675148,906185462,1090812512,3747672003,2825379669,829329135,1181335161,3412177804,3160834842,628085408,1382605366,3423369109,3138078467,570562233,1426400815,3317316542,2998733608,733239954,1555261956,3268935591,3050360625,752459403,1541320221,2607071920,3965973030,1969922972,40735498,2617837225,3943577151,1913087877,83908371,2512341634,3803740692,2075208622,213261112,2463272603,3855990285,2094854071,198958881,2262029012,4057260610,1759359992,534414190,2176718541,4139329115,1873836001,414664567,2282248934,4279200368,1711684554,285281116,2405801727,4167216745,1634467795,376229701,2685067896,3608007406,1308918612,956543938,2808555105,3495958263,1231636301,1047427035,2932959818,3654703836,1088359270,936918e3,2847714899,3736837829,1202900863,817233897,3183342108,3401237130,1404277552,615818150,3134207493,3453421203,1423857449,601450431,3009837614,3294710456,1567103746,711928724,3020668471,3272380065,1510334235,755167117],s=-1,i=0;e.length;for(r=t;r<n;r++)i=255&(s^e[r]),s=s>>>8^a[i];return-1^s}var r,a,s,i,o,u,c,l,d,h,p=e[0].length,f=e[0][0].length,m=[137,80,78,71,13,10,26,10,0,0,0,13,73,72,68,82,f>>24&255,f>>16&255,f>>8&255,255&f,p>>24&255,p>>16&255,p>>8&255,255&p,8,2,0,0,0,-1,-2,-3,-4,-5,-6,-7,-8,73,68,65,84,8,29];for(h=n(m,12,29),m[29]=h>>24&255,m[30]=h>>16&255,m[31]=h>>8&255,m[32]=255&h,r=1,a=0,c=0;c<p;c++){for(c<p-1?m.push(0):m.push(1),o=3*f+1+(0===c)&255,u=3*f+1+(0===c)>>8&255,m.push(o),m.push(u),m.push(255&~o),m.push(255&~u),0===c&&m.push(0),l=0;l<f;l++)for(s=0;s<3;s++)o=e[s][c][l],o=o>255?255:o<0?0:Math.round(o),r=(r+o)%65521,a=(a+r)%65521,m.push(o);m.push(0)}return d=(a<<16)+r,m.push(d>>24&255),m.push(d>>16&255),m.push(d>>8&255),m.push(255&d),i=m.length-41,m[33]=i>>24&255,m[34]=i>>16&255,m[35]=i>>8&255,m[36]=255&i,h=n(m,37),m.push(h>>24&255),m.push(h>>16&255),m.push(h>>8&255),m.push(255&h),m.push(0),m.push(0),m.push(0),m.push(0),m.push(73),m.push(69),m.push(78),m.push(68),m.push(174),m.push(66),m.push(96),m.push(130),"data:image/png;base64,"+t(m)},numeric._dim=function(e){for(var t=[];"object"==typeof e;)t.push(e.length),e=e[0];return t},numeric.dim=function(e){var t,n;return"object"==typeof e?(t=e[0],"object"==typeof t?(n=t[0],"object"==typeof n?numeric._dim(e):[e.length,t.length]):[e.length]):[]},numeric.mapreduce=function(e,t){return Function("x","accum","_s","_k",'if(typeof accum === "undefined") accum = '+t+';\nif(typeof x === "number") { var xi = x; '+e+'; return accum; }\nif(typeof _s === "undefined") _s = numeric.dim(x);\nif(typeof _k === "undefined") _k = 0;\nvar _n = _s[_k];\nvar i,xi;\nif(_k < _s.length-1) {\n    for(i=_n-1;i>=0;i--) {\n        accum = arguments.callee(x[i],accum,_s,_k+1);\n    }    return accum;\n}\nfor(i=_n-1;i>=1;i-=2) { \n    xi = x[i];\n    '+e+";\n    xi = x[i-1];\n    "+e+";\n}\nif(i === 0) {\n    xi = x[i];\n    "+e+"\n}\nreturn accum;")},numeric.mapreduce2=function(e,t){return Function("x","var n = x.length;\nvar i,xi;\n"+t+";\nfor(i=n-1;i!==-1;--i) { \n    xi = x[i];\n    "+e+";\n}\nreturn accum;")},numeric.same=function e(t,n){var r,a;if(!(t instanceof Array&&n instanceof Array))return!1;if(a=t.length,a!==n.length)return!1;for(r=0;r<a;r++)if(t[r]!==n[r]){if("object"!=typeof t[r])return!1;if(!e(t[r],n[r]))return!1}return!0},numeric.rep=function(e,t,n){void 0===n&&(n=0);var r,a=e[n],s=Array(a);if(n===e.length-1){for(r=a-2;r>=0;r-=2)s[r+1]=t,s[r]=t;return-1===r&&(s[0]=t),s}for(r=a-1;r>=0;r--)s[r]=numeric.rep(e,t,n+1);return s},numeric.dotMMsmall=function(e,t){var n,r,a,s,i,o,u,c,l,d,h;for(s=e.length,i=t.length,o=t[0].length,u=Array(s),n=s-1;n>=0;n--){for(c=Array(o),l=e[n],a=o-1;a>=0;a--){for(d=l[i-1]*t[i-1][a],r=i-2;r>=1;r-=2)h=r-1,d+=l[r]*t[r][a]+l[h]*t[h][a];0===r&&(d+=l[0]*t[0][a]),c[a]=d}u[n]=c}return u},numeric._getCol=function(e,t,n){var r,a=e.length;for(r=a-1;r>0;--r)n[r]=e[r][t],--r,n[r]=e[r][t];0===r&&(n[0]=e[0][t])},numeric.dotMMbig=function(e,t){var n,r,a,s=numeric._getCol,i=t.length,o=Array(i),u=e.length,c=t[0].length,l=new Array(u),d=numeric.dotVV;for(--i,--u,r=u;-1!==r;--r)l[r]=Array(c);for(--c,r=c;-1!==r;--r)for(s(t,r,o),a=u;-1!==a;--a)0,n=e[a],l[a][r]=d(n,o);return l},numeric.dotMV=function(e,t){
var n,r=e.length,a=(t.length,Array(r)),s=numeric.dotVV;for(n=r-1;n>=0;n--)a[n]=s(e[n],t);return a},numeric.dotVM=function(e,t){var n,r,a,s,i,o,u;for(a=e.length,s=t[0].length,i=Array(s),r=s-1;r>=0;r--){for(o=e[a-1]*t[a-1][r],n=a-2;n>=1;n-=2)u=n-1,o+=e[n]*t[n][r]+e[u]*t[u][r];0===n&&(o+=e[0]*t[0][r]),i[r]=o}return i},numeric.dotVV=function(e,t){var n,r,a=e.length,s=e[a-1]*t[a-1];for(n=a-2;n>=1;n-=2)r=n-1,s+=e[n]*t[n]+e[r]*t[r];return 0===n&&(s+=e[0]*t[0]),s},numeric.dot=function(e,t){var n=numeric.dim;switch(1e3*n(e).length+n(t).length){case 2002:return t.length<10?numeric.dotMMsmall(e,t):numeric.dotMMbig(e,t);case 2001:return numeric.dotMV(e,t);case 1002:return numeric.dotVM(e,t);case 1001:return numeric.dotVV(e,t);case 1e3:return numeric.mulVS(e,t);case 1:return numeric.mulSV(e,t);case 0:return e*t;default:throw new Error("numeric.dot only works on vectors and matrices")}},numeric.diag=function(e){var t,n,r,a,s=e.length,i=Array(s);for(t=s-1;t>=0;t--){for(a=Array(s),n=t+2,r=s-1;r>=n;r-=2)a[r]=0,a[r-1]=0;for(r>t&&(a[r]=0),a[t]=e[t],r=t-1;r>=1;r-=2)a[r]=0,a[r-1]=0;0===r&&(a[0]=0),i[t]=a}return i},numeric.getDiag=function(e){var t,n=Math.min(e.length,e[0].length),r=Array(n);for(t=n-1;t>=1;--t)r[t]=e[t][t],--t,r[t]=e[t][t];return 0===t&&(r[0]=e[0][0]),r},numeric.identity=function(e){return numeric.diag(numeric.rep([e],1))},numeric.pointwise=function(e,t,n){void 0===n&&(n="");var r,a,s=[],i=/\[i\]$/,o="",u=!1;for(r=0;r<e.length;r++)i.test(e[r])?(a=e[r].substring(0,e[r].length-3),o=a):a=e[r],"ret"===a&&(u=!0),s.push(a);return s[e.length]="_s",s[e.length+1]="_k",s[e.length+2]='if(typeof _s === "undefined") _s = numeric.dim('+o+');\nif(typeof _k === "undefined") _k = 0;\nvar _n = _s[_k];\nvar i'+(u?"":", ret = Array(_n)")+";\nif(_k < _s.length-1) {\n    for(i=_n-1;i>=0;i--) ret[i] = arguments.callee("+e.join(",")+",_s,_k+1);\n    return ret;\n}\n"+n+"\nfor(i=_n-1;i!==-1;--i) {\n    "+t+"\n}\nreturn ret;",Function.apply(null,s)},numeric.pointwise2=function(e,t,n){void 0===n&&(n="");var r,a,s=[],i=/\[i\]$/,o="",u=!1;for(r=0;r<e.length;r++)i.test(e[r])?(a=e[r].substring(0,e[r].length-3),o=a):a=e[r],"ret"===a&&(u=!0),s.push(a);return s[e.length]="var _n = "+o+".length;\nvar i"+(u?"":", ret = Array(_n)")+";\n"+n+"\nfor(i=_n-1;i!==-1;--i) {\n"+t+"\n}\nreturn ret;",Function.apply(null,s)},numeric._biforeach=function e(t,n,r,a,s){if(a!==r.length-1){var i,o=r[a];for(i=o-1;i>=0;i--)e("object"==typeof t?t[i]:t,"object"==typeof n?n[i]:n,r,a+1,s)}else s(t,n)},numeric._biforeach2=function e(t,n,r,a,s){if(a===r.length-1)return s(t,n);var i,o=r[a],u=Array(o);for(i=o-1;i>=0;--i)u[i]=e("object"==typeof t?t[i]:t,"object"==typeof n?n[i]:n,r,a+1,s);return u},numeric._foreach=function e(t,n,r,a){if(r!==n.length-1){var s,i=n[r];for(s=i-1;s>=0;s--)e(t[s],n,r+1,a)}else a(t)},numeric._foreach2=function e(t,n,r,a){if(r===n.length-1)return a(t);var s,i=n[r],o=Array(i);for(s=i-1;s>=0;s--)o[s]=e(t[s],n,r+1,a);return o},numeric.ops2={add:"+",sub:"-",mul:"*",div:"/",mod:"%",and:"&&",or:"||",eq:"===",neq:"!==",lt:"<",gt:">",leq:"<=",geq:">=",band:"&",bor:"|",bxor:"^",lshift:"<<",rshift:">>",rrshift:">>>"},numeric.opseq={addeq:"+=",subeq:"-=",muleq:"*=",diveq:"/=",modeq:"%=",lshifteq:"<<=",rshifteq:">>=",rrshifteq:">>>=",bandeq:"&=",boreq:"|=",bxoreq:"^="},numeric.mathfuns=["abs","acos","asin","atan","ceil","cos","exp","floor","log","round","sin","sqrt","tan","isNaN","isFinite"],numeric.mathfuns2=["atan2","pow","max","min"],numeric.ops1={neg:"-",not:"!",bnot:"~",clone:""},numeric.mapreducers={any:["if(xi) return true;","var accum = false;"],all:["if(!xi) return false;","var accum = true;"],sum:["accum += xi;","var accum = 0;"],prod:["accum *= xi;","var accum = 1;"],norm2Squared:["accum += xi*xi;","var accum = 0;"],norminf:["accum = max(accum,abs(xi));","var accum = 0, max = Math.max, abs = Math.abs;"],norm1:["accum += abs(xi)","var accum = 0, abs = Math.abs;"],sup:["accum = max(accum,xi);","var accum = -Infinity, max = Math.max;"],inf:["accum = min(accum,xi);","var accum = Infinity, min = Math.min;"]},function(){var e,t;for(e=0;e<numeric.mathfuns2.length;++e)t=numeric.mathfuns2[e],numeric.ops2[t]=t;for(e in numeric.ops2)if(numeric.ops2.hasOwnProperty(e)){t=numeric.ops2[e];var n,r,a="";-1!==numeric.myIndexOf.call(numeric.mathfuns2,e)?(a="var "+t+" = Math."+t+";\n",n=function(e,n,r){return e+" = "+t+"("+n+","+r+")"},r=function(e,n){return e+" = "+t+"("+e+","+n+")"}):(n=function(e,n,r){return e+" = "+n+" "+t+" "+r},r=numeric.opseq.hasOwnProperty(e+"eq")?function(e,n){return e+" "+t+"= "+n}:function(e,n){return e+" = "+e+" "+t+" "+n}),numeric[e+"VV"]=numeric.pointwise2(["x[i]","y[i]"],n("ret[i]","x[i]","y[i]"),a),numeric[e+"SV"]=numeric.pointwise2(["x","y[i]"],n("ret[i]","x","y[i]"),a),numeric[e+"VS"]=numeric.pointwise2(["x[i]","y"],n("ret[i]","x[i]","y"),a),numeric[e]=Function("var n = arguments.length, i, x = arguments[0], y;\nvar VV = numeric."+e+"VV, VS = numeric."+e+"VS, SV = numeric."+e+'SV;\nvar dim = numeric.dim;\nfor(i=1;i!==n;++i) { \n  y = arguments[i];\n  if(typeof x === "object") {\n      if(typeof y === "object") x = numeric._biforeach2(x,y,dim(x),0,VV);\n      else x = numeric._biforeach2(x,y,dim(x),0,VS);\n  } else if(typeof y === "object") x = numeric._biforeach2(x,y,dim(y),0,SV);\n  else '+r("x","y")+"\n}\nreturn x;\n"),numeric[t]=numeric[e],numeric[e+"eqV"]=numeric.pointwise2(["ret[i]","x[i]"],r("ret[i]","x[i]"),a),numeric[e+"eqS"]=numeric.pointwise2(["ret[i]","x"],r("ret[i]","x"),a),numeric[e+"eq"]=Function("var n = arguments.length, i, x = arguments[0], y;\nvar V = numeric."+e+"eqV, S = numeric."+e+'eqS\nvar s = numeric.dim(x);\nfor(i=1;i!==n;++i) { \n  y = arguments[i];\n  if(typeof y === "object") numeric._biforeach(x,y,s,0,V);\n  else numeric._biforeach(x,y,s,0,S);\n}\nreturn x;\n')}for(e=0;e<numeric.mathfuns2.length;++e)t=numeric.mathfuns2[e],delete numeric.ops2[t];for(e=0;e<numeric.mathfuns.length;++e)t=numeric.mathfuns[e],numeric.ops1[t]=t;for(e in numeric.ops1)numeric.ops1.hasOwnProperty(e)&&(a="",t=numeric.ops1[e],-1!==numeric.myIndexOf.call(numeric.mathfuns,e)&&Math.hasOwnProperty(t)&&(a="var "+t+" = Math."+t+";\n"),numeric[e+"eqV"]=numeric.pointwise2(["ret[i]"],"ret[i] = "+t+"(ret[i]);",a),numeric[e+"eq"]=Function("x",'if(typeof x !== "object") return '+t+"x\nvar i;\nvar V = numeric."+e+"eqV;\nvar s = numeric.dim(x);\nnumeric._foreach(x,s,0,V);\nreturn x;\n"),numeric[e+"V"]=numeric.pointwise2(["x[i]"],"ret[i] = "+t+"(x[i]);",a),numeric[e]=Function("x",'if(typeof x !== "object") return '+t+"(x)\nvar i;\nvar V = numeric."+e+"V;\nvar s = numeric.dim(x);\nreturn numeric._foreach2(x,s,0,V);\n"));for(e=0;e<numeric.mathfuns.length;++e)t=numeric.mathfuns[e],delete numeric.ops1[t];for(e in numeric.mapreducers)numeric.mapreducers.hasOwnProperty(e)&&(t=numeric.mapreducers[e],numeric[e+"V"]=numeric.mapreduce2(t[0],t[1]),numeric[e]=Function("x","s","k",t[1]+'if(typeof x !== "object") {    xi = x;\n'+t[0]+';\n    return accum;\n}if(typeof s === "undefined") s = numeric.dim(x);\nif(typeof k === "undefined") k = 0;\nif(k === s.length-1) return numeric.'+e+"V(x);\nvar xi;\nvar n = x.length, i;\nfor(i=n-1;i!==-1;--i) {\n   xi = arguments.callee(x[i]);\n"+t[0]+";\n}\nreturn accum;\n"))}(),numeric.truncVV=numeric.pointwise(["x[i]","y[i]"],"ret[i] = round(x[i]/y[i])*y[i];","var round = Math.round;"),numeric.truncVS=numeric.pointwise(["x[i]","y"],"ret[i] = round(x[i]/y)*y;","var round = Math.round;"),numeric.truncSV=numeric.pointwise(["x","y[i]"],"ret[i] = round(x/y[i])*y[i];","var round = Math.round;"),numeric.trunc=function(e,t){return"object"==typeof e?"object"==typeof t?numeric.truncVV(e,t):numeric.truncVS(e,t):"object"==typeof t?numeric.truncSV(e,t):Math.round(e/t)*t},numeric.inv=function(e){var t,n,r,a,s,i,o,u=numeric.dim(e),c=Math.abs,l=u[0],d=u[1],h=numeric.clone(e),p=numeric.identity(l);for(i=0;i<d;++i){var f=-1,m=-1;for(s=i;s!==l;++s)o=c(h[s][i]),o>m&&(f=s,m=o);for(n=h[f],h[f]=h[i],h[i]=n,a=p[f],p[f]=p[i],p[i]=a,e=n[i],o=i;o!==d;++o)n[o]/=e;for(o=d-1;-1!==o;--o)a[o]/=e;for(s=l-1;-1!==s;--s)if(s!==i){for(t=h[s],r=p[s],e=t[i],o=i+1;o!==d;++o)t[o]-=n[o]*e;for(o=d-1;o>0;--o)r[o]-=a[o]*e,--o,r[o]-=a[o]*e;0===o&&(r[0]-=a[0]*e)}}return p},numeric.det=function(e){var t=numeric.dim(e);if(2!==t.length||t[0]!==t[1])throw new Error("numeric: det() only works on square matrices");var n,r,a,s,i,o,u,c,l=t[0],d=1,h=numeric.clone(e);for(r=0;r<l-1;r++){for(a=r,n=r+1;n<l;n++)Math.abs(h[n][r])>Math.abs(h[a][r])&&(a=n);for(a!==r&&(u=h[a],h[a]=h[r],h[r]=u,d*=-1),s=h[r],n=r+1;n<l;n++){for(i=h[n],o=i[r]/s[r],a=r+1;a<l-1;a+=2)c=a+1,i[a]-=s[a]*o,i[c]-=s[c]*o;a!==l&&(i[a]-=s[a]*o)}if(0===s[r])return 0;d*=s[r]}return d*h[r][r]},numeric.transpose=function(e){var t,n,r,a,s,i=e.length,o=e[0].length,u=Array(o);for(n=0;n<o;n++)u[n]=Array(i);for(t=i-1;t>=1;t-=2){for(a=e[t],r=e[t-1],n=o-1;n>=1;--n)s=u[n],s[t]=a[n],s[t-1]=r[n],--n,s=u[n],s[t]=a[n],s[t-1]=r[n];0===n&&(s=u[0],s[t]=a[0],s[t-1]=r[0])}if(0===t){for(r=e[0],n=o-1;n>=1;--n)u[n][0]=r[n],--n,u[n][0]=r[n];0===n&&(u[0][0]=r[0])}return u},numeric.negtranspose=function(e){var t,n,r,a,s,i=e.length,o=e[0].length,u=Array(o);for(n=0;n<o;n++)u[n]=Array(i);for(t=i-1;t>=1;t-=2){for(a=e[t],r=e[t-1],n=o-1;n>=1;--n)s=u[n],s[t]=-a[n],s[t-1]=-r[n],--n,s=u[n],s[t]=-a[n],s[t-1]=-r[n];0===n&&(s=u[0],s[t]=-a[0],s[t-1]=-r[0])}if(0===t){for(r=e[0],n=o-1;n>=1;--n)u[n][0]=-r[n],--n,u[n][0]=-r[n];0===n&&(u[0][0]=-r[0])}return u},numeric._random=function e(t,n){var r,a,s=t[n],i=Array(s);if(n===t.length-1){for(a=Math.random,r=s-1;r>=1;r-=2)i[r]=a(),i[r-1]=a();return 0===r&&(i[0]=a()),i}for(r=s-1;r>=0;r--)i[r]=e(t,n+1);return i},numeric.random=function(e){return numeric._random(e,0)},numeric.norm2=function(e){return Math.sqrt(numeric.norm2Squared(e))},numeric.linspace=function(e,t,n){if(void 0===n&&(n=Math.max(Math.round(t-e)+1,1)),n<2)return 1===n?[e]:[];var r,a=Array(n);for(n--,r=n;r>=0;r--)a[r]=(r*t+(n-r)*e)/n;return a},numeric.getBlock=function(e,t,n){function r(e,s){var i,o=t[s],u=n[s]-o,c=Array(u);if(s===a.length-1){for(i=u;i>=0;i--)c[i]=e[i+o];return c}for(i=u;i>=0;i--)c[i]=r(e[i+o],s+1);return c}var a=numeric.dim(e);return r(e,0)},numeric.setBlock=function(e,t,n,r){function a(e,r,i){var o,u=t[i],c=n[i]-u;if(i===s.length-1)for(o=c;o>=0;o--)e[o+u]=r[o];for(o=c;o>=0;o--)a(e[o+u],r[o],i+1)}var s=numeric.dim(e);return a(e,r,0),e},numeric.getRange=function(e,t,n){var r,a,s,i,o=t.length,u=n.length,c=Array(o);for(r=o-1;-1!==r;--r)for(c[r]=Array(u),s=c[r],i=e[t[r]],a=u-1;-1!==a;--a)s[a]=i[n[a]];return c},numeric.blockMatrix=function(e){var t=numeric.dim(e);if(t.length<4)return numeric.blockMatrix([e]);var n,r,a,s,i,o=t[0],u=t[1];for(n=0,r=0,a=0;a<o;++a)n+=e[a][0].length;for(s=0;s<u;++s)r+=e[0][s][0].length;var c=Array(n);for(a=0;a<n;++a)c[a]=Array(r);var l,d,h,p,f,m=0;for(a=0;a<o;++a){for(l=r,s=u-1;-1!==s;--s)for(i=e[a][s],l-=i[0].length,h=i.length-1;-1!==h;--h)for(f=i[h],d=c[m+h],p=f.length-1;-1!==p;--p)d[l+p]=f[p];m+=e[a][0].length}return c},numeric.tensor=function(e,t){if("number"==typeof e||"number"==typeof t)return numeric.mul(e,t);var n=numeric.dim(e),r=numeric.dim(t);if(1!==n.length||1!==r.length)throw new Error("numeric: tensor product is only defined for vectors");var a,s,i,o,u=n[0],c=r[0],l=Array(u);for(s=u-1;s>=0;s--){for(a=Array(c),o=e[s],i=c-1;i>=3;--i)a[i]=o*t[i],--i,a[i]=o*t[i],--i,a[i]=o*t[i],--i,a[i]=o*t[i];for(;i>=0;)a[i]=o*t[i],--i;l[s]=a}return l},numeric.T=function(e,t){this.x=e,this.y=t},numeric.t=function(e,t){return new numeric.T(e,t)},numeric.Tbinop=function(e,t,n,r,a){var s;numeric.indexOf;if("string"!=typeof a)for(s in a="",numeric)numeric.hasOwnProperty(s)&&(e.indexOf(s)>=0||t.indexOf(s)>=0||n.indexOf(s)>=0||r.indexOf(s)>=0)&&s.length>1&&(a+="var "+s+" = numeric."+s+";\n");return Function(["y"],"var x = this;\nif(!(y instanceof numeric.T)) { y = new numeric.T(y); }\n"+a+"\nif(x.y) {  if(y.y) {    return new numeric.T("+r+");\n  }\n  return new numeric.T("+n+");\n}\nif(y.y) {\n  return new numeric.T("+t+");\n}\nreturn new numeric.T("+e+");\n")},numeric.T.prototype.add=numeric.Tbinop("add(x.x,y.x)","add(x.x,y.x),y.y","add(x.x,y.x),x.y","add(x.x,y.x),add(x.y,y.y)"),numeric.T.prototype.sub=numeric.Tbinop("sub(x.x,y.x)","sub(x.x,y.x),neg(y.y)","sub(x.x,y.x),x.y","sub(x.x,y.x),sub(x.y,y.y)"),numeric.T.prototype.mul=numeric.Tbinop("mul(x.x,y.x)","mul(x.x,y.x),mul(x.x,y.y)","mul(x.x,y.x),mul(x.y,y.x)","sub(mul(x.x,y.x),mul(x.y,y.y)),add(mul(x.x,y.y),mul(x.y,y.x))"),numeric.T.prototype.reciprocal=function(){var e=numeric.mul,t=numeric.div;if(this.y){var n=numeric.add(e(this.x,this.x),e(this.y,this.y));return new numeric.T(t(this.x,n),t(numeric.neg(this.y),n))}return new T(t(1,this.x))},numeric.T.prototype.div=function(e){if(e instanceof numeric.T||(e=new numeric.T(e)),e.y)return this.mul(e.reciprocal());var t=numeric.div;return this.y?new numeric.T(t(this.x,e.x),t(this.y,e.x)):new numeric.T(t(this.x,e.x))},numeric.T.prototype.dot=numeric.Tbinop("dot(x.x,y.x)","dot(x.x,y.x),dot(x.x,y.y)","dot(x.x,y.x),dot(x.y,y.x)","sub(dot(x.x,y.x),dot(x.y,y.y)),add(dot(x.x,y.y),dot(x.y,y.x))"),numeric.T.prototype.transpose=function(){var e=numeric.transpose,t=this.x,n=this.y;return n?new numeric.T(e(t),e(n)):new numeric.T(e(t))},numeric.T.prototype.transjugate=function(){var e=numeric.transpose,t=this.x,n=this.y;return n?new numeric.T(e(t),numeric.negtranspose(n)):new numeric.T(e(t))},numeric.Tunop=function(e,t,n){return"string"!=typeof n&&(n=""),Function("var x = this;\n"+n+"\nif(x.y) {  "+t+";\n}\n"+e+";\n")},numeric.T.prototype.exp=numeric.Tunop("return new numeric.T(ex)","return new numeric.T(mul(cos(x.y),ex),mul(sin(x.y),ex))","var ex = numeric.exp(x.x), cos = numeric.cos, sin = numeric.sin, mul = numeric.mul;"),numeric.T.prototype.conj=numeric.Tunop("return new numeric.T(x.x);","return new numeric.T(x.x,numeric.neg(x.y));"),numeric.T.prototype.neg=numeric.Tunop("return new numeric.T(neg(x.x));","return new numeric.T(neg(x.x),neg(x.y));","var neg = numeric.neg;"),numeric.T.prototype.sin=numeric.Tunop("return new numeric.T(numeric.sin(x.x))","return x.exp().sub(x.neg().exp()).div(new numeric.T(0,2));"),numeric.T.prototype.cos=numeric.Tunop("return new numeric.T(numeric.cos(x.x))","return x.exp().add(x.neg().exp()).div(2);"),numeric.T.prototype.abs=numeric.Tunop("return new numeric.T(numeric.abs(x.x));","return new numeric.T(numeric.sqrt(numeric.add(mul(x.x,x.x),mul(x.y,x.y))));","var mul = numeric.mul;"),numeric.T.prototype.log=numeric.Tunop("return new numeric.T(numeric.log(x.x));","var theta = new numeric.T(numeric.atan2(x.y,x.x)), r = x.abs();\nreturn new numeric.T(numeric.log(r.x),theta.x);"),numeric.T.prototype.norm2=numeric.Tunop("return numeric.norm2(x.x);","var f = numeric.norm2Squared;\nreturn Math.sqrt(f(x.x)+f(x.y));"),numeric.T.prototype.inv=function(){var e=this;if(void 0===e.y)return new numeric.T(numeric.inv(e.x));var t,n,r,a,s,i,o,u,c,l,d,h,p,f,m,b,g,y,x=e.x.length,v=numeric.identity(x),w=numeric.rep([x,x],0),k=numeric.clone(e.x),O=numeric.clone(e.y);for(c=0;c<x;c++){for(f=k[c][c],m=O[c][c],h=f*f+m*m,d=c,l=c+1;l<x;l++)f=k[l][c],m=O[l][c],p=f*f+m*m,p>h&&(d=l,h=p);for(d!==c&&(y=k[c],k[c]=k[d],k[d]=y,y=O[c],O[c]=O[d],O[d]=y,y=v[c],v[c]=v[d],v[d]=y,y=w[c],w[c]=w[d],w[d]=y),t=k[c],n=O[c],s=v[c],i=w[c],f=t[c],m=n[c],l=c+1;l<x;l++)b=t[l],g=n[l],t[l]=(b*f+g*m)/h,n[l]=(g*f-b*m)/h;for(l=0;l<x;l++)b=s[l],g=i[l],s[l]=(b*f+g*m)/h,i[l]=(g*f-b*m)/h;for(l=c+1;l<x;l++){for(r=k[l],a=O[l],o=v[l],u=w[l],f=r[c],m=a[c],d=c+1;d<x;d++)b=t[d],g=n[d],r[d]-=b*f-g*m,a[d]-=g*f+b*m;for(d=0;d<x;d++)b=s[d],g=i[d],o[d]-=b*f-g*m,u[d]-=g*f+b*m}}for(c=x-1;c>0;c--)for(s=v[c],i=w[c],l=c-1;l>=0;l--)for(o=v[l],u=w[l],f=k[l][c],m=O[l][c],d=x-1;d>=0;d--)b=s[d],g=i[d],o[d]-=f*b-m*g,u[d]-=f*g+m*b;return new numeric.T(v,w)},numeric.T.prototype.get=function(e){var t,n=this.x,r=this.y,a=0,s=e.length;if(r){for(;a<s;)t=e[a],n=n[t],r=r[t],a++;return new numeric.T(n,r)}for(;a<s;)t=e[a],n=n[t],a++;return new numeric.T(n)},numeric.T.prototype.set=function(e,t){var n,r=this.x,a=this.y,s=0,i=e.length,o=t.x,u=t.y;if(0===i)return u?this.y=u:a&&(this.y=void 0),this.x=r,this;if(u){for(a||(a=numeric.rep(numeric.dim(r),0),this.y=a);s<i-1;)n=e[s],r=r[n],a=a[n],s++;return n=e[s],r[n]=o,a[n]=u,this}if(a){for(;s<i-1;)n=e[s],r=r[n],a=a[n],s++;return n=e[s],r[n]=o,o instanceof Array?a[n]=numeric.rep(numeric.dim(o),0):a[n]=0,this}for(;s<i-1;)n=e[s],r=r[n],s++;return n=e[s],r[n]=o,this},numeric.T.prototype.getRows=function(e,t){var n,r,a=t-e+1,s=Array(a),i=this.x,o=this.y;for(n=e;n<=t;n++)s[n-e]=i[n];if(o){for(r=Array(a),n=e;n<=t;n++)r[n-e]=o[n];return new numeric.T(s,r)}return new numeric.T(s)},numeric.T.prototype.setRows=function(e,t,n){var r,a=this.x,s=this.y,i=n.x,o=n.y;for(r=e;r<=t;r++)a[r]=i[r-e];if(o)for(s||(s=numeric.rep(numeric.dim(a),0),this.y=s),r=e;r<=t;r++)s[r]=o[r-e];else if(s)for(r=e;r<=t;r++)s[r]=numeric.rep([i[r-e].length],0);return this},numeric.T.prototype.getRow=function(e){var t=this.x,n=this.y;return n?new numeric.T(t[e],n[e]):new numeric.T(t[e])},numeric.T.prototype.setRow=function(e,t){var n=this.x,r=this.y,a=t.x,s=t.y;return n[e]=a,s?(r||(r=numeric.rep(numeric.dim(n),0),this.y=r),r[e]=s):r&&(r=numeric.rep([a.length],0)),this},numeric.T.prototype.getBlock=function(e,t){var n=this.x,r=this.y,a=numeric.getBlock;return r?new numeric.T(a(n,e,t),a(r,e,t)):new numeric.T(a(n,e,t))},numeric.T.prototype.setBlock=function(e,t,n){n instanceof numeric.T||(n=new numeric.T(n));var r=this.x,a=this.y,s=numeric.setBlock,i=n.x,o=n.y;if(o)return a||(this.y=numeric.rep(numeric.dim(this),0),a=this.y),s(r,e,t,i),s(a,e,t,o),this;s(r,e,t,i),a&&s(a,e,t,numeric.rep(numeric.dim(i),0))},numeric.T.rep=function(e,t){var n=numeric.T;t instanceof n||(t=new n(t));var r=t.x,a=t.y,s=numeric.rep;return a?new n(s(e,r),s(e,a)):new n(s(e,r))},numeric.T.diag=function(e){e instanceof numeric.T||(e=new numeric.T(e));var t=e.x,n=e.y,r=numeric.diag;return n?new numeric.T(r(t),r(n)):new numeric.T(r(t))},numeric.T.eig=function(){if(this.y)throw new Error("eig: not implemented for complex matrices.");return numeric.eig(this.x)},numeric.T.identity=function(e){return new numeric.T(numeric.identity(e))},numeric.T.prototype.getDiag=function(){var e=numeric,t=this.x,n=this.y;return n?new e.T(e.getDiag(t),e.getDiag(n)):new e.T(e.getDiag(t))},numeric.house=function(e){var t=numeric.clone(e),n=e[0]>=0?1:-1,r=n*numeric.norm2(e);t[0]+=r;var a=numeric.norm2(t);if(0===a)throw new Error("eig: internal error");return numeric.div(t,a)},numeric.toUpperHessenberg=function(e){var t=numeric.dim(e);if(2!==t.length||t[0]!==t[1])throw new Error("numeric: toUpperHessenberg() only works on square matrices");var n,r,a,s,i,o,u,c,l,d,h=t[0],p=numeric.clone(e),f=numeric.identity(h);for(r=0;r<h-2;r++){for(s=Array(h-r-1),n=r+1;n<h;n++)s[n-r-1]=p[n][r];if(numeric.norm2(s)>0){for(i=numeric.house(s),o=numeric.getBlock(p,[r+1,r],[h-1,h-1]),u=numeric.tensor(i,numeric.dot(i,o)),n=r+1;n<h;n++)for(c=p[n],l=u[n-r-1],a=r;a<h;a++)c[a]-=2*l[a-r];for(o=numeric.getBlock(p,[0,r+1],[h-1,h-1]),u=numeric.tensor(numeric.dot(o,i),i),n=0;n<h;n++)for(c=p[n],l=u[n],a=r+1;a<h;a++)c[a]-=2*l[a-r-1];for(o=Array(h-r-1),n=r+1;n<h;n++)o[n-r-1]=f[n];for(u=numeric.tensor(i,numeric.dot(i,o)),n=r+1;n<h;n++)for(d=f[n],l=u[n-r-1],a=0;a<h;a++)d[a]-=2*l[a]}}return{H:p,Q:f}},numeric.epsilon=2.220446049250313e-16,numeric.QRFrancis=function(e,t){void 0===t&&(t=1e4),e=numeric.clone(e);numeric.clone(e);var n,r,a,s,i,o,u,c,l,d,h,p,f,m,b,g,y,x,v=numeric.dim(e),w=v[0],k=numeric.identity(w);if(w<3)return{Q:k,B:[[0,w-1]]};var O=numeric.epsilon;for(x=0;x<t;x++){for(g=0;g<w-1;g++)if(Math.abs(e[g+1][g])<O*(Math.abs(e[g][g])+Math.abs(e[g+1][g+1]))){var I=numeric.QRFrancis(numeric.getBlock(e,[0,0],[g,g]),t),N=numeric.QRFrancis(numeric.getBlock(e,[g+1,g+1],[w-1,w-1]),t);for(p=Array(g+1),b=0;b<=g;b++)p[b]=k[b];for(f=numeric.dot(I.Q,p),b=0;b<=g;b++)k[b]=f[b];for(p=Array(w-g-1),b=g+1;b<w;b++)p[b-g-1]=k[b];for(f=numeric.dot(N.Q,p),b=g+1;b<w;b++)k[b]=f[b-g-1];return{Q:k,B:I.B.concat(numeric.add(N.B,g+1))}}var j,S,T;if(a=e[w-2][w-2],s=e[w-2][w-1],i=e[w-1][w-2],o=e[w-1][w-1],c=a+o,u=a*o-s*i,l=numeric.getBlock(e,[0,0],[2,2]),c*c>=4*u)j=.5*(c+Math.sqrt(c*c-4*u)),S=.5*(c-Math.sqrt(c*c-4*u)),l=numeric.add(numeric.sub(numeric.dot(l,l),numeric.mul(l,j+S)),numeric.diag(numeric.rep([3],j*S)));else l=numeric.add(numeric.sub(numeric.dot(l,l),numeric.mul(l,c)),numeric.diag(numeric.rep([3],u)));for(n=[l[0][0],l[1][0],l[2][0]],r=numeric.house(n),p=[e[0],e[1],e[2]],f=numeric.tensor(r,numeric.dot(r,p)),b=0;b<3;b++)for(h=e[b],m=f[b],y=0;y<w;y++)h[y]-=2*m[y];for(p=numeric.getBlock(e,[0,0],[w-1,2]),f=numeric.tensor(numeric.dot(p,r),r),b=0;b<w;b++)for(h=e[b],m=f[b],y=0;y<3;y++)h[y]-=2*m[y];for(p=[k[0],k[1],k[2]],f=numeric.tensor(r,numeric.dot(r,p)),b=0;b<3;b++)for(d=k[b],m=f[b],y=0;y<w;y++)d[y]-=2*m[y];for(g=0;g<w-2;g++){for(y=g;y<=g+1;y++)if(Math.abs(e[y+1][y])<O*(Math.abs(e[y][y])+Math.abs(e[y+1][y+1]))){I=numeric.QRFrancis(numeric.getBlock(e,[0,0],[y,y]),t),N=numeric.QRFrancis(numeric.getBlock(e,[y+1,y+1],[w-1,w-1]),t);for(p=Array(y+1),b=0;b<=y;b++)p[b]=k[b];for(f=numeric.dot(I.Q,p),b=0;b<=y;b++)k[b]=f[b];for(p=Array(w-y-1),b=y+1;b<w;b++)p[b-y-1]=k[b];for(f=numeric.dot(N.Q,p),b=y+1;b<w;b++)k[b]=f[b-y-1];return{Q:k,B:I.B.concat(numeric.add(N.B,y+1))}}for(T=Math.min(w-1,g+3),n=Array(T-g),b=g+1;b<=T;b++)n[b-g-1]=e[b][g];for(r=numeric.house(n),p=numeric.getBlock(e,[g+1,g],[T,w-1]),f=numeric.tensor(r,numeric.dot(r,p)),b=g+1;b<=T;b++)for(h=e[b],m=f[b-g-1],y=g;y<w;y++)h[y]-=2*m[y-g];for(p=numeric.getBlock(e,[0,g+1],[w-1,T]),f=numeric.tensor(numeric.dot(p,r),r),b=0;b<w;b++)for(h=e[b],m=f[b],y=g+1;y<=T;y++)h[y]-=2*m[y-g-1];for(p=Array(T-g),b=g+1;b<=T;b++)p[b-g-1]=k[b];for(f=numeric.tensor(r,numeric.dot(r,p)),b=g+1;b<=T;b++)for(d=k[b],m=f[b-g-1],y=0;y<w;y++)d[y]-=2*m[y]}}throw new Error("numeric: eigenvalue iteration does not converge -- increase maxiter?")},numeric.eig=function(e,t){var n,r,a,s,i,o,u,c,l,d,h,p,f,m,b,g,y,x=numeric.toUpperHessenberg(e),v=numeric.QRFrancis(x.H,t),w=numeric.T,k=e.length,O=v.B,I=numeric.dot(v.Q,numeric.dot(x.H,numeric.transpose(v.Q))),N=new w(numeric.dot(v.Q,x.Q)),j=O.length,S=Math.sqrt;for(r=0;r<j;r++)if(n=O[r][0],n===O[r][1]);else{if(s=n+1,i=I[n][n],o=I[n][s],u=I[s][n],c=I[s][s],0===o&&0===u)continue;l=-i-c,d=i*c-o*u,h=l*l-4*d,h>=0?(p=l<0?-.5*(l-S(h)):-.5*(l+S(h)),g=(i-p)*(i-p)+o*o,y=u*u+(c-p)*(c-p),g>y?(g=S(g),m=(i-p)/g,b=o/g):(y=S(y),m=u/y,b=(c-p)/y),a=new w([[b,-m],[m,b]]),N.setRows(n,s,a.dot(N.getRows(n,s)))):(p=-.5*l,f=.5*S(-h),g=(i-p)*(i-p)+o*o,y=u*u+(c-p)*(c-p),g>y?(g=S(g+f*f),m=(i-p)/g,b=o/g,p=0,f/=g):(y=S(y+f*f),m=u/y,b=(c-p)/y,p=f/y,f=0),a=new w([[b,-m],[m,b]],[[p,f],[f,-p]]),N.setRows(n,s,a.dot(N.getRows(n,s))))}var T=N.dot(e).dot(N.transjugate()),C=(k=e.length,numeric.T.identity(k));for(s=0;s<k;s++)if(s>0)for(r=s-1;r>=0;r--){var E=T.get([r,r]),$=T.get([s,s]);numeric.neq(E.x,$.x)||numeric.neq(E.y,$.y)?(p=T.getRow(r).getBlock([r],[s-1]),f=C.getRow(s).getBlock([r],[s-1]),C.set([s,r],T.get([r,s]).neg().sub(p.dot(f)).div(E.sub($)))):C.setRow(s,C.getRow(r))}for(s=0;s<k;s++)p=C.getRow(s),C.setRow(s,p.div(p.norm2()));return C=C.transpose(),C=N.transjugate().dot(C),{lambda:T.getDiag(),E:C}},numeric.ccsSparse=function(e){var t,n,r,a=e.length,s=[];for(n=a-1;-1!==n;--n)for(r in t=e[n],t){for(r=parseInt(r);r>=s.length;)s[s.length]=0;0!==t[r]&&s[r]++}var i=s.length,o=Array(i+1);for(o[0]=0,n=0;n<i;++n)o[n+1]=o[n]+s[n];var u=Array(o[i]),c=Array(o[i]);for(n=a-1;-1!==n;--n)for(r in t=e[n],t)0!==t[r]&&(s[r]--,u[o[r]+s[r]]=n,c[o[r]+s[r]]=t[r]);return[o,u,c]},numeric.ccsFull=function(e){var t,n,r,a,s=e[0],i=e[1],o=e[2],u=numeric.ccsDim(e),c=u[0],l=u[1],d=numeric.rep([c,l],0);for(t=0;t<l;t++)for(r=s[t],a=s[t+1],n=r;n<a;++n)d[i[n]][t]=o[n];return d},numeric.ccsTSolve=function(e,t,n,r,a){function s(e){var t;if(0===n[e]){for(n[e]=1,t=p[e];t<p[e+1];++t)s(f[t]);a[y]=e,++y}}var i,o,u,c,l,d,h,p=e[0],f=e[1],m=e[2],b=p.length-1,g=Math.max,y=0;for(void 0===r&&(n=numeric.rep([b],0)),void 0===r&&(r=numeric.linspace(0,n.length-1)),void 0===a&&(a=[]),i=r.length-1;-1!==i;--i)s(r[i]);for(a.length=y,i=a.length-1;-1!==i;--i)n[a[i]]=0;for(i=r.length-1;-1!==i;--i)o=r[i],n[o]=t[o];for(i=a.length-1;-1!==i;--i){for(o=a[i],u=p[o],c=g(p[o+1],u),l=u;l!==c;++l)if(f[l]===o){n[o]/=m[l];break}for(h=n[o],l=u;l!==c;++l)d=f[l],d!==o&&(n[d]-=h*m[l])}return n},numeric.ccsDFS=function(e){this.k=Array(e),this.k1=Array(e),this.j=Array(e)},numeric.ccsDFS.prototype.dfs=function(e,t,n,r,a,s){var i,o,u,c=0,l=a.length,d=this.k,h=this.k1,p=this.j;if(0===r[e])for(r[e]=1,p[0]=e,d[0]=o=t[e],h[0]=u=t[e+1];;)if(o>=u){if(a[l]=p[c],0===c)return;++l,--c,o=d[c],u=h[c]}else i=s[n[o]],0===r[i]?(r[i]=1,d[c]=o,++c,p[c]=i,o=t[i],h[c]=u=t[i+1]):++o},numeric.ccsLPSolve=function(e,t,n,r,a,s,i){var o,u,c,l,d,h,p,f,m,b=e[0],g=e[1],y=e[2],x=(b.length,t[0]),v=t[1],w=t[2];for(u=x[a],c=x[a+1],r.length=0,o=u;o<c;++o)i.dfs(s[v[o]],b,g,n,r,s);for(o=r.length-1;-1!==o;--o)n[r[o]]=0;for(o=u;o!==c;++o)l=s[v[o]],n[l]=w[o];for(o=r.length-1;-1!==o;--o){for(l=r[o],d=b[l],h=b[l+1],p=d;p<h;++p)if(s[g[p]]===l){n[l]/=y[p];break}for(m=n[l],p=d;p<h;++p)f=s[g[p]],f!==l&&(n[f]-=m*y[p])}return n},numeric.ccsLUP1=function(e,t){var n,r,a,s,i,o,u,c=e[0].length-1,l=[numeric.rep([c+1],0),[],[]],d=[numeric.rep([c+1],0),[],[]],h=l[0],p=l[1],f=l[2],m=d[0],b=d[1],g=d[2],y=numeric.rep([c],0),x=numeric.rep([c],0),v=numeric.ccsLPSolve,w=(Math.max,Math.abs),k=numeric.linspace(0,c-1),O=numeric.linspace(0,c-1),I=new numeric.ccsDFS(c);for(void 0===t&&(t=1),n=0;n<c;++n){for(v(l,e,y,x,n,O,I),s=-1,i=-1,r=x.length-1;-1!==r;--r)a=x[r],a<=n||(o=w(y[a]),o>s&&(i=a,s=o));for(w(y[n])<t*s&&(r=k[n],s=k[i],k[n]=s,O[s]=n,k[i]=r,O[r]=i,s=y[n],y[n]=y[i],y[i]=s),s=h[n],i=m[n],u=y[n],p[s]=k[n],f[s]=1,++s,r=x.length-1;-1!==r;--r)a=x[r],o=y[a],x[r]=0,y[a]=0,a<=n?(b[i]=a,g[i]=o,++i):(p[s]=k[a],f[s]=o/u,++s);h[n+1]=s,m[n+1]=i}for(r=p.length-1;-1!==r;--r)p[r]=O[p[r]];return{L:l,U:d,P:k,Pinv:O}},numeric.ccsDFS0=function(e){this.k=Array(e),this.k1=Array(e),this.j=Array(e)},numeric.ccsDFS0.prototype.dfs=function(e,t,n,r,a,s,i){var o,u,c,l=0,d=a.length,h=this.k,p=this.k1,f=this.j;if(0===r[e])for(r[e]=1,f[0]=e,h[0]=u=t[s[e]],p[0]=c=t[s[e]+1];;){if(isNaN(u))throw new Error("Ow!");if(u>=c){if(a[d]=s[f[l]],0===l)return;++d,--l,u=h[l],c=p[l]}else o=n[u],0===r[o]?(r[o]=1,h[l]=u,++l,f[l]=o,o=s[o],u=t[o],p[l]=c=t[o+1]):++u}},numeric.ccsLPSolve0=function(e,t,n,r,a,s,i,o){var u,c,l,d,h,p,f,m,b,g=e[0],y=e[1],x=e[2],v=(g.length,t[0]),w=t[1],k=t[2];for(c=v[a],l=v[a+1],r.length=0,u=c;u<l;++u)o.dfs(w[u],g,y,n,r,s,i);for(u=r.length-1;-1!==u;--u)d=r[u],n[i[d]]=0;for(u=c;u!==l;++u)d=w[u],n[d]=k[u];for(u=r.length-1;-1!==u;--u){for(d=r[u],m=i[d],h=g[d],p=g[d+1],f=h;f<p;++f)if(y[f]===m){n[m]/=x[f];break}for(b=n[m],f=h;f<p;++f)n[y[f]]-=b*x[f];n[m]=b}},numeric.ccsLUP0=function(e,t){var n,r,a,s,i,o,u,c=e[0].length-1,l=[numeric.rep([c+1],0),[],[]],d=[numeric.rep([c+1],0),[],[]],h=l[0],p=l[1],f=l[2],m=d[0],b=d[1],g=d[2],y=numeric.rep([c],0),x=numeric.rep([c],0),v=numeric.ccsLPSolve0,w=(Math.max,Math.abs),k=numeric.linspace(0,c-1),O=numeric.linspace(0,c-1),I=new numeric.ccsDFS0(c);for(void 0===t&&(t=1),n=0;n<c;++n){for(v(l,e,y,x,n,O,k,I),s=-1,i=-1,r=x.length-1;-1!==r;--r)a=x[r],a<=n||(o=w(y[k[a]]),o>s&&(i=a,s=o));for(w(y[k[n]])<t*s&&(r=k[n],s=k[i],k[n]=s,O[s]=n,k[i]=r,O[r]=i),s=h[n],i=m[n],u=y[k[n]],p[s]=k[n],f[s]=1,++s,r=x.length-1;-1!==r;--r)a=x[r],o=y[k[a]],x[r]=0,y[k[a]]=0,a<=n?(b[i]=a,g[i]=o,++i):(p[s]=k[a],f[s]=o/u,++s);h[n+1]=s,m[n+1]=i}for(r=p.length-1;-1!==r;--r)p[r]=O[p[r]];return{L:l,U:d,P:k,Pinv:O}},numeric.ccsLUP=numeric.ccsLUP0,numeric.ccsDim=function(e){return[numeric.sup(e[1])+1,e[0].length-1]},numeric.ccsGetBlock=function(e,t,n){var r=numeric.ccsDim(e),a=r[0],s=r[1];void 0===t?t=numeric.linspace(0,a-1):"number"==typeof t&&(t=[t]),void 0===n?n=numeric.linspace(0,s-1):"number"==typeof n&&(n=[n]);var i,o,u,c,l,d=t.length,h=n.length,p=numeric.rep([s],0),f=[],m=[],b=[p,f,m],g=e[0],y=e[1],x=e[2],v=numeric.rep([a],0),w=0,k=numeric.rep([a],0);for(o=0;o<h;++o){c=n[o];var O=g[c],I=g[c+1];for(i=O;i<I;++i)u=y[i],k[u]=1,v[u]=x[i];for(i=0;i<d;++i)l=t[i],k[l]&&(f[w]=i,m[w]=v[t[i]],++w);for(i=O;i<I;++i)u=y[i],k[u]=0;p[o+1]=w}return b},numeric.ccsDot=function(e,t){var n,r,a,s,i,o,u,c,l,d,h,p=e[0],f=e[1],m=e[2],b=t[0],g=t[1],y=t[2],x=numeric.ccsDim(e),v=numeric.ccsDim(t),w=x[0],k=(x[1],v[1]),O=numeric.rep([w],0),I=numeric.rep([w],0),N=Array(w),j=numeric.rep([k],0),S=[],T=[],C=[j,S,T];for(a=0;a!==k;++a){for(s=b[a],i=b[a+1],l=0,r=s;r<i;++r)for(d=g[r],h=y[r],o=p[d],u=p[d+1],n=o;n<u;++n)c=f[n],0===I[c]&&(N[l]=c,I[c]=1,l+=1),O[c]=O[c]+m[n]*h;for(s=j[a],i=s+l,j[a+1]=i,r=l-1;-1!==r;--r)h=s+r,n=N[r],S[h]=n,T[h]=O[n],I[n]=0,O[n]=0;j[a+1]=j[a]+l}return C},numeric.ccsLUPSolve=function(e,t){var n=e.L,r=e.U,a=(e.P,t[0]),s=!1;"object"!=typeof a&&(t=[[0,t.length],numeric.linspace(0,t.length-1),t],a=t[0],s=!0);var i,o,u,c,l,d,h=t[1],p=t[2],f=n[0].length-1,m=a.length-1,b=numeric.rep([f],0),g=Array(f),y=numeric.rep([f],0),x=Array(f),v=numeric.rep([m+1],0),w=[],k=[],O=numeric.ccsTSolve,I=0;for(i=0;i<m;++i){for(l=0,u=a[i],c=a[i+1],o=u;o<c;++o)d=e.Pinv[h[o]],x[l]=d,y[d]=p[o],++l;for(x.length=l,O(n,y,b,x,g),o=x.length-1;-1!==o;--o)y[x[o]]=0;if(O(r,b,y,g,x),s)return y;for(o=g.length-1;-1!==o;--o)b[g[o]]=0;for(o=x.length-1;-1!==o;--o)d=x[o],w[I]=d,k[I]=y[d],y[d]=0,++I;v[i+1]=I}return[v,w,k]},numeric.ccsbinop=function(e,t){return void 0===t&&(t=""),Function("X","Y","var Xi = X[0], Xj = X[1], Xv = X[2];\nvar Yi = Y[0], Yj = Y[1], Yv = Y[2];\nvar n = Xi.length-1,m = Math.max(numeric.sup(Xj),numeric.sup(Yj))+1;\nvar Zi = numeric.rep([n+1],0), Zj = [], Zv = [];\nvar x = numeric.rep([m],0),y = numeric.rep([m],0);\nvar xk,yk,zk;\nvar i,j,j0,j1,k,p=0;\n"+t+"for(i=0;i<n;++i) {\n  j0 = Xi[i]; j1 = Xi[i+1];\n  for(j=j0;j!==j1;++j) {\n    k = Xj[j];\n    x[k] = 1;\n    Zj[p] = k;\n    ++p;\n  }\n  j0 = Yi[i]; j1 = Yi[i+1];\n  for(j=j0;j!==j1;++j) {\n    k = Yj[j];\n    y[k] = Yv[j];\n    if(x[k] === 0) {\n      Zj[p] = k;\n      ++p;\n    }\n  }\n  Zi[i+1] = p;\n  j0 = Xi[i]; j1 = Xi[i+1];\n  for(j=j0;j!==j1;++j) x[Xj[j]] = Xv[j];\n  j0 = Zi[i]; j1 = Zi[i+1];\n  for(j=j0;j!==j1;++j) {\n    k = Zj[j];\n    xk = x[k];\n    yk = y[k];\n"+e+"\n    Zv[j] = zk;\n  }\n  j0 = Xi[i]; j1 = Xi[i+1];\n  for(j=j0;j!==j1;++j) x[Xj[j]] = 0;\n  j0 = Yi[i]; j1 = Yi[i+1];\n  for(j=j0;j!==j1;++j) y[Yj[j]] = 0;\n}\nreturn [Zi,Zj,Zv];")},function(){var k,A,B,C;for(k in numeric.ops2)A=isFinite(eval("1"+numeric.ops2[k]+"0"))?"[Y[0],Y[1],numeric."+k+"(X,Y[2])]":"NaN",B=isFinite(eval("0"+numeric.ops2[k]+"1"))?"[X[0],X[1],numeric."+k+"(X[2],Y)]":"NaN",C=isFinite(eval("1"+numeric.ops2[k]+"0"))&&isFinite(eval("0"+numeric.ops2[k]+"1"))?"numeric.ccs"+k+"MM(X,Y)":"NaN",numeric["ccs"+k+"MM"]=numeric.ccsbinop("zk = xk "+numeric.ops2[k]+"yk;"),numeric["ccs"+k]=Function("X","Y",'if(typeof X === "number") return '+A+';\nif(typeof Y === "number") return '+B+";\nreturn "+C+";\n")}(),numeric.ccsScatter=function(e){var t,n=e[0],r=e[1],a=e[2],s=numeric.sup(r)+1,i=n.length,o=numeric.rep([s],0),u=Array(i),c=Array(i),l=numeric.rep([s],0);for(t=0;t<i;++t)l[r[t]]++;for(t=0;t<s;++t)o[t+1]=o[t]+l[t];var d,h,p=o.slice(0);for(t=0;t<i;++t)h=r[t],d=p[h],u[d]=n[t],c[d]=a[t],p[h]=p[h]+1;return[o,u,c]},numeric.ccsGather=function(e){var t,n,r,a,s,i=e[0],o=e[1],u=e[2],c=i.length-1,l=o.length,d=Array(l),h=Array(l),p=Array(l);for(s=0,t=0;t<c;++t)for(r=i[t],a=i[t+1],n=r;n!==a;++n)h[s]=t,d[s]=o[n],p[s]=u[n],++s;return[d,h,p]},numeric.sdim=function e(t,n,r){if(void 0===n&&(n=[]),"object"!=typeof t)return n;var a;for(a in void 0===r&&(r=0),r in n||(n[r]=0),t.length>n[r]&&(n[r]=t.length),t)t.hasOwnProperty(a)&&e(t[a],n,r+1);return n},numeric.sclone=function e(t,n,r){void 0===n&&(n=0),void 0===r&&(r=numeric.sdim(t).length);var a,s=Array(t.length);if(n===r-1){for(a in t)t.hasOwnProperty(a)&&(s[a]=t[a]);return s}for(a in t)t.hasOwnProperty(a)&&(s[a]=e(t[a],n+1,r));return s},numeric.sdiag=function(e){var t,n,r=e.length,a=Array(r);for(t=r-1;t>=1;t-=2)n=t-1,a[t]=[],a[t][t]=e[t],a[n]=[],a[n][n]=e[n];return 0===t&&(a[0]=[],a[0][0]=e[t]),a},numeric.sidentity=function(e){return numeric.sdiag(numeric.rep([e],1))},
numeric.stranspose=function(e){var t,n,r,a=[];e.length;for(t in e)if(e.hasOwnProperty(t))for(n in r=e[t],r)r.hasOwnProperty(n)&&("object"!=typeof a[n]&&(a[n]=[]),a[n][t]=r[n]);return a},numeric.sLUP=function(e,t){throw new Error("The function numeric.sLUP had a bug in it and has been removed. Please use the new numeric.ccsLUP function instead.")},numeric.sdotMM=function(e,t){var n,r,a,s,i,o,u,c=e.length,l=(t.length,numeric.stranspose(t)),d=l.length,h=Array(c);for(a=c-1;a>=0;a--){for(u=[],n=e[a],i=d-1;i>=0;i--){for(s in o=0,r=l[i],n)n.hasOwnProperty(s)&&s in r&&(o+=n[s]*r[s]);o&&(u[i]=o)}h[a]=u}return h},numeric.sdotMV=function(e,t){var n,r,a,s,i=e.length,o=Array(i);for(r=i-1;r>=0;r--){for(a in n=e[r],s=0,n)n.hasOwnProperty(a)&&t[a]&&(s+=n[a]*t[a]);s&&(o[r]=s)}return o},numeric.sdotVM=function(e,t){var n,r,a,s,i=[];for(n in e)if(e.hasOwnProperty(n))for(r in a=t[n],s=e[n],a)a.hasOwnProperty(r)&&(i[r]||(i[r]=0),i[r]+=s*a[r]);return i},numeric.sdotVV=function(e,t){var n,r=0;for(n in e)e[n]&&t[n]&&(r+=e[n]*t[n]);return r},numeric.sdot=function(e,t){var n=numeric.sdim(e).length,r=numeric.sdim(t).length,a=1e3*n+r;switch(a){case 0:return e*t;case 1001:return numeric.sdotVV(e,t);case 2001:return numeric.sdotMV(e,t);case 1002:return numeric.sdotVM(e,t);case 2002:return numeric.sdotMM(e,t);default:throw new Error("numeric.sdot not implemented for tensors of order "+n+" and "+r)}},numeric.sscatter=function(e){var t,n,r,a,s=e[0].length,i=e.length,o=[];for(n=s-1;n>=0;--n)if(e[i-1][n]){for(a=o,r=0;r<i-2;r++)t=e[r][n],a[t]||(a[t]=[]),a=a[t];a[e[r][n]]=e[r+1][n]}return o},numeric.sgather=function e(t,n,r){var a,s,i;for(s in void 0===n&&(n=[]),void 0===r&&(r=[]),a=r.length,t)if(t.hasOwnProperty(s))if(r[a]=parseInt(s),i=t[s],"number"==typeof i){if(i){if(0===n.length)for(s=a+1;s>=0;--s)n[s]=[];for(s=a;s>=0;--s)n[s].push(r[s]);n[a+1].push(i)}}else e(i,n,r);return r.length>a&&r.pop(),n},numeric.cLU=function(e){var t,n,r,a,s,i,o=e[0],u=e[1],c=e[2],l=o.length,d=0;for(t=0;t<l;t++)o[t]>d&&(d=o[t]);d++;var h,p=Array(d),f=Array(d),m=numeric.rep([d],1/0),b=numeric.rep([d],-1/0);for(r=0;r<l;r++)t=o[r],n=u[r],n<m[t]&&(m[t]=n),n>b[t]&&(b[t]=n);for(t=0;t<d-1;t++)b[t]>b[t+1]&&(b[t+1]=b[t]);for(t=d-1;t>=1;t--)m[t]<m[t-1]&&(m[t-1]=m[t]);for(t=0;t<d;t++)f[t]=numeric.rep([b[t]-m[t]+1],0),p[t]=numeric.rep([t-m[t]],0),t-m[t]+1,b[t]-t+1;for(r=0;r<l;r++)t=o[r],f[t][u[r]-m[t]]=c[r];for(t=0;t<d-1;t++)for(a=t-m[t],x=f[t],n=t+1;m[n]<=t&&n<d;n++)if(s=t-m[n],i=b[t]-t,v=f[n],h=v[s]/x[a],h){for(r=1;r<=i;r++)v[r+s]-=h*x[r+a];p[n][t-m[n]]=h}var g,y,x=[],v=[],w=[],k=[],O=[],I=[];for(l=0,g=0,t=0;t<d;t++){for(a=m[t],s=b[t],y=f[t],n=t;n<=s;n++)y[n-a]&&(x[l]=t,v[l]=n,w[l]=y[n-a],l++);for(y=p[t],n=a;n<t;n++)y[n-a]&&(k[g]=t,O[g]=n,I[g]=y[n-a],g++);k[g]=t,O[g]=t,I[g]=1,g++}return{U:[x,v,w],L:[k,O,I]}},numeric.cLUsolve=function(e,t){var n,r,a=e.L,s=e.U,i=numeric.clone(t),o=a[0],u=a[1],c=a[2],l=s[0],d=s[1],h=s[2],p=l.length,f=(o.length,i.length);for(r=0,n=0;n<f;n++){for(;u[r]<n;)i[n]-=c[r]*i[u[r]],r++;r++}for(r=p-1,n=f-1;n>=0;n--){for(;d[r]>n;)i[n]-=h[r]*i[d[r]],r--;i[n]/=h[r],r--}return i},numeric.cgrid=function(e,t){"number"==typeof e&&(e=[e,e]);var n,r,a,s=numeric.rep(e,-1);if("function"!=typeof t)switch(t){case"L":t=function(t,n){return t>=e[0]/2||n<e[1]/2};break;default:t=function(e,t){return!0}}for(a=0,n=1;n<e[0]-1;n++)for(r=1;r<e[1]-1;r++)t(n,r)&&(s[n][r]=a,a++);return s},numeric.cdelsq=function(e){var t,n,r,a,s,i=[[-1,0],[0,-1],[0,1],[1,0]],o=numeric.dim(e),u=o[0],c=o[1],l=[],d=[],h=[];for(t=1;t<u-1;t++)for(n=1;n<c-1;n++)if(!(e[t][n]<0)){for(r=0;r<4;r++)a=t+i[r][0],s=n+i[r][1],e[a][s]<0||(l.push(e[t][n]),d.push(e[a][s]),h.push(-1));l.push(e[t][n]),d.push(e[t][n]),h.push(4)}return[l,d,h]},numeric.cdotMV=function(e,t){var n,r,a,s=e[0],i=e[1],o=e[2],u=s.length;for(a=0,r=0;r<u;r++)s[r]>a&&(a=s[r]);for(a++,n=numeric.rep([a],0),r=0;r<u;r++)n[s[r]]+=o[r]*t[i[r]];return n},numeric.Spline=function(e,t,n,r,a){this.x=e,this.yl=t,this.yr=n,this.kl=r,this.kr=a},numeric.Spline.prototype._at=function(e,t){var n,r,a,s=this.x,i=this.yl,o=this.yr,u=this.kl,c=this.kr,l=numeric.add,d=numeric.sub,h=numeric.mul;n=d(h(u[t],s[t+1]-s[t]),d(o[t+1],i[t])),r=l(h(c[t+1],s[t]-s[t+1]),d(o[t+1],i[t])),a=(e-s[t])/(s[t+1]-s[t]);var p=a*(1-a);return l(l(l(h(1-a,i[t]),h(a,o[t+1])),h(n,p*(1-a))),h(r,p*a))},numeric.Spline.prototype.at=function(e){if("number"==typeof e){var t,n,r,a=this.x,s=a.length,i=Math.floor;for(t=0,n=s-1;n-t>1;)r=i((t+n)/2),a[r]<=e?t=r:n=r;return this._at(e,t)}s=e.length;var o,u=Array(s);for(o=s-1;-1!==o;--o)u[o]=this.at(e[o]);return u},numeric.Spline.prototype.diff=function(){var e,t,n,r=this.x,a=this.yl,s=this.yr,i=this.kl,o=this.kr,u=a.length,c=i,l=o,d=Array(u),h=Array(u),p=numeric.add,f=numeric.mul,m=numeric.div,b=numeric.sub;for(e=u-1;-1!==e;--e)t=r[e+1]-r[e],n=b(s[e+1],a[e]),d[e]=m(p(f(n,6),f(i[e],-4*t),f(o[e+1],-2*t)),t*t),h[e+1]=m(p(f(n,-6),f(i[e],2*t),f(o[e+1],4*t)),t*t);return new numeric.Spline(r,c,l,d,h)},numeric.Spline.prototype.roots=function(){function e(e){return e*e}var t=[],n=this.x,r=this.yl,a=this.yr,s=this.kl,i=this.kr;"number"==typeof r[0]&&(r=[r],a=[a],s=[s],i=[i]);var o,u,c,l,d,h,p,f,m,b,g,y,x,v,w,k,O,I,N,j,S,T,C,E=r.length,$=n.length-1,A=(t=Array(E),Math.sqrt);for(o=0;o!==E;++o){for(l=r[o],d=a[o],h=s[o],p=i[o],f=[],u=0;u!==$;u++){for(u>0&&d[u]*l[u]<0&&f.push(n[u]),k=n[u+1]-n[u],n[u],g=l[u],y=d[u+1],m=h[u]/k,b=p[u+1]/k,w=e(m-b+3*(g-y))+12*b*g,x=b+3*g+2*m-3*y,v=3*(b+m+2*(g-y)),w<=0?(I=x/v,O=I>n[u]&&I<n[u+1]?[n[u],I,n[u+1]]:[n[u],n[u+1]]):(I=(x-A(w))/v,N=(x+A(w))/v,O=[n[u]],I>n[u]&&I<n[u+1]&&O.push(I),N>n[u]&&N<n[u+1]&&O.push(N),O.push(n[u+1])),S=O[0],I=this._at(S,u),c=0;c<O.length-1;c++)if(T=O[c+1],N=this._at(T,u),0!==I)if(0===N||I*N>0)S=T,I=N;else{for(var _=0;C=(I*T-N*S)/(I-N),!(C<=S||C>=T);)if(j=this._at(C,u),j*N>0)T=C,N=j,-1===_&&(I*=.5),_=-1;else{if(!(j*I>0))break;S=C,I=j,1===_&&(N*=.5),_=1}f.push(C),S=O[c+1],I=this._at(S,u)}else f.push(S),S=T,I=N;0===N&&f.push(T)}t[o]=f}return"number"==typeof this.yl[0]?t[0]:t},numeric.spline=function(e,t,n,r){var a,s=e.length,i=[],o=[],u=[],c=numeric.sub,l=numeric.mul,d=numeric.add;for(a=s-2;a>=0;a--)o[a]=e[a+1]-e[a],u[a]=c(t[a+1],t[a]);"string"!=typeof n&&"string"!=typeof r||(n=r="periodic");var h=[[],[],[]];switch(typeof n){case"undefined":i[0]=l(3/(o[0]*o[0]),u[0]),h[0].push(0,0),h[1].push(0,1),h[2].push(2/o[0],1/o[0]);break;case"string":i[0]=d(l(3/(o[s-2]*o[s-2]),u[s-2]),l(3/(o[0]*o[0]),u[0])),h[0].push(0,0,0),h[1].push(s-2,0,1),h[2].push(1/o[s-2],2/o[s-2]+2/o[0],1/o[0]);break;default:i[0]=n,h[0].push(0),h[1].push(0),h[2].push(1)}for(a=1;a<s-1;a++)i[a]=d(l(3/(o[a-1]*o[a-1]),u[a-1]),l(3/(o[a]*o[a]),u[a])),h[0].push(a,a,a),h[1].push(a-1,a,a+1),h[2].push(1/o[a-1],2/o[a-1]+2/o[a],1/o[a]);switch(typeof r){case"undefined":i[s-1]=l(3/(o[s-2]*o[s-2]),u[s-2]),h[0].push(s-1,s-1),h[1].push(s-2,s-1),h[2].push(1/o[s-2],2/o[s-2]);break;case"string":h[1][h[1].length-1]=0;break;default:i[s-1]=r,h[0].push(s-1),h[1].push(s-1),h[2].push(1)}i="number"!=typeof i[0]?numeric.transpose(i):[i];var p=Array(i.length);if("string"==typeof n)for(a=p.length-1;-1!==a;--a)p[a]=numeric.ccsLUPSolve(numeric.ccsLUP(numeric.ccsScatter(h)),i[a]),p[a][s-1]=p[a][0];else for(a=p.length-1;-1!==a;--a)p[a]=numeric.cLUsolve(numeric.cLU(h),i[a]);return p="number"==typeof t[0]?p[0]:numeric.transpose(p),new numeric.Spline(e,t,t,p,p)},numeric.fftpow2=function e(t,n){var r=t.length;if(1!==r){var a,s,i=Math.cos,o=Math.sin,u=Array(r/2),c=Array(r/2),l=Array(r/2),d=Array(r/2);for(s=r/2,a=r-1;-1!==a;--a)--s,l[s]=t[a],d[s]=n[a],--a,u[s]=t[a],c[s]=n[a];e(u,c),e(l,d),s=r/2;var h,p,f,m=-6.283185307179586/r;for(a=r-1;-1!==a;--a)--s,-1===s&&(s=r/2-1),h=m*a,p=i(h),f=o(h),t[a]=u[s]+p*l[s]-f*d[s],n[a]=c[s]+p*d[s]+f*l[s]}},numeric._ifftpow2=function e(t,n){var r=t.length;if(1!==r){var a,s,i=Math.cos,o=Math.sin,u=Array(r/2),c=Array(r/2),l=Array(r/2),d=Array(r/2);for(s=r/2,a=r-1;-1!==a;--a)--s,l[s]=t[a],d[s]=n[a],--a,u[s]=t[a],c[s]=n[a];e(u,c),e(l,d),s=r/2;var h,p,f,m=6.283185307179586/r;for(a=r-1;-1!==a;--a)--s,-1===s&&(s=r/2-1),h=m*a,p=i(h),f=o(h),t[a]=u[s]+p*l[s]-f*d[s],n[a]=c[s]+p*d[s]+f*l[s]}},numeric.ifftpow2=function(e,t){numeric._ifftpow2(e,t),numeric.diveq(e,e.length),numeric.diveq(t,t.length)},numeric.convpow2=function(e,t,n,r){numeric.fftpow2(e,t),numeric.fftpow2(n,r);var a,s,i,o,u,c=e.length;for(a=c-1;-1!==a;--a)s=e[a],o=t[a],i=n[a],u=r[a],e[a]=s*i-o*u,t[a]=s*u+o*i;numeric.ifftpow2(e,t)},numeric.T.prototype.fft=function(){var e,t,n=this.x,r=this.y,a=n.length,s=Math.log,i=s(2),o=Math.ceil(s(2*a-1)/i),u=Math.pow(2,o),c=numeric.rep([u],0),l=numeric.rep([u],0),d=Math.cos,h=Math.sin,p=-3.141592653589793/a,f=numeric.rep([u],0),m=numeric.rep([u],0);Math.floor(a/2);for(e=0;e<a;e++)f[e]=n[e];if(void 0!==r)for(e=0;e<a;e++)m[e]=r[e];for(c[0]=1,e=1;e<=u/2;e++)t=p*e*e,c[e]=d(t),l[e]=h(t),c[u-e]=d(t),l[u-e]=h(t);var b=new numeric.T(f,m),g=new numeric.T(c,l);return b=b.mul(g),numeric.convpow2(b.x,b.y,numeric.clone(g.x),numeric.neg(g.y)),b=b.mul(g),b.x.length=a,b.y.length=a,b},numeric.T.prototype.ifft=function(){var e,t,n=this.x,r=this.y,a=n.length,s=Math.log,i=s(2),o=Math.ceil(s(2*a-1)/i),u=Math.pow(2,o),c=numeric.rep([u],0),l=numeric.rep([u],0),d=Math.cos,h=Math.sin,p=3.141592653589793/a,f=numeric.rep([u],0),m=numeric.rep([u],0);Math.floor(a/2);for(e=0;e<a;e++)f[e]=n[e];if(void 0!==r)for(e=0;e<a;e++)m[e]=r[e];for(c[0]=1,e=1;e<=u/2;e++)t=p*e*e,c[e]=d(t),l[e]=h(t),c[u-e]=d(t),l[u-e]=h(t);var b=new numeric.T(f,m),g=new numeric.T(c,l);return b=b.mul(g),numeric.convpow2(b.x,b.y,numeric.clone(g.x),numeric.neg(g.y)),b=b.mul(g),b.x.length=a,b.y.length=a,b.div(a)},numeric.gradient=function(e,t){var n=t.length,r=e(t);if(isNaN(r))throw new Error("gradient: f(x) is a NaN!");var a,s,i,o,u,c,l,d,h,p,f=Math.max,m=numeric.clone(t),b=Array(n),g=(numeric.div,numeric.sub,f=Math.max,.001),y=Math.abs,x=Math.min,v=0;for(a=0;a<n;a++)for(var w=f(1e-6*r,1e-8);;){if(++v,v>20)throw new Error("Numerical gradient fails");if(m[a]=t[a]+w,s=e(m),m[a]=t[a]-w,i=e(m),m[a]=t[a],isNaN(s)||isNaN(i))w/=16;else{if(b[a]=(s-i)/(2*w),u=t[a]-w,c=t[a],l=t[a]+w,d=(s-r)/w,h=(r-i)/w,p=f(y(b[a]),y(r),y(s),y(i),y(u),y(c),y(l),1e-8),o=x(f(y(d-b[a]),y(h-b[a]),y(d-h))/p,w/p),!(o>g))break;w/=16}}return b},numeric.uncmin=function(e,t,n,r,a,s,i){var o=numeric.gradient;void 0===i&&(i={}),void 0===n&&(n=1e-8),void 0===r&&(r=function(t){return o(e,t)}),void 0===a&&(a=1e3),t=numeric.clone(t);var u,c,l=t.length,d=e(t);if(isNaN(d))throw new Error("uncmin: f(x0) is a NaN!");var h=Math.max,p=numeric.norm2;n=h(n,numeric.epsilon);var f,m,b,g,y,x,v,w,k,O,I=i.Hinv||numeric.identity(l),N=numeric.dot,j=(numeric.inv,numeric.sub),S=numeric.add,T=numeric.tensor,C=numeric.div,E=numeric.mul,$=numeric.all,A=numeric.isFinite,_=numeric.neg,D=0,F="";for(m=r(t);D<a;){if("function"==typeof s&&s(D,t,d,m,I)){F="Callback returned true";break}if(!$(A(m))){F="Gradient has Infinity or NaN";break}if(f=_(N(I,m)),!$(A(f))){F="Search direction has Infinity or NaN";break}if(O=p(f),O<n){F="Newton step smaller than tol";break}for(k=1,c=N(m,f),y=t;D<a&&!(k*O<n)&&(g=E(f,k),y=S(t,g),u=e(y),u-d>=.1*k*c||isNaN(u));)k*=.5,++D;if(k*O<n){F="Line search step size smaller than tol";break}if(D===a){F="maxit reached during line search";break}b=r(y),x=j(b,m),w=N(x,g),v=N(I,x),I=j(S(I,E((w+N(x,v))/(w*w),T(g,g))),C(S(T(v,g),T(g,v)),w)),t=y,d=u,m=b,++D}return{solution:t,f:d,gradient:m,invHessian:I,iterations:D,message:F}},numeric.Dopri=function(e,t,n,r,a,s,i){this.x=e,this.y=t,this.f=n,this.ymid=r,this.iterations=a,this.events=i,this.message=s},numeric.Dopri.prototype._at=function(e,t){function n(e){return e*e}var r,a,s,i,o,u,c,l,d,h,p=this,f=p.x,m=p.y,b=p.f,g=p.ymid,y=(f.length,Math.floor,.5),x=numeric.add,v=numeric.mul,w=numeric.sub;return r=f[t],a=f[t+1],i=m[t],o=m[t+1],c=a-r,s=r+y*c,u=g[t],l=w(b[t],v(i,1/(r-s)+2/(r-a))),d=w(b[t+1],v(o,1/(a-s)+2/(a-r))),h=[n(e-a)*(e-s)/n(r-a)/(r-s),n(e-r)*n(e-a)/n(r-s)/n(a-s),n(e-r)*(e-s)/n(a-r)/(a-s),(e-r)*n(e-a)*(e-s)/n(r-a)/(r-s),(e-a)*n(e-r)*(e-s)/n(r-a)/(a-s)],x(x(x(x(v(i,h[0]),v(u,h[1])),v(o,h[2])),v(l,h[3])),v(d,h[4]))},numeric.Dopri.prototype.at=function(e){var t,n,r,a=Math.floor;if("number"!=typeof e){var s=e.length,i=Array(s);for(t=s-1;-1!==t;--t)i[t]=this.at(e[t]);return i}var o=this.x;for(t=0,n=o.length-1;n-t>1;)r=a(.5*(t+n)),o[r]<=e?t=r:n=r;return this._at(e,t)},numeric.dopri=function(e,t,n,r,a,s,i){void 0===a&&(a=1e-6),void 0===s&&(s=1e3);var o,u,c,l,d,h,p,f,m,b,g,y,x,v=[e],w=[n],k=[r(e,n)],O=[],I=.2,N=[.075,.225],j=[44/45,-56/15,32/9],S=[19372/6561,-25360/2187,64448/6561,-212/729],T=[9017/3168,-355/33,46732/5247,49/176,-5103/18656],C=[35/384,0,500/1113,125/192,-2187/6784,11/84],E=[.10013431883002395,0,.3918321794184259,-.02982460176594817,.05893268337240795,-.04497888809104361,.023904308236133973],$=[.2,.3,.8,8/9,1,1],A=[-71/57600,0,71/16695,-71/1920,17253/339200,-22/525,.025],_=0,D=(t-e)/10,F=0,R=numeric.add,M=numeric.mul,z=(Math.max,Math.min),L=Math.abs,P=numeric.norminf,B=Math.pow,W=numeric.any,V=numeric.lt,U=numeric.and,G=(numeric.sub,new numeric.Dopri(v,w,k,O,-1,""));for("function"==typeof i&&(g=i(e,n));e<t&&F<s;)if(++F,e+D>t&&(D=t-e),o=r(e+$[0]*D,R(n,M(I*D,k[_]))),u=r(e+$[1]*D,R(R(n,M(N[0]*D,k[_])),M(N[1]*D,o))),c=r(e+$[2]*D,R(R(R(n,M(j[0]*D,k[_])),M(j[1]*D,o)),M(j[2]*D,u))),l=r(e+$[3]*D,R(R(R(R(n,M(S[0]*D,k[_])),M(S[1]*D,o)),M(S[2]*D,u)),M(S[3]*D,c))),d=r(e+$[4]*D,R(R(R(R(R(n,M(T[0]*D,k[_])),M(T[1]*D,o)),M(T[2]*D,u)),M(T[3]*D,c)),M(T[4]*D,l))),m=R(R(R(R(R(n,M(k[_],D*C[0])),M(u,D*C[2])),M(c,D*C[3])),M(l,D*C[4])),M(d,D*C[5])),h=r(e+D,m),p=R(R(R(R(R(M(k[_],D*A[0]),M(u,D*A[2])),M(c,D*A[3])),M(l,D*A[4])),M(d,D*A[5])),M(h,D*A[6])),b="number"==typeof p?L(p):P(p),b>a){if(D=.2*D*B(a/b,.25),e+D===e){G.msg="Step size became too small";break}}else{if(O[_]=R(R(R(R(R(R(n,M(k[_],D*E[0])),M(u,D*E[2])),M(c,D*E[3])),M(l,D*E[4])),M(d,D*E[5])),M(h,D*E[6])),++_,v[_]=e+D,w[_]=m,k[_]=h,"function"==typeof i){var H,q,K=e,X=e+.5*D;if(y=i(X,O[_-1]),x=U(V(g,0),V(0,y)),W(x)||(K=X,X=e+D,g=y,y=i(X,m),x=U(V(g,0),V(0,y))),W(x)){for(var Y,Z,Q=0,J=1,ee=1;;){if("number"==typeof g)q=(ee*y*K-J*g*X)/(ee*y-J*g);else for(q=X,f=g.length-1;-1!==f;--f)g[f]<0&&y[f]>0&&(q=z(q,(ee*y[f]*K-J*g[f]*X)/(ee*y[f]-J*g[f])));if(q<=K||q>=X)break;H=G._at(q,_-1),Z=i(q,H),Y=U(V(g,0),V(0,Z)),W(Y)?(X=q,y=Z,x=Y,ee=1,-1===Q?J*=.5:J=1,Q=-1):(K=q,g=Z,J=1,1===Q?ee*=.5:ee=1,Q=1)}return m=G._at(.5*(e+q),_-1),G.f[_]=r(q,H),G.x[_]=q,G.y[_]=H,G.ymid[_-1]=m,G.events=x,G.iterations=F,G}}e+=D,n=m,g=y,D=z(.8*D*B(a/b,.25),4*D)}return G.iterations=F,G},numeric.LU=function(e,t){t=t||!1;var n,r,a,s,i,o,u,c,l,d=Math.abs,h=e.length,p=h-1,f=new Array(h);for(t||(e=numeric.clone(e)),a=0;a<h;++a){for(u=a,o=e[a],l=d(o[a]),r=a+1;r<h;++r)s=d(e[r][a]),l<s&&(l=s,u=r);for(f[a]=u,u!=a&&(e[a]=e[u],e[u]=o,o=e[a]),i=o[a],n=a+1;n<h;++n)e[n][a]/=i;for(n=a+1;n<h;++n){for(c=e[n],r=a+1;r<p;++r)c[r]-=c[a]*o[r],++r,c[r]-=c[a]*o[r];r===p&&(c[r]-=c[a]*o[r])}}return{LU:e,P:f}},numeric.LUsolve=function(e,t){var n,r,a,s,i,o=e.LU,u=o.length,c=numeric.clone(t),l=e.P;for(n=u-1;-1!==n;--n)c[n]=t[n];for(n=0;n<u;++n)for(a=l[n],l[n]!==n&&(i=c[n],c[n]=c[a],c[a]=i),s=o[n],r=0;r<n;++r)c[n]-=c[r]*s[r];for(n=u-1;n>=0;--n){for(s=o[n],r=n+1;r<u;++r)c[n]-=c[r]*s[r];c[n]/=s[n]}return c},numeric.solve=function(e,t,n){return numeric.LUsolve(numeric.LU(e,n),t)},numeric.echelonize=function(e){var t,n,r,a,s,i,o,u,c=numeric.dim(e),l=c[0],d=c[1],h=numeric.identity(l),p=Array(l),f=Math.abs,m=numeric.diveq;for(e=numeric.clone(e),t=0;t<l;++t){for(r=0,s=e[t],i=h[t],n=1;n<d;++n)f(s[r])<f(s[n])&&(r=n);for(p[t]=r,m(i,s[r]),m(s,s[r]),n=0;n<l;++n)if(n!==t){for(o=e[n],u=o[r],a=d-1;-1!==a;--a)o[a]-=s[a]*u;for(o=h[n],a=l-1;-1!==a;--a)o[a]-=i[a]*u}}return{I:h,A:e,P:p}},numeric.__solveLP=function(e,t,n,r,a,s,i){var o,u,c,l,d=numeric.sum,h=(numeric.log,numeric.mul),p=numeric.sub,f=numeric.dot,m=numeric.div,b=numeric.add,g=e.length,y=n.length,x=!1,v=0,w=1,k=(numeric.transpose(t),numeric.svd,numeric.transpose),O=(numeric.leq,Math.sqrt),I=Math.abs,N=(numeric.muleq,numeric.norminf,numeric.any,Math.min),j=numeric.all,S=numeric.gt,T=Array(g),C=Array(y),E=(numeric.rep([y],1),numeric.solve),$=p(n,f(t,s)),A=f(e,e);for(c=v;c<a;++c){var _,D;for(_=y-1;-1!==_;--_)C[_]=m(t[_],$[_]);var F=k(C);for(_=g-1;-1!==_;--_)T[_]=d(F[_]);w=.25*I(A/f(e,T));var R=100*O(A/f(T,T));for((!isFinite(w)||w>R)&&(w=R),l=b(e,h(w,T)),u=f(F,C),_=g-1;-1!==_;--_)u[_][_]+=1;D=E(u,m(l,w),!0);var M=m($,f(t,D)),z=1;for(_=y-1;-1!==_;--_)M[_]<0&&(z=N(z,-.999*M[_]));if(o=p(s,h(D,z)),$=p(n,f(t,o)),!j(S($,0)))return{solution:s,message:"",iterations:c};if(s=o,w<r)return{solution:o,message:"",iterations:c};if(i){var L=f(e,l),P=f(t,l);for(x=!0,_=y-1;-1!==_;--_)if(L*P[_]<0){x=!1;break}}else x=!(s[g-1]>=0);if(x)return{solution:o,message:"Unbounded",iterations:c}}return{solution:s,message:"maximum iteration count exceeded",iterations:c}},numeric._solveLP=function(e,t,n,r,a){var s=e.length,i=n.length,o=(numeric.sum,numeric.log,numeric.mul,numeric.sub),u=numeric.dot,c=(numeric.div,numeric.add,numeric.rep([s],0).concat([1])),l=numeric.rep([i,1],-1),d=numeric.blockMatrix([[t,l]]),h=n,p=numeric.rep([s],0).concat(Math.max(0,numeric.sup(numeric.neg(n)))+1),f=numeric.__solveLP(c,d,h,r,a,p,!1),m=numeric.clone(f.solution);m.length=s;var b=numeric.inf(o(n,u(t,m)));if(b<0)return{solution:NaN,message:"Infeasible",iterations:f.iterations};var g=numeric.__solveLP(e,t,n,r,a-f.iterations,m,!0);return g.iterations+=f.iterations,g},numeric.solveLP=function(e,t,n,r,a,s,i){if(void 0===i&&(i=1e3),void 0===s&&(s=numeric.epsilon),void 0===r)return numeric._solveLP(e,t,n,s,i);var o,u=r.length,c=r[0].length,l=t.length,d=numeric.echelonize(r),h=numeric.rep([c],0),p=d.P,f=[];for(o=p.length-1;-1!==o;--o)h[p[o]]=1;for(o=c-1;-1!==o;--o)0===h[o]&&f.push(o);var m=numeric.getRange,b=numeric.linspace(0,u-1),g=numeric.linspace(0,l-1),y=m(r,b,f),x=m(t,g,p),v=m(t,g,f),w=numeric.dot,k=numeric.sub,O=w(x,d.I),I=k(v,w(O,y)),N=k(n,w(O,a)),j=Array(p.length),S=Array(f.length);for(o=p.length-1;-1!==o;--o)j[o]=e[p[o]];for(o=f.length-1;-1!==o;--o)S[o]=e[f[o]];var T=k(S,w(j,w(d.I,y))),C=numeric._solveLP(T,I,N,s,i),E=C.solution;if(E!=E)return C;var $=w(d.I,k(a,w(y,E))),A=Array(e.length);for(o=p.length-1;-1!==o;--o)A[p[o]]=$[o];for(o=f.length-1;-1!==o;--o)A[f[o]]=E[o];return{solution:A,message:C.message,iterations:C.iterations}},numeric.MPStoLP=function(e){function t(t){throw new Error("MPStoLP: "+t+"\nLine "+n+": "+e[n]+"\nCurrent state: "+o[i]+"\n")}e instanceof String&&e.split("\n");var n,r,a,s,i=0,o=["Initial state","NAME","ROWS","COLUMNS","RHS","BOUNDS","ENDATA"],u=e.length,c=0,l={},d=[],h=0,p={},f=0,m=[],b=[],g=[];for(n=0;n<u;++n){a=e[n];var y=a.match(/\S*/g),x=[];for(r=0;r<y.length;++r)""!==y[r]&&x.push(y[r]);if(0!==x.length){for(r=0;r<o.length&&a.substr(0,o[r].length)!==o[r];++r);if(r<o.length){if(i=r,1===r&&(s=x[1]),6===r)return{name:s,c:m,A:numeric.transpose(b),b:g,rows:l,vars:p}}else switch(i){case 0:case 1:t("Unexpected line");case 2:switch(x[0]){case"N":0===c?c=x[1]:t("Two or more N rows");break;case"L":l[x[1]]=h,d[h]=1,g[h]=0,++h;break;case"G":l[x[1]]=h,d[h]=-1,g[h]=0,++h;break;case"E":l[x[1]]=h,d[h]=0,g[h]=0,++h;break;default:t("Parse error "+numeric.prettyPrint(x))}break;case 3:p.hasOwnProperty(x[0])||(p[x[0]]=f,m[f]=0,b[f]=numeric.rep([h],0),++f);var v=p[x[0]];for(r=1;r<x.length;r+=2)if(x[r]!==c){var w=l[x[r]];b[v][w]=(d[w]<0?-1:1)*parseFloat(x[r+1])}else m[v]=parseFloat(x[r+1]);break;case 4:for(r=1;r<x.length;r+=2)g[l[x[r]]]=(d[l[x[r]]]<0?-1:1)*parseFloat(x[r+1]);break;case 5:break;case 6:t("Internal error")}}}t("Reached end of file without ENDATA")},numeric.seedrandom={pow:Math.pow,random:Math.random},function(e,t,n,r,a,s,i){function o(e){var t,r,a=this,s=e.length,i=0,o=a.i=a.j=a.m=0;for(a.S=[],a.c=[],s||(e=[s++]);i<n;)a.S[i]=i++;for(i=0;i<n;i++)t=a.S[i],o=l(o+t+e[i%s]),r=a.S[o],a.S[i]=r,a.S[o]=t;a.g=function(e){var t=a.S,r=l(a.i+1),s=t[r],i=l(a.j+s),o=t[i];t[r]=o,t[i]=s;for(var u=t[l(s+o)];--e;)r=l(r+1),s=t[r],i=l(i+s),o=t[i],t[r]=o,t[i]=s,u=u*n+t[l(s+o)];return a.i=r,a.j=i,u},a.g(n)}function u(e,t,n,r,a){if(n=[],a=typeof e,t&&"object"==a)for(r in e)if(r.indexOf("S")<5)try{n.push(u(e[r],t-1))}catch(e){}return n.length?n:e+("string"!=a?"\0":"")}function c(e,t,n,r){for(e+="",n=0,r=0;r<e.length;r++)t[l(r)]=l((n^=19*t[l(r)])+e.charCodeAt(r));for(r in e="",t)e+=String.fromCharCode(t[r]);return e}function l(e){return e&n-1}t.seedrandom=function(l,d){var h,p=[];return l=c(u(d?[l,e]:arguments.length?l:[(new Date).getTime(),e,window],3),p),h=new o(p),c(h.S,e),t.random=function(){for(var e=h.g(r),t=i,o=0;e<a;)e=(e+o)*n,t*=n,o=h.g(1);for(;e>=s;)e/=2,t/=2,o>>>=1;return(e+o)/t},l},i=t.pow(n,r),a=t.pow(2,a),s=2*a,c(t.random(),e)}([],numeric.seedrandom,256,6,52),function(e){function t(e){if("object"!=typeof e)return e;var n,r=[],a=e.length;for(n=0;n<a;n++)r[n+1]=t(e[n]);return r}function n(e){if("object"!=typeof e)return e;var t,r=[],a=e.length;for(t=1;t<a;t++)r[t-1]=n(e[t]);return r}function r(e,t,n){var r,a,s,i,o;for(s=1;s<=n;s+=1){for(e[s][s]=1/e[s][s],o=-e[s][s],r=1;r<s;r+=1)e[r][s]=o*e[r][s];if(i=s+1,n<i)break;for(a=i;a<=n;a+=1)for(o=e[s][a],e[s][a]=0,r=1;r<=s;r+=1)e[r][a]=e[r][a]+o*e[r][s]}}function a(e,t,n,r){var a,s,i,o;for(s=1;s<=n;s+=1){for(o=0,a=1;a<s;a+=1)o+=e[a][s]*r[a];r[s]=(r[s]-o)/e[s][s]}for(i=1;i<=n;i+=1)for(s=n+1-i,r[s]=r[s]/e[s][s],o=-r[s],a=1;a<s;a+=1)r[a]=r[a]+o*e[a][s]}function s(e,t,n,r){var a,s,i,o,u,c;for(s=1;s<=n;s+=1){if(r[1]=s,c=0,i=s-1,i<1){if(c=e[s][s]-c,c<=0)break;e[s][s]=Math.sqrt(c)}else{for(o=1;o<=i;o+=1){for(u=e[o][s],a=1;a<o;a+=1)u-=e[a][s]*e[a][o];u/=e[o][o],e[o][s]=u,c+=u*u}if(c=e[s][s]-c,c<=0)break;e[s][s]=Math.sqrt(c)}r[1]=0}}function i(e,t,n,i,o,u,c,l,d,h,p,f,m,b,g,y){function x(){for(b[1]=b[1]+1,j=_,I=1;I<=h;I+=1){for(j+=1,L=-l[I],N=1;N<=i;N+=1)L+=c[N][I]*o[N];if(Math.abs(L)<q&&(L=0),I>p)g[j]=L;else if(g[j]=-Math.abs(L),L>0){for(N=1;N<=i;N+=1)c[N][I]=-c[N][I];l[I]=-l[I]}}for(I=1;I<=m;I+=1)g[_+f[I]]=0;for(F=0,z=0,I=1;I<=h;I+=1)g[_+I]<z*g[M+I]&&(F=I,z=g[_+I]/g[M+I]);return 0===F?999:0}function v(){for(I=1;I<=i;I+=1){for(L=0,N=1;N<=i;N+=1)L+=e[N][I]*c[N][F];g[I]=L}for(S=E,I=1;I<=i;I+=1)g[S+I]=0;for(N=m+1;N<=i;N+=1)for(I=1;I<=i;I+=1)g[S+I]=g[S+I]+e[I][N]*g[N];for(G=!0,I=m;I>=1;I-=1){for(L=g[I],j=A+I*(I+3)/2,S=j-I,N=I+1;N<=m;N+=1)L-=g[j]*g[$+N],j+=N;if(L/=g[S],g[$+I]=L,f[I]<p)break;if(L<0)break;G=!1,C=I}if(!G)for(P=g[D+C]/g[$+C],I=1;I<=m&&!(f[I]<p)&&!(g[$+I]<0);I+=1)z=g[D+I]/g[$+I],z<P&&(P=z,C=I);for(L=0,I=E+1;I<=E+i;I+=1)L+=g[I]*g[I];if(Math.abs(L)<=q){if(G)return y[1]=1,999;for(I=1;I<=m;I+=1)g[D+I]=g[D+I]-P*g[$+I];return g[D+m+1]=g[D+m+1]+P,700}for(L=0,I=1;I<=i;I+=1)L+=g[E+I]*c[I][F];for(B=-g[_+F]/L,H=!0,G||P<B&&(B=P,H=!1),I=1;I<=i;I+=1)o[I]=o[I]+B*g[E+I],Math.abs(o[I])<q&&(o[I]=0);for(u[1]=u[1]+B*L*(B/2+g[D+m+1]),I=1;I<=m;I+=1)g[D+I]=g[D+I]-B*g[$+I];if(g[D+m+1]=g[D+m+1]+B,!H){for(L=-l[F],N=1;N<=i;N+=1)L+=o[N]*c[N][F];if(F>p)g[_+F]=L;else if(g[_+F]=-Math.abs(L),L>0){for(N=1;N<=i;N+=1)c[N][F]=-c[N][F];l[F]=-l[F]}return 700}for(m+=1,f[m]=F,j=A+(m-1)*m/2+1,I=1;I<=m-1;I+=1)g[j]=g[I],j+=1;if(m===i)g[j]=g[i];else{for(I=i;I>=m+1&&0!==g[I]&&(W=Math.max(Math.abs(g[I-1]),Math.abs(g[I])),V=Math.min(Math.abs(g[I-1]),Math.abs(g[I])),z=g[I-1]>=0?Math.abs(W*Math.sqrt(1+V*V/(W*W))):-Math.abs(W*Math.sqrt(1+V*V/(W*W))),W=g[I-1]/z,V=g[I]/z,1!==W);I-=1)if(0===W)for(g[I-1]=V*z,N=1;N<=i;N+=1)z=e[N][I-1],e[N][I-1]=e[N][I],e[N][I]=z;else for(g[I-1]=z,U=V/(1+W),N=1;N<=i;N+=1)z=W*e[N][I-1]+V*e[N][I],e[N][I]=U*(e[N][I-1]+z)-e[N][I],e[N][I-1]=z;g[j]=g[m]}return 0}function w(){if(j=A+C*(C+1)/2+1,S=j+C,0===g[S])return 798;if(W=Math.max(Math.abs(g[S-1]),Math.abs(g[S])),V=Math.min(Math.abs(g[S-1]),Math.abs(g[S])),z=g[S-1]>=0?Math.abs(W*Math.sqrt(1+V*V/(W*W))):-Math.abs(W*Math.sqrt(1+V*V/(W*W))),W=g[S-1]/z,V=g[S]/z,1===W)return 798;if(0===W){for(I=C+1;I<=m;I+=1)z=g[S-1],g[S-1]=g[S],g[S]=z,S+=I;for(I=1;I<=i;I+=1)z=e[I][C],e[I][C]=e[I][C+1],e[I][C+1]=z}else{for(U=V/(1+W),I=C+1;I<=m;I+=1)z=W*g[S-1]+V*g[S],g[S]=U*(g[S-1]+z)-g[S],g[S-1]=z,S+=I;for(I=1;I<=i;I+=1)z=W*e[I][C]+V*e[I][C+1],e[I][C+1]=U*(e[I][C]+z)-e[I][C+1],e[I][C]=z}return 0}function k(){for(S=j-C,I=1;I<=C;I+=1)g[S]=g[j],j+=1,S+=1;return g[D+C]=g[D+C+1],f[C]=f[C+1],C+=1,C<m?797:0}function O(){return g[D+m]=g[D+m+1],g[D+m+1]=0,f[m]=0,m-=1,b[2]=b[2]+1,0}var I,N,j,S,T,C,E,$,A,_,D,F,R,M,z,L,P,B,W,V,U,G,H,q,K,X,Y;R=Math.min(i,h),j=2*i+R*(R+5)/2+2*h+1,q=1e-60;do{q+=q,K=1+.1*q,X=1+.2*q}while(K<=1||X<=1);for(I=1;I<=i;I+=1)g[I]=t[I];for(I=i+1;I<=j;I+=1)g[I]=0;for(I=1;I<=h;I+=1)f[I]=0;if(T=[],0===y[1]){if(s(e,n,i,T),0!==T[1])return void(y[1]=2);a(e,n,i,t),r(e,n,i)}else{for(N=1;N<=i;N+=1)for(o[N]=0,I=1;I<=N;I+=1)o[N]=o[N]+e[I][N]*t[I];for(N=1;N<=i;N+=1)for(t[N]=0,I=N;I<=i;I+=1)t[N]=t[N]+e[N][I]*o[I]}for(u[1]=0,N=1;N<=i;N+=1)for(o[N]=t[N],u[1]=u[1]+g[N]*o[N],g[N]=0,I=N+1;I<=i;I+=1)e[I][N]=0;for(u[1]=-u[1]/2,y[1]=0,E=i,$=E+i,D=$+R,A=D+R+1,_=A+R*(R+1)/2,M=_+h,I=1;I<=h;I+=1){for(L=0,N=1;N<=i;N+=1)L+=c[N][I]*c[N][I];g[M+I]=Math.sqrt(L)}for(m=0,b[1]=0,b[2]=0,Y=0;;){if(Y=x(),999===Y)return;for(;Y=v(),0!==Y;){if(999===Y)return;if(700===Y)if(C===m)O();else{for(;w(),Y=k(),797===Y;);O()}}}}function o(e,r,a,s,o,u){e=t(e),r=t(r),a=t(a);var c,l,d,h,p,f,m=[],b=[],g=[],y=[],x=[];if(o=o||0,u=u?t(u):[void 0,0],s=s?t(s):[],l=e.length-1,d=a[1].length-1,!s)for(c=1;c<=d;c+=1)s[c]=0;for(c=1;c<=d;c+=1)b[c]=0;for(h=0,p=Math.min(l,d),c=1;c<=l;c+=1)g[c]=0;for(m[1]=0,c=1;c<=2*l+p*(p+5)/2+2*d+1;c+=1)y[c]=0;for(c=1;c<=2;c+=1)x[c]=0;return i(e,r,l,l,g,m,a,s,l,d,o,b,h,x,y,u),f="",1===u[1]&&(f="constraints are inconsistent, no solution!"),2===u[1]&&(f="matrix D in quadratic function is not positive definite!"),{solution:n(g),value:n(m),unconstrained_solution:n(r),iterations:n(x),iact:n(b),message:f}}e.solveQP=o}(numeric),numeric.svd=function(e){function t(e,t){return e=Math.abs(e),t=Math.abs(t),e>t?e*Math.sqrt(1+t*t/e/e):0==t?e:t*Math.sqrt(1+e*e/t/t)}var n,r=numeric.epsilon,a=1e-64/r,s=50,i=0,o=0,u=0,c=0,l=0,d=numeric.clone(e),h=d.length,p=d[0].length;if(h<p)throw"Need more rows than columns";var f=new Array(p),m=new Array(p);for(o=0;o<p;o++)f[o]=m[o]=0;var b=numeric.rep([p,p],0),g=0,y=0,x=0,v=0,w=0,k=0,O=0;for(o=0;o<p;o++){for(f[o]=y,O=0,l=o+1,u=o;u<h;u++)O+=d[u][o]*d[u][o];if(O<=a)y=0;else for(g=d[o][o],y=Math.sqrt(O),g>=0&&(y=-y),x=g*y-O,d[o][o]=g-y,u=l;u<p;u++){for(O=0,c=o;c<h;c++)O+=d[c][o]*d[c][u];for(g=O/x,c=o;c<h;c++)d[c][u]+=g*d[c][o]}for(m[o]=y,O=0,u=l;u<p;u++)O+=d[o][u]*d[o][u];if(O<=a)y=0;else{for(g=d[o][o+1],y=Math.sqrt(O),g>=0&&(y=-y),x=g*y-O,d[o][o+1]=g-y,u=l;u<p;u++)f[u]=d[o][u]/x;for(u=l;u<h;u++){for(O=0,c=l;c<p;c++)O+=d[u][c]*d[o][c];for(c=l;c<p;c++)d[u][c]+=O*f[c]}}w=Math.abs(m[o])+Math.abs(f[o]),w>v&&(v=w)}for(o=p-1;-1!=o;o+=-1){if(0!=y){for(x=y*d[o][o+1],u=l;u<p;u++)b[u][o]=d[o][u]/x;for(u=l;u<p;u++){for(O=0,c=l;c<p;c++)O+=d[o][c]*b[c][u];for(c=l;c<p;c++)b[c][u]+=O*b[c][o]}}for(u=l;u<p;u++)b[o][u]=0,b[u][o]=0;b[o][o]=1,y=f[o],l=o}for(o=p-1;-1!=o;o+=-1){for(l=o+1,y=m[o],u=l;u<p;u++)d[o][u]=0;if(0!=y){for(x=d[o][o]*y,u=l;u<p;u++){for(O=0,c=l;c<h;c++)O+=d[c][o]*d[c][u];for(g=O/x,c=o;c<h;c++)d[c][u]+=g*d[c][o]}for(u=o;u<h;u++)d[u][o]=d[u][o]/y}else for(u=o;u<h;u++)d[u][o]=0;d[o][o]+=1}for(r*=v,c=p-1;-1!=c;c+=-1)for(var I=0;I<s;I++){var N=!1;for(l=c;-1!=l;l+=-1){if(Math.abs(f[l])<=r){N=!0;break}if(Math.abs(m[l-1])<=r)break}if(!N){i=0,O=1;var j=l-1;for(o=l;o<c+1&&(g=O*f[o],f[o]=i*f[o],!(Math.abs(g)<=r));o++)for(y=m[o],x=t(g,y),m[o]=x,i=y/x,O=-g/x,u=0;u<h;u++)w=d[u][j],k=d[u][o],d[u][j]=w*i+k*O,d[u][o]=-w*O+k*i}if(k=m[c],l==c){if(k<0)for(m[c]=-k,u=0;u<p;u++)b[u][c]=-b[u][c];break}if(I>=s-1)throw"Error: no convergence.";for(v=m[l],w=m[c-1],y=f[c-1],x=f[c],g=((w-k)*(w+k)+(y-x)*(y+x))/(2*x*w),y=t(g,1),g=g<0?((v-k)*(v+k)+x*(w/(g-y)-x))/v:((v-k)*(v+k)+x*(w/(g+y)-x))/v,i=1,O=1,o=l+1;o<c+1;o++){for(y=f[o],w=m[o],x=O*y,y*=i,k=t(g,x),f[o-1]=k,i=g/k,O=x/k,g=v*i+y*O,y=-v*O+y*i,x=w*O,w*=i,u=0;u<p;u++)v=b[u][o-1],k=b[u][o],b[u][o-1]=v*i+k*O,b[u][o]=-v*O+k*i;for(k=t(g,x),m[o-1]=k,i=g/k,O=x/k,g=i*y+O*w,v=-O*y+i*w,u=0;u<h;u++)w=d[u][o-1],k=d[u][o],d[u][o-1]=w*i+k*O,d[u][o]=-w*O+k*i}f[l]=0,f[c]=g,m[c]=v}for(o=0;o<m.length;o++)m[o]<r&&(m[o]=0);for(o=0;o<p;o++)for(u=o-1;u>=0;u--)if(m[u]<m[o]){for(i=m[u],m[u]=m[o],m[o]=i,c=0;c<d.length;c++)n=d[c][o],d[c][o]=d[c][u],d[c][u]=n;for(c=0;c<b.length;c++)n=b[c][o],b[c][o]=b[c][u],b[c][u]=n;o=u}return{U:d,S:m,V:b}}}).call(this,__webpack_require__(103))},function(e,t,n){"use strict";function r(e,t="float32",n){return t=t||"float32",s.c(e),new a.b(e,t,n)}n.d(t,"a",function(){return r});var a=n(6),s=n(8)},function(e,t,n){"use strict";function r(e,t){const n=Object(i.a)(e,"x","reverse"),r={x:n},o={dims:t};return a.a.runKernel(s.uc,r,o)}n.d(t,"a",function(){return u});var a=n(5),s=n(3),i=n(2),o=n(4);const u=Object(o.b)({reverse_:r})},,function(e,t,n){"use strict";function r(e,t){let n=Object(o.a)(e,"a","greater"),r=Object(o.a)(t,"b","greater");[n,r]=Object(i.makeTypesMatch)(n,r),Object(u.a)(n.shape,r.shape);const c={a:n,b:r};return a.a.runKernel(s.ob,c)}n.d(t,"a",function(){return l});var a=n(5),s=n(3),i=n(23),o=n(2),u=n(17),c=n(4);const l=Object(c.b)({greater_:r})},function(e,t,n){"use strict";function r(e,t,n,r){if(null==r&&(r=Object(s.r)(e)),"complex64"===r)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!Object(s.A)(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=t){Object(s.c)(t);const e=Object(s.O)(t),r=Object(s.O)(n);Object(s.b)(e===r,()=>`Based on the provided shape, [${t}], the tensor should have `+`${e} values but has ${r}`);for(let e=0;e<n.length;++e){const r=n[e],a=e!==n.length-1||r!==Object(s.O)(t.slice(e));Object(s.b)(n[e]===t[e]||!a,()=>"Error creating a new Tensor. Inferred shape "+`(${n}) does not match the provided `+`shape (${t}). `)}}return Object(s.A)(e)||Array.isArray(e)||(e=[e]),t=t||n,e="string"!==r?Object(i.toTypedArray)(e,r):Object(s.m)(e,[],!0),a.a.makeTensor(e,t,r)}n.d(t,"a",function(){return r});var a=n(5),s=n(8),i=n(10)},function(e,t,n){"use strict";function r(e,t){const n=Object(i.a)(e,"x","transpose");if(null==t&&(t=n.shape.map((e,t)=>t).reverse()),o.b(n.rank===t.length,()=>`Error in transpose: rank of input ${n.rank} `+`must match length of perm ${t}.`),t.forEach(e=>{o.b(e>=0&&e<n.rank,()=>`All entries in 'perm' must be between 0 and ${n.rank-1}`+` but got ${t}`)}),n.rank<=1)return n.clone();const r={x:n},u={perm:t};return a.a.runKernel(s.Yc,r,u)}n.d(t,"a",function(){return c});var a=n(5),s=n(3),i=n(2),o=n(8),u=n(4);const c=Object(u.b)({transpose_:r})},function(e,t,n){"use strict";function r(e,t){let n=Object(o.a)(e,"base","pow"),r=Object(o.a)(t,"exp","pow");[n,r]=Object(i.makeTypesMatch)(n,r);const u={a:n,b:r};return a.a.runKernel(s.gc,u)}n.d(t,"a",function(){return c});var a=n(5),s=n(3),i=n(23),o=n(2),u=n(4);const c=Object(u.b)({pow_:r})},function(e,t,n){"use strict";function r(e,t,n,r,a){const i=s.slice_util.isSliceContinous(r,t,n),o=s.util.sizeFromShape(n),u=s.util.computeStrides(r);if(i){const n=s.slice_util.computeFlatOffset(t,u);return"string"===a?e.slice(n,n+o):e.subarray(n,n+o)}const c="string"===a?s.backend_util.fromUint8ToStringArray(e):e,l=Object(s.buffer)(r,a,c),d=Object(s.buffer)(n,a);for(let e=0;e<d.size;++e){const n=d.indexToLoc(e),r=n.map((e,n)=>e+t[n]);d.set(l.get(...r),...n)}return"string"===a?s.backend_util.fromStringArrayToUint8(d.values):d.values}function a(e){const{inputs:t,backend:n,attrs:a}=e,{x:o}=t,{begin:u,size:c}=a;Object(i.a)(o,"slice");const[l,d]=s.slice_util.parseSliceParams(o,u,c);s.slice_util.assertParamsValid(o,l,d);const h=n.data.get(o.dataId).values,p=r(h,l,d,o.shape,o.dtype);return n.makeTensorInfo(d,o.dtype,p)}n.d(t,"c",function(){return r}),n.d(t,"a",function(){return a}),n.d(t,"b",function(){return o});var s=n(0),i=n(11);const o={kernelName:s.Slice,backendName:"cpu",kernelFunc:a}},function(e,t,n){"use strict";function r(e,t="float32"){if("complex64"===t){const t=r(e,"float32"),n=Object(o.a)(e,"float32");return Object(i.a)(t,n)}const n=Object(s.D)(Object(s.O)(e),t)
;return a.a.makeTensor(n,e,t)}n.d(t,"a",function(){return r});var a=n(5),s=n(8),i=n(58),o=n(80)},function(e,t,n){"use strict";function r(e,t,n=0){const r=Object(i.a)(e,"x","pad");if(0===r.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const o={paddings:t,constantValue:n},u={x:r};return a.a.runKernel(s.ec,u,o)}n.d(t,"a",function(){return u});var a=n(5),s=n(3),i=n(2),o=n(4);const u=Object(o.b)({pad_:r})},function(e,t,n){"use strict";(function(e){function r(t){const n=Object(y.env)().global;if(void 0!==n.atob)return n.atob(t);if(void 0!==e)return new e(t,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}function a(e,t){const n=Array.isArray(e)?String.fromCharCode.apply(null,e):r(e);return t?n:n.toLowerCase()}function s(e,t,n,r=!1){const s=e[t];return null!=s?a(s.s,r):n}function i(e,t,n){const r=e[t];return r?r.b:n}function o(e,t,n){const r=e[t]||{},a=null!=r.i?r.i:null!=r.f?r.f:n;return"number"==typeof a?a:parseInt(a,10)}function u(e){switch("string"==typeof e&&(e=x.a[e]),e){case x.a.DT_FLOAT:return"float32";case x.a.DT_INT32:case x.a.DT_INT64:case x.a.DT_INT8:case x.a.DT_UINT8:return"int32";case x.a.DT_BOOL:return"bool";case x.a.DT_DOUBLE:return"float32";case x.a.DT_STRING:return"string";default:return null}}function c(e,t,n){const r=e[t];return r&&r.func?r.func.name:n}function l(e,t,n){const r=e[t];return r&&r.type?u(r.type):n}function d(e,t,n){const r=e[t];return r&&r.list&&r.list.type?r.list.type.map(e=>u(e)):n}function h(e){if(!e.unknownRank)return null!=e.dim?e.dim.map(e=>"number"==typeof e.size?e.size:parseInt(e.size,10)):[]}function p(e,t,n){const r=e[t];return r&&r.shape?h(r.shape):n}function f(e,t,n){const r=e[t];return r?((r.list.f&&r.list.f.length?r.list.f:r.list.i)||[]).map(e=>"number"==typeof e?e:parseInt(e,10)):n}function m(e,t,n,r=!1){const s=e[t];return s&&s.list&&s.list.s?s.list.s.map(e=>a(e,r)):n}function b(e,t,n){const r=e[t];return r&&r.list&&r.list.shape?r.list.shape.map(e=>h(e)):n}function g(e,t,n){const r=e[t];return r&&r.list&&r.list.b?r.list.b:n}n.d(t,"a",function(){return L}),n.d(t,"i",function(){return s}),n.d(t,"c",function(){return i}),n.d(t,"f",function(){return o}),n.d(t,"e",function(){return l}),n.d(t,"d",function(){return d}),n.d(t,"k",function(){return p}),n.d(t,"g",function(){return f}),n.d(t,"h",function(){return m}),n.d(t,"j",function(){return b}),n.d(t,"b",function(){return g});var y=n(0),x=n(87),v=n(104),w=n(1),k=n(254),O=n(255),I=n(256),N=n(257),j=n(258),S=n(259),T=n(260),C=n(261),E=n(262),$=n(263),A=n(264),_=n(265),D=n(266),F=n(267),R=n(268),M=n(269),z=n(270);class L{static get Instance(){return this._instance||(this._instance=new this)}constructor(){const e=[k,O,I,N,j,S,T,A,$,C,_,D,F,R,M,z,E],t=[].concat(...e.map(e=>e.json));this.opMappers=t.reduce((e,t)=>(e[t.tfOpName]=t,e),{})}transformGraph(e,t={}){const n=e.node,r=[],a=[],s=[],i=n.reduce((e,t)=>(e[t.name]=this.mapNode(t),t.op.startsWith("Placeholder")?r.push(e[t.name]):"Const"===t.op?a.push(e[t.name]):null!=t.input&&0!==t.input.length||s.push(e[t.name]),e),{});let o=[];const u=[];let c={},l={};null!=t&&(c=this.mapSignatureEntries(t.inputs),l=this.mapSignatureEntries(t.outputs));const d=Object.keys(i);d.forEach(e=>{const t=i[e];t.inputNames.forEach(e=>{const[n]=Object(w.b)(e);t.inputs.push(i[n]),i[n].children.push(t)})}),0===Object.keys(l).length?d.forEach(e=>{const t=i[e];0===t.children.length&&u.push(t)}):Object.keys(l).forEach(e=>{const[t]=Object(w.b)(e),n=i[t];null!=n&&(n.signatureKey=l[e],u.push(n))}),Object.keys(c).length>0?Object.keys(c).forEach(e=>{const[t]=Object(w.b)(e),n=i[t];n&&(n.signatureKey=c[e],o.push(n))}):o=r;let h={};null!=e.library&&null!=e.library.function&&(h=e.library.function.reduce((e,t)=>(e[t.signature.name]=this.mapFunction(t),e),{}));const p={nodes:i,inputs:o,outputs:u,weights:a,placeholders:r,signature:t,functions:h};return s.length>0&&(p.initNodes=s),p}mapSignatureEntries(e){return Object.keys(e||{}).reduce((t,n)=>(t[e[n].name]=n,t),{})}mapNode(e){const t=Object(v.b)(e.op)||this.opMappers[e.op]||{};null==e.attr&&(e.attr={});const n={name:e.name,op:e.op,category:t.category,inputNames:(e.input||[]).map(e=>e.startsWith("^")?e.substr(1):e),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr};return null!=t.inputs&&(n.inputParams=t.inputs.reduce((e,t)=>(e[t.name]={type:t.type,inputIndexStart:t.start,inputIndexEnd:t.end},e),{})),null!=t.attrs&&(n.attrParams=t.attrs.reduce((t,n)=>{const r=n.type;let a=void 0;switch(n.type){case"string":a=s(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=s(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"string[]":a=m(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=m(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number":a=o(e.attr,n.tfName,n.defaultValue||0),void 0===a&&n.tfDeprecatedName&&(a=o(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number[]":a=f(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=f(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool":a=i(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=i(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool[]":a=g(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=g(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape":a=p(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=p(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape[]":a=b(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=b(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype":a=l(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=l(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype[]":a=d(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=d(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"func":a=c(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=c(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${n.type} for op: ${e.op}`)}return t[n.name]={value:a,type:r},t},{})),n}mapFunction(e){const t=e.nodeDef,n=[],r=[];let a={};null!=t&&(a=t.reduce((e,t)=>(e[t.name]=this.mapNode(t),"Const"===t.op&&r.push(e[t.name]),e),{}));const s=[],i=[];e.signature.inputArg.forEach(e=>{const[t]=Object(w.b)(e.name),n={name:t,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:u(e.type),type:"dtype"}},children:[]};n.signatureKey=e.name,s.push(n),a[t]=n});const o=Object.keys(a);o.forEach(e=>{const t=a[e];t.inputNames.forEach(e=>{const[n]=Object(w.b)(e);t.inputs.push(a[n]),a[n].children.push(t)})});const c=e.ret;e.signature.outputArg.forEach(e=>{const[t,n]=Object(w.b)(c[e.name]),r=a[t];null!=r&&(r.defaultOutput=n,i.push(r))});const l=this.mapArgsToSignature(e);return{nodes:a,inputs:s,outputs:i,weights:r,placeholders:n,signature:l}}mapArgsToSignature(e){return{methodName:e.signature.name,inputs:e.signature.inputArg.reduce((e,t)=>(e[t.name]=this.mapArgToTensorInfo(t),e),{}),outputs:e.signature.outputArg.reduce((t,n)=>(t[n.name]=this.mapArgToTensorInfo(n,e.ret),t),{})}}mapArgToTensorInfo(e,t){let n=e.name;return null!=t&&(n=t[n]),{name:n,dtype:e.type}}}}).call(this,n(215).Buffer)},function(e,t,n){"use strict";function r(e,t){const n=Object(i.a)(e,"real","complex"),r=Object(i.a)(t,"imag","complex");o.e(n.shape,r.shape,`real and imag shapes, ${n.shape} and ${r.shape}, `+"must match in call to tf.complex().");const u={real:n,imag:r};return a.a.runKernel(s.z,u)}n.d(t,"a",function(){return c});var a=n(5),s=n(3),i=n(2),o=n(8),u=n(4);const c=Object(u.b)({complex_:r})},function(e,t,n){"use strict";function r(e,t){const n=Object(i.a)(e,"a","logicalAnd","bool"),r=Object(i.a)(t,"b","logicalAnd","bool");Object(o.a)(n.shape,r.shape);const u={a:n,b:r};return a.a.runKernel(s.Fb,u)}n.d(t,"a",function(){return c});var a=n(5),s=n(3),i=n(2),o=n(17),u=n(4);const c=Object(u.b)({logicalAnd_:r})},function(e,t,n){"use strict";function r(e,t=0){const n=Object(i.b)(e,"tensors","stack","string_or_numeric");o.b(n.length>=1,()=>"Pass at least one tensor to tf.stack"),n.length>0&&o.b(t<=n[0].rank,()=>"Axis must be <= rank of the tensor");const r=n,u={axis:t};return a.a.runKernel(s.dc,r,u)}n.d(t,"a",function(){return c});var a=n(5),s=n(3),i=n(2),o=n(8),u=n(4);const c=Object(u.b)({stack_:r})},function(e,t,n){"use strict";function r(e){const{inputs:t,backend:n}=e,{input:r}=t,a=n.data.get(r.dataId).complexTensorInfos.real,s=n.data.get(a.dataId).values;return n.makeTensorInfo(a.shape,a.dtype,s)}n.d(t,"a",function(){return r}),n.d(t,"b",function(){return s});var a=n(0);const s={kernelName:a.Real,backendName:"cpu",kernelFunc:r}},function(e,t,n){"use strict";function r(e,t){const n=d(e,t);return f.get(n)}function a(e){return m.get(e)}function s(e){const t=f.entries(),n=[];for(;;){const{done:r,value:a}=t.next();if(r)break;const[s,i]=a,[o]=s.split("_");o===e&&n.push(i)}return n}function i(e){const{kernelName:t,backendName:n}=e,r=d(t,n);f.has(r)&&console.warn(`The kernel '${t}' for backend `+`'${n}' is already registered`),f.set(r,e)}function o(e){const{kernelName:t}=e;m.has(t)&&Object(h.c)().getBool("DEBUG")&&console.warn(`Overriding the gradient for '${t}'`),m.set(t,e)}function u(e,t){const n=d(e,t);if(!f.has(n))throw new Error(`The kernel '${e}' for backend `+`'${t}' is not registered`);f.delete(n)}function c(e){if(!m.has(e))throw new Error(`The gradient '${e}' for backend is not registered`);m.delete(e)}function l(e,t){const n=s(e);n.forEach(e=>{const n=Object.assign({},e,{backendName:t});i(n)})}function d(e,t){return`${t}_${e}`}n.d(t,"c",function(){return r}),n.d(t,"b",function(){return a}),n.d(t,"d",function(){return s}),n.d(t,"f",function(){return i}),n.d(t,"e",function(){return o}),n.d(t,"h",function(){return u}),n.d(t,"g",function(){return c}),n.d(t,"a",function(){return l});var h=n(22),p=n(109);const f=Object(p.a)("kernelRegistry",()=>new Map),m=Object(p.a)("gradRegistry",()=>new Map)},function(e,t,n){"use strict";function r(e,t=0){const n=Object(i.a)(e,"x","expandDims","string_or_numeric");o.b(t<=n.rank,()=>"Axis must be <= rank of the tensor");const r={input:n},u={dim:t};return a.a.runKernel(s.bb,r,u)}n.d(t,"a",function(){return c});var a=n(5),s=n(3),i=n(2),o=n(8),u=n(4);const c=Object(u.b)({expandDims_:r})},function(e,t){e.exports=function(){throw new Error("define cannot be used indirect")}},function(e,t,n){"use strict";function r(e,t,n,r,c="NHWC",d=[1,1],h){const p=Object(i.a)(e,"x","conv2d"),f=Object(i.a)(t,"filter","conv2d");let m=p,b=!1;3===p.rank&&(b=!0,m=Object(l.a)(p,[1,p.shape[0],p.shape[1],p.shape[2]])),o.b(4===m.rank,()=>`Error in conv2d: input must be rank 4, but got rank ${m.rank}.`),o.b(4===f.rank,()=>"Error in conv2d: filter must be rank 4, but got rank "+`${f.rank}.`),null!=h&&o.b(o.v(r),()=>"Error in conv2d: pad must be an integer when using, "+`dimRoundingMode ${h} but got pad ${r}.`);const g="NHWC"===c?m.shape[3]:m.shape[1];o.b(g===f.shape[2],()=>`Error in conv2d: depth of input (${g}) must match `+`input depth for filter ${f.shape[2]}.`),o.b(u.h(n,d),()=>"Error in conv2D: Either strides or dilations must be 1. "+`Got strides ${n} and dilations '${d}'`);const y={x:m,filter:f},x={strides:n,pad:r,dataFormat:c,dilations:d,dimRoundingMode:h},v=a.a.runKernel(s.C,y,x);return b?Object(l.a)(v,[v.shape[1],v.shape[2],v.shape[3]]):v}n.d(t,"a",function(){return d});var a=n(5),s=n(3),i=n(2),o=n(8),u=n(31),c=n(4),l=n(7);const d=Object(c.b)({conv2d_:r})},function(e,t,n){"use strict";function r(e,t){let n=Object(o.a)(e,"a","greaterEqual"),r=Object(o.a)(t,"b","greaterEqual");[n,r]=Object(i.makeTypesMatch)(n,r),Object(u.a)(n.shape,r.shape);const c={a:n,b:r};return a.a.runKernel(s.pb,c)}n.d(t,"a",function(){return l});var a=n(5),s=n(3),i=n(23),o=n(2),u=n(17),c=n(4);const l=Object(c.b)({greaterEqual_:r})},function(e,t,n){"use strict";function r(e,t){let n=Object(o.a)(e,"a","lessEqual"),r=Object(o.a)(t,"b","lessEqual");[n,r]=Object(i.makeTypesMatch)(n,r),Object(u.a)(n.shape,r.shape);const c={a:n,b:r};return a.a.runKernel(s.Ab,c)}n.d(t,"a",function(){return l});var a=n(5),s=n(3),i=n(23),o=n(2),u=n(17),c=n(4);const l=Object(c.b)({lessEqual_:r})},function(e,t,n){"use strict";n.d(t,"c",function(){return i}),n.d(t,"a",function(){return u}),n.d(t,"b",function(){return c});var r=n(0),a=n(27),s=n(29);const i=Object(a.a)((e,t)=>e+t),o=Object(s.b)((e,t,n,r)=>({real:e+n,imag:t+r})),u=Object(s.a)(r.Add,i,o),c={kernelName:r.Add,backendName:"cpu",kernelFunc:u}},function(e,t,n){"use strict";n.d(t,"c",function(){return i}),n.d(t,"a",function(){return u}),n.d(t,"b",function(){return c});var r=n(0),a=n(27),s=n(29);const i=Object(a.a)((e,t)=>e*t),o=Object(s.b)((e,t,n,r)=>({real:e*n-t*r,imag:e*r+t*n})),u=Object(s.a)(r.Multiply,i,o),c={kernelName:r.Multiply,backendName:"cpu",kernelFunc:u}},function(e,t,n){"use strict";function r(e){const t=Object(i.a)(e,"x","clone","string_or_numeric"),n={x:t};return a.a.runKernel(s.rb,n)}n.d(t,"a",function(){return u});var a=n(5),s=n(3),i=n(2),o=n(4);const u=Object(o.b)({clone_:r})},function(e,t,n){"use strict";function r(e){const t=Object(i.a)(e,"x","sigmoid"),n={x:t};return a.a.runKernel(s.Bc,n)}n.d(t,"a",function(){return u});var a=n(5),s=n(3),i=n(2),o=n(4);const u=Object(o.b)({sigmoid_:r})},function(e,t,n){"use strict";function r(e,t=null,n=!1){const r=Object(i.a)(e,"x","max"),o={x:r},u={reductionIndices:t,keepDims:n};return a.a.runKernel(s.Ib,o,u)}n.d(t,"a",function(){return u});var a=n(5),s=n(3),i=n(2),o=n(4);const u=Object(o.b)({max_:r})},function(e,t,n){"use strict";function r(e){return(t,n,r)=>{const s=a.util.getTypedArrayFromDType(n,t.length);for(let n=0;n<t.length;++n)s[n]=e(t[n],r);return s}}n.d(t,"a",function(){return r});var a=n(0)},function(e,t,n){"use strict";function r(e,t){return a(e,t)}function a(e,t,n=new Map,r=new Set){if(null==e)return null;if(r.has(e))throw new Error("Circular references are not supported.");if(n.has(e))return n.get(e);const s=t(e);if(s.recurse&&null!==s.value)throw new Error("A deep map function may not return both a value and recurse=true.");if(s.recurse){if(c(e)){const s=Array.isArray(e)?[]:{};r.add(e);for(const i in e){const o=e[i],u=a(o,t,n,r);s[i]=u}return r.delete(e),s}throw new Error(`Can't recurse into non-iterable type: ${e}`)}return n.set(e,s.value),s.value}function s(e,t=o){return i(e,t)}function i(e,t,n=new Set){const r=e[0];if(n.has(r))throw new Error("Circular references are not supported.");const a=t(e);if(a.recurse&&null!==a.value)throw new Error("A deep zip function may not return both a value and recurse=true.");if(a.recurse){if(c(r)){const a=Array.isArray(r)?[]:{};n.add(r);for(const s in r){const r=e.map(e=>e[s]),o=i(r,t,n);a[s]=o}return n.delete(r),a}throw new Error(`Can't recurse into non-iterable type: ${r}`)}return a.value}function o(e){return null===e?null:c(e[0])?{value:null,recurse:!0}:{value:e,recurse:!1}}async function u(e,t){const n=new Map;a(e,t,n);for(const e of Array.from(n.keys())){const t=n.get(e);if(h.util.isPromise(t)){const r=await t;n.set(e,r)}}const r=a(e,t,n);return r}function c(e){return null!=e&&!ArrayBuffer.isView(e)&&(Array.isArray(e)||"object"==typeof e&&!(e instanceof h.Tensor))}function l(e){return null==e||d(e)||Array.isArray(e)||"object"==typeof e&&e instanceof h.Tensor||h.util.isTypedArray(e)}function d(e){return null===e||"object"!=typeof e&&"function"!=typeof e}n.d(t,"b",function(){return r}),n.d(t,"d",function(){return s}),n.d(t,"f",function(){return o}),n.d(t,"c",function(){return u}),n.d(t,"e",function(){return c}),n.d(t,"a",function(){return l});var h=n(0)},function(e,t,n){"use strict";function r(e){const t=Object(i.a)(e,"x","log"),n={x:t};return a.a.runKernel(s.Cb,n)}n.d(t,"a",function(){return u});var a=n(5),s=n(3),i=n(2),o=n(4);const u=Object(o.b)({log_:r})},function(e,t,n){"use strict";function r(e,t,n=0){const r=Object(i.a)(e,"x","split"),o={x:r},u={numOrSizeSplits:t,axis:n};return a.a.runKernel(s.Lc,o,u)}n.d(t,"a",function(){return u});var a=n(5),s=n(3),i=n(2),o=n(4);const u=Object(o.b)({split_:r})},function(e,t,n){"use strict";function r(e,t){Object(s.d)(e);const n=Object(a.c)(e,t);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");const r=null;return Object(i.a)(e,r,n,t)}n.d(t,"a",function(){return r});var a=n(2),s=n(8),i=n(51)},function(e,t,n){"use strict";function r(e){const{inputs:t,backend:n,attrs:l}=e,{x:d}=t,{dtype:h}=l;if("complex64"===h){if("complex64"===d.dtype)return Object(u.a)({inputs:{x:d},backend:n});const e=Object(i.a)(n,d.shape,d.dtype),t=r({inputs:{x:d},backend:n,attrs:{dtype:"float32"}}),a=Object(o.a)({inputs:{real:t,imag:e},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),a}if("complex64"===d.dtype){const e=Object(c.a)({inputs:{input:d},backend:n}),t=r({inputs:{x:e},backend:n,attrs:{dtype:h}});return n.disposeIntermediateTensorInfo(e),t}if(!a.util.hasEncodingLoss(d.dtype,h)){const e=Object(u.a)({inputs:{x:d},backend:n});return{dataId:e.dataId,shape:e.shape,dtype:h}}if("int32"===h){const e=n.data.get(d.dataId).values,t=Int32Array.from(e);return n.makeTensorInfo(d.shape,"int32",t)}if("bool"===h){const e=n.data.get(d.dataId).values,t=a.util.toTypedArray([0],d.dtype),[r,i]=Object(s.a)((e,t)=>e!==t?1:0)(d.shape,[],e,t,"bool");return n.makeTensorInfo(i,"bool",r)}throw new Error(`Error in Cast: failed to cast ${d.dtype} to ${h}`)}n.d(t,"a",function(){return r}),n.d(t,"b",function(){return l});var a=n(0),s=n(27),i=n(214),o=n(38),u=n(42),c=n(61);const l={kernelName:a.Cast,backendName:"cpu",kernelFunc:r}},function(e,t,n){"use strict";function r(e,t,n){const r=a(e,t,n),s=r<0?-(r+1):r;e.splice(s,0,t)}function a(e,t,n){return i(e,t,n||s)}function s(e,t){return e>t?1:e<t?-1:0}function i(e,t,n){let r=0,a=e.length,s=0,i=!1;for(;r<a;){s=r+(a-r>>>1);const o=n(t,e[s]);o>0?r=s+1:(a=s,i=!o)}return i?r:-r-1}function o(e,t,n,r,a){return l(e,t,n,r,a,0)}function u(e,t,n,r,a,s){return l(e,t,n,r,a,0,!1,s,!0)}function c(e,t,n,r,a,s){return l(e,t,n,r,a,s,!0)}function l(e,t,n,a,s,i,o=!1,u=!1,c=!1){const l=[];for(let e=0;e<t.length;e++)t[e]>s&&l.push({score:t[e],boxIndex:e,suppressBeginIndex:0});l.sort(p);const f=i>0?-.5/i:0,m=[],b=[];for(;m.length<n&&l.length>0;){const t=l.pop(),{score:n,boxIndex:i,suppressBeginIndex:o}=t;if(n<s)break;let u=!1;for(let n=m.length-1;n>=o;--n){const r=d(e,i,m[n]);if(r>=a){u=!0;break}if(t.score=t.score*h(a,f,r),t.score<=s)break}t.suppressBeginIndex=m.length,u||(t.score===n?(m.push(i),b.push(t.score)):t.score>s&&r(l,t,p))}const g=m.length,y=n-g;u&&y>0&&(m.push(...new Array(y).fill(0)),b.push(...new Array(y).fill(0)));const x={selectedIndices:m};return o&&(x.selectedScores=b),c&&(x.validOutputs=g),x}function d(e,t,n){const r=e.subarray(4*t,4*t+4),a=e.subarray(4*n,4*n+4),s=Math.min(r[0],r[2]),i=Math.min(r[1],r[3]),o=Math.max(r[0],r[2]),u=Math.max(r[1],r[3]),c=Math.min(a[0],a[2]),l=Math.min(a[1],a[3]),d=Math.max(a[0],a[2]),h=Math.max(a[1],a[3]),p=(o-s)*(u-i),f=(d-c)*(h-l);if(p<=0||f<=0)return 0;const m=Math.max(s,c),b=Math.max(i,l),g=Math.min(o,d),y=Math.min(u,h),x=Math.max(g-m,0)*Math.max(y-b,0);return x/(p+f-x)}function h(e,t,n){const r=Math.exp(t*n*n);return n<=e?r:0}function p(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}n.d(t,"a",function(){return o}),n.d(t,"b",function(){return u}),n.d(t,"c",function(){return c})},function(e,t,n){"use strict";function r(e,t="float32"){if("complex64"===t){const t=r(e,"float32"),n=r(e,"float32");return Object(i.a)(t,n)}const n=Object(s.F)(Object(s.O)(e),t);return a.a.makeTensor(n,e,t)}n.d(t,"a",function(){return r});var a=n(5),s=n(8),i=n(58)},function(e,t,n){"use strict";function r(e){const t=Object(i.a)(e,"x","relu"),n={x:t};return a.a.runKernel(s.nc,n)}n.d(t,"a",function(){return u});var a=n(5),s=n(3),i=n(2),o=n(4);const u=Object(o.b)({relu_:r})},function(e,t,n){"use strict";function r(e,t=0){const n=Object(i.a)(e,"x","step"),r={x:n},o={alpha:t};return a.a.runKernel(s.Pc,r,o)}n.d(t,"a",function(){return u});var a=n(5),s=n(3),i=n(2),o=n(4);const u=Object(o.b)({step_:r})},function(e,t,n){"use strict";function r(e,t=0){const n=Object(i.a)(e,"x","unstack","string_or_numeric");o.b(t>=-n.shape.length&&t<n.shape.length,()=>`Axis = ${t} is not in [-${n.shape.length}, ${n.shape.length})`);const r={value:n},u={axis:t};return a.a.runKernel(s.ad,r,u)}n.d(t,"a",function(){return c});var a=n(5),s=n(3),i=n(2),o=n(8),u=n(4);const c=Object(u.b)({unstack_:r})},function(e,t,n){"use strict";function r(e){let t;return t=0===e.rank||1===e.rank?Object(c.a)(e,[1,1,1,e.size]):2===e.rank?Object(c.a)(e,[1,1,e.shape[0],e.shape[1]]):3===e.rank?Object(c.a)(e,[1,e.shape[0],e.shape[1],e.shape[2]]):e,t}function a(e,t,n,a,l,d){null==d&&(d=.001);const h=Object(o.a)(e,"x","batchNorm"),p=Object(o.a)(t,"mean","batchNorm"),f=Object(o.a)(n,"variance","batchNorm");let m,b;null!=l&&(m=Object(o.a)(l,"scale","batchNorm")),null!=a&&(b=Object(o.a)(a,"offset","batchNorm")),u.b(p.rank===f.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),u.b(null==b||p.rank===b.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),u.b(null==m||p.rank===m.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");const g=r(h),y={x:g,scale:m,offset:b,mean:p,variance:f},x={varianceEpsilon:d},v=s.a.runKernel(i.jb,y,x);return Object(c.a)(v,h.shape)}n.d(t,"a",function(){return d});var s=n(5),i=n(3),o=n(2),u=n(8),c=n(7),l=n(4);const d=Object(l.b)({batchNorm_:a})},function(e,t,n){"use strict";function r(e,t){const n=Object(i.a)(e,"x","tile","string_or_numeric");o.b(n.rank===t.length,()=>`Error in transpose: rank of input ${n.rank} `+`must match length of reps ${t}.`);const r={x:n},u={reps:t};return a.a.runKernel(s.Vc,r,u)}n.d(t,"a",function(){return c});var a=n(5),s=n(3),i=n(2),o=n(8),u=n(4);const c=Object(u.b)({tile_:r})},function(e,t,n){var r=n(281),a=n(282),s=n(283),i=n(284),o=n(285),u=n(286),c=n(287);c.alea=r,c.xor128=a,c.xorwow=s,c.xorshift7=i,c.xor4096=o,c.tychei=u,e.exports=c},function(e,t,n){"use strict";var r,a;n.d(t,"a",function(){return r}),function(e){e[e.DT_INVALID=0]="DT_INVALID",e[e.DT_FLOAT=1]="DT_FLOAT",e[e.DT_DOUBLE=2]="DT_DOUBLE",e[e.DT_INT32=3]="DT_INT32",e[e.DT_UINT8=4]="DT_UINT8",e[e.DT_INT16=5]="DT_INT16",e[e.DT_INT8=6]="DT_INT8",e[e.DT_STRING=7]="DT_STRING",e[e.DT_COMPLEX64=8]="DT_COMPLEX64",e[e.DT_INT64=9]="DT_INT64",e[e.DT_BOOL=10]="DT_BOOL",e[e.DT_QINT8=11]="DT_QINT8",e[e.DT_QUINT8=12]="DT_QUINT8",e[e.DT_QINT32=13]="DT_QINT32",e[e.DT_BFLOAT16=14]="DT_BFLOAT16",e[e.DT_FLOAT_REF=101]="DT_FLOAT_REF",e[e.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",e[e.DT_INT32_REF=103]="DT_INT32_REF",e[e.DT_UINT8_REF=104]="DT_UINT8_REF",e[e.DT_INT16_REF=105]="DT_INT16_REF",e[e.DT_INT8_REF=106]="DT_INT8_REF",e[e.DT_STRING_REF=107]="DT_STRING_REF",e[e.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",e[e.DT_INT64_REF=109]="DT_INT64_REF",e[e.DT_BOOL_REF=110]="DT_BOOL_REF",e[e.DT_QINT8_REF=111]="DT_QINT8_REF",e[e.DT_QUINT8_REF=112]="DT_QUINT8_REF",e[e.DT_QINT32_REF=113]="DT_QINT32_REF",e[e.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF"}(r||(r={})),function(e){let t;(function(e){e[e.LEGACY=0]="LEGACY",e[e.V1=1]="V1",e[e.V2=2]="V2"})(t=e.CheckpointFormatVersion||(e.CheckpointFormatVersion={}))}(a||(a={}))},function(e,t,n){"use strict";function r(e,t=null,n=!1){const r=Object(i.a)(e,"x","mean"),o={x:r},u={axis:t,keepDims:n};return a.a.runKernel(s.Pb,o,u)}n.d(t,"a",function(){return u});var a=n(5),s=n(3),i=n(2),o=n(4);const u=Object(o.b)({mean_:r})},function(e,t,n){"use strict";function r(e,t){if("string"===e||"string"===t){if("string"===e&&"string"===t)return"string";throw new Error(`Can not upcast ${e} with ${t}`)}return l[e][t]}function a(e){return r(e,"int32")}var s,i,o,u,c;n.d(t,"a",function(){return s}),n.d(t,"c",function(){return r}),n.d(t,"b",function(){return a}),function(e){e.R0="R0",e.R1="R1",e.R2="R2",e.R3="R3",e.R4="R4",e.R5="R5",e.R6="R6"}(s||(s={})),function(e){e.float32="float32",e.int32="int32",e.bool="int32",e.complex64="complex64"}(i||(i={})),function(e){e.float32="float32",e.int32="int32",e.bool="bool",e.complex64="complex64"}(o||(o={})),function(e){e.float32="float32",e.int32="float32",e.bool="float32",e.complex64="complex64"}(u||(u={})),function(e){e.float32="complex64",e.int32="complex64",e.bool="complex64",e.complex64="complex64"}(c||(c={}));const l={float32:u,int32:i,bool:o,complex64:c}},function(e,t,n){"use strict";function r(e,t){let n=Object(o.a)(e,"a","maximum"),r=Object(o.a)(t,"b","maximum");[n,r]=Object(i.makeTypesMatch)(n,r),"bool"===n.dtype&&(n=Object(c.a)(n,"int32"),r=Object(c.a)(r,"int32")),Object(u.a)(n.shape,r.shape);const l={a:n,b:r};return a.a.runKernel(s.Ob,l)}n.d(t,"a",function(){return d});var a=n(5),s=n(3),i=n(23),o=n(2),u=n(17),c=n(12),l=n(4);const d=Object(l.b)({maximum_:r})},function(e,t,n){"use strict";function r(e,t,n){const r=Object(i.a)(e,"x","batchToSpaceND"),u=t.reduce((e,t)=>e*t);o.b(r.rank>=1+t.length,()=>`input rank is ${r.rank} but should be > than blockShape.length ${t.length}`),o.b(n.length===t.length,()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${t.length}`),o.b(r.shape[0]%u==0,()=>`input tensor batch is ${r.shape[0]} but is not divisible by the product of `+`the elements of blockShape ${t.join(" * ")} === ${u}`);const c={x:r},l={blockShape:t,crops:n};return a.a.runKernel(s.t,c,l)}n.d(t,"a",function(){return c});var a=n(5),s=n(3),i=n(2),o=n(8),u=n(4);const c=Object(u.b)({batchToSpaceND_:r})},function(e,t,n){"use strict";function r(e,t,n,r,u="NHWC",l=[1,1],d){const h=Object(i.a)(e,"x","depthwiseConv2d"),p=Object(i.a)(t,"filter","depthwiseConv2d");let f=h,m=!1;3===h.rank&&(m=!0,f=Object(c.a)(h,[1,h.shape[0],h.shape[1],h.shape[2]])),o.b(4===f.rank,()=>"Error in depthwiseConv2d: input must be rank 4, but got "+`rank ${f.rank}.`),o.b(4===p.rank,()=>"Error in depthwiseConv2d: filter must be rank 4, but got rank "+`${p.rank}.`),o.b(f.shape[3]===p.shape[2],()=>"Error in depthwiseConv2d: number of input channels "+`(${f.shape[3]}) must match the inChannels dimension in `+`filter ${p.shape[2]}.`),null!=d&&o.b(o.v(r),()=>"Error in depthwiseConv2d: pad must be an integer when using, "+`dimRoundingMode ${d} but got pad ${r}.`);const b={x:f,filter:p},g={strides:n,pad:r,dataFormat:u,dilations:l,dimRoundingMode:d},y=a.a.runKernel(s.O,b,g);return m?Object(c.a)(y,[y.shape[1],y.shape[2],y.shape[3]]):y}n.d(t,"a",function(){return l});var a=n(5),s=n(3),i=n(2),o=n(8),u=n(4),c=n(7);const l=Object(u.b)({depthwiseConv2d_:r})},function(e,t,n){"use strict";function r(e,t){let n=Object(o.a)(e,"a","equal"),r=Object(o.a)(t,"b","equal");[n,r]=Object(i.makeTypesMatch)(n,r),Object(u.a)(n.shape,r.shape);const c={a:n,b:r};return a.a.runKernel(s.Y,c)}n.d(t,"a",function(){return l});var a=n(5),s=n(3),i=n(23),o=n(2),u=n(17),c=n(4);const l=Object(c.b)({equal_:r})},function(e,t,n){"use strict";function r(e,t,n=0,r=0){const o=Object(i.a)(e,"x","gather"),u=Object(i.a)(t,"indices","gather","int32"),c={x:o,indices:u},l={axis:n,batchDims:r};return a.a.runKernel(s.nb,c,l)}n.d(t,"a",function(){return u});var a=n(5),s=n(3),i=n(2),o=n(4);const u=Object(o.b)({gather_:r})},function(e,t,n){"use strict";function r(e){const t=Object(i.a)(e,"x","logicalNot","bool"),n={x:t};return a.a.runKernel(s.Gb,n)}n.d(t,"a",function(){return u});var a=n(5),s=n(3),i=n(2),o=n(4);const u=Object(o.b)({logicalNot_:r})},function(e,t,n){"use strict";function r(e,t,n){const r=Object(i.a)(e,"x","spaceToBatchND");o.b(r.rank>=1+t.length,()=>`input rank ${r.rank} should be > than [blockShape] ${t.length}`),o.b(n.length===t.length,()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${t.length}`),o.b(r.shape.reduce((e,r,a)=>a>0&&a<=t.length?e&&(r+n[a-1][0]+n[a-1][1])%t[a-1]==0:e,!0),()=>`input spatial dimensions ${r.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${t.toString()}`);const u={x:r},c={blockShape:t,paddings:n};return a.a.runKernel(s.Ic,u,c)}n.d(t,"a",function(){return c});var a=n(5),s=n(3),i=n(2),o=n(8),u=n(4);const c=Object(u.b)({spaceToBatchND_:r})},function(e,t,n){"use strict";function r(e,t){const n=Object(a.a)(e,"x","squeeze");return Object(o.a)(n,Object(s.Q)(n.shape,t).newShape)}n.d(t,"a",function(){return u});var a=n(2),s=n(8),i=n(4),o=n(7);const u=Object(i.b)({squeeze_:r})},function(e,t,n){"use strict";function r(e,t,n,r,a){const i=s.util.sizeFromShape(r),o=s.util.makeZerosTypedArray(a,n);for(let n=0;n<e.length;n++){const r=e[n];if(r<0)throw new Error("Input x must be non-negative!");r>=a||(o[r]+=i>0?t[n]:1)}return o}function a(e,t,n,r=!1){const a=e.shape[0],i=e.shape[1],o=Object(s.buffer)([a,n],t.dtype);for(let s=0;s<a;s++)for(let a=0;a<i;a++){const i=e.get(s,a);if(i<0)throw new Error("Input x must be non-negative!");i>=n||(r?o.set(1,s,i):t.size>0?o.set(o.get(s,i)+t.get(s,a),s,i):o.set(o.get(s,i)+1,s,i))}return o}n.d(t,"a",function(){return r}),n.d(t,"b",function(){return a});var s=n(0)},function(e,t,n){"use strict";n.d(t,"c",function(){return i}),n.d(t,"a",function(){return u}),n.d(t,"b",function(){return c});var r=n(0),a=n(27),s=n(29);const i=Object(a.a)((e,t)=>e-t),o=Object(s.b)((e,t,n,r)=>({real:e-n,imag:t-r})),u=Object(s.a)(r.Sub,i,o),c={kernelName:r.Sub,backendName:"cpu",kernelFunc:u}},function(e,t,n){"use strict";function r(e,t,n){const r=Object(a.c)(e,n);return Object(s.a)(e,t,r,n)}n.d(t,"a",function(){return r});var a=n(2),s=n(51)},function(e,t,n){"use strict";function r(e,t){let n=Object(i.a)(e,"broadcastTo","x");const r=n.shape;if(t.some(e=>!(e>0)||e%1!=0))throw new Error(`broadcastTo(): Invalid broadcast shape [${t}].`);if(t.length<n.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${n.rank}.`);if(t.length>n.rank){const e=n.shape.slice();for(;e.length<t.length;)e.unshift(1);n=Object(c.a)(n,e)}const u=n.shape,l=Array.from(t);for(let e=t.length-1;e>=0;e--)if(u[e]===t[e])l[e]=1;else if(1!==n.shape[e])throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${t}].`);const d=l.map((e,t)=>e>1?t:-1).filter(e=>e>=0);if(0===d.length)return Object(o.a)(n);const h={x:n},p={reps:l};return a.a.runKernel(s.Vc,h,p)}n.d(t,"a",function(){return l});var a=n(5),s=n(3),i=n(2),o=n(70),u=n(4),c=n(7);const l=Object(u.b)({broadcastTo_:r})},function(e,t,n){"use strict";n.d(t,"a",function(){return a}),n.d(t,"b",function(){return s}),n.d(t,"c",function(){return i});var r=n(86);n(139);class a{constructor(e,t,n,a,s){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=a,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);const i=s||Math.random();this.random=r.alea(i.toString())}nextValue(){if(!isNaN(this.nextVal)){const e=this.nextVal;return this.nextVal=NaN,e}let e,t,n=!1;for(;!n;){let r,a,s;do{r=2*this.random()-1,a=2*this.random()-1,s=r*r+a*a}while(s>=1||0===s);const i=Math.sqrt(-2*Math.log(s)/s);e=this.mean+this.stdDev*r*i,t=this.mean+this.stdDev*a*i,this.truncated&&!this.isValidTruncated(e)||(n=!0)}return this.truncated&&!this.isValidTruncated(t)||(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return null==this.dtype||"float32"===this.dtype?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}}class s{constructor(e,t,n,s){this.alpha=e,this.beta=1/t,this.dtype=n;const i=s||Math.random();this.randu=r.alea(i.toString()),this.randn=new a(0,1,n,!1,this.randu()),this.d=e<1?e+2/3:e-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let e,t,n,r,a,s;for(;;){do{r=this.randn.nextValue(),s=1+this.c*r}while(s<=0);if(s*=s*s,e=r*r,t=1-.331*e*e,n=.5*e+this.d*(1-s+Math.log(s)),a=this.randu(),a<t||Math.log(a)<n)break}return s=1/this.beta*this.d*s,this.alpha<1&&(s*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(s)}convertValue(e){return"float32"===this.dtype?e:Math.round(e)}}class i{constructor(e=0,t=1,n,a){if(this.canReturnFloat=(()=>null==this.dtype||"float32"===this.dtype),this.min=e,this.range=t-e,this.dtype=n,null==a&&(a=Math.random()),
"number"==typeof a&&(a=a.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=r.alea(a)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}},function(e,t){var n;n=function(){return this}();try{n=n||new Function("return this")()}catch(e){"object"==typeof window&&(n=window)}e.exports=n},function(e,t,n){"use strict";function r(e,t){const n={tfOpName:e,category:"custom",inputs:[],attrs:[],customExecutor:t};i[e]=n}function a(e){return i[e]}function s(e){delete i[e]}n.d(t,"c",function(){return r}),n.d(t,"b",function(){return a}),n.d(t,"a",function(){return s});const i={}},function(e,t,n){"use strict";function r(e,t=null,n=!1){const r=Object(i.a)(e,"x","min"),o={x:r},u={axis:t,keepDims:n};return a.a.runKernel(s.Qb,o,u)}n.d(t,"a",function(){return u});var a=n(5),s=n(3),i=n(2),o=n(4);const u=Object(o.b)({min_:r})},function(e,t,n){"use strict";function r(e,t,n=1,r=0){if(t<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${t}`);const o=Object(i.a)(e,"indices","oneHot","int32"),u={indices:o},c={depth:t,onValue:n,offValue:r};return a.a.runKernel(s.bc,u,c)}n.d(t,"a",function(){return u});var a=n(5),s=n(3),i=n(2),o=n(4);const u=Object(o.b)({oneHot_:r})},function(e,t,n){"use strict";function r(e){const t=Object(i.a)(e,"input","real"),n={input:t};return a.a.runKernel(s.kc,n)}n.d(t,"a",function(){return u});var a=n(5),s=n(3),i=n(2),o=n(4);const u=Object(o.b)({real_:r})},function(e,t,n){"use strict";function r(e){Object(i.b)("complex64"===e.dtype,()=>"The dtype for tf.spectral.ifft() must be complex64 "+`but got ${e.dtype}.`);const t={input:e};return a.a.runKernel(s.qb,t)}n.d(t,"a",function(){return u});var a=n(5),s=n(3),i=n(8),o=n(4);const u=Object(o.b)({ifft_:r})},function(e,t,n){"use strict";(function(e,r){function a(){if(null==o){let t;if("undefined"!=typeof window)t=window;else if(void 0!==e)t=e;else if(void 0!==r)t=r;else{if("undefined"==typeof self)throw new Error("Could not find a global object");t=self}o=t}return o}function s(){const e=a();return null==e._tfGlobals&&(e._tfGlobals=new Map),e._tfGlobals}function i(e,t){const n=s();if(n.has(e))return n.get(e);{const r=t();return n.set(e,r),n.get(e)}}let o;n.d(t,"b",function(){return a}),n.d(t,"a",function(){return i})}).call(this,n(103),n(142))},function(e,t){e.exports=function(e){return e.webpackPolyfill||(e.deprecate=function(){},e.paths=[],e.children||(e.children=[]),Object.defineProperty(e,"loaded",{enumerable:!0,get:function(){return e.l}}),Object.defineProperty(e,"id",{enumerable:!0,get:function(){return e.i}}),e.webpackPolyfill=1),e}},function(e,t){(function(t){e.exports=t}).call(this,{})},function(e,t,n){"use strict";function r(e,t,n){const r=t.rank>1?t.shape[t.rank-1]:1,a=t.rank>1?t.rank-1:1,s="Must have updates.shape = indices.shape[:batchDim] + "+`shape[sliceDim:], got updates.shape: ${n.shape}`+`, indices.shape: ${t.shape}, shape: ${e}`+`, sliceDim: ${r}, and batchDim: ${a}.`;if(n.rank<a)throw new Error(s+` update.rank < ${a}. `);if(e.length<r+(n.rank-a))throw new Error(s+` Output shape length < ${r+(n.rank-a)}`);if(n.rank!==a+e.length-r)throw new Error(s+` update.rank != ${a+e.length-r}`);for(let e=0;e<a;++e)if(n.shape[e]!==t.shape[e])throw new Error(s+` updates.shape[${e}] (${n.shape[e]}) != indices.shape[${e}] (${t.shape[e]}).`);for(let t=0;t<n.rank-a;++t)if(n.shape[t+a]!==e[t+r])throw new Error(s+` updates.shape[${t+a}] (${n.shape[t+a]}) != shape[${t+a}] (${e[t+a]})`)}function a(e,t,n){if(t.rank<1)throw new Error("tf.scatterND() expects the indices to be rank 1 or higher,"+` but the rank was ${t.rank}.`);if(e.rank<1)throw new Error("tf.scatterND() expects the updates to be rank 1 or higher,"+` but the rank was ${e.rank}.`);if("int32"!==t.dtype)throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(n.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${n}`);if(0===n.length){if(0===t.size)throw new Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(0===e.size)throw new Error(`Updates specified for empty output. updates shape: ${e.shape}`)}r(n,t,e)}function s(e,t,n){const r=t.shape.length,a=r>1?t.shape[r-1]:1,s=n.length;let o=1;for(let e=a;e<s;++e)o*=n[e];const u=a<1?1:a,c=Object(i.O)(t.shape)/u,l=[...Object(i.j)(n.slice(0,a)),1],d=Object(i.O)(n);return{sliceRank:a,numUpdates:c,sliceSize:o,strides:l,outputSize:d}}n.r(t),n.d(t,"validateUpdateShape",function(){return r}),n.d(t,"validateInput",function(){return a}),n.d(t,"calculateShapes",function(){return s});var i=n(8)},function(e,t,n){"use strict";function r(e,t,n){const r=e.shape.length;x.b(r===t.length,()=>`Error in slice${r}D: Length of begin ${t} must `+`match the rank of the array (${r}).`),x.b(r===n.length,()=>`Error in slice${r}D: Length of size ${n} must `+`match the rank of the array (${r}).`);for(let a=0;a<r;++a)x.b(t[a]+n[a]<=e.shape[a],()=>`Error in slice${r}D: begin[${a}] + size[${a}] `+`(${t[a]+n[a]}) would overflow input.shape[${a}] (${e.shape[a]})`)}function a(e){const t=[];let n=0;for(;e>0;)1&e&&t.push(n),e/=2,n++;return t}function s(e,t,n){const r=[];for(let a=0;a<e.length;a++)r[a]=Math.ceil((t[a]-e[a])/n[a]);return r}function i(e,t,n,r){const a=[...e];for(let e=a.length;e<r.length;e++)a.push(1);for(let e=0;e<n;e++)0===e?a[t]=1:(a.splice(t,0,1),a.pop());return a}function o(e,t,n){return n<=e?n:n-(t-1)}function u(e,t){const n=[];for(let r=0;r<e;r++)n.push(t+r);return n}function c(e,t,n,r,a,s,o,u,c){const m=e.length;let b=new Array(m),g=new Array(m),y=new Array(m);if(t.length&&n>0){const c=t[0],h=n+1;b=l(o,c,h,r,e),g=d(u,c,h,a,e),y=i(s,c,h,e)}else for(let t=0;t<m;t++)b[t]=p(o,r,s,e,t,c),g[t]=f(u,a,s,e,t,c),y[t]=h(s,t,c);return{begin:b,end:g,strides:y}}function l(e,t,n,r,a){const s=[...a],i=u(n,t);for(let a=0;a<s.length;a++)if(i.indexOf(a)>-1)s[a]=0;else{const i=o(t,n,a);let u=r[i];e&1<<i&&(u=0),s[a]=u}return s}function d(e,t,n,r,a){const s=[...a],i=u(n,t);for(let a=0;a<s.length;a++)if(i.indexOf(a)>-1)s[a]=Number.MAX_SAFE_INTEGER;else{const i=o(t,n,a);let u=r[i];e&1<<i&&(u=Number.MAX_SAFE_INTEGER),s[a]=u}for(let e=0;e<s.length;e++){const t=a[e];s[e]<0&&(s[e]+=t),s[e]=x.i(0,s[e],a[e])}return s}function h(e,t,n){let r=e[t];return(n&1<<t||null==r)&&(r=1),r}function p(e,t,n,r,a,s){let i=t[a];const o=n[a]||1;(e&1<<a||s&1<<a||null==i)&&(i=o>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);const u=r[a];return i<0&&(i+=u),i=x.i(0,i,u-1),i}function f(e,t,n,r,a,s){let i=t[a];const o=n[a]||1;(e&1<<a||s&1<<a||null==i)&&(i=o>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);const u=r[a];return i<0&&(i+=u),i=o>0?x.i(0,i,u):x.i(-1,i,u-1),i}function m(e,t,n){let r=n.length;for(let e=0;e<n.length;e++)if(n[e]>1){r=e;break}for(let a=r+1;a<n.length;a++)if(t[a]>0||n[a]!==e[a])return!1;return!0}function b(e,t){let n=e.length>0?e[e.length-1]:1;for(let r=0;r<e.length-1;r++)n+=e[r]*t[r];return n}function g(e,t,n){let r;const a=e.shape.length;let s;return r="number"==typeof t?[t,...new Array(a-1).fill(0)]:t.length<a?t.concat(new Array(a-t.length).fill(0)):t.slice(),r.forEach(e=>{x.b(-1!==e,()=>"slice() does not support negative begin indexing.")}),s=null==n?new Array(a).fill(-1):"number"==typeof n?[n,...new Array(a-1).fill(-1)]:n.length<a?n.concat(new Array(a-n.length).fill(-1)):n,s=s.map((t,n)=>t>=0?t:(x.b(-1===t,()=>"Negative size values should be exactly -1 but got "+`${t} for the slice() size at index ${n}.`),e.shape[n]-r[n])),[r,s]}function y(e,t,n,r,i,o,u,l,d){let h=t.slice(),p=n.slice(),f=r;null==r&&(f=new Array(h.length));const m=a(u);if(m.length>1)throw new Error("Multiple ellipses in slice is not allowed.");if(0!==u&&0!==l)throw new Error("Using both ellipsisMask and newAxisMask is not yet supported.");if(0!==u&&0!==d)throw new Error("Using both ellipsisMask and shrinkAxisMask is not yet supported.");const b=e.length-h.length,g=a(l),y=e.slice();g.forEach(e=>{h[e]=0,p[e]=1,y.splice(e,0,1)});const{begin:x,end:v,strides:w}=c(y,m,b,h,p,f,i,o,u);h=x,p=v,f=w;const k=a(d);k.forEach(e=>{p[e]=h[e]+1,f[e]=1});const O=s(h,p,f),I=O.filter((e,t)=>-1===k.indexOf(t)),N=f.every(e=>1===e);return{nonStrided:N,$begin:h,$end:p,$strides:f,size:O,newShape:y,outShape:I}}n.r(t),n.d(t,"assertParamsValid",function(){return r}),n.d(t,"maskToAxes",function(){return a}),n.d(t,"computeOutShape",function(){return s}),n.d(t,"stridesWithElidedDims",function(){return i}),n.d(t,"getNormalizedAxes",function(){return c}),n.d(t,"startIndicesWithElidedDims",function(){return l}),n.d(t,"stopIndicesWithElidedDims",function(){return d}),n.d(t,"stridesForAxis",function(){return h}),n.d(t,"startForAxis",function(){return p}),n.d(t,"stopForAxis",function(){return f}),n.d(t,"isSliceContinous",function(){return m}),n.d(t,"computeFlatOffset",function(){return b}),n.d(t,"parseSliceParams",function(){return g}),n.d(t,"sliceInfo",function(){return y});var x=n(8)},function(e,t,n){"use strict";function r(e,t){let n=Object(o.a)(e,"a","floorDiv"),r=Object(o.a)(t,"b","floorDiv");[n,r]=Object(i.makeTypesMatch)(n,r);const u={a:n,b:r};return a.a.runKernel(s.hb,u)}n.d(t,"a",function(){return c});var a=n(5),s=n(3),i=n(23),o=n(2),u=n(4);const c=Object(u.b)({floorDiv_:r})},function(e,t,n){"use strict";function r(e,t,n){const r={shape:e,value:t,dtype:n};return a.a.runKernel(s.eb,{},r)}n.d(t,"a",function(){return r});var a=n(5),s=n(3)},function(e,t,n){"use strict";function r(e,t,n,r,l){const h=Object(i.a)(e,"x","avgPool","float32"),p=1;o.b(c.h(n,p),()=>"Error in avgPool: Either strides or dilations must be 1. "+`Got strides ${n} and dilations '${p}'`);let f=h,m=!1;3===h.rank&&(m=!0,f=Object(d.a)(h,[1,h.shape[0],h.shape[1],h.shape[2]])),o.b(4===f.rank,()=>`Error in avgPool: x must be rank 4 but got rank ${f.rank}.`),null!=l&&o.b(o.v(r),()=>"Error in avgPool: pad must be an integer when using, "+`dimRoundingMode ${l} but got pad ${r}.`);const b={x:f},g={filterSize:t,strides:n,pad:r,dimRoundingMode:l};let y=a.a.runKernel(s.o,b,g);return y=Object(u.a)(y,h.dtype),m?Object(d.a)(y,[y.shape[1],y.shape[2],y.shape[3]]):y}n.d(t,"a",function(){return h});var a=n(5),s=n(3),i=n(2),o=n(8),u=n(12),c=n(31),l=n(4),d=n(7);const h=Object(l.b)({avgPool_:r})},function(e,t,n){"use strict";function r(e){const t=Object(i.a)(e,"x","cos"),n={x:t};return a.a.runKernel(s.I,n)}n.d(t,"a",function(){return u});var a=n(5),s=n(3),i=n(2),o=n(4);const u=Object(o.b)({cos_:r})},function(e,t,n){"use strict";function r(e,t=0,n=!1,r=!1){const o=Object(i.a)(e,"x","cumsum"),u={x:o},c={axis:t,exclusive:n,reverse:r};return a.a.runKernel(s.L,u,c)}n.d(t,"a",function(){return u});var a=n(5),s=n(3),i=n(2),o=n(4);const u=Object(o.b)({cumsum_:r})},function(e,t,n){"use strict";function r(e){const t=Object(i.a)(e,"x","elu"),n={x:t};return a.a.runKernel(s.W,n)}n.d(t,"a",function(){return u});var a=n(5),s=n(3),i=n(2),o=n(4);const u=Object(o.b)({elu_:r})},function(e,t,n){"use strict";function r(e){const t=Object(i.a)(e,"x","floor"),n={x:t};return a.a.runKernel(s.gb,n)}n.d(t,"a",function(){return u});var a=n(5),s=n(3),i=n(2),o=n(4);const u=Object(o.b)({floor_:r})},function(e,t,n){"use strict";function r(e){const t=Object(i.a)(e,"input","imag"),n={input:t};return a.a.runKernel(s.sb,n)}n.d(t,"a",function(){return u});var a=n(5),s=n(3),i=n(2),o=n(4);const u=Object(o.b)({imag_:r})},function(e,t,n){"use strict";function r(e,t=.2){const n=Object(i.a)(e,"x","leakyRelu"),r={x:n},o={alpha:t};return a.a.runKernel(s.yb,r,o)}n.d(t,"a",function(){return u});var a=n(5),s=n(3),i=n(2),o=n(4);const u=Object(o.b)({leakyRelu_:r})},function(e,t,n){"use strict";function r(e,t){let n=Object(o.a)(e,"a","less"),r=Object(o.a)(t,"b","less");[n,r]=Object(i.makeTypesMatch)(n,r),Object(u.a)(n.shape,r.shape);const c={a:n,b:r};return a.a.runKernel(s.zb,c)}n.d(t,"a",function(){return l});var a=n(5),s=n(3),i=n(23),o=n(2),u=n(17),c=n(4);const l=Object(c.b)({less_:r})},function(e,t,n){"use strict";function r(e,t=null,n=!1){const r=Object(a.a)(e,"x","logSumExp"),d=Object(s.I)(t,r.shape),m=Object(l.a)(r,d,!0),b=Object(p.a)(r,m),g=Object(u.a)(b),y=Object(f.a)(g,d),x=Object(c.a)(y),v=Object(i.a)(Object(h.a)(m,x.shape),x);if(n){const e=Object(o.e)(v.shape,d);return Object(h.a)(v,e)}return v}n.d(t,"a",function(){return m});var a=n(2),s=n(8),i=n(13),o=n(39),u=n(41),c=n(75),l=n(72),d=n(4),h=n(7),p=n(14),f=n(19);const m=Object(d.b)({logSumExp_:r})},function(e,t,n){"use strict";function r(e,t){const n=Object(i.a)(e,"a","logicalOr","bool"),r=Object(i.a)(t,"b","logicalOr","bool");Object(o.a)(n.shape,r.shape);const u={a:n,b:r};return a.a.runKernel(s.Hb,u)}n.d(t,"a",function(){return c});var a=n(5),s=n(3),i=n(2),o=n(17),u=n(4);const c=Object(u.b)({logicalOr_:r})},function(e,t,n){"use strict";function r(e,t,n,r,c){const d=Object(i.a)(e,"x","maxPool"),h=1;let p=d,f=!1;3===d.rank&&(f=!0,p=Object(l.a)(d,[1,d.shape[0],d.shape[1],d.shape[2]])),o.b(4===p.rank,()=>`Error in maxPool: input must be rank 4 but got rank ${p.rank}.`),o.b(u.h(n,h),()=>"Error in maxPool: Either strides or dilations must be 1. "+`Got strides ${n} and dilations '${h}'`),null!=c&&o.b(o.v(r),()=>"Error in maxPool: pad must be an integer when using, "+`dimRoundingMode ${c} but got pad ${r}.`);const m={x:p},b={filterSize:t,strides:n,pad:r,dimRoundingMode:c},g=a.a.runKernel(s.Jb,m,b);return f?Object(l.a)(g,[g.shape[1],g.shape[2],g.shape[3]]):g}n.d(t,"a",function(){return d});var a=n(5),s=n(3),i=n(2),o=n(8),u=n(31),c=n(4),l=n(7);const d=Object(c.b)({maxPool_:r})},function(e,t,n){"use strict";function r(e,t){let n=Object(o.a)(e,"a","minimum"),r=Object(o.a)(t,"b","minimum");[n,r]=Object(i.makeTypesMatch)(n,r),"bool"===n.dtype&&(n=Object(c.a)(n,"int32"),r=Object(c.a)(r,"int32")),Object(u.a)(n.shape,r.shape);const l={a:n,b:r};return a.a.runKernel(s.Rb,l)}n.d(t,"a",function(){return d});var a=n(5),s=n(3),i=n(23),o=n(2),u=n(17),c=n(12),l=n(4);const d=Object(l.b)({minimum_:r})},function(e,t,n){"use strict";function r(e,t){let n=Object(o.a)(e,"a","notEqual"),r=Object(o.a)(t,"b","notEqual");[n,r]=Object(i.makeTypesMatch)(n,r),Object(u.a)(n.shape,r.shape);const c={a:n,b:r};return a.a.runKernel(s.ac,c)}n.d(t,"a",function(){return l});var a=n(5),s=n(3),i=n(23),o=n(2),u=n(17),c=n(4);const l=Object(c.b)({notEqual_:r})},function(e,t,n){"use strict";function r(e,t){const n=Object(i.a)(e,"x","prelu"),r=Object(i.a)(t,"alpha","prelu"),o={x:n,alpha:r};return a.a.runKernel(s.hc,o)}n.d(t,"a",function(){return u});var a=n(5),s=n(3),i=n(2),o=n(4);const u=Object(o.b)({prelu_:r})},function(e,t,n){"use strict";function r(e){const t=Object(i.a)(e,"x","relu6"),n={x:t};return a.a.runKernel(s.oc,n)}n.d(t,"a",function(){return u});var a=n(5),s=n(3),i=n(2),o=n(4);const u=Object(o.b)({relu6_:r})},function(e,t,n){"use strict";function r(e){Object(i.b)("complex64"===e.dtype,()=>"The dtype for tf.spectral.fft() must be complex64 "+`but got ${e.dtype}.`);const t={input:e};return a.a.runKernel(s.db,t)}n.d(t,"a",function(){return u});var a=n(5),s=n(3),i=n(8),o=n(4);const u=Object(o.b)({fft_:r})},function(e,t,n){"use strict";function r(e,t){Object(a.b)("float32"===e.dtype,()=>`The dtype for rfft() must be real value but got ${e.dtype}`);let n=e.shape[e.shape.length-1];const r=e.size/n;let u;if(null!=t&&t<n){const r=e.shape.map(e=>0),a=e.shape.map(e=>e);a[e.shape.length-1]=t,u=Object(d.a)(e,r,a),n=t}else if(null!=t&&t>n){const r=e.shape.map(e=>e);r[e.shape.length-1]=t-n,u=Object(i.a)([e,Object(p.a)(r)],e.shape.length-1),n=t}else u=e;const b=Object(f.a)(u),g=Object(l.a)(Object(s.a)(u,b),[r,n]),y=Object(m.a)(g),x=Math.floor(n/2)+1,v=Object(c.a)(y),w=Object(o.a)(y),k=Object(h.a)(v,[x,n-x],v.shape.length-1),O=Object(h.a)(w,[x,n-x],w.shape.length-1),I=u.shape.slice();return I[u.shape.length-1]=x,Object(l.a)(Object(s.a)(k[0],O[0]),I)}n.d(t,"a",function(){return b});var a=n(8),s=n(58),i=n(32),o=n(121),u=n(4),c=n(107),l=n(7),d=n(28),h=n(76),p=n(80),f=n(20),m=n(131);const b=Object(u.b)({rfft_:r})},function(e,t,n){"use strict";function r(e,t){let n=Object(o.a)(e,"a","squaredDifference"),r=Object(o.a)(t,"b","squaredDifference");[n,r]=Object(i.makeTypesMatch)(n,r),Object(u.a)(n.shape,r.shape);const c={a:n,b:r},l={};return a.a.runKernel(s.Oc,c,l)}n.d(t,"a",function(){return l});var a=n(5),s=n(3),i=n(23),o=n(2),u=n(17),c=n(4);const l=Object(c.b)({squaredDifference_:r})},function(e,t,n){"use strict";function r(e,t,n){const r=Object(i.a)(e,"x","unsortedSegmentSum"),u=Object(i.a)(t,"segmentIds","unsortedSegmentSum","int32");Object(o.b)(Object(o.v)(n),()=>"numSegments must be of dtype int");const c={x:r,segmentIds:u},l={numSegments:n};return a.a.runKernel(s.bd,c,l)}n.d(t,"a",function(){return c});var a=n(5),s=n(3),i=n(2),o=n(8),u=n(4);const c=Object(u.b)({unsortedSegmentSum_:r})},function(e,t,n){"use strict";function r(e,t="euclidean",n=null,r=!1){e=Object(s.a)(e,"x","norm");const o=a(e,t,n);let c=o.shape;if(r){const t=Object(i.I)(n,e.shape);c=u.e(o.shape,t)}return Object(p.a)(o,c)}function a(e,t,n=null){if(0===e.rank)return Object(o.a)(e);if(1!==e.rank&&null===n)return a(Object(p.a)(e,[-1]),t,n);if(1===e.rank||"number"==typeof n||Array.isArray(n)&&1===n.length){if(1===t)return Object(g.a)(Object(o.a)(e),n);if(t===1/0)return Object(c.a)(Object(o.a)(e),n);if(t===-1/0)return Object(l.a)(Object(o.a)(e),n);if("euclidean"===t||2===t)return Object(m.a)(Object(g.a)(Object(h.a)(Object(o.a)(e),Object(f.a)(2,"int32")),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(n)&&2===n.length){if(1===t)return Object(c.a)(Object(g.a)(Object(o.a)(e),n[0]),n[1]-1);if(t===1/0)return Object(c.a)(Object(g.a)(Object(o.a)(e),n[1]),n[0]);if(t===-1/0)return Object(l.a)(Object(g.a)(Object(o.a)(e),n[1]),n[0]);if("fro"===t||"euclidean"===t)return Object(m.a)(Object(g.a)(Object(b.a)(e),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${n}`)}n.d(t,"a",function(){return y});var s=n(2),i=n(8),o=n(43),u=n(39),c=n(72),l=n(105),d=n(4),h=n(53),p=n(7),f=n(16),m=n(37),b=n(25),g=n(19);const y=Object(d.b)({norm_:r})},function(e,t,n){"use strict";n.d(t,"c",function(){return i}),n.d(t,"a",function(){return o}),n.d(t,"b",function(){return u});var r=n(0),a=n(73),s=n(18);const i=Object(a.a)(e=>Math.exp(e)),o=Object(s.b)(r.Exp,i),u={kernelName:r.Exp,backendName:"cpu",kernelFunc:o}},function(e,t,n){"use strict";function r(e,t,n,r,s){const i=t.length,o=a.util.sizeFromShape(t),u=a.util.computeStrides(t),c=a.util.computeStrides(s),l=a.util.getTypedArrayFromDType(n,a.util.sizeFromShape(s));for(let t=0;t<o;++t){const n=a.util.indexToLoc(t,i,u),s=new Array(n.length);for(let e=0;e<s.length;e++)s[e]=n[r[e]];const o=a.util.locToIndex(s,i,c);l[o]=e[t]}return l}n.d(t,"a",function(){return r});var a=n(0)},function(e,t,n){"use strict";function r(e,t,n,r,o,c="NHWC",l){i.b(e.length===t.rank,()=>"Length of inShape "+`(${e.length}) and rank of dy (${t.rank}) must match`);let d=e,h=t,p=!1;3===t.rank&&(p=!0,h=Object(u.a)(t,[1,t.shape[0],t.shape[1],t.shape[2]]),d=[1,e[0],e[1],e[2]]),i.b(4===d.length,()=>"Error in conv2dDerInput: inShape must be length 4, but got length "+`${d.length}.`),i.b(4===h.rank,()=>"Error in conv2dDerInput: dy must be rank 4, but got "+`rank ${h.rank}`),i.b(4===n.rank,()=>"Error in conv2dDerInput: filter must be rank 4, but got "+`rank ${n.rank}`);const f="NHWC"===c?d[3]:d[1],m="NHWC"===c?h.shape[3]:h.shape[1];i.b(f===n.shape[2],()=>`Error in conv2dDerInput: depth of input (${f}) must `+`match input depth for filter ${n.shape[2]}.`),i.b(m===n.shape[3],()=>`Error in conv2dDerInput: depth of output (${m}) must `+`match output depth for filter ${n.shape[3]}.`),null!=l&&i.b(i.v(o),()=>"Error in conv2dDerInput: pad must be an integer when using, "+`dimRoundingMode ${l} but got pad ${o}.`);const b={dy:h,filter:n},g={strides:r,pad:o,dataFormat:c,dimRoundingMode:l,inputShape:d},y=a.a.runKernel(s.E,b,g);return p?Object(u.a)(y,[y.shape[1],y.shape[2],y.shape[3]]):y}n.d(t,"a",function(){return c});var a=n(5),s=n(3),i=n(8),o=n(4),u=n(7);const c=Object(o.b)({conv2DBackpropInput_:r})},function(e,t,n){"use strict";function r(e,t,n){return null==n&&(n=a()),s(e,t,(e,t)=>c(e,t,n))}function a(){return 32===p.a.backend.floatPrecision()?g:y}function s(e,t,n){let r=!0;if((Object(m.A)(e)||Object(m.A)(t))&&(r=!1),Object(m.A)(e)&&Object(m.A)(t)&&(r=!0),r){const n=e.constructor.name,r=t.constructor.name;if(n!==r)throw new Error(`Arrays are of different type. Actual: ${n}. `+`Expected: ${r}`)}if(Array.isArray(e)&&Array.isArray(t)){const n=Object(f.c)(e),r=Object(f.c)(t);if(!Object(m.a)(n,r))throw new Error("Arrays have different shapes. "+`Actual: [${n}]. Expected: [${r}]`)}const a=Object(m.A)(e)?e:Object(m.m)(e),s=Object(m.A)(t)?t:Object(m.m)(t);if(a.length!==s.length)throw new Error(`Arrays have different lengths actual: ${a.length} vs `+`expected: ${s.length}.\n`+`Actual:   ${a}.\n`+`Expected: ${s}.`);for(let e=0;e<s.length;++e){const t=a[e],r=s[e];if(!n(t,r))throw new Error(`Arrays differ: actual[${e}] = ${t}, expected[${e}] = ${r}.\n`+`Actual:   ${a}.\n`+`Expected: ${s}.`)}}function i(e,t){e().then(()=>t.fail(),()=>t())}function o(e,t){const n="string"==typeof t||"number"==typeof t||"boolean"==typeof t?[t]:t;return Object(m.z)(e)||Object(m.z)(e[0])||Object(m.z)(t)||Object(m.z)(t[0])?s(e,n,(e,t)=>e==t):s(e,t,(e,t)=>c(e,t,0))}function u(e,t,n){if(null==n&&(n=a()),!c(e,t,n))throw new Error(`Numbers differ: actual === ${e}, expected === ${t}`)}function c(e,t,n){return!isFinite(e)&&!isFinite(t)||!(isNaN(e)||isNaN(t)||Math.abs(e-t)>n)}function l(e,t,n){for(let r=0;r<e.length;r++)if(e[r]<t||e[r]>n)throw new Error(`Value out of range:${e[r]} low: ${t}, high: ${n}`)}function d(e,t){expect(new Float32Array(e)).toEqual(new Float32Array(t))}function h(e){for(let t=0;t<e.length;t++){const n=e[t];Array.isArray(n)?h(n):e[t]=Object(b.encodeString)(n)}return e}n.r(t),n.d(t,"TEST_EPSILON_FLOAT16",function(){return y}),n.d(t,"expectArraysClose",function(){return r}),n.d(t,"testEpsilon",function(){return a}),n.d(t,"expectPromiseToFail",function(){return i}),n.d(t,"expectArraysEqual",function(){return o}),n.d(t,"expectNumbersClose",function(){return u}),n.d(t,"expectValuesInRange",function(){return l}),n.d(t,"expectArrayBuffersEqual",function(){return d}),n.d(t,"encodeStrings",function(){return h});var p=n(5),f=n(2),m=n(8),b=n(10);const g=.001,y=.1},function(e,t,n){"use strict";function r(e,t,n,r,o,c="NHWC",l){let d=e;3===e.rank&&(d=Object(u.a)(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let h=t;3===h.rank&&(h=Object(u.a)(t,[1,t.shape[0],t.shape[1],t.shape[2]])),i.b(4===d.rank,()=>"Error in conv2dDerFilter: input must be rank 4, but got shape "+`${d.shape}.`),i.b(4===h.rank,()=>"Error in conv2dDerFilter: dy must be rank 4, but got shape "+`${h.shape}.`),i.b(4===n.length,()=>"Error in conv2dDerFilter: filterShape must be length 4, but got "+`${n}.`);const p="NHWC"===c?d.shape[3]:d.shape[1],f="NHWC"===c?h.shape[3]:h.shape[1];i.b(p===n[2],()=>`Error in conv2dDerFilter: depth of input ${p}) must `+`match input depth in filter (${n[2]}.`),i.b(f===n[3],()=>`Error in conv2dDerFilter: depth of dy (${f}) must `+`match output depth for filter (${n[3]}).`),null!=l&&i.b(i.v(o),()=>"Error in conv2dDerFilter: pad must be an integer when using, "+`dimRoundingMode ${l} but got pad ${o}.`);const m={x:d,dy:h},b={strides:r,pad:o,dataFormat:c,dimRoundingMode:l,filterShape:n};return a.a.runKernel(s.D,m,b)}n.d(t,"a",function(){return c});var a=n(5),s=n(3),i=n(8),o=n(4),u=n(7);const c=Object(o.b)({conv2DBackpropFilter_:r})},function(e,t,n){(function(t){var n,r;r=function(){return function e(t,r,a){function s(o,u){if(!r[o]){if(!t[o]){var c="function"==typeof n&&n;if(!u&&c)return n(o,!0);if(i)return i(o,!0);var l=new Error("Cannot find module '"+o+"'");throw l.code="MODULE_NOT_FOUND",l}var d=r[o]={exports:{}};t[o][0].call(d.exports,function(e){var n=t[o][1][e];return s(n||e)},d,d.exports,e,t,r,a)}return r[o].exports}for(var i="function"==typeof n&&n,o=0;o<a.length;o++)s(a[o]);return s}({1:[function(e,n,r){(function(e){"use strict";function t(){var e,t;s=!0;for(var n=d.length;n;){for(t=d,d=[],e=-1;++e<n;)t[e]();n=d.length}s=!1}function r(e){1!==d.push(e)||s||a()}var a,s,i=e.MutationObserver||e.WebKitMutationObserver;if(i){var o=0,u=new i(t),c=e.document.createTextNode("");u.observe(c,{characterData:!0}),a=function(){c.data=o=++o%2}}else if(e.setImmediate||void 0===e.MessageChannel)a="document"in e&&"onreadystatechange"in e.document.createElement("script")?function(){var n=e.document.createElement("script");n.onreadystatechange=function(){t(),n.onreadystatechange=null,n.parentNode.removeChild(n),n=null},e.document.documentElement.appendChild(n)}:function(){setTimeout(t,0)};else{var l=new e.MessageChannel;l.port1.onmessage=t,a=function(){l.port2.postMessage(0)}}var d=[];n.exports=r}).call(this,void 0!==t?t:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{}],2:[function(e,t,n){"use strict";function r(){}function a(e){if("function"!=typeof e)throw new TypeError("resolver must be a function");this.state=y,this.queue=[],this.outcome=void 0,e!==r&&u(this,e)}function s(e,t,n){this.promise=e,"function"==typeof t&&(this.onFulfilled=t,this.callFulfilled=this.otherCallFulfilled),"function"==typeof n&&(this.onRejected=n,this.callRejected=this.otherCallRejected)}function i(e,t,n){f(function(){var r;try{r=t(n)}catch(t){return m.reject(e,t)}r===e?m.reject(e,new TypeError("Cannot resolve promise with itself")):m.resolve(e,r)})}function o(e){var t=e&&e.then;if(e&&("object"==typeof e||"function"==typeof e)&&"function"==typeof t)return function(){t.apply(e,arguments)}}function u(e,t){function n(t){s||(s=!0,m.reject(e,t))}function r(t){s||(s=!0,m.resolve(e,t))}function a(){t(r,n)}var s=!1,i=c(a);"error"===i.status&&n(i.value)}function c(e,t){var n={};try{n.value=e(t),n.status="success"}catch(e){n.status="error",n.value=e}return n}function l(e){return e instanceof this?e:m.resolve(new this(r),e)}function d(e){var t=new this(r);return m.reject(t,e)}function h(e){function t(e,t){function r(e){i[t]=e,++o!==a||s||(s=!0,m.resolve(c,i))}n.resolve(e).then(r,function(e){s||(s=!0,m.reject(c,e))})}var n=this;if("[object Array]"!==Object.prototype.toString.call(e))return this.reject(new TypeError("must be an array"));var a=e.length,s=!1;if(!a)return this.resolve([]);for(var i=new Array(a),o=0,u=-1,c=new this(r);++u<a;)t(e[u],u);return c}function p(e){function t(e){n.resolve(e).then(function(e){s||(s=!0,m.resolve(o,e))},function(e){s||(s=!0,m.reject(o,e))})}var n=this;if("[object Array]"!==Object.prototype.toString.call(e))return this.reject(new TypeError("must be an array"));var a=e.length,s=!1;if(!a)return this.resolve([]);for(var i=-1,o=new this(r);++i<a;)t(e[i]);return o}var f=e(1),m={},b=["REJECTED"],g=["FULFILLED"],y=["PENDING"];t.exports=a,a.prototype.catch=function(e){return this.then(null,e)},a.prototype.then=function(e,t){if("function"!=typeof e&&this.state===g||"function"!=typeof t&&this.state===b)return this;var n=new this.constructor(r);if(this.state!==y){var a=this.state===g?e:t;i(n,a,this.outcome)}else this.queue.push(new s(n,e,t));return n},s.prototype.callFulfilled=function(e){m.resolve(this.promise,e)},s.prototype.otherCallFulfilled=function(e){i(this.promise,this.onFulfilled,e)},s.prototype.callRejected=function(e){m.reject(this.promise,e)},s.prototype.otherCallRejected=function(e){i(this.promise,this.onRejected,e)},m.resolve=function(e,t){var n=c(o,t);if("error"===n.status)return m.reject(e,n.value);var r=n.value;if(r)u(e,r);else{e.state=g,e.outcome=t;for(var a=-1,s=e.queue.length;++a<s;)e.queue[a].callFulfilled(t)}return e},m.reject=function(e,t){e.state=b,e.outcome=t;for(var n=-1,r=e.queue.length;++n<r;)e.queue[n].callRejected(t);return e},a.resolve=l,a.reject=d,a.all=h,a.race=p},{1:1}],3:[function(e,n,r){(function(t){"use strict";"function"!=typeof t.Promise&&(t.Promise=e(2))}).call(this,void 0!==t?t:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{2:2}],4:[function(e,t,n){"use strict";function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function a(){try{if("undefined"!=typeof indexedDB)return indexedDB;if("undefined"!=typeof webkitIndexedDB)return webkitIndexedDB;if("undefined"!=typeof mozIndexedDB)return mozIndexedDB;if("undefined"!=typeof OIndexedDB)return OIndexedDB;if("undefined"!=typeof msIndexedDB)return msIndexedDB}catch(e){return}}function s(){try{if(!ve)return!1;var e="undefined"!=typeof openDatabase&&/(Safari|iPhone|iPad|iPod)/.test(navigator.userAgent)&&!/Chrome/.test(navigator.userAgent)&&!/BlackBerry/.test(navigator.platform),t="function"==typeof fetch&&-1!==fetch.toString().indexOf("[native code");return(!e||t)&&"undefined"!=typeof indexedDB&&"undefined"!=typeof IDBKeyRange}catch(e){return!1}}function i(e,t){e=e||[],t=t||{};try{return new Blob(e,t)}catch(s){if("TypeError"!==s.name)throw s;for(var n="undefined"!=typeof BlobBuilder?BlobBuilder:"undefined"!=typeof MSBlobBuilder?MSBlobBuilder:"undefined"!=typeof MozBlobBuilder?MozBlobBuilder:WebKitBlobBuilder,r=new n,a=0;a<e.length;a+=1)r.append(e[a]);return r.getBlob(t.type)}}function o(e,t){t&&e.then(function(e){t(null,e)},function(e){t(e)})}function u(e,t,n){"function"==typeof t&&e.then(t),"function"==typeof n&&e.catch(n)}function c(e){return"string"!=typeof e&&(console.warn(e+" used as a key, but it is not a string."),e=String(e)),e}function l(){if(arguments.length&&"function"==typeof arguments[arguments.length-1])return arguments[arguments.length-1]}function d(e){for(var t=e.length,n=new ArrayBuffer(t),r=new Uint8Array(n),a=0;a<t;a++)r[a]=e.charCodeAt(a);return n}function h(e){return new we(function(t){var n=e.transaction(ke,Se),r=i([""]);n.objectStore(ke).put(r,"key"),n.onabort=function(e){e.preventDefault(),e.stopPropagation(),t(!1)},n.oncomplete=function(){var e=navigator.userAgent.match(/Chrome\/(\d+)/),n=navigator.userAgent.match(/Edge\//);t(n||!e||parseInt(e[1],10)>=43)}}).catch(function(){return!1})}function p(e){return"boolean"==typeof Oe?we.resolve(Oe):h(e).then(function(e){return Oe=e,Oe})}function f(e){var t=Ie[e.name],n={};n.promise=new we(function(e,t){n.resolve=e,n.reject=t}),t.deferredOperations.push(n),t.dbReady?t.dbReady=t.dbReady.then(function(){return n.promise}):t.dbReady=n.promise}function m(e){var t=Ie[e.name],n=t.deferredOperations.pop();if(n)return n.resolve(),n.promise}function b(e,t){var n=Ie[e.name],r=n.deferredOperations.pop();if(r)return r.reject(t),r.promise}function g(e,t){return new we(function(n,r){if(Ie[e.name]=Ie[e.name]||S(),e.db){if(!t)return n(e.db);f(e),e.db.close()}var a=[e.name];t&&a.push(e.version);var s=ve.open.apply(ve,a);t&&(s.onupgradeneeded=function(t){var n=s.result;try{n.createObjectStore(e.storeName),t.oldVersion<=1&&n.createObjectStore(ke)}catch(n){if("ConstraintError"!==n.name)throw n;console.warn('The database "'+e.name+'" has been upgraded from version '+t.oldVersion+" to version "+t.newVersion+', but the storage "'+e.storeName+'" already exists.')}}),s.onerror=function(e){e.preventDefault(),r(s.error)},s.onsuccess=function(){n(s.result),m(e)}})}function y(e){return g(e,!1)}function x(e){return g(e,!0)}function v(e,t){if(!e.db)return!0;var n=!e.db.objectStoreNames.contains(e.storeName),r=e.version<e.db.version,a=e.version>e.db.version;if(r&&(e.version!==t&&console.warn('The database "'+e.name+"\" can't be downgraded from version "+e.db.version+" to version "+e.version+"."),e.version=e.db.version),a||n){if(n){var s=e.db.version+1;s>e.version&&(e.version=s)}return!0}return!1}function w(e){return new we(function(t,n){var r=new FileReader;r.onerror=n,r.onloadend=function(n){var r=btoa(n.target.result||"");t({__local_forage_encoded_blob:!0,data:r,type:e.type})},r.readAsBinaryString(e)})}function k(e){var t=d(atob(e.data));return i([t],{type:e.type})}function O(e){return e&&e.__local_forage_encoded_blob}function I(e){var t=this,n=t._initReady().then(function(){var e=Ie[t._dbInfo.name];if(e&&e.dbReady)return e.dbReady});return u(n,e,e),n}function N(e){f(e);for(var t=Ie[e.name],n=t.forages,r=0;r<n.length;r++){
var a=n[r];a._dbInfo.db&&(a._dbInfo.db.close(),a._dbInfo.db=null)}return e.db=null,y(e).then(function(t){return e.db=t,v(e)?x(e):t}).then(function(r){e.db=t.db=r;for(var a=0;a<n.length;a++)n[a]._dbInfo.db=r}).catch(function(t){throw b(e,t),t})}function j(e,t,n,r){void 0===r&&(r=1);try{var a=e.db.transaction(e.storeName,t);n(null,a)}catch(a){if(r>0&&(!e.db||"InvalidStateError"===a.name||"NotFoundError"===a.name))return we.resolve().then(function(){if(!e.db||"NotFoundError"===a.name&&!e.db.objectStoreNames.contains(e.storeName)&&e.version<=e.db.version)return e.db&&(e.version=e.db.version+1),x(e)}).then(function(){return N(e).then(function(){j(e,t,n,r-1)})}).catch(n);n(a)}}function S(){return{forages:[],db:null,dbReady:null,deferredOperations:[]}}function T(e){function t(){return we.resolve()}var n=this,r={db:null};if(e)for(var a in e)r[a]=e[a];var s=Ie[r.name];s||(s=S(),Ie[r.name]=s),s.forages.push(n),n._initReady||(n._initReady=n.ready,n.ready=I);for(var i=[],o=0;o<s.forages.length;o++){var u=s.forages[o];u!==n&&i.push(u._initReady().catch(t))}var c=s.forages.slice(0);return we.all(i).then(function(){return r.db=s.db,y(r)}).then(function(e){return r.db=e,v(r,n._defaultConfig.version)?x(r):e}).then(function(e){r.db=s.db=e,n._dbInfo=r;for(var t=0;t<c.length;t++){var a=c[t];a!==n&&(a._dbInfo.db=r.db,a._dbInfo.version=r.version)}})}function C(e,t){var n=this;e=c(e);var r=new we(function(t,r){n.ready().then(function(){j(n._dbInfo,je,function(a,s){if(a)return r(a);try{var i=s.objectStore(n._dbInfo.storeName),o=i.get(e);o.onsuccess=function(){var e=o.result;void 0===e&&(e=null),O(e)&&(e=k(e)),t(e)},o.onerror=function(){r(o.error)}}catch(e){r(e)}})}).catch(r)});return o(r,t),r}function E(e,t){var n=this,r=new we(function(t,r){n.ready().then(function(){j(n._dbInfo,je,function(a,s){if(a)return r(a);try{var i=s.objectStore(n._dbInfo.storeName),o=i.openCursor(),u=1;o.onsuccess=function(){var n=o.result;if(n){var r=n.value;O(r)&&(r=k(r));var a=e(r,n.key,u++);void 0!==a?t(a):n.continue()}else t()},o.onerror=function(){r(o.error)}}catch(e){r(e)}})}).catch(r)});return o(r,t),r}function $(e,t,n){var r=this;e=c(e);var a=new we(function(n,a){var s;r.ready().then(function(){return s=r._dbInfo,"[object Blob]"===Ne.call(t)?p(s.db).then(function(e){return e?t:w(t)}):t}).then(function(t){j(r._dbInfo,Se,function(s,i){if(s)return a(s);try{var o=i.objectStore(r._dbInfo.storeName);null===t&&(t=void 0);var u=o.put(t,e);i.oncomplete=function(){void 0===t&&(t=null),n(t)},i.onabort=i.onerror=function(){var e=u.error?u.error:u.transaction.error;a(e)}}catch(e){a(e)}})}).catch(a)});return o(a,n),a}function A(e,t){var n=this;e=c(e);var r=new we(function(t,r){n.ready().then(function(){j(n._dbInfo,Se,function(a,s){if(a)return r(a);try{var i=s.objectStore(n._dbInfo.storeName),o=i.delete(e);s.oncomplete=function(){t()},s.onerror=function(){r(o.error)},s.onabort=function(){var e=o.error?o.error:o.transaction.error;r(e)}}catch(e){r(e)}})}).catch(r)});return o(r,t),r}function _(e){var t=this,n=new we(function(e,n){t.ready().then(function(){j(t._dbInfo,Se,function(r,a){if(r)return n(r);try{var s=a.objectStore(t._dbInfo.storeName),i=s.clear();a.oncomplete=function(){e()},a.onabort=a.onerror=function(){var e=i.error?i.error:i.transaction.error;n(e)}}catch(e){n(e)}})}).catch(n)});return o(n,e),n}function D(e){var t=this,n=new we(function(e,n){t.ready().then(function(){j(t._dbInfo,je,function(r,a){if(r)return n(r);try{var s=a.objectStore(t._dbInfo.storeName),i=s.count();i.onsuccess=function(){e(i.result)},i.onerror=function(){n(i.error)}}catch(e){n(e)}})}).catch(n)});return o(n,e),n}function F(e,t){var n=this,r=new we(function(t,r){e<0?t(null):n.ready().then(function(){j(n._dbInfo,je,function(a,s){if(a)return r(a);try{var i=s.objectStore(n._dbInfo.storeName),o=!1,u=i.openCursor();u.onsuccess=function(){var n=u.result;n?0===e?t(n.key):o?t(n.key):(o=!0,n.advance(e)):t(null)},u.onerror=function(){r(u.error)}}catch(e){r(e)}})}).catch(r)});return o(r,t),r}function R(e){var t=this,n=new we(function(e,n){t.ready().then(function(){j(t._dbInfo,je,function(r,a){if(r)return n(r);try{var s=a.objectStore(t._dbInfo.storeName),i=s.openCursor(),o=[];i.onsuccess=function(){var t=i.result;t?(o.push(t.key),t.continue()):e(o)},i.onerror=function(){n(i.error)}}catch(e){n(e)}})}).catch(n)});return o(n,e),n}function M(e,t){t=l.apply(this,arguments);var n=this.config();e="function"!=typeof e&&e||{},e.name||(e.name=e.name||n.name,e.storeName=e.storeName||n.storeName);var r,a=this;if(e.name){var s=e.name===n.name&&a._dbInfo.db,i=s?we.resolve(a._dbInfo.db):y(e).then(function(t){var n=Ie[e.name],r=n.forages;n.db=t;for(var a=0;a<r.length;a++)r[a]._dbInfo.db=t;return t});r=e.storeName?i.then(function(t){if(t.objectStoreNames.contains(e.storeName)){var n=t.version+1;f(e);var r=Ie[e.name],a=r.forages;t.close();for(var s=0;s<a.length;s++){var i=a[s];i._dbInfo.db=null,i._dbInfo.version=n}var o=new we(function(t,r){var a=ve.open(e.name,n);a.onerror=function(e){var t=a.result;t.close(),r(e)},a.onupgradeneeded=function(){var t=a.result;t.deleteObjectStore(e.storeName)},a.onsuccess=function(){var e=a.result;e.close(),t(e)}});return o.then(function(e){r.db=e;for(var t=0;t<a.length;t++){var n=a[t];n._dbInfo.db=e,m(n._dbInfo)}}).catch(function(t){throw(b(e,t)||we.resolve()).catch(function(){}),t})}}):i.then(function(t){f(e);var n=Ie[e.name],r=n.forages;t.close();for(var a=0;a<r.length;a++){var s=r[a];s._dbInfo.db=null}var i=new we(function(t,n){var r=ve.deleteDatabase(e.name);r.onerror=r.onblocked=function(e){var t=r.result;t&&t.close(),n(e)},r.onsuccess=function(){var e=r.result;e&&e.close(),t(e)}});return i.then(function(e){n.db=e;for(var t=0;t<r.length;t++){var a=r[t];m(a._dbInfo)}}).catch(function(t){throw(b(e,t)||we.resolve()).catch(function(){}),t})})}else r=we.reject("Invalid arguments");return o(r,t),r}function z(){return"function"==typeof openDatabase}function L(e){var t,n,r,a,s,i=.75*e.length,o=e.length,u=0;"="===e[e.length-1]&&(i--,"="===e[e.length-2]&&i--);var c=new ArrayBuffer(i),l=new Uint8Array(c);for(t=0;t<o;t+=4)n=Ce.indexOf(e[t]),r=Ce.indexOf(e[t+1]),a=Ce.indexOf(e[t+2]),s=Ce.indexOf(e[t+3]),l[u++]=n<<2|r>>4,l[u++]=(15&r)<<4|a>>2,l[u++]=(3&a)<<6|63&s;return c}function P(e){var t,n=new Uint8Array(e),r="";for(t=0;t<n.length;t+=3)r+=Ce[n[t]>>2],r+=Ce[(3&n[t])<<4|n[t+1]>>4],r+=Ce[(15&n[t+1])<<2|n[t+2]>>6],r+=Ce[63&n[t+2]];return n.length%3==2?r=r.substring(0,r.length-1)+"=":n.length%3==1&&(r=r.substring(0,r.length-2)+"=="),r}function B(e,t){var n="";if(e&&(n=He.call(e)),e&&("[object ArrayBuffer]"===n||e.buffer&&"[object ArrayBuffer]"===He.call(e.buffer))){var r,a=Ae;e instanceof ArrayBuffer?(r=e,a+=De):(r=e.buffer,"[object Int8Array]"===n?a+=Re:"[object Uint8Array]"===n?a+=Me:"[object Uint8ClampedArray]"===n?a+=ze:"[object Int16Array]"===n?a+=Le:"[object Uint16Array]"===n?a+=Be:"[object Int32Array]"===n?a+=Pe:"[object Uint32Array]"===n?a+=We:"[object Float32Array]"===n?a+=Ve:"[object Float64Array]"===n?a+=Ue:t(new Error("Failed to get type for BinaryArray"))),t(a+P(r))}else if("[object Blob]"===n){var s=new FileReader;s.onload=function(){var n=Ee+e.type+"~"+P(this.result);t(Ae+Fe+n)},s.readAsArrayBuffer(e)}else try{t(JSON.stringify(e))}catch(n){console.error("Couldn't convert value into a JSON string: ",e),t(null,n)}}function W(e){if(e.substring(0,_e)!==Ae)return JSON.parse(e);var t,n=e.substring(Ge),r=e.substring(_e,Ge);if(r===Fe&&$e.test(n)){var a=n.match($e);t=a[1],n=n.substring(a[0].length)}var s=L(n);switch(r){case De:return s;case Fe:return i([s],{type:t});case Re:return new Int8Array(s);case Me:return new Uint8Array(s);case ze:return new Uint8ClampedArray(s);case Le:return new Int16Array(s);case Be:return new Uint16Array(s);case Pe:return new Int32Array(s);case We:return new Uint32Array(s);case Ve:return new Float32Array(s);case Ue:return new Float64Array(s);default:throw new Error("Unkown type: "+r)}}function V(e,t,n,r){e.executeSql("CREATE TABLE IF NOT EXISTS "+t.storeName+" (id INTEGER PRIMARY KEY, key unique, value)",[],n,r)}function U(e){var t=this,n={db:null};if(e)for(var r in e)n[r]="string"!=typeof e[r]?e[r].toString():e[r];var a=new we(function(e,r){try{n.db=openDatabase(n.name,String(n.version),n.description,n.size)}catch(e){return r(e)}n.db.transaction(function(a){V(a,n,function(){t._dbInfo=n,e()},function(e,t){r(t)})},r)});return n.serializer=qe,a}function G(e,t,n,r,a,s){e.executeSql(n,r,a,function(e,i){i.code===i.SYNTAX_ERR?e.executeSql("SELECT name FROM sqlite_master WHERE type='table' AND name = ?",[t.storeName],function(e,o){o.rows.length?s(e,i):V(e,t,function(){e.executeSql(n,r,a,s)},s)},s):s(e,i)},s)}function H(e,t){var n=this;e=c(e);var r=new we(function(t,r){n.ready().then(function(){var a=n._dbInfo;a.db.transaction(function(n){G(n,a,"SELECT * FROM "+a.storeName+" WHERE key = ? LIMIT 1",[e],function(e,n){var r=n.rows.length?n.rows.item(0).value:null;r&&(r=a.serializer.deserialize(r)),t(r)},function(e,t){r(t)})})}).catch(r)});return o(r,t),r}function q(e,t){var n=this,r=new we(function(t,r){n.ready().then(function(){var a=n._dbInfo;a.db.transaction(function(n){G(n,a,"SELECT * FROM "+a.storeName,[],function(n,r){for(var s=r.rows,i=s.length,o=0;o<i;o++){var u=s.item(o),c=u.value;if(c&&(c=a.serializer.deserialize(c)),c=e(c,u.key,o+1),void 0!==c)return void t(c)}t()},function(e,t){r(t)})})}).catch(r)});return o(r,t),r}function K(e,t,n,r){var a=this;e=c(e);var s=new we(function(s,i){a.ready().then(function(){void 0===t&&(t=null);var o=t,u=a._dbInfo;u.serializer.serialize(t,function(t,c){c?i(c):u.db.transaction(function(n){G(n,u,"INSERT OR REPLACE INTO "+u.storeName+" (key, value) VALUES (?, ?)",[e,t],function(){s(o)},function(e,t){i(t)})},function(t){if(t.code===t.QUOTA_ERR){if(r>0)return void s(K.apply(a,[e,o,n,r-1]));i(t)}})})}).catch(i)});return o(s,n),s}function X(e,t,n){return K.apply(this,[e,t,n,1])}function Y(e,t){var n=this;e=c(e);var r=new we(function(t,r){n.ready().then(function(){var a=n._dbInfo;a.db.transaction(function(n){G(n,a,"DELETE FROM "+a.storeName+" WHERE key = ?",[e],function(){t()},function(e,t){r(t)})})}).catch(r)});return o(r,t),r}function Z(e){var t=this,n=new we(function(e,n){t.ready().then(function(){var r=t._dbInfo;r.db.transaction(function(t){G(t,r,"DELETE FROM "+r.storeName,[],function(){e()},function(e,t){n(t)})})}).catch(n)});return o(n,e),n}function Q(e){var t=this,n=new we(function(e,n){t.ready().then(function(){var r=t._dbInfo;r.db.transaction(function(t){G(t,r,"SELECT COUNT(key) as c FROM "+r.storeName,[],function(t,n){var r=n.rows.item(0).c;e(r)},function(e,t){n(t)})})}).catch(n)});return o(n,e),n}function J(e,t){var n=this,r=new we(function(t,r){n.ready().then(function(){var a=n._dbInfo;a.db.transaction(function(n){G(n,a,"SELECT key FROM "+a.storeName+" WHERE id = ? LIMIT 1",[e+1],function(e,n){var r=n.rows.length?n.rows.item(0).key:null;t(r)},function(e,t){r(t)})})}).catch(r)});return o(r,t),r}function ee(e){var t=this,n=new we(function(e,n){t.ready().then(function(){var r=t._dbInfo;r.db.transaction(function(t){G(t,r,"SELECT key FROM "+r.storeName,[],function(t,n){for(var r=[],a=0;a<n.rows.length;a++)r.push(n.rows.item(a).key);e(r)},function(e,t){n(t)})})}).catch(n)});return o(n,e),n}function te(e){return new we(function(t,n){e.transaction(function(r){r.executeSql("SELECT name FROM sqlite_master WHERE type='table' AND name <> '__WebKitDatabaseInfoTable__'",[],function(n,r){for(var a=[],s=0;s<r.rows.length;s++)a.push(r.rows.item(s).name);t({db:e,storeNames:a})},function(e,t){n(t)})},function(e){n(e)})})}function ne(e,t){t=l.apply(this,arguments);var n=this.config();e="function"!=typeof e&&e||{},e.name||(e.name=e.name||n.name,e.storeName=e.storeName||n.storeName);var r,a=this;return r=e.name?new we(function(t){var r;r=e.name===n.name?a._dbInfo.db:openDatabase(e.name,"","",0),e.storeName?t({db:r,storeNames:[e.storeName]}):t(te(r))}).then(function(e){return new we(function(t,n){e.db.transaction(function(r){function a(e){return new we(function(t,n){r.executeSql("DROP TABLE IF EXISTS "+e,[],function(){t()},function(e,t){n(t)})})}for(var s=[],i=0,o=e.storeNames.length;i<o;i++)s.push(a(e.storeNames[i]));we.all(s).then(function(){t()}).catch(function(e){n(e)})},function(e){n(e)})})}):we.reject("Invalid arguments"),o(r,t),r}function re(){try{return"undefined"!=typeof localStorage&&"setItem"in localStorage&&!!localStorage.setItem}catch(e){return!1}}function ae(e,t){var n=e.name+"/";return e.storeName!==t.storeName&&(n+=e.storeName+"/"),n}function se(){var e="_localforage_support_test";try{return localStorage.setItem(e,!0),localStorage.removeItem(e),!1}catch(e){return!0}}function ie(){return!se()||localStorage.length>0}function oe(e){var t=this,n={};if(e)for(var r in e)n[r]=e[r];return n.keyPrefix=ae(e,t._defaultConfig),ie()?(t._dbInfo=n,n.serializer=qe,we.resolve()):we.reject()}function ue(e){var t=this,n=t.ready().then(function(){for(var e=t._dbInfo.keyPrefix,n=localStorage.length-1;n>=0;n--){var r=localStorage.key(n);0===r.indexOf(e)&&localStorage.removeItem(r)}});return o(n,e),n}function ce(e,t){var n=this;e=c(e);var r=n.ready().then(function(){var t=n._dbInfo,r=localStorage.getItem(t.keyPrefix+e);return r&&(r=t.serializer.deserialize(r)),r});return o(r,t),r}function le(e,t){var n=this,r=n.ready().then(function(){for(var t=n._dbInfo,r=t.keyPrefix,a=r.length,s=localStorage.length,i=1,o=0;o<s;o++){var u=localStorage.key(o);if(0===u.indexOf(r)){var c=localStorage.getItem(u);if(c&&(c=t.serializer.deserialize(c)),c=e(c,u.substring(a),i++),void 0!==c)return c}}});return o(r,t),r}function de(e,t){var n=this,r=n.ready().then(function(){var t,r=n._dbInfo;try{t=localStorage.key(e)}catch(e){t=null}return t&&(t=t.substring(r.keyPrefix.length)),t});return o(r,t),r}function he(e){var t=this,n=t.ready().then(function(){for(var e=t._dbInfo,n=localStorage.length,r=[],a=0;a<n;a++){var s=localStorage.key(a);0===s.indexOf(e.keyPrefix)&&r.push(s.substring(e.keyPrefix.length))}return r});return o(n,e),n}function pe(e){var t=this,n=t.keys().then(function(e){return e.length});return o(n,e),n}function fe(e,t){var n=this;e=c(e);var r=n.ready().then(function(){var t=n._dbInfo;localStorage.removeItem(t.keyPrefix+e)});return o(r,t),r}function me(e,t,n){var r=this;e=c(e);var a=r.ready().then(function(){void 0===t&&(t=null);var n=t;return new we(function(a,s){var i=r._dbInfo;i.serializer.serialize(t,function(t,r){if(r)s(r);else try{localStorage.setItem(i.keyPrefix+e,t),a(n)}catch(e){"QuotaExceededError"!==e.name&&"NS_ERROR_DOM_QUOTA_REACHED"!==e.name||s(e),s(e)}})})});return o(a,n),a}function be(e,t){if(t=l.apply(this,arguments),e="function"!=typeof e&&e||{},!e.name){var n=this.config();e.name=e.name||n.name,e.storeName=e.storeName||n.storeName}var r,a=this;return r=e.name?new we(function(t){e.storeName?t(ae(e,a._defaultConfig)):t(e.name+"/")}).then(function(e){for(var t=localStorage.length-1;t>=0;t--){var n=localStorage.key(t);0===n.indexOf(e)&&localStorage.removeItem(n)}}):we.reject("Invalid arguments"),o(r,t),r}function ge(e,t){e[t]=function(){var n=arguments;return e.ready().then(function(){return e[t].apply(e,n)})}}function ye(){for(var e=1;e<arguments.length;e++){var t=arguments[e];if(t)for(var n in t)t.hasOwnProperty(n)&&(Qe(t[n])?arguments[0][n]=t[n].slice():arguments[0][n]=t[n])}return arguments[0]}var xe="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},ve=a();"undefined"==typeof Promise&&e(3);var we=Promise,ke="local-forage-detect-blob-support",Oe=void 0,Ie={},Ne=Object.prototype.toString,je="readonly",Se="readwrite",Te={_driver:"asyncStorage",_initStorage:T,_support:s(),iterate:E,getItem:C,setItem:$,removeItem:A,clear:_,length:D,key:F,keys:R,dropInstance:M},Ce="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",Ee="~~local_forage_type~",$e=/^~~local_forage_type~([^~]+)~/,Ae="__lfsc__:",_e=Ae.length,De="arbf",Fe="blob",Re="si08",Me="ui08",ze="uic8",Le="si16",Pe="si32",Be="ur16",We="ui32",Ve="fl32",Ue="fl64",Ge=_e+De.length,He=Object.prototype.toString,qe={serialize:B,deserialize:W,stringToBuffer:L,bufferToString:P},Ke={_driver:"webSQLStorage",_initStorage:U,_support:z(),iterate:q,getItem:H,setItem:X,removeItem:Y,clear:Z,length:Q,key:J,keys:ee,dropInstance:ne},Xe={_driver:"localStorageWrapper",_initStorage:oe,_support:re(),iterate:le,getItem:ce,setItem:me,removeItem:fe,clear:ue,length:pe,key:de,keys:he,dropInstance:be},Ye=function(e,t){return e===t||"number"==typeof e&&"number"==typeof t&&isNaN(e)&&isNaN(t)},Ze=function(e,t){for(var n=e.length,r=0;r<n;){if(Ye(e[r],t))return!0;r++}return!1},Qe=Array.isArray||function(e){return"[object Array]"===Object.prototype.toString.call(e)},Je={},et={},tt={INDEXEDDB:Te,WEBSQL:Ke,LOCALSTORAGE:Xe},nt=[tt.INDEXEDDB._driver,tt.WEBSQL._driver,tt.LOCALSTORAGE._driver],rt=["dropInstance"],at=["clear","getItem","iterate","key","keys","length","removeItem","setItem"].concat(rt),st={description:"",driver:nt.slice(),name:"localforage",size:4980736,storeName:"keyvaluepairs",version:1},it=function(){function e(t){for(var n in r(this,e),tt)if(tt.hasOwnProperty(n)){var a=tt[n],s=a._driver;this[n]=s,Je[s]||this.defineDriver(a)}this._defaultConfig=ye({},st),this._config=ye({},this._defaultConfig,t),this._driverSet=null,this._initDriver=null,this._ready=!1,this._dbInfo=null,this._wrapLibraryMethodsWithReady(),this.setDriver(this._config.driver).catch(function(){})}return e.prototype.config=function(e){if("object"===(void 0===e?"undefined":xe(e))){if(this._ready)return new Error("Can't call config() after localforage has been used.");for(var t in e){if("storeName"===t&&(e[t]=e[t].replace(/\W/g,"_")),"version"===t&&"number"!=typeof e[t])return new Error("Database version must be a number.");this._config[t]=e[t]}return!("driver"in e&&e.driver)||this.setDriver(this._config.driver)}return"string"==typeof e?this._config[e]:this._config},e.prototype.defineDriver=function(e,t,n){var r=new we(function(t,n){try{var r=e._driver,a=new Error("Custom driver not compliant; see https://mozilla.github.io/localForage/#definedriver");if(!e._driver)return void n(a);for(var s=at.concat("_initStorage"),i=0,u=s.length;i<u;i++){var c=s[i],l=!Ze(rt,c);if((l||e[c])&&"function"!=typeof e[c])return void n(a)}var d=function(){for(var t=function(e){return function(){var t=new Error("Method "+e+" is not implemented by the current driver"),n=we.reject(t);return o(n,arguments[arguments.length-1]),n}},n=0,r=rt.length;n<r;n++){var a=rt[n];e[a]||(e[a]=t(a))}};d();var h=function(n){Je[r]&&console.info("Redefining LocalForage driver: "+r),Je[r]=e,et[r]=n,t()};"_support"in e?e._support&&"function"==typeof e._support?e._support().then(h,n):h(!!e._support):h(!0)}catch(e){n(e)}});return u(r,t,n),r},e.prototype.driver=function(){return this._driver||null},e.prototype.getDriver=function(e,t,n){var r=Je[e]?we.resolve(Je[e]):we.reject(new Error("Driver not found."));return u(r,t,n),r},e.prototype.getSerializer=function(e){var t=we.resolve(qe);return u(t,e),t},e.prototype.ready=function(e){var t=this,n=t._driverSet.then(function(){return null===t._ready&&(t._ready=t._initDriver()),t._ready});return u(n,e,e),n},e.prototype.setDriver=function(e,t,n){function r(){i._config.driver=i.driver()}function a(e){return i._extend(e),r(),i._ready=i._initStorage(i._config),i._ready}function s(e){return function(){function t(){for(;n<e.length;){var s=e[n];return n++,i._dbInfo=null,i._ready=null,i.getDriver(s).then(a).catch(t)}r();var o=new Error("No available storage method found.");return i._driverSet=we.reject(o),i._driverSet}var n=0;return t()}}var i=this;Qe(e)||(e=[e]);var o=this._getSupportedDrivers(e),c=null!==this._driverSet?this._driverSet.catch(function(){return we.resolve()}):we.resolve();return this._driverSet=c.then(function(){var e=o[0];return i._dbInfo=null,i._ready=null,i.getDriver(e).then(function(e){i._driver=e._driver,r(),i._wrapLibraryMethodsWithReady(),i._initDriver=s(o)})}).catch(function(){r();var e=new Error("No available storage method found.");return i._driverSet=we.reject(e),i._driverSet}),u(this._driverSet,t,n),this._driverSet},e.prototype.supports=function(e){return!!et[e]},e.prototype._extend=function(e){ye(this,e)},e.prototype._getSupportedDrivers=function(e){for(var t=[],n=0,r=e.length;n<r;n++){var a=e[n];this.supports(a)&&t.push(a)}return t},e.prototype._wrapLibraryMethodsWithReady=function(){for(var e=0,t=at.length;e<t;e++)ge(this,at[e])},e.prototype.createInstance=function(t){return new e(t)},e}(),ot=new it;t.exports=ot},{3:3}]},{},[4])(4)},e.exports=r()}).call(this,n(103))},function(e,t){function n(){throw new Error("setTimeout has not been defined")}function r(){throw new Error("clearTimeout has not been defined")}function a(e){if(l===setTimeout)return setTimeout(e,0);if((l===n||!l)&&setTimeout)return l=setTimeout,setTimeout(e,0);try{return l(e,0)}catch(t){try{return l.call(null,e,0)}catch(t){return l.call(this,e,0)}}}function s(e){if(d===clearTimeout)return clearTimeout(e);if((d===r||!d)&&clearTimeout)return d=clearTimeout,clearTimeout(e);try{return d(e)}catch(t){try{return d.call(null,e)}catch(t){return d.call(this,e)}}}function i(){m&&p&&(m=!1,p.length?f=p.concat(f):b=-1,f.length&&o())}function o(){if(!m){var e=a(i);m=!0;for(var t=f.length;t;){for(p=f,f=[];++b<t;)p&&p[b].run();b=-1,t=f.length}p=null,m=!1,s(e)}}function u(e,t){this.fun=e,this.array=t}function c(){}var l,d,h=e.exports={};(function(){try{l="function"==typeof setTimeout?setTimeout:n}catch(e){l=n}try{d="function"==typeof clearTimeout?clearTimeout:r}catch(e){d=r}})();var p,f=[],m=!1,b=-1;h.nextTick=function(e){var t=new Array(arguments.length-1);if(arguments.length>1)for(var n=1;n<arguments.length;n++)t[n-1]=arguments[n];f.push(new u(e,t)),1!==f.length||m||a(o)},u.prototype.run=function(){this.fun.apply(null,this.array)},h.title="browser",h.browser=!0,h.env={},h.argv=[],h.version="",h.versions={},h.on=c,h.addListener=c,h.once=c,h.off=c,h.removeListener=c,h.removeAllListeners=c,h.emit=c,h.prependListener=c,h.prependOnceListener=c,h.listeners=function(e){return[]},h.binding=function(e){throw new Error("process.binding is not supported")},h.cwd=function(){return"/"},h.chdir=function(e){throw new Error("process.chdir is not supported")},h.umask=function(){return 0}},function(e,t,n){"use strict";(function(e){n(5);var t=n(149),r=n(22);const a=Object(r.c)();a.registerFlag("DEBUG",()=>!1,e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")}),a.registerFlag("IS_BROWSER",()=>t.isBrowser()),a.registerFlag("IS_NODE",()=>void 0!==e&&void 0!==e.versions&&void 0!==e.versions.node),a.registerFlag("IS_CHROME",()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor)),a.registerFlag("PROD",()=>!1),a.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>a.getBool("DEBUG")),a.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0),a.registerFlag("IS_TEST",()=>!1),a.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",()=>!0),a.registerFlag("WRAP_TO_IMAGEBITMAP",()=>!1)}).call(this,n(142))},function(e,t,n){"use strict";function r(e){throw new Error(`'${e}' not yet implemented or not found in the registry. `+"This kernel may not be supported by the tfjs backend you have chosen")}n.d(t,"a",function(){return i}),n.d(t,"b",function(){return o});const a=1e-7,s=1e-4;class i{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}}class o{refCount(e){return r("refCount")}incRef(e){return r("incRef")}timerAvailable(){return!0}time(e){return r("time")}read(e){return r("read")}readSync(e){return r("readSync")}numDataIds(){return r("numDataIds")}disposeData(e,t){return r("disposeData")}write(e,t,n){return r("write")}move(e,t,n,a,s){return r("move")}memory(){return r("memory")}floatPrecision(){return r("floatPrecision")}epsilon(){return 32===this.floatPrecision()?a:s}dispose(){return r("dispose")}}},function(e,t,n){"use strict";function r(e){const t=Object(i.a)(e,"x","tanh"),n={x:t};return a.a.runKernel(s.Uc,n)}n.d(t,"a",function(){return u});var a=n(5),s=n(3),i=n(2),o=n(4);const u=Object(o.b)({tanh_:r})},function(e,t,n){"use strict";function r(e,t,n=1,r="float32"){if(0===n)throw new Error("Cannot have a step of zero");const i={start:e,stop:t,step:n,dtype:r};return a.a.runKernel(s.jc,{},i)}n.d(t,"a",function(){return r});var a=n(5),s=n(3)},function(e,t,n){"use strict";n.d(t,"b",function(){return r}),n.d(t,"a",function(){return a});const r=1.7580993408473768,a=1.0507009873554805},function(e,t,n){"use strict";n.d(t,"a",function(){return r});const r={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8}},function(e,t,n){"use strict";function r(){return"undefined"!=typeof navigator&&null!=navigator}function a(e){if(e||r()){if(e||(e=navigator),"ReactNative"===e.product)return!0;const t=e.userAgent||e.vendor||window.opera;return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function s(){return"undefined"!=typeof window&&null!=window.document||"undefined"!=typeof WorkerGlobalScope}n.r(t),n.d(t,"isMobile",function(){return a}),n.d(t,"isBrowser",function(){return s})},function(e,t,n){"use strict";function r(e,t=!1){console.log(e.toString(t))}n.d(t,"a",function(){return r})},function(e,t,n){"use strict";function r(e,t=null,n=!1){const r=Object(i.a)(e,"x","all","bool"),o={x:r},u={axis:t,keepDims:n};return a.a.runKernel(s.f,o,u)}n.d(t,"a",function(){return u});var a=n(5),s=n(3),i=n(2),o=n(4);const u=Object(o.b)({all_:r})},function(e,t,n){"use strict";function r(e,t=null,n=!1){const r=Object(i.a)(e,"x","any","bool"),o={x:r},u={axis:t,keepDims:n};return a.a.runKernel(s.g,o,u)}n.d(t,"a",function(){return u});var a=n(5),s=n(3),i=n(2),o=n(4);const u=Object(o.b)({any_:r})},function(e,t,n){"use strict";function r(e,t=0){const n=Object(i.a)(e,"x","argMax"),r={x:n},o={axis:t};return a.a.runKernel(s.h,r,o)}n.d(t,"a",function(){return u});var a=n(5),s=n(3),i=n(2),o=n(4);const u=Object(o.b)({argMax_:r})},function(e,t,n){"use strict";function r(e,t=0){const n=Object(i.a)(e,"x","argMin"),r={x:n},o={axis:t};return a.a.runKernel(s.i,r,o)}n.d(t,"a",function(){return u});var a=n(5),s=n(3),i=n(2),o=n(4);const u=Object(o.b)({argMin_:r})},function(e,t,n){"use strict";function r(e,t){let n=Object(o.a)(e,"a","atan2"),r=Object(o.a)(t,"b","atan2");[n,r]=Object(i.makeTypesMatch)(n,r);const u={a:n,b:r};return a.a.runKernel(s.m,u)}n.d(t,"a",function(){return c});var a=n(5),s=n(3),i=n(23),o=n(2),u=n(4);const c=Object(u.b)({atan2_:r})},function(e,t,n){"use strict";function r(e,t,n,r,u="NWC",l=1,d){const h=Object(a.a)(e,"x","conv1d"),p=Object(a.a)(t,"filter","conv1d");let f=h,m=!1;2===h.rank&&(m=!0,f=Object(c.a)(h,[1,h.shape[0],h.shape[1]])),s.b(3===f.rank,()=>`Error in conv1d: input must be rank 3, but got rank ${f.rank}.`),s.b(3===p.rank,()=>"Error in conv1d: filter must be rank 3, but got rank "+`${p.rank}.`),null!=d&&s.b(s.v(r),()=>"Error in conv1d: pad must be an integer when using, "+`dimRoundingMode ${d} but got pad ${r}.`),s.b(f.shape[2]===p.shape[1],()=>`Error in conv1d: depth of input (${f.shape[2]}) must match `+`input depth for filter ${p.shape[1]}.`),s.b(o.h(n,l),()=>"Error in conv1D: Either stride or dilation must be 1. "+`Got stride ${n} and dilation '${l}'`),s.b("NWC"===u,()=>`Error in conv1d: got dataFormat of ${u} but only NWC is currently supported.`);const b=Object(c.a)(p,[1,p.shape[0],p.shape[1],p.shape[2]]),g=Object(c.a)(f,[f.shape[0],1,f.shape[1],f.shape[2]]),y=[1,n],x=[1,l],v="NHWC",w=Object(i.a)(g,b,y,r,v,x,d);return m?Object(c.a)(w,[w.shape[2],w.shape[3]]):Object(c.a)(w,[w.shape[0],w.shape[2],w.shape[3]])}n.d(t,"a",function(){return l});var a=n(2),s=n(8),i=n(65),o=n(31),u=n(4),c=n(7);const l=Object(u.b)({conv1d_:r})},function(e,t,n){"use strict";function r(e,t,n,r,i,o){const u=Object(a.a)(e,"x","conv2dTranspose"),c=Object(a.a)(t,"filter","conv2dTranspose");return Object(s.a)(n,u,c,r,i,"NHWC",o)}n.d(t,"a",function(){return o});var a=n(2),s=n(138),i=n(4);const o=Object(i.b)({conv2dTranspose_:r})},function(e,t,n){"use strict";function r(e){const t=Object(i.a)(e,"x","cosh"),n={x:t};return a.a.runKernel(s.J,n)}n.d(t,"a",function(){return u});var a=n(5),s=n(3),i=n(2),o=n(4);const u=Object(o.b)({cosh_:r})},function(e,t,n){"use strict";function r(e,t,n="NHWC"){const r=Object(i.a)(e,"x","depthToSpace"),u="NHWC"===n?r.shape[1]:r.shape[2],c="NHWC"===n?r.shape[2]:r.shape[3],l="NHWC"===n?r.shape[3]:r.shape[1];o.b(u*t>=0,()=>`Negative dimension size caused by overflow when multiplying\n    ${u} and ${t}  for depthToSpace with input shape\n    ${r.shape}`),o.b(c*t>=0,()=>`Negative dimension size caused by overflow when multiplying\n    ${c} and ${t} for depthToSpace with input shape\n        ${r.shape}`),o.b(l%(t*t)==0,()=>`Dimension size must be evenly divisible by ${t*t} but is ${l} for depthToSpace with input shape ${r.shape}`);const d={x:r},h={blockSize:t,dataFormat:n};return a.a.runKernel(s.N,d,h)}n.d(t,"a",function(){return c});var a=n(5),s=n(3),i=n(2),o=n(8),u=n(4);const c=Object(u.b)({depthToSpace_:r})},function(e,t,n){"use strict";function r(e,t,n,r,u=[1,1],l="NHWC"){const d=Object(i.a)(e,"x","dilation2d"),h=Object(i.a)(t,"filter","dilation2d");o.b(3===d.rank||4===d.rank,()=>"Error in dilation2d: input must be rank 3 or 4, but got rank "+`${d.rank}.`),o.b(3===h.rank,()=>"Error in dilation2d: filter must be rank 3, but got rank "+`${h.rank}.`),o.b("NHWC"===l,()=>"Error in dilation2d: Only NHWC is currently supported, "+`but got dataFormat of ${l}`);let p=d,f=!1;3===d.rank&&(p=Object(c.a)(d,[1,d.shape[0],d.shape[1],d.shape[2]]),f=!0);const m={x:p,filter:h},b={strides:n,pad:r,dilations:u},g=a.a.runKernel(s.S,m,b);return f?Object(c.a)(g,[g.shape[1],g.shape[2],g.shape[3]]):g}
n.d(t,"a",function(){return l});var a=n(5),s=n(3),i=n(2),o=n(8),u=n(4),c=n(7);const l=Object(u.b)({dilation2d_:r})},function(e,t,n){"use strict";function r(e,t){let n=Object(s.a)(e,"a","div"),r=Object(s.a)(t,"b","div");[n,r]=Object(a.makeTypesMatch)(n,r);const u=Object(i.a)(n,r),d=Object(l.a)(u),h=Object(o.a)(r,d);return Object(c.a)(h,d,u)}n.d(t,"a",function(){return d});var a=n(23),s=n(2),i=n(15),o=n(93),u=n(4),c=n(36),l=n(20);const d=Object(u.b)({divNoNan_:r})},function(e,t,n){"use strict";function r(e,t){const n=Object(a.a)(e,"t1","dot"),r=Object(a.a)(t,"t2","dot");s.b(!(1!==n.rank&&2!==n.rank||1!==r.rank&&2!==r.rank),()=>"Error in dot: inputs must all be rank 1 or 2, but got ranks "+`${n.rank} and ${r.rank}.`);const o=1===n.rank?n.size:n.shape[1],c=1===r.rank?r.size:r.shape[0];if(s.b(o===c,()=>"Error in dot: inner dimensions of inputs must match, but got "+`${o} and ${c}.`),1===n.rank&&1===r.rank){const e=Object(u.a)(n,[1,-1]),t=Object(u.a)(r,[-1,1]),a=Object(i.a)(e,t);return Object(u.a)(a,[])}if(1===n.rank&&2===r.rank){const e=Object(u.a)(n,[1,-1]),t=Object(u.a)(r,[r.shape[0],r.shape[1]]),a=Object(i.a)(e,t);return Object(u.a)(a,[a.size])}if(2===n.rank&&1===r.rank){const e=Object(u.a)(r,[-1,1]),t=Object(i.a)(n,e);return Object(u.a)(t,[t.size])}{const e=Object(u.a)(r,[r.shape[0],r.shape[1]]),t=Object(i.a)(n,e);return t}}n.d(t,"a",function(){return c});var a=n(2),s=n(8),i=n(24),o=n(4),u=n(7);const c=Object(o.b)({dot_:r})},function(e,t,n){"use strict";function r(e,t=5,n=1,r=1,u=.5){const l=Object(i.a)(e,"x","localResponseNormalization");o.b(4===l.rank||3===l.rank,()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ${l.rank}.`),o.b(o.v(t),()=>"Error in localResponseNormalization: depthRadius must be an "+`integer but got depthRadius ${t}.`);let d=l,h=!1;3===l.rank&&(h=!0,d=Object(c.a)(l,[1,l.shape[0],l.shape[1],l.shape[2]]));const p={x:d},f={depthRadius:t,bias:n,alpha:r,beta:u},m=a.a.runKernel(s.wb,p,f);return h?Object(c.a)(m,[m.shape[1],m.shape[2],m.shape[3]]):m}n.d(t,"a",function(){return l});var a=n(5),s=n(3),i=n(2),o=n(8),u=n(4),c=n(7);const l=Object(u.b)({localResponseNormalization_:r})},function(e,t,n){"use strict";function r(e){const t=Object(i.a)(e,"x","log1p"),n={x:t};return a.a.runKernel(s.Db,n)}n.d(t,"a",function(){return u});var a=n(5),s=n(3),i=n(2),o=n(4);const u=Object(o.b)({log1p_:r})},function(e,t,n){"use strict";function r(e){const t=Object(i.a)(e,"x","softplus"),n={x:t};return a.a.runKernel(s.Hc,n)}n.d(t,"a",function(){return u});var a=n(5),s=n(3),i=n(2),o=n(4);const u=Object(o.b)({softplus_:r})},function(e,t,n){"use strict";function r(e,t){const n=Object(a.a)(e,"a","logicalXor","bool"),r=Object(a.a)(t,"b","logicalXor","bool");return Object(s.a)(n.shape,r.shape),Object(i.a)(Object(u.a)(e,t),Object(o.a)(Object(i.a)(e,t)))}n.d(t,"a",function(){return l});var a=n(2),s=n(17),i=n(59),o=n(95),u=n(125),c=n(4);const l=Object(c.b)({logicalXor_:r})},function(e,t,n){"use strict";function r(e,t,n){o.b("reflect"===n||"symmetric"===n,()=>"Invalid mode. Mode must be either reflect or symmetric. "+`Got ${n}.`);const r=Object(i.a)(e,"x","mirrorPad");if(0===r.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");o.b(t.length===r.rank,()=>`Padding doesn't match input. Must be ${r.rank}. `+`Got ${t.length}.`);const u="reflect"===n?1:0;for(let e=0;e<r.rank;e++)o.b(2===t[e].length,()=>"Invalid number of paddings. Must be length of 2 each."),o.b(t[e][0]>=0&&t[e][0]<=r.shape[e]-u&&t[e][1]>=0&&t[e][1]<=r.shape[e]-u,()=>`Padding in dimension ${e} cannot be greater than or equal `+`to ${r.shape[e]-u} or less than 0 for input of `+`shape ${r.shape}`);const c={paddings:t,mode:n},l={x:r};return a.a.runKernel(s.Sb,l,c)}n.d(t,"a",function(){return c});var a=n(5),s=n(3),i=n(2),o=n(8),u=n(4);const c=Object(u.b)({mirrorPad_:r})},function(e,t,n){"use strict";function r(e,t){let n=Object(o.a)(e,"a","mod"),r=Object(o.a)(t,"b","mod");[n,r]=Object(i.makeTypesMatch)(n,r);const u={a:n,b:r};return a.a.runKernel(s.Tb,u)}n.d(t,"a",function(){return c});var a=n(5),s=n(3),i=n(23),o=n(2),u=n(4);const c=Object(u.b)({mod_:r})},function(e,t,n){"use strict";function r(e,t,n,r,h,m){null==h&&(h=[1,1]),null==m&&(m=1),0===r&&(r="valid");const b=Object(i.a)(e,"x","maxPool");let g=b,y=!1;3===b.rank&&(y=!0,g=Object(p.a)(b,[1,b.shape[0],b.shape[1],b.shape[2]])),o.b(l.h(m,h),()=>"Error in pool: Either strides or dilations must be 1. "+`Got strides ${m} and dilations '${h}'`);const x=l.e(g.shape,t,m,h,r),v=[x.dilationHeight,x.dilationWidth];let w;w="same"===r?s([x.filterHeight,x.filterWidth],v):[[0,0],[0,0]];const k=1===v[0]&&1===v[1],[O,I]=a([x.inHeight,x.inWidth],v,w),N=k?r:"valid",j=k?g:Object(f.a)(g,v,O),S="avg"===n?()=>Object(u.a)(j,t,m,N):()=>Object(d.a)(j,t,m,N),T=S(),C=k?T:Object(c.a)(T,v,I);return y?Object(p.a)(C,[C.shape[1],C.shape[2],C.shape[3]]):C}function a(e,t,n){const r=n.map(e=>e[0]),a=n.map(e=>e[1]),s=e.concat(r,a),i=t.map((e,t)=>(e-s[t]%e)%e),o=a.map((e,t)=>e+i[t]),u=t.map((e,t)=>[r[t],o[t]]),c=t.map((e,t)=>[0,i[t]]);return[u,c]}function s(e,t){const n=e.map((e,n)=>e+(e-1)*(t[n]-1)),r=n.map(e=>e-1),a=r.map(e=>Math.floor(e/2)),s=r.map((e,t)=>e-a[t]);return r.map((e,t)=>[a[t],s[t]])}n.d(t,"a",function(){return m});var i=n(2),o=n(8),u=n(116),c=n(91),l=n(31),d=n(126),h=n(4),p=n(7),f=n(96);const m=Object(h.b)({pool_:r})},function(e,t,n){"use strict";function r(e,t=null,n=!1){let r=Object(i.a)(e,"x","prod");"bool"===r.dtype&&(r=Object(o.a)(r,"int32"));const u={x:r},c={axis:t,keepDims:n};return a.a.runKernel(s.ic,u,c)}n.d(t,"a",function(){return c});var a=n(5),s=n(3),i=n(2),o=n(12),u=n(4);const c=Object(u.b)({prod_:r})},function(e,t,n){"use strict";function r(e,t=0,n=1,r="float32",s){const o=Object(a.a)(e,r),u=new i.c(t,n,null,s);for(let e=0;e<o.values.length;e++)o.values[e]=u.nextValue();return o.toTensor()}n.d(t,"a",function(){return o});var a=n(47),s=n(4),i=n(102);const o=Object(s.b)({randomUniform_:r})},function(e,t,n){"use strict";function r(e){const t=Object(i.a)(e,"x","rsqrt"),n={x:t};return a.a.runKernel(s.xc,n)}n.d(t,"a",function(){return u});var a=n(5),s=n(3),i=n(2),o=n(4);const u=Object(o.b)({rsqrt_:r})},function(e,t,n){"use strict";function r(e){const t=Object(i.a)(e,"x","selu"),n={x:t};return a.a.runKernel(s.Ac,n)}n.d(t,"a",function(){return u});var a=n(5),s=n(3),i=n(2),o=n(4);const u=Object(o.b)({selu_:r})},function(e,t,n){"use strict";function r(e,t,n,r,u,l=[1,1],d="NHWC"){const h=Object(a.a)(e,"x","separableConv2d"),p=Object(a.a)(t,"depthwiseFilter","separableConv2d"),f=Object(a.a)(n,"pointwiseFilter","separableConv2d");let m=h,b=!1;if(3===h.rank&&(b=!0,m=Object(c.a)(h,[1,h.shape[0],h.shape[1],h.shape[2]])),"NCHW"===d)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");s.b(4===m.rank,()=>"Error in separableConv2d: input must be rank 4, but got "+`rank ${m.rank}.`),s.b(4===p.rank,()=>"Error in separableConv2d: depthwise filter must be rank 4, but "+`got rank ${p.rank}.`),s.b(4===f.rank,()=>"Error in separableConv2d: pointwise filter must be rank 4, but "+`got rank ${p.rank}.`),s.b(1===f.shape[0],()=>"Error in separableConv2d: the first dimension of pointwise filter "+` must be 1, but got ${f.shape[0]}.`),s.b(1===f.shape[1],()=>"Error in separableConv2d: the second dimension of pointwise "+`filter must be 1, but got ${f.shape[1]}.`);const g=p.shape[2],y=p.shape[3];s.b(f.shape[2]===g*y,()=>"Error in separableConv2d: the third dimension of pointwise filter "+`must be ${g*y}, `+`but got ${f.shape[2]}.`);const x=Object(o.a)(m,p,r,u,d,l),v=1,w=Object(i.a)(x,f,v,"valid",d);return b?Object(c.a)(w,[w.shape[1],w.shape[2],w.shape[3]]):w}n.d(t,"a",function(){return l});var a=n(2),s=n(8),i=n(65),o=n(92),u=n(4),c=n(7);const l=Object(u.b)({separableConv2d_:r})},function(e,t,n){"use strict";function r(e){const t=Object(i.a)(e,"x","sin"),n={x:t};return a.a.runKernel(s.Dc,n)}n.d(t,"a",function(){return u});var a=n(5),s=n(3),i=n(2),o=n(4);const u=Object(o.b)({sin_:r})},function(e,t,n){"use strict";function r(e){const t=Object(i.a)(e,"x","sinh"),n={x:t};return a.a.runKernel(s.Ec,n)}n.d(t,"a",function(){return u});var a=n(5),s=n(3),i=n(2),o=n(4);const u=Object(o.b)({sinh_:r})},function(e,t,n){"use strict";function r(e){const t=e.shape[e.shape.length-1],n=e.size/t;let r;if(t<=2){const a=Object(l.a)(e,[n,t]);r=Object(f.a)(a)}else{const u=[n,2*(t-1)],m=Object(l.a)(Object(c.a)(e),[n,t]),b=Object(l.a)(Object(i.a)(e),[n,t]),g=Object(d.a)(Object(p.a)(m,[0,1],[n,t-2]),1),y=Object(o.a)(Object(d.a)(Object(p.a)(b,[0,1],[n,t-2]),1),Object(h.a)(-1)),x=Object(s.a)([m,g],1),v=Object(s.a)([b,y],1),w=Object(l.a)(Object(a.a)(x,v),[u[0],u[1]]);r=Object(f.a)(w)}if(r=Object(c.a)(r),3===e.rank&&0!==e.shape[0]){const t=r,n=e.shape[0];r=Object(l.a)(r,[n,r.shape[0]/n,r.shape[1]]),t.dispose()}return r}n.d(t,"a",function(){return m});var a=n(58),s=n(32),i=n(121),o=n(9),u=n(4),c=n(107),l=n(7),d=n(48),h=n(16),p=n(28),f=n(108);const m=Object(u.b)({irfft_:r})},function(e,t,n){"use strict";function r(e,t,n){if(Object(s.d)(e),null!=t&&3!==t.length)throw new Error("tensor3d() requires shape to have three numbers");const r=Object(a.c)(e,n);if(3!==r.length&&1!==r.length)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return Object(i.a)(e,t,r,n)}n.d(t,"a",function(){return r});var a=n(2),s=n(8),i=n(51)},function(e,t,n){"use strict";function r(e,t=1,n=!0){const r=Object(i.a)(e,"x","topk");if(0===r.rank)throw new Error("topk() expects the input to be of rank 1 or higher");const o=r.shape[r.shape.length-1];if(t>o)throw new Error(`'k' passed to topk() must be <= the last dimension (${o}) `+`but got ${t}`);const u={x:r},c={k:t,sorted:n},[l,d]=a.a.runKernel(s.Wc,u,c);return{values:l,indices:d}}n.d(t,"a",function(){return u});var a=n(5),s=n(3),i=n(2),o=n(4);const u=Object(o.b)({topk_:r})},function(e,t,n){"use strict";function r(e,t=0){const n=Object(i.a)(e,"x","unique","string_or_numeric");Object(o.b)(n.rank>0,()=>"The input tensor must be at least 1D");const r={x:n},u={axis:t},[c,l]=a.a.runKernel(s.Zc,r,u);return{values:c,indices:l}}n.d(t,"a",function(){return c});var a=n(5),s=n(3),i=n(2),o=n(8),u=n(4);const c=Object(u.b)({unique_:r})},function(e,t,n){"use strict";async function r(e){const t=Object(s.a)(e,"condition","whereAsync","bool"),n=await t.data(),r=Object(a.a)(t.shape,n);return e!==t&&t.dispose(),r}n.d(t,"a",function(){return i});var a=n(182),s=n(2);const i=r},function(e,t,n){"use strict";function r(e,t){const n=[];for(let e=0;e<t.length;e++)t[e]&&n.push(e);const r=Object(a.a)(e,"int32"),s=Object(a.a)([n.length,e.length],"int32");for(let t=0;t<n.length;t++){const a=r.indexToLoc(n[t]),i=t*e.length;s.values.set(a,i)}return s.toTensor()}n.d(t,"a",function(){return r});var a=n(47)},function(e,t,n){"use strict";n.r(t);var r=n(184);n.d(t,"simpleAbsImpl",function(){return r.b});var a=n(68);n.d(t,"addImpl",function(){return a.c});var s=n(98);n.d(t,"bincountImpl",function(){return s.a}),n.d(t,"bincountReduceImpl",function(){return s.b});var i=n(185);n.d(t,"ceilImpl",function(){return i.b});var o=n(186);n.d(t,"concatImpl",function(){return o.a});var u=n(136);n.d(t,"expImpl",function(){return u.c});var c=n(187);n.d(t,"expm1Impl",function(){return c.b});var l=n(188);n.d(t,"floorImpl",function(){return l.b});var d=n(189);n.d(t,"gatherV2Impl",function(){return d.a});var h=n(190);n.d(t,"greaterImpl",function(){return h.b});var p=n(191);n.d(t,"lessImpl",function(){return p.b});var f=n(192);n.d(t,"linSpaceImpl",function(){return f.a});var m=n(193);n.d(t,"logImpl",function(){return m.b});var b=n(194);n.d(t,"maxImpl",function(){return b.a});var g=n(195);n.d(t,"maximumImpl",function(){return g.b});var y=n(196);n.d(t,"minimumImpl",function(){return y.b});var x=n(69);n.d(t,"multiplyImpl",function(){return x.c});var v=n(197);n.d(t,"negImpl",function(){return v.b});var w=n(198);n.d(t,"notEqualImpl",function(){return w.b});var k=n(199);n.d(t,"prodImpl",function(){return k.b});var O=n(200);n.d(t,"rangeImpl",function(){return O.a});var I=n(201);n.d(t,"rsqrtImpl",function(){return I.b});var N=n(54);n.d(t,"sliceImpl",function(){return N.c});var j=n(202);n.d(t,"sparseReshapeImpl",function(){return j.a});var S=n(203);n.d(t,"squaredDifferenceImpl",function(){return S.b});var T=n(204);n.d(t,"stridedSliceImpl",function(){return T.a});var C=n(99);n.d(t,"subImpl",function(){return C.c});var E=n(205);n.d(t,"tileImpl",function(){return E.a});var $=n(206);n.d(t,"topKImpl",function(){return $.a});var A=n(137);n.d(t,"transposeImpl",function(){return A.a});var _=n(207);n.d(t,"uniqueImpl",function(){return _.a})},function(e,t,n){"use strict";function r(e){const t=new Float32Array(e.length);for(let n=0;n<e.length;++n)t[n]=Math.abs(e[n]);return t}n.d(t,"b",function(){return r}),n.d(t,"a",function(){return o});var a=n(0),s=n(11);const i=e=>{const{x:t}=e.inputs,n=e.backend;Object(s.a)(t,"abs");let i=new Float32Array(a.util.sizeFromShape(t.shape));const o=n.data.get(t.dataId).values;return i=r(o),n.makeOutput(i,t.shape,"float32")},o={kernelName:a.Abs,backendName:"cpu",kernelFunc:i}},function(e,t,n){"use strict";n.d(t,"b",function(){return i}),n.d(t,"a",function(){return u});var r=n(0),a=n(73),s=n(18);const i=Object(a.a)(e=>Math.ceil(e)),o=Object(s.b)(r.Ceil,i),u={kernelName:r.Ceil,backendName:"cpu",kernelFunc:o}},function(e,t,n){"use strict";function r(e,t,n,r){const s=a.util.getArrayFromDType(n,a.util.sizeFromShape(t));if(r&&"string"!==n){let t=0;e.forEach(e=>{const n=a.util.sizeFromShape(e.shape);s.set(e.vals,t),t+=n})}else{let r=0;e.forEach(e=>{const i="string"===n?a.backend_util.fromUint8ToStringArray(e.vals):e.vals;let o=0;for(let n=0;n<e.shape[0];++n){const a=n*t[1]+r;for(let t=0;t<e.shape[1];++t)s[a+t]=i[o++]}r+=e.shape[1]})}return s}n.d(t,"a",function(){return r});var a=n(0)},function(e,t,n){"use strict";n.d(t,"b",function(){return i}),n.d(t,"a",function(){return u});var r=n(0),a=n(73),s=n(18);const i=Object(a.a)(e=>Math.expm1(e)),o=Object(s.b)(r.Expm1,i),u={kernelName:r.Expm1,backendName:"cpu",kernelFunc:o}},function(e,t,n){"use strict";n.d(t,"b",function(){return i}),n.d(t,"a",function(){return u});var r=n(0),a=n(73),s=n(18);const i=Object(a.a)(e=>Math.floor(e)),o=Object(s.b)(r.Floor,i),u={kernelName:r.Floor,backendName:"cpu",kernelFunc:o}},function(e,t,n){"use strict";function r(e,t,n){const r=Object(a.buffer)(n,e.dtype);for(let n=0;n<r.size;++n){const a=r.indexToLoc(n),s=a.slice(),i=s[0],o=s[2],u=t.locToIndex([i,o]);s[2]=t.values[u];const c=e.locToIndex(s);r.values[n]=e.values[c]}return r}n.d(t,"a",function(){return r});var a=n(0)},function(e,t,n){"use strict";n.d(t,"b",function(){return i}),n.d(t,"a",function(){return u});var r=n(0),a=n(27),s=n(29);const i=Object(a.a)((e,t)=>e>t?1:0),o=Object(s.a)(r.Greater,i,null,"bool"),u={kernelName:r.Greater,backendName:"cpu",kernelFunc:o}},function(e,t,n){"use strict";n.d(t,"b",function(){return i}),n.d(t,"a",function(){return u});var r=n(0),a=n(27),s=n(29);const i=Object(a.a)((e,t)=>e<t?1:0),o=Object(s.a)(r.Less,i,null,"bool"),u={kernelName:r.Less,backendName:"cpu",kernelFunc:o}},function(e,t,n){"use strict";function r(e,t,n){const r=(t-e)/(n-1),s=a.util.makeZerosTypedArray(n,"float32");s[0]=e;for(let e=1;e<s.length;e++)s[e]=s[e-1]+r;return s}n.d(t,"a",function(){return r});var a=n(0)},function(e,t,n){"use strict";n.d(t,"b",function(){return i}),n.d(t,"a",function(){return u});var r=n(0),a=n(73),s=n(18);const i=Object(a.a)(e=>Math.log(e)),o=Object(s.b)(r.Log,i),u={kernelName:r.Log,backendName:"cpu",kernelFunc:o}},function(e,t,n){"use strict";function r(e,t,n,r){const s=a.util.getTypedArrayFromDType(r,a.util.sizeFromShape(n));for(let n=0;n<s.length;++n){const r=n*t;let a=e[r];for(let n=0;n<t;++n){const t=e[r+n];t>a&&(a=t)}s[n]=a}return s}n.d(t,"a",function(){return r});var a=n(0)},function(e,t,n){"use strict";n.d(t,"b",function(){return i}),n.d(t,"a",function(){return u});var r=n(0),a=n(27),s=n(29);const i=Object(a.a)((e,t)=>Math.max(e,t)),o=Object(s.a)(r.Maximum,i),u={kernelName:r.Maximum,backendName:"cpu",kernelFunc:o}},function(e,t,n){"use strict";n.d(t,"b",function(){return i}),n.d(t,"a",function(){return u});var r=n(0),a=n(27),s=n(29);const i=Object(a.a)((e,t)=>Math.min(e,t)),o=Object(s.a)(r.Minimum,i),u={kernelName:r.Minimum,backendName:"cpu",kernelFunc:o}},function(e,t,n){"use strict";function r(e,t,n){const r=s.util.createScalarValue(-1,n);return Object(o.c)([],t,r,e,n)}function a(e){const{inputs:t,backend:n}=e,{x:a}=t;Object(i.a)(a,"neg");const s=n.data.get(a.dataId).values,[o,u]=r(s,a.shape,a.dtype);return n.makeTensorInfo(u,a.dtype,o)}n.d(t,"b",function(){return r}),n.d(t,"a",function(){return u});var s=n(0),i=n(11),o=n(69);const u={kernelName:s.Neg,backendName:"cpu",kernelFunc:a}},function(e,t,n){"use strict";n.d(t,"b",function(){return i}),n.d(t,"a",function(){return u});var r=n(0),a=n(27),s=n(29);const i=Object(a.a)((e,t)=>e!==t?1:0),o=Object(s.a)(r.NotEqual,i,null,"bool"),u={kernelName:r.NotEqual,backendName:"cpu",kernelFunc:o}},function(e,t,n){"use strict";function r(e,t,n,r){const[a,i]=s.backend_util.computeOutAndReduceShapes(e,r),o=Object(s.upcastType)(t,"int32"),u=s.util.makeZerosTypedArray(s.util.sizeFromShape(a),o),c=s.util.sizeFromShape(i);for(let e=0;e<u.length;++e){const t=e*c;let r=1;for(let e=0;e<c;++e)r*=n[t+e];u[e]=r}return{outVals:u,outShape:a,outDtype:o}}function a(e){const{inputs:t,backend:n,attrs:a}=e,{x:u}=t,{axis:c,keepDims:l}=a;Object(i.a)(u,"prod");const d=u.shape.length,h=s.util.parseAxisParam(c,u.shape),p=s.backend_util.getAxesPermutation(h,d);let f=h,m=u;const b=[];null!=p&&(m=Object(o.a)({inputs:{x:u},backend:n,attrs:{perm:p}}),b.push(m),f=s.backend_util.getInnerMostAxes(f.length,d));const g=n.data.get(m.dataId).values,{outVals:y,outShape:x,outDtype:v}=r(m.shape,m.dtype,g,f);let w=x;return l&&(w=s.backend_util.expandShapeToKeepDim(x,h)),b.forEach(e=>n.disposeIntermediateTensorInfo(e)),n.makeTensorInfo(w,v,y)}n.d(t,"b",function(){return r}),n.d(t,"a",function(){return u});var s=n(0),i=n(11),o=n(33);const u={kernelName:s.Prod,backendName:"cpu",kernelFunc:a}},function(e,t,n){"use strict";function r(e,t,n,r){const s=e===t,i=e<t&&n<0,o=t<e&&n>1;if(s||i||o)return a.util.makeZerosTypedArray(0,r);const u=Math.abs(Math.ceil((t-e)/n)),c=a.util.makeZerosTypedArray(u,r);t<e&&1===n&&(n=-1),c[0]=e;for(let e=1;e<c.length;e++)c[e]=c[e-1]+n;return c}n.d(t,"a",function(){return r});var a=n(0)},function(e,t,n){"use strict";n.d(t,"b",function(){return i}),n.d(t,"a",function(){return u});var r=n(0),a=n(73),s=n(18);const i=Object(a.a)(e=>1/Math.sqrt(e)),o=Object(s.b)(r.Rsqrt,i),u={kernelName:r.Rsqrt,backendName:"cpu",kernelFunc:o}},function(e,t,n){"use strict";function r(e,t,n,r,s){const i=a.util.sizeFromShape(r),o=t[0],u=s.length,c=[];let l=1,d=-1;for(let e=0;e<u;++e){const t=s[e];if(-1===t){if(-1!==d)throw new Error(`only one output dimension may be -1, not both ${d} and ${e}`);d=e,c.push(1)}else{if(t<0)throw new Error(`size ${e} must be non-negative, not ${t}`);l*=t,c.push(t)}}if(-1!==d){if(l<=0)throw new Error("reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero");const e=Math.trunc(i/l);if(l*e!==i)throw new Error(`Input to reshape is a SparseTensor with ${i}\n          dense values, but the requested shape requires a multiple of ${l}. inputShape=${r} outputShape= ${c}`);c[d]=e}const h=a.util.sizeFromShape(c);if(h!==i)throw new Error(`Input to reshape is a tensor with ${i} dense values, but the requested shape has ${h}. inputShape=${r} outputShape=${c}`);const p=r.length,f=[];if(p>0){f[p-1]=1;for(let e=p-2;e>=0;--e)f[e]=f[e+1]*r[e+1]}const m=[];if(u>0){m[u-1]=1;for(let e=u-2;e>=0;--e)m[e]=m[e+1]*c[e+1]}const b=a.util.getArrayFromDType(n,o*u);for(let t=0;t<o;++t){let n=0;for(let r=0;r<p;++r)n+=e[t*p+r]*f[r];for(let e=0;e<u;++e)b[t*u+e]=Math.trunc(n/m[e]),n%=m[e]}return[b,[o,u],c]}n.d(t,"a",function(){return r});var a=n(0)},function(e,t,n){"use strict";n.d(t,"b",function(){return i}),n.d(t,"a",function(){return u});var r=n(0),a=n(27),s=n(29);const i=Object(a.a)((e,t)=>{const n=e-t;return n*n}),o=Object(s.a)(r.SquaredDifference,i),u={kernelName:r.SquaredDifference,backendName:"cpu",kernelFunc:o}},function(e,t,n){"use strict";function r(e,t,n,r){const s=Object(a.buffer)(e,t.dtype);for(let e=0;e<s.size;e++){const a=s.indexToLoc(e),i=new Array(a.length);for(let e=0;e<i.length;e++)i[e]=a[e]*n[e]+r[e];s.set(t.get(...i),...a)}return s}n.d(t,"a",function(){return r});var a=n(0)},function(e,t,n){"use strict";function r(e,t){const n=new Array(e.rank);for(let r=0;r<n.length;r++)n[r]=e.shape[r]*t[r];const r=Object(a.buffer)(n,e.dtype);for(let t=0;t<r.values.length;++t){const n=r.indexToLoc(t),a=new Array(e.rank);for(let t=0;t<a.length;t++)a[t]=n[t]%e.shape[t];const s=e.locToIndex(a);r.values[t]=e.values[s]}return r}n.d(t,"a",function(){return r});var a=n(0)},function(e,t,n){"use strict";function r(e,t,n,r,s){const i=t[t.length-1],[o,u]=[e.length/i,i],c=a.util.getTypedArrayFromDType(n,o*r),l=a.util.getTypedArrayFromDType("int32",o*r);for(let t=0;t<o;t++){const n=t*u,a=e.subarray(n,n+u),s=[];for(let e=0;e<a.length;e++)s.push({value:a[e],index:e});s.sort((e,t)=>t.value-e.value);const i=t*r,o=c.subarray(i,i+r),d=l.subarray(i,i+r);for(let e=0;e<r;e++)o[e]=s[e].value,d[e]=s[e].index}const d=t.slice();return d[d.length-1]=r,[Object(a.buffer)(d,n,c),Object(a.buffer)(d,"int32",l)]}n.d(t,"a",function(){return r});var a=n(0)},function(e,t,n){"use strict";function r(e,t,n,r){const s=a.util.parseAxisParam(t,n)[0],i=[1,n[0],1];for(let e=0;e<s;e++)i[0]*=n[e];i[1]=n[s];for(let e=s+1;e<n.length;e++)i[2]*=n[e];const o={},u=new Int32Array(n[s]),c=new a.TensorBuffer(i,r,e),l=[],d=1===i[0]&&1===i[2];for(let t=0;t<n[s];t++){let n;if(d)n=e[t].toString();else{const e=[];for(let n=0;n<i[0];n++)for(let r=0;r<i[2];r++)e.push(c.get(n,t,r));n=e.join(",")}if(void 0!==o[n])u[t]=o[n];else{const e=Object.keys(o).length;o[n]=e,u[t]=e,l.push(t)}}const h=i.slice();h[1]=Object.keys(o).length;const p=new a.TensorBuffer(h,r);l.forEach((e,t)=>{for(let n=0;n<i[0];n++)for(let r=0;r<i[2];r++)p.set(c.get(n,e,r),n,t,r)});const f=n.slice();return f[s]=h[1],{outputValues:p.values,outputShape:f,indices:u}}n.d(t,"a",function(){return r});var a=n(0)},function(e,t,n){"use strict";function r(e,t,n=""){if("number"!=typeof e&&"number"!=typeof t){v.util.assert(e.length===t.length,()=>n+` Shapes ${e} and ${t} must match`);for(let r=0;r<e.length;r++){const a=e[r],s=t[r];v.util.assert(a<0||s<0||a===s,()=>n+` Shapes ${e} and ${t} must match`)}}}function a(e){return"number"!=typeof e&&!e.some(e=>e<0)}function s(e,t,n){let r=i(e,n);const s=!a(r);if(s&&0===t.length)throw new Error("Tried to calculate elements of an empty list"+` with non-fully-defined elementShape: ${r}`);if(s&&t.forEach(e=>{r=i(e.shape,r)}),!a(r))throw new Error(`Non-fully-defined elementShape: ${r}`);return r}function i(e,t){if("number"==typeof e)return t;if("number"==typeof t)return e;if(e.length!==t.length)throw new Error(`Incompatible ranks during merge: ${e} vs. ${t}`);const n=[];for(let r=0;r<e.length;++r){const a=e[r],s=t[r];if(a>=0&&s>=0&&a!==s)throw new Error(`Incompatible shape during merge: ${e} vs. ${t}`);n[r]=a>=0?a:s}return n}function o(e,t,n){const a=e.dtype;if(e.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${e.shape}`);if(e.dtype!==n)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${n}`);const s=e.shape.slice(1);r(s,t,"TensorList shape mismatch: ");const i=Object(v.unstack)(e);return new Te(i,t,a)}function u(e,t,n){return new Te([],e,t,n)}function c(e,t,n,r){if(t.length!==e.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${e.shape[0]}`);const a=Math.max(...t);if(null!=r&&-1!==r&&a>=r)throw new Error(`Max index must be < array size (${a}  vs. ${r})`);const s=new Te([],n,e.dtype,r),i=Object(v.unstack)(e,0);return t.forEach((e,t)=>{s.setItem(e,i[t])}),s}function l(e,t,n){let r=0;const a=t.map(e=>(r+=e,r));if(r!==e.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${r}, and tensor's shape is: ${e.shape}`);const s=e.shape.slice(1),o=i(s,n),u=0===r?0:e.size/r,c=Object(v.tidy)(()=>{const n=[];e=Object(v.reshape)(e,[1,r,u]);for(let r=0;r<t.length;++r){const s=0===r?0:a[r-1],i=[0,s,0],c=[1,t[r],u];n[r]=Object(v.reshape)(Object(v.slice)(e,i,c),o)}return e.dispose(),n}),l=new Te([],n,e.dtype,t.length);for(let e=0;e<c.length;e++)l.setItem(e,c[e]);return l}function d(e,t,n){const[r,a]=Object(k.d)("fusedOps",e,t,n),s="biasadd"===r,i="prelu"===a,o="fusedbatchnorm"===r,u=Object(k.d)("numArgs",e,t,n);if(s){if(i&&2!==u)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!i&&1!==u)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(o)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");const c=Object(k.d)("strides",e,t,n),l=Object(k.c)(e,t,n),d=Object(k.d)("dataFormat",e,t,n).toUpperCase(),h=Object(k.d)("dilations",e,t,n),[p,f]=Object(k.d)("args",e,t,n),m=Object(k.d)("leakyreluAlpha",e,t,n);return{stride:c,pad:l,dataFormat:d,dilations:h,biasArg:p,preluArg:f,activationFunc:a,leakyreluAlpha:m}}function h(e,t,n){const r=Object(k.d)("boxes",e,t,n),a=Object(k.d)("scores",e,t,n),s=Object(k.d)("maxOutputSize",e,t,n),i=Object(k.d)("iouThreshold",e,t,n),o=Object(k.d)("scoreThreshold",e,t,n),u=Object(k.d)("softNmsSigma",e,t,n);return{boxes:r,scores:a,maxOutputSize:s,iouThreshold:i,scoreThreshold:o,softNmsSigma:u}}function p(e,t,n,r){const a=((e,t,n)=>{switch(e.category){case"arithmetic":return v.tidy(()=>M(e,t,n));case"basic_math":return v.tidy(()=>je(e,t,n));case"control":return Ce(e,t,n);case"convolution":return v.tidy(()=>We(e,t,n));case"creation":return v.tidy(()=>et(e,t,n));case"dynamic":return at(e,t,n);case"evaluation":return v.tidy(()=>ot(e,t,n));case"image":return v.tidy(()=>pt(e,t,n));case"graph":return v.tidy(()=>lt(e,t,n));case"logical":return v.tidy(()=>It(e,t,n));case"matrices":return v.tidy(()=>Tt(e,t,n));case"normalization":return v.tidy(()=>Dt(e,t,n));case"reduction":return v.tidy(()=>Ht(e,t,n));case"slice_join":return v.tidy(()=>on(e,t,n));case"sparse":return v.tidy(()=>un(e,t,n));case"spectral":return v.tidy(()=>pn(e,t,n));case"transformation":return v.tidy(()=>wn(e,t,n));case"hash_table":return ht(e,t,n,r);case"custom":const a=Object(I.b)(e.op);if(a&&a.customExecutor)return a.customExecutor(new O(e,t,n));throw TypeError(`Custom op ${e.op} is not registered.`);default:throw TypeError(`Unknown op '${e.op}'. File an issue at `+"https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()")}})(e,t,n);return v.util.isPromise(a)?a.then(e=>[].concat(e)):[].concat(a)}function f(e,t,n,r){const a=new Set,s=[];let i=null,o=null;const u=new Set,c=Object.keys(e).map(e=>Object(k.g)(e)[0]);let l=[];null!=r&&(l=r.map(e=>Object(k.g)(e.name)[0]));const d=[...t];for(;d.length>0;){const e=d.pop();(b(e)||g(e)||y(e))&&null==i&&(i=e,o=i.children.map(e=>e.name).filter(e=>a.has(e))),a.add(e.name),null==n[e.name]&&(-1===c.indexOf(e.name)&&-1===l.indexOf(e.name)&&(0!==e.inputs.length?e.inputs.forEach(e=>{u.has(e.name)||(u.add(e.name),d.push(e))}):s.push(e.name)))}return{inputs:e,outputs:t,usedNodes:a,missingInputs:s,dynamicNode:i,syncInputs:o}}function m(e,t,n){const{usedNodes:r,inputs:a}=n,s=[],i=Object.keys(a).map(e=>Object(k.g)(e)[0]).map(t=>e.nodes[t]),o=e.initNodes;i.forEach(e=>{r.has(e.name)&&s.push(e)}),e.weights.forEach(e=>{r.has(e.name)&&s.push(e)}),null!=o&&o.forEach(e=>{r.has(e.name)&&s.push(e)});const u=new Set,c=[];for(;s.length>0;){const e=s.pop();u.add(e.name),t[e.name]||c.push(e),e.children.forEach(e=>{!u.has(e.name)&&r.has(e.name)&&e.inputs.every(e=>u.has(e.name))&&s.push(e)})}return c}function b(e){return On.indexOf(e.op)>=0}function g(e){return In.indexOf(e.op)>=0}function y(e){return Nn.indexOf(e.op)>=0}async function x(e,t={}){if(null==e)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");null==t&&(t={}),t.fromTFHub&&null==e.load&&(e.endsWith("/")||(e+="/"),e=`${e}${Cn}${Tn}`);const n=new En(e,t);return await n.load(),n}n.r(t),n.d(t,"GraphModel",function(){return En}),n.d(t,"loadGraphModel",function(){return x}),n.d(t,"deregisterOp",function(){return I.a}),n.d(t,"registerOp",function(){return I.c}),n.d(t,"version_converter",function(){return $n});var v=n(0),w=n(57),k=n(1);class O{constructor(e,t,n){this.node=e,this.tensorMap=t,this.context=n,this.inputs=[],this.attrs={},this.inputs=e.inputNames.map(e=>this.getInput(e)),null!=e.rawAttrs&&(this.attrs=Object.keys(e.rawAttrs).reduce((e,t)=>(e[t]=this.getAttr(t),e),{}))}getInput(e){return Object(k.e)(e,this.tensorMap,this.context)}getAttr(e,t){const n=this.node.rawAttrs[e];if(null!=n.tensor)return Object(k.e)(e,this.tensorMap,this.context);if(null!=n.i||null!=n.f)return Object(w.f)(this.node.rawAttrs,e,t);if(null!=n.s)return Object(w.i)(this.node.rawAttrs,e,t);if(null!=n.b)return Object(w.c)(this.node.rawAttrs,e,t);if(null!=n.shape)return Object(w.k)(this.node.rawAttrs,e,t);if(null!=n.type)return Object(w.e)(this.node.rawAttrs,e,t);if(null!=n.list){if(null!=n.list.i||null!=n.list.f)return Object(w.g)(this.node.rawAttrs,e,t);if(null!=n.list.s)return Object(w.h)(this.node.rawAttrs,e,t);if(null!=n.list.shape)return Object(w.j)(this.node.rawAttrs,e,t);if(null!=n.list.b)return Object(w.b)(this.node.rawAttrs,e,t);if(null!=n.list.type)return Object(w.d)(this.node.rawAttrs,e,t)}return t}}var I=n(104),N=n(13),j=n(218),S=n(168),T=n(9),C=n(15),E=n(161),$=n(114),A=n(14),_=n(127),D=n(90),F=n(53),R=n(133);const M=(e,t,n)=>{switch(e.op){case"BiasAdd":case"AddV2":case"Add":return[N.a(Object(k.d)("a",e,t,n),Object(k.d)("b",e,t,n))];case"AddN":return[j.a(Object(k.d)("tensors",e,t,n))];case"FloorMod":case"Mod":return[S.a(Object(k.d)("a",e,t,n),Object(k.d)("b",e,t,n))];case"Mul":return[T.a(Object(k.d)("a",e,t,n),Object(k.d)("b",e,t,n))];case"RealDiv":case"Div":return[C.a(Object(k.d)("a",e,t,n),Object(k.d)("b",e,t,n))];case"DivNoNan":return[E.a(Object(k.d)("a",e,t,n),Object(k.d)("b",e,t,n))];case"FloorDiv":return[$.a(Object(k.d)("a",e,t,n),Object(k.d)("b",e,t,n))];case"Sub":return[A.a(Object(k.d)("a",e,t,n),Object(k.d)("b",e,t,n))];case"Minimum":return[_.a(Object(k.d)("a",e,t,n),Object(k.d)("b",e,t,n))];case"Maximum":return[D.a(Object(k.d)("a",e,t,n),Object(k.d)("b",e,t,n))];case"Pow":return[F.a(Object(k.d)("a",e,t,n),Object(k.d)("b",e,t,n))];case"SquaredDifference":return[R.a(Object(k.d)("a",e,t,n),Object(k.d)("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}};var z=n(43),L=n(216),P=n(217),B=n(219),W=n(220),V=n(221),U=n(155),G=n(222),H=n(225),q=n(58),K=n(117),X=n(158),Y=n(119),Z=n(230),Q=n(41),J=n(231),ee=n(120),te=n(75),ne=n(164),re=n(121),ae=n(30),se=n(242),ie=n(107),oe=n(81),ue=n(243),ce=n(173),le=n(71),de=n(175),he=n(245),pe=n(176),fe=n(165),me=n(37),be=n(25),ge=n(145),ye=n(248),xe=n(226),ve=n(130),we=n(172),ke=n(170),Oe=n(122),Ie=n(129),Ne=n(234);const je=(e,t,n)=>{switch(e.op){case"Abs":case"ComplexAbs":return[z.a(Object(k.d)("x",e,t,n))];case"Acos":return[L.a(Object(k.d)("x",e,t,n))];case"Acosh":return[P.a(Object(k.d)("x",e,t,n))];case"Asin":return[B.a(Object(k.d)("x",e,t,n))];case"Asinh":return[W.a(Object(k.d)("x",e,t,n))];case"Atan":return[V.a(Object(k.d)("x",e,t,n))];case"Atan2":return[U.a(Object(k.d)("x",e,t,n),Object(k.d)("y",e,t,n))];case"Atanh":return[G.a(Object(k.d)("x",e,t,n))];case"Ceil":return[H.a(Object(k.d)("x",e,t,n))];case"Complex":return[q.a(Object(k.d)("real",e,t,n),Object(k.d)("imag",e,t,n))];case"Cos":return[K.a(Object(k.d)("x",e,t,n))];case"Cosh":return[X.a(Object(k.d)("x",e,t,n))];case"Elu":return[Y.a(Object(k.d)("x",e,t,n))];case"Erf":
return[Z.a(Object(k.d)("x",e,t,n))];case"Exp":return[Q.a(Object(k.d)("x",e,t,n))];case"Expm1":return[J.a(Object(k.d)("x",e,t,n))];case"Floor":return[ee.a(Object(k.d)("x",e,t,n))];case"Log":return[te.a(Object(k.d)("x",e,t,n))];case"Log1p":return[ne.a(Object(k.d)("x",e,t,n))];case"Imag":return[re.a(Object(k.d)("x",e,t,n))];case"Neg":return[ae.a(Object(k.d)("x",e,t,n))];case"Reciprocal":return[se.a(Object(k.d)("x",e,t,n))];case"Real":return[ie.a(Object(k.d)("x",e,t,n))];case"Relu":return[oe.a(Object(k.d)("x",e,t,n))];case"Round":return[ue.a(Object(k.d)("x",e,t,n))];case"Selu":return[ce.a(Object(k.d)("x",e,t,n))];case"Sigmoid":return[le.a(Object(k.d)("x",e,t,n))];case"Sin":return[de.a(Object(k.d)("x",e,t,n))];case"Sign":return[he.a(Object(k.d)("x",e,t,n))];case"Sinh":return[pe.a(Object(k.d)("x",e,t,n))];case"Softplus":return[fe.a(Object(k.d)("x",e,t,n))];case"Sqrt":return[me.a(Object(k.d)("x",e,t,n))];case"Square":return[be.a(Object(k.d)("x",e,t,n))];case"Tanh":return[ge.a(Object(k.d)("x",e,t,n))];case"Tan":return[ye.a(Object(k.d)("x",e,t,n))];case"ClipByValue":return[xe.a(Object(k.d)("x",e,t,n),Object(k.d)("clipValueMin",e,t,n),Object(k.d)("clipValueMax",e,t,n))];case"Relu6":return[ve.a(Object(k.d)("x",e,t,n))];case"Rsqrt":return[we.a(Object(k.e)(e.inputNames[0],t,n))];case"Prod":return[ke.a(Object(k.d)("x",e,t,n),Object(k.d)("axes",e,t,n))];case"LeakyRelu":return[Oe.a(Object(k.d)("x",e,t,n),Object(k.d)("alpha",e,t,n))];case"Prelu":return[Ie.a(Object(k.d)("x",e,t,n),Object(k.d)("alpha",e,t,n))];case"IsNan":return[Ne.a(Object(k.e)(e.inputNames[0],t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}};class Se{constructor(e,t,n,r,a,s,i){this.name=e,this.dtype=t,this.maxSize=n,this.elementShape=r,this.identicalElementShapes=a,this.dynamicSize=s,this.clearAfterRead=i,this.tensors=[],this.closed_=!1,this.idTensor=Object(v.scalar)(0),Object(v.keep)(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(e){this.tensors.forEach(t=>{null!=e&&e.has(t.tensor.id)||t.tensor.dispose()}),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||e>=this.size())throw new Error(`Tried to read from index ${e}, but array size is: ${this.size()}`);const t=this.tensors[e];if(t.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${e} twice because it was cleared after a previous read `+"(perhaps try setting clear_after_read = false?).");return this.clearAfterRead&&(t.cleared=!0),t.read=!0,t.tensor}readMany(e){return e.map(e=>this.read(e))}write(e,t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||!this.dynamicSize&&e>=this.maxSize)throw new Error(`Tried to write to index ${e}, but array is not resizeable and size is: ${this.maxSize}`);const n=this.tensors[e]||{};if(t.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e},\n          because the value dtype is ${t.dtype}, but TensorArray dtype is ${this.dtype}.`);if(0!==this.size()||null!=this.elementShape&&0!==this.elementShape.length||(this.elementShape=t.shape),r(this.elementShape,t.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${e}.`),n.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been read.`);if(n.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been written.`);n.tensor=t,Object(v.keep)(t),n.written=!0,this.tensors[e]=n}writeMany(e,t){if(e.length!==t.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,`+`because the index size: ${e.length} is not the same as tensors size: ${t.length}.`);e.forEach((e,n)=>this.write(e,t[n]))}gather(e,t){if(t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${t}`);if(e)e=e.slice(0,this.size());else{e=[];for(let t=0;t<this.size();t++)e.push(t)}if(0===e.length)return Object(v.tensor)([],[0].concat(this.elementShape));const n=this.readMany(e);return r(this.elementShape,n[0].shape,"TensorArray shape mismatch: "),Object(v.stack)(n,0)}concat(e){if(e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${e}`);if(0===this.size())return Object(v.tensor)([],[0].concat(this.elementShape));const t=[];for(let e=0;e<this.size();e++)t.push(e);const n=this.readMany(t);return r(this.elementShape,n[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${n[0].shape})`),Object(v.concat)(n,0)}scatter(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);if(e.length!==t.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);const n=Math.max(...e);if(!this.dynamicSize&&n>=this.maxSize)throw new Error(`Max index must be < array size (${n}  vs. ${this.maxSize})`);this.writeMany(e,Object(v.unstack)(t,0))}split(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);let n=0;const r=e.map(e=>(n+=e,n));if(n!==t.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${n}, and tensor's shape is: ${t.shape}`);if(!this.dynamicSize&&e.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${e.length}), `+"and the TensorArray is not marked as dynamically resizeable");const a=0===n?0:t.size/n,s=[];Object(v.tidy)(()=>{t=Object(v.reshape)(t,[1,n,a]);for(let n=0;n<e.length;++n){const i=0===n?0:r[n-1],o=[0,i,0],u=[1,e[n],a];s[n]=Object(v.reshape)(Object(v.slice)(t,o,u),this.elementShape)}return s});const i=[];for(let t=0;t<e.length;t++)i[t]=t;this.writeMany(i,s)}}class Te{constructor(e,t,n,a=-1){this.tensors=e,this.elementShape=t,this.elementDtype=n,null!=e&&e.forEach(e=>{if(n!==e.dtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${e.dtype}`);r(t,e.shape,"TensorList shape mismatch: "),Object(v.keep)(e)}),this.idTensor=Object(v.scalar)(0),this.maxNumElements=a,Object(v.keep)(this.idTensor)}get id(){return this.idTensor.id}copy(){return new Te([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(e){this.tensors.forEach(t=>{null!=e&&e.has(t.id)||t.dispose()}),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(e,t,n=-1){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(-1!==n&&this.tensors.length!==n)throw new Error(`Operation expected a list with ${n} elements but got a list with ${this.tensors.length} elements.`);r(e,this.elementShape,"TensorList shape mismatch: ");const a=s(this.elementShape,this.tensors,e);return Object(v.tidy)(()=>{const e=this.tensors.map(e=>Object(v.reshape)(e,a));return Object(v.stack)(e,0)})}popBack(e,t){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(0===this.size())throw new Error("Trying to pop from an empty list.");const n=s(this.elementShape,this.tensors,e),a=this.tensors.pop();return r(a.shape,e,"TensorList shape mismatch: "),Object(v.reshape)(a,n)}pushBack(e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(r(e.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");Object(v.keep)(e),this.tensors.push(e)}resize(e){if(e<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${e}`);if(-1!==this.maxNumElements&&e>this.maxNumElements)throw new Error(`TensorListResize input size ${e} is greater maxNumElement ${this.maxNumElements}.`);this.tensors.length=e}getItem(e,t,n){if(n!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);if(e<0||e>this.tensors.length)throw new Error(`Trying to access element ${e} in a list with ${this.tensors.length} elements.`);if(null==this.tensors[e])throw new Error(`element at index ${e} is null.`);r(this.tensors[e].shape,t,"TensorList shape mismatch: ");const a=s(this.elementShape,this.tensors,t);return Object(v.reshape)(this.tensors[e],a)}setItem(e,t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(e<0||-1!==this.maxNumElements&&e>=this.maxNumElements)throw new Error(`Trying to set element ${e} in a list with max ${this.maxNumElements} elements.`);r(this.elementShape,t.shape,"TensorList shape mismatch: "),Object(v.keep)(t),this.tensors[e]=t}gather(e,t,n){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);r(this.elementShape,n,"TensorList shape mismatch: "),e=e.slice(0,this.size());const a=s(this.elementShape,this.tensors,n);return 0===e.length?Object(v.tensor)([],[0].concat(a)):Object(v.tidy)(()=>{const t=e.map(e=>Object(v.reshape)(this.tensors[e],a));return Object(v.stack)(t,0)})}concat(e,t){if(e&&e!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${e}`);r(this.elementShape,t,"TensorList shape mismatch: ");const n=s(this.elementShape,this.tensors,t);return 0===this.size()?Object(v.tensor)([],[0].concat(n)):Object(v.tidy)(()=>{const e=this.tensors.map(e=>Object(v.reshape)(e,n));return Object(v.concat)(e,0)})}}const Ce=async(e,t,n)=>{switch(e.op){case"If":case"StatelessIf":{const r=Object(k.d)("thenBranch",e,t,n),a=Object(k.d)("elseBranch",e,t,n),s=Object(k.d)("cond",e,t,n),i=Object(k.d)("args",e,t,n),o=await s.data();return o[0]?n.functionMap[r].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap):n.functionMap[a].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap)}case"While":case"StatelessWhile":{const r=Object(k.d)("body",e,t,n),a=Object(k.d)("cond",e,t,n),s=Object(k.d)("args",e,t,n),i=await n.functionMap[a].executeFunctionAsync(s,n.tensorArrayMap,n.tensorListMap),o=s.map(e=>e.id);let u=await i[0].data();i.forEach(e=>{e.kept||-1!==o.indexOf(e.id)||e.dispose()});let c=s;for(;u[0];){const e=c;c=await n.functionMap[r].executeFunctionAsync(c,n.tensorArrayMap,n.tensorListMap);const t=c.map(e=>e.id);e.forEach(e=>{e.kept||-1!==o.indexOf(e.id)||-1!==t.indexOf(e.id)||e.dispose()});const s=await n.functionMap[a].executeFunctionAsync(c,n.tensorArrayMap,n.tensorListMap);u=await s[0].data(),s.forEach(e=>{e.kept||-1!==o.indexOf(e.id)||-1!==t.indexOf(e.id)||e.dispose()})}return c}case"LoopCond":{const r=Object(k.d)("pred",e,t,n);return[Object(k.a)(r)]}case"Switch":{const r=Object(k.d)("pred",e,t,n);let a=Object(k.d)("data",e,t,n);return a.kept||(a=Object(k.a)(a)),(await r.data())[0]?[void 0,a]:[a,void 0]}case"Merge":{const r=e.inputNames.find(e=>void 0!==Object(k.e)(e,t,n));if(r){const e=Object(k.e)(r,t,n);return[Object(k.a)(e)]}return}case"Enter":{const r=Object(k.d)("frameName",e,t,n),a=Object(k.d)("tensor",e,t,n);return n.enterFrame(r),[Object(k.a)(a)]}case"Exit":{const r=Object(k.d)("tensor",e,t,n);return n.exitFrame(),[Object(k.a)(r)]}case"NextIteration":{const r=Object(k.d)("tensor",e,t,n);return n.nextIteration(),[Object(k.a)(r)]}case"TensorArrayV3":{const r=Object(k.d)("size",e,t,n),a=Object(k.d)("dtype",e,t,n),s=Object(k.d)("elementShape",e,t,n),i=Object(k.d)("dynamicSize",e,t,n),o=Object(k.d)("clearAfterRead",e,t,n),u=Object(k.d)("identicalElementShapes",e,t,n),c=Object(k.d)("name",e,t,n),l=new Se(c,a,r,s,u,i,o);return n.addTensorArray(l),[l.idTensor,Object(v.scalar)(1)]}case"TensorArrayWriteV3":{const r=Object(k.d)("tensorArrayId",e,t,n),a=Object(k.d)("index",e,t,n),s=Object(k.d)("tensor",e,t,n),i=n.getTensorArray(r.id);return i.write(a,s),[i.idTensor]}case"TensorArrayReadV3":{const r=Object(k.d)("tensorArrayId",e,t,n),a=Object(k.d)("index",e,t,n),s=n.getTensorArray(r.id);return[s.read(a)]}case"TensorArrayGatherV3":{const r=Object(k.d)("tensorArrayId",e,t,n),a=Object(k.d)("indices",e,t,n),s=Object(k.d)("dtype",e,t,n),i=n.getTensorArray(r.id);return[i.gather(a,s)]}case"TensorArrayScatterV3":{const r=Object(k.d)("tensorArrayId",e,t,n),a=Object(k.d)("indices",e,t,n),s=Object(k.d)("tensor",e,t,n),i=n.getTensorArray(r.id);return i.scatter(a,s),[i.idTensor]}case"TensorArrayConcatV3":{const r=Object(k.d)("tensorArrayId",e,t,n),a=n.getTensorArray(r.id),s=Object(k.d)("dtype",e,t,n);return[a.concat(s)]}case"TensorArraySplitV3":{const r=Object(k.d)("tensorArrayId",e,t,n),a=Object(k.d)("tensor",e,t,n),s=Object(k.d)("lengths",e,t,n),i=n.getTensorArray(r.id);return i.split(s,a),[i.idTensor]}case"TensorArraySizeV3":{const r=Object(k.d)("tensorArrayId",e,t,n),a=n.getTensorArray(r.id);return[Object(v.scalar)(a.size(),"int32")]}case"TensorArrayCloseV3":{const r=Object(k.d)("tensorArrayId",e,t,n),a=n.getTensorArray(r.id);return a.clearAndClose(),[a.idTensor]}case"TensorListSetItem":{const r=Object(k.d)("tensorListId",e,t,n),a=Object(k.d)("index",e,t,n),s=Object(k.d)("tensor",e,t,n),i=n.getTensorList(r.id);return i.setItem(a,s),[i.idTensor]}case"TensorListGetItem":{const r=Object(k.d)("tensorListId",e,t,n),a=Object(k.d)("index",e,t,n),s=Object(k.d)("elementShape",e,t,n),i=Object(k.d)("elementDType",e,t,n),o=n.getTensorList(r.id);return[o.getItem(a,s,i)]}case"TensorListScatterV2":case"TensorListScatter":{const r=Object(k.d)("indices",e,t,n),a=Object(k.d)("tensor",e,t,n),s=Object(k.d)("elementShape",e,t,n),i=Object(k.d)("numElements",e,t,n),o=c(a,r,s,i);return n.addTensorList(o),[o.idTensor]}case"TensorListReserve":case"EmptyTensorList":{const r=Object(k.d)("elementShape",e,t,n),a=Object(k.d)("elementDType",e,t,n);let s;s="TensorListReserve"===e.op?"numElements":"maxNumElements";const i=Object(k.d)(s,e,t,n),o=u(r,a,i);return n.addTensorList(o),[o.idTensor]}case"TensorListGather":{const r=Object(k.d)("tensorListId",e,t,n),a=Object(k.d)("indices",e,t,n),s=Object(k.d)("elementShape",e,t,n),i=Object(k.d)("elementDType",e,t,n),o=n.getTensorList(r.id);return[o.gather(a,i,s)]}case"TensorListStack":{const r=Object(k.d)("tensorListId",e,t,n),a=Object(k.d)("elementShape",e,t,n),s=Object(k.d)("elementDType",e,t,n),i=Object(k.d)("numElements",e,t,n),o=n.getTensorList(r.id);return[o.stack(a,s,i)]}case"TensorListFromTensor":{const r=Object(k.d)("tensor",e,t,n),a=Object(k.d)("elementShape",e,t,n),s=Object(k.d)("elementDType",e,t,n),i=o(r,a,s);return n.addTensorList(i),[i.idTensor]}case"TensorListConcat":{const r=Object(k.d)("tensorListId",e,t,n),a=n.getTensorList(r.id),s=Object(k.d)("dtype",e,t,n),i=Object(k.d)("elementShape",e,t,n);return[a.concat(s,i)]}case"TensorListPushBack":{const r=Object(k.d)("tensorListId",e,t,n),a=Object(k.d)("tensor",e,t,n),s=n.getTensorList(r.id);return s.pushBack(a),[s.idTensor]}case"TensorListPopBack":{const r=Object(k.d)("tensorListId",e,t,n),a=Object(k.d)("elementShape",e,t,n),s=Object(k.d)("elementDType",e,t,n),i=n.getTensorList(r.id);return[i.popBack(a,s)]}case"TensorListSplit":{const r=Object(k.d)("tensor",e,t,n),a=Object(k.d)("elementShape",e,t,n),s=Object(k.d)("lengths",e,t,n),i=l(r,s,a);return n.addTensorList(i),[i.idTensor]}default:throw TypeError(`Node type ${e.op} is not implemented`)}};var Ee=n(156),$e=n(65),Ae=n(21),_e=n(157),De=n(92),Fe=n(227),Re=n(116),Me=n(126),ze=n(239),Le=n(223),Pe=n(238),Be=n(160);const We=(e,t,n)=>{switch(e.op){case"Conv1D":{const r=Object(k.d)("stride",e,t,n),a=Object(k.d)("pad",e,t,n),s=Object(k.d)("dataFormat",e,t,n).toUpperCase(),i=Object(k.d)("dilation",e,t,n);return[Ee.a(Object(k.d)("x",e,t,n),Object(k.d)("filter",e,t,n),r,a,s,i)]}case"Conv2D":{const r=Object(k.d)("strides",e,t,n),a=Object(k.c)(e,t,n),s=Object(k.d)("dataFormat",e,t,n).toUpperCase(),i=Object(k.d)("dilations",e,t,n);return[$e.a(Object(k.d)("x",e,t,n),Object(k.d)("filter",e,t,n),[r[1],r[2]],a,s,[i[1],i[2]])]}case"_FusedConv2D":{const{stride:r,pad:a,dataFormat:s,dilations:i,biasArg:o,preluArg:u,activationFunc:c,leakyreluAlpha:l}=d(e,t,n);return[Ae.qb.conv2d({x:Object(k.d)("x",e,t,n),filter:Object(k.d)("filter",e,t,n),strides:[r[1],r[2]],pad:a,dataFormat:s,dilations:[i[1],i[2]],bias:o,activation:c,preluActivationWeights:u,leakyreluAlpha:l})]}case"FusedDepthwiseConv2dNative":{const{stride:r,pad:a,dataFormat:s,dilations:i,biasArg:o,preluArg:u,activationFunc:c,leakyreluAlpha:l}=d(e,t,n);return[Ae.qb.depthwiseConv2d({x:Object(k.d)("x",e,t,n),filter:Object(k.d)("filter",e,t,n),strides:[r[1],r[2]],pad:a,dataFormat:s,dilations:[i[1],i[2]],bias:o,activation:c,preluActivationWeights:u,leakyreluAlpha:l})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{const r=Object(k.d)("outputShape",e,t,n),a=Object(k.d)("strides",e,t,n),s=Object(k.c)(e,t,n);return[_e.a(Object(k.d)("x",e,t,n),Object(k.d)("filter",e,t,n),r,[a[1],a[2]],s)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{const r=Object(k.d)("strides",e,t,n),a=Object(k.c)(e,t,n),s=Object(k.d)("dilations",e,t,n),i=Object(k.d)("dataFormat",e,t,n).toUpperCase();return[De.a(Object(k.d)("input",e,t,n),Object(k.d)("filter",e,t,n),[r[1],r[2]],a,i,[s[1],s[2]])]}case"Conv3D":{const r=Object(k.d)("strides",e,t,n),a=Object(k.d)("pad",e,t,n),s=Object(k.d)("dataFormat",e,t,n).toUpperCase(),i=Object(k.d)("dilations",e,t,n);return[Fe.a(Object(k.d)("x",e,t,n),Object(k.d)("filter",e,t,n),[r[1],r[2],r[3]],a,s,[i[1],i[2],i[3]])]}case"AvgPool":{const r=Object(k.d)("strides",e,t,n),a=Object(k.d)("pad",e,t,n),s=Object(k.d)("kernelSize",e,t,n);return[Re.a(Object(k.d)("x",e,t,n),[s[1],s[2]],[r[1],r[2]],a)]}case"MaxPool":{const r=Object(k.d)("strides",e,t,n),a=Object(k.d)("pad",e,t,n),s=Object(k.d)("kernelSize",e,t,n);return[Me.a(Object(k.d)("x",e,t,n),[s[1],s[2]],[r[1],r[2]],a)]}case"MaxPoolWithArgmax":{const r=Object(k.d)("strides",e,t,n),a=Object(k.d)("pad",e,t,n),s=Object(k.d)("kernelSize",e,t,n),i=Object(k.d)("includeBatchInIndex",e,t,n),{result:o,indexes:u}=ze.a(Object(k.d)("x",e,t,n),[s[1],s[2]],[r[1],r[2]],a,i);return[o,u]}case"AvgPool3D":{const r=Object(k.d)("strides",e,t,n),a=Object(k.d)("pad",e,t,n),s=Object(k.d)("kernelSize",e,t,n);return[Le.a(Object(k.d)("x",e,t,n),[s[1],s[2],s[3]],[r[1],r[2],r[3]],a)]}case"MaxPool3D":{const r=Object(k.d)("strides",e,t,n),a=Object(k.d)("pad",e,t,n),s=Object(k.d)("kernelSize",e,t,n);return[Pe.a(Object(k.d)("x",e,t,n),[s[1],s[2],s[3]],[r[1],r[2],r[3]],a)]}case"Dilation2D":{const r=Object(k.d)("strides",e,t,n),a=Object(k.d)("pad",e,t,n),s=Object(k.d)("dilations",e,t,n),i=r[1],o=r[2],u=s[1],c=s[2];return[Be.a(Object(k.d)("x",e,t,n),Object(k.d)("filter",e,t,n),[i,o],a,[u,c],"NHWC")]}default:throw TypeError(`Node type ${e.op} is not implemented`)}};var Ve=n(115),Ue=n(235),Ge=n(240),He=n(106),qe=n(55),Ke=n(241),Xe=n(171),Ye=n(146),Ze=n(249),Qe=n(80),Je=n(20);const et=(e,t,n)=>{switch(e.op){case"Fill":{const r=Object(k.d)("shape",e,t,n),a=Object(k.d)("dtype",e,t,n),s=Object(k.d)("value",e,t,n);return[Ve.a(r,s,a)]}case"LinSpace":{const r=Object(k.d)("start",e,t,n),a=Object(k.d)("stop",e,t,n),s=Object(k.d)("num",e,t,n);return[Ue.a(r,a,s)]}case"Multinomial":{const r=Object(k.d)("logits",e,t,n),a=Object(k.d)("numSamples",e,t,n),s=Object(k.d)("seed",e,t,n);return[Ge.a(r,a,s)]}case"OneHot":{const r=Object(k.d)("indices",e,t,n),a=Object(k.d)("depth",e,t,n),s=Object(k.d)("onValue",e,t,n),i=Object(k.d)("offValue",e,t,n);return[He.a(r,a,s,i)]}case"Ones":return[qe.a(Object(k.d)("shape",e,t,n),Object(k.d)("dtype",e,t,n))];case"OnesLike":return[Ke.a(Object(k.d)("x",e,t,n))];case"RandomUniform":return[Xe.a(Object(k.d)("shape",e,t,n),Object(k.d)("minval",e,t,n),Object(k.d)("maxval",e,t,n),Object(k.d)("dtype",e,t,n))];case"Range":{const r=Object(k.d)("start",e,t,n),a=Object(k.d)("stop",e,t,n),s=Object(k.d)("step",e,t,n);return[Ye.a(r,a,s,Object(k.d)("dtype",e,t,n))]}case"TruncatedNormal":{const r=Object(k.d)("shape",e,t,n),a=Object(k.d)("mean",e,t,n),s=Object(k.d)("stdDev",e,t,n),i=Object(k.d)("seed",e,t,n);return[Ze.a(r,a,s,Object(k.d)("dtype",e,t,n),i)]}case"Zeros":return[Qe.a(Object(k.d)("shape",e,t,n),Object(k.d)("dtype",e,t,n))];case"ZerosLike":return[Je.a(Object(k.d)("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}};var tt=n(12),nt=n(181),rt=n(244);const at=async(e,t,n)=>{switch(e.op){case"NonMaxSuppressionV5":{const{boxes:r,scores:a,maxOutputSize:s,iouThreshold:i,scoreThreshold:o,softNmsSigma:u}=h(e,t,n),c=await Ae.xb.nonMaxSuppressionWithScoreAsync(r,a,s,i,o,u);return[c.selectedIndices,c.selectedScores]}case"NonMaxSuppressionV4":{const{boxes:r,scores:a,maxOutputSize:s,iouThreshold:i,scoreThreshold:o}=h(e,t,n),u=Object(k.d)("padToMaxOutputSize",e,t,n),c=await Ae.xb.nonMaxSuppressionPaddedAsync(r,a,s,i,o,u);return[c.selectedIndices,c.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{const{boxes:r,scores:a,maxOutputSize:s,iouThreshold:i,scoreThreshold:o}=h(e,t,n);return[await Ae.xb.nonMaxSuppressionAsync(r,a,s,i,o)]}case"Where":{const r=tt.a(Object(k.d)("condition",e,t,n),"bool"),a=[await nt.a(r)];return r.dispose(),a}case"ListDiff":return rt.a(Object(k.d)("x",e,t,n),Object(k.d)("y",e,t,n));default:throw TypeError(`Node type ${e.op} is not implemented`)}};var st=n(179),it=n(180);const ot=(e,t,n)=>{switch(e.op){case"TopKV2":{const r=Object(k.d)("x",e,t,n),a=Object(k.d)("k",e,t,n),s=Object(k.d)("sorted",e,t,n),i=st.a(r,a,s);return[i.values,i.indices]}case"Unique":{const r=Object(k.d)("x",e,t,n),a=it.a(r);return[a.values,a.indices]}case"UniqueV2":{const r=Object(k.d)("x",e,t,n),a=Object(k.d)("axis",e,t,n),s=it.a(r,a);return[s.values,s.indices]}default:throw TypeError(`Node type ${e.op} is not implemented`)}};var ut=n(77),ct=n(16);const lt=(e,t,n)=>{switch(e.op){case"Const":return t[e.name];case"PlaceholderWithDefault":const r=Object(k.d)("default",e,t,n);return[Object(k.e)(e.name,t,n)||r];case"Placeholder":return[Object(k.e)(e.name,t,n)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":{const r=Object(k.d)("x",e,t,n);return[Object(k.a)(r)]}case"IdentityN":return Object(k.d)("x",e,t,n).map(e=>Object(k.a)(e));case"Snapshot":const a=Object(k.d)("x",e,t,n);return[Object(k.a)(a)];case"Shape":return[ut.a(Object(k.d)("x",e,t,n).shape,"int32")];case"ShapeN":return Object(k.d)("x",e,t,n).map(e=>ut.a(e.shape));case"Size":return[ct.a(Object(k.d)("x",e,t,n).size,"int32")];case"Rank":return[ct.a(Object(k.d)("x",e,t,n).rank,"int32")];case"NoOp":return[ct.a(1)];case"Print":const s=Object(k.d)("x",e,t,n),i=Object(k.d)("data",e,t,n),o=Object(k.d)("message",e,t,n),u=Object(k.d)("summarize",e,t,n);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(o);for(let e=0;e<i.length;e++)console.log(Array.prototype.slice.call(i[e].dataSync()).slice(0,u));return[s];default:throw TypeError(`Node type ${e.op} is not implemented`)}};class dt{constructor(e,t){this.keyDType=e,this.valueDType=t,this.handle=Object(v.scalar)(0),this.tensorMap=new Map,Object(v.keep)(this.handle)}get id(){return this.handle.id}clearAndClose(){this.tensorMap.forEach(e=>e.dispose()),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return ct.a(this.size(),"int32")}async import(e,t){this.checkKeyAndValueTensor(e,t);const n=await e.data();return this.tensorMap.forEach(e=>e.dispose()),this.tensorMap.clear(),Object(v.tidy)(()=>{const e=Object(v.unstack)(t),r=n.length,a=e.length;v.util.assert(r===a,()=>"The number of elements doesn't match, keys has "+`${r} elements, the values has ${a} `+"elements.");for(let t=0;t<r;t++){const r=n[t],a=e[t];Object(v.keep)(a),this.tensorMap.set(r,a)}return this.handle})}async find(e,t){this.checkKeyAndValueTensor(e,t);const n=await e.data();return Object(v.tidy)(()=>{const e=[];for(let r=0;r<n.length;r++){const a=n[r],s=this.findWithDefault(a,t);e.push(s)}return Object(v.stack)(e)})}findWithDefault(e,t){const n=this.tensorMap.get(e);return null!=n?n:t}checkKeyAndValueTensor(e,t){if(e.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got `+`${e.dtype}`);if(t.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got `+`${t.dtype}`)}}const ht=async(e,t,n,r)=>{switch(e.op){case"HashTable":case"HashTableV2":{const a=Object(k.d)("keyDType",e,t,n),s=Object(k.d)("valueDType",e,t,n),i=new dt(a,s);return r.addHashTable(e.name,i),[i.handle]}case"LookupTableImport":case"LookupTableImportV2":{const a=Object(k.d)("tableHandle",e,t,n,r),s=Object(k.d)("keys",e,t,n),i=Object(k.d)("values",e,t,n),o=r.getHashTableById(a.id);return[await o.import(s,i)]}case"LookupTableFind":case"LookupTableFindV2":{const a=Object(k.d)("tableHandle",e,t,n,r),s=Object(k.d)("keys",e,t,n),i=Object(k.d)("defaultValue",e,t,n),o=r.getHashTableById(a.id);return[await o.find(s,i)]}case"LookupTableSize":case"LookupTableSizeV2":{const a=Object(k.d)("tableHandle",e,t,n,r),s=r.getHashTableById(a.id);return[s.tensorSize()]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},pt=(e,t,n)=>{switch(e.op){case"ResizeBilinear":{const r=Object(k.d)("images",e,t,n),a=Object(k.d)("size",e,t,n),s=Object(k.d)("alignCorners",e,t,n),i=Object(k.d)("halfPixelCenters",e,t,n);return[Ae.xb.resizeBilinear(r,[a[0],a[1]],s,i)]}case"ResizeNearestNeighbor":{const r=Object(k.d)("images",e,t,n),a=Object(k.d)("size",e,t,n),s=Object(k.d)("alignCorners",e,t,n),i=Object(k.d)("halfPixelCenters",e,t,n);return[Ae.xb.resizeNearestNeighbor(r,[a[0],a[1]],s,i)]}case"CropAndResize":{const r=Object(k.d)("image",e,t,n),a=Object(k.d)("boxes",e,t,n),s=Object(k.d)("boxInd",e,t,n),i=Object(k.d)("cropSize",e,t,n),o=Object(k.d)("method",e,t,n),u=Object(k.d)("extrapolationValue",e,t,n);return[Ae.xb.cropAndResize(r,a,s,i,o,u)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}};var ft=n(93),mt=n(128),bt=n(50),gt=n(66),yt=n(123),xt=n(67),vt=n(59),wt=n(95),kt=n(125),Ot=n(36);const It=(e,t,n)=>{switch(e.op){case"Equal":return[ft.a(Object(k.d)("a",e,t,n),Object(k.d)("b",e,t,n))];case"NotEqual":return[mt.a(Object(k.d)("a",e,t,n),Object(k.d)("b",e,t,n))];case"Greater":return[bt.a(Object(k.d)("a",e,t,n),Object(k.d)("b",e,t,n))];case"GreaterEqual":return[gt.a(Object(k.d)("a",e,t,n),Object(k.d)("b",e,t,n))];case"Less":return[yt.a(Object(k.d)("a",e,t,n),Object(k.d)("b",e,t,n))];case"LessEqual":return[xt.a(Object(k.d)("a",e,t,n),Object(k.d)("b",e,t,n))];case"LogicalAnd":return[vt.a(Object(k.d)("a",e,t,n),Object(k.d)("b",e,t,n))];case"LogicalNot":return[wt.a(Object(k.d)("a",e,t,n))];case"LogicalOr":return[kt.a(Object(k.d)("a",e,t,n),Object(k.d)("b",e,t,n))];case"Select":case"SelectV2":return[Ot.a(Object(k.d)("condition",e,t,n),Object(k.d)("a",e,t,n),Object(k.d)("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}};var Nt=n(24),jt=n(229),St=n(52);const Tt=(e,t,n)=>{switch(e.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[Nt.a(Object(k.d)("a",e,t,n),Object(k.d)("b",e,t,n),Object(k.d)("transposeA",e,t,n),Object(k.d)("transposeB",e,t,n))];case"Einsum":return[jt.a(Object(k.d)("equation",e,t,n),...Object(k.d)("tensors",e,t,n))];case"Transpose":return[St.a(Object(k.d)("x",e,t,n),Object(k.d)("perm",e,t,n))];case"_FusedMatMul":const[r,a]=Object(k.d)("fusedOps",e,t,n),s="biasadd"===r,i="prelu"===a,o=Object(k.d)("numArgs",e,t,n),u=Object(k.d)("leakyreluAlpha",e,t,n);if(s){if(i&&2!==o)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!i&&1!==o)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}const[c,l]=Object(k.d)("args",e,t,n);return[Ae.qb.matMul({a:Object(k.d)("a",e,t,n),b:Object(k.d)("b",e,t,n),transposeA:Object(k.d)("transposeA",e,t,n),transposeB:Object(k.d)("transposeB",e,t,n),bias:c,activation:a,preluActivationWeights:l,leakyreluAlpha:u})];default:throw TypeError(`Node type ${e.op} is not implemented`)}};var Ct=n(84),Et=n(163),$t=n(246),At=n(237),_t=n(253);const Dt=(e,t,n)=>{switch(e.op){case"FusedBatchNorm":case"FusedBatchNormV2":case"FusedBatchNormV3":return[Ct.a(Object(k.d)("x",e,t,n),Object(k.d)("mean",e,t,n),Object(k.d)("variance",e,t,n),Object(k.d)("offset",e,t,n),Object(k.d)("scale",e,t,n),Object(k.d)("epsilon",e,t,n))];case"LRN":return[Et.a(Object(k.d)("x",e,t,n),Object(k.d)("radius",e,t,n),Object(k.d)("bias",e,t,n),Object(k.d)("alpha",e,t,n),Object(k.d)("beta",e,t,n))];case"Softmax":return[$t.a(Object(k.d)("x",e,t,n))];case"LogSoftmax":return[At.a(Object(k.d)("x",e,t,n))];case"SparseToDense":return[_t.a(Object(k.d)("sparseIndices",e,t,n),Object(k.d)("outputShape",e,t,n),Object(k.d)("sparseValues",e,t,n),Object(k.d)("defaultValue",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}};var Ft=n(72),Rt=n(88),Mt=n(105),zt=n(19),Lt=n(151),Pt=n(152),Bt=n(153),Wt=n(154),Vt=n(118),Ut=n(224),Gt=n(228);const Ht=(e,t,n)=>{switch(e.op){case"Max":{const r=Object(k.d)("axis",e,t,n),a=Object(k.d)("keepDims",e,t,n);return[Ft.a(Object(k.d)("x",e,t,n),r,a)]}case"Mean":{const r=Object(k.d)("axis",e,t,n),a=Object(k.d)("keepDims",e,t,n);return[Rt.a(Object(k.d)("x",e,t,n),r,a)]}case"Min":{const r=Object(k.d)("axis",e,t,n),a=Object(k.d)("keepDims",e,t,n);return[Mt.a(Object(k.d)("x",e,t,n),r,a)]}case"Sum":{const r=Object(k.d)("axis",e,t,n),a=Object(k.d)("keepDims",e,t,n);return[zt.a(Object(k.d)("x",e,t,n),r,a)]}case"All":{const r=Object(k.d)("axis",e,t,n),a=Object(k.d)("keepDims",e,t,n);return[Lt.a(Object(k.d)("x",e,t,n),r,a)]}case"Any":{const r=Object(k.d)("axis",e,t,n),a=Object(k.d)("keepDims",e,t,n);return[Pt.a(Object(k.d)("x",e,t,n),r,a)]}case"ArgMax":{const r=Object(k.d)("axis",e,t,n);return[Bt.a(Object(k.d)("x",e,t,n),r)]}case"ArgMin":{const r=Object(k.d)("axis",e,t,n);return[Wt.a(Object(k.d)("x",e,t,n),r)]}case"Prod":{const r=Object(k.d)("axis",e,t,n),a=Object(k.d)("keepDims",e,t,n);return[ke.a(Object(k.d)("x",e,t,n),r,a)]}case"Cumsum":{const r=Object(k.d)("axis",e,t,n),a=Object(k.d)("exclusive",e,t,n),s=Object(k.d)("reverse",e,t,n);return[Vt.a(Object(k.d)("x",e,t,n),r,a,s)]}case"Bincount":const r=Object(k.d)("x",e,t,n),a=Object(k.d)("weights",e,t,n),s=Object(k.d)("size",e,t,n);return[Ut.a(r,a,s)];case"DenseBincount":{const r=Object(k.d)("x",e,t,n),a=Object(k.d)("weights",e,t,n),s=Object(k.d)("size",e,t,n),i=Object(k.d)("binaryOutput",e,t,n);return[Gt.a(r,a,s,i)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}};var qt=n(32),Kt=n(94),Xt=n(48),Yt=n(28),Zt=n(247),Qt=n(97),Jt=n(7),en=n(60),tn=n(83),nn=n(85),rn=n(76),an=n(250),sn=n(251);const on=(e,t,n)=>{switch(e.op){case"ConcatV2":case"Concat":{const r=Object(k.d)("n",e,t,n),a=Object(k.d)("axis",e,t,n);let s=Object(k.d)("tensors",e,t,n);return s=s.slice(0,r),[qt.a(s,a)]}case"Gather":{const r=Object(k.d)("x",e,t,n),a=Object(k.d)("indices",e,t,n);return[Kt.a(r,tt.a(a,"int32"),0)]}case"GatherV2":{const r=Object(k.d)("axis",e,t,n),a=Object(k.d)("batchDims",e,t,n),s=Object(k.d)("x",e,t,n),i=Object(k.d)("indices",e,t,n);return[Kt.a(s,tt.a(i,"int32"),r,a)]}case"Reverse":{const r=Object(k.d)("dims",e,t,n),a=[];for(let e=0;e<r.length;e++)r[e]&&a.push(e);const s=Object(k.d)("x",e,t,n);return[Xt.a(s,a)]}case"ReverseV2":{const r=Object(k.d)("axis",e,t,n),a=Object(k.d)("x",e,t,n);return[Xt.a(a,r)]}case"Slice":{const r=Object(k.d)("begin",e,t,n),a=Object(k.d)("size",e,t,n);return[Yt.a(Object(k.d)("x",e,t,n),r,a)]}case"StridedSlice":{const r=Object(k.d)("begin",e,t,n),a=Object(k.d)("end",e,t,n),s=Object(k.d)("strides",e,t,n),i=Object(k.d)("beginMask",e,t,n),o=Object(k.d)("endMask",e,t,n),u=Object(k.d)("ellipsisMask",e,t,n),c=Object(k.d)("newAxisMask",e,t,n),l=Object(k.d)("shrinkAxisMask",e,t,n),d=Object(k.d)("x",e,t,n);return[Zt.a(d,r,a,s,i,o,u,c,l)]}case"Pack":return Object(v.tidy)(()=>{const r=Object(k.d)("axis",e,t,n),a=Object(k.d)("tensors",e,t,n),s=a[0].shape,i=Qt.a(a[0]).shape,o=a.map(e=>{const t=v.util.arraysEqual(e.shape,s)
;if(!t&&!v.util.arraysEqual(Qt.a(e).shape,i))throw new Error("the input tensors shape does not match");return t?e:Jt.a(e,s)});return[en.a(o,r)]});case"Unpack":{const r=Object(k.d)("axis",e,t,n),a=Object(k.d)("tensor",e,t,n);return tn.a(a,r)}case"Tile":{const r=Object(k.d)("reps",e,t,n);return[nn.a(Object(k.d)("x",e,t,n),r)]}case"Split":case"SplitV":{const r=Object(k.d)("axis",e,t,n),a=Object(k.d)("numOrSizeSplits",e,t,n),s=Object(k.d)("x",e,t,n);return rn.a(s,a,r)}case"ScatterNd":{const r=Object(k.d)("indices",e,t,n),a=Object(k.d)("values",e,t,n),s=Object(k.d)("shape",e,t,n);return[an.a(r,a,s)]}case"GatherNd":{const r=Object(k.d)("x",e,t,n),a=Object(k.d)("indices",e,t,n);return[sn.a(r,a)]}case"SparseToDense":{const r=Object(k.d)("sparseIndices",e,t,n),a=Object(k.d)("outputShape",e,t,n),s=Object(k.d)("sparseValues",e,t,n),i=Object(k.d)("defaultValue",e,t,n);return[_t.a(r,s,a,s.dtype===i.dtype?i:tt.a(i,s.dtype))]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},un=(e,t,n)=>{switch(e.op){case"SparseReshape":{const{outputIndices:r,outputShape:a}=Ae.md.sparseReshape(Object(k.d)("inputIndices",e,t,n),Object(k.d)("inputShape",e,t,n),Object(k.d)("newShape",e,t,n));return[r,a]}default:throw TypeError(`Node type ${e.op} is not implemented`)}};var cn=n(131),ln=n(108),dn=n(132),hn=n(177);const pn=(e,t,n)=>{switch(e.op){case"FFT":return[cn.a(Object(k.d)("x",e,t,n))];case"IFFT":return[ln.a(Object(k.d)("x",e,t,n))];case"RFFT":return[dn.a(Object(k.d)("x",e,t,n))];case"IRFFT":return[hn.a(Object(k.d)("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}};var fn=n(63),mn=n(167),bn=n(56),gn=n(96),yn=n(91),xn=n(159),vn=n(101);const wn=(e,t,n)=>{switch(e.op){case"Cast":return[tt.a(Object(k.d)("x",e,t,n),Object(k.d)("dtype",e,t,n))];case"ExpandDims":{const r=Object(k.d)("axis",e,t,n);return[fn.a(Object(k.d)("x",e,t,n),r)]}case"Squeeze":{const r=Object(k.d)("axis",e,t,n);return[Qt.a(Object(k.d)("x",e,t,n),r)]}case"Reshape":return[Jt.a(Object(k.d)("x",e,t,n),Object(k.d)("shape",e,t,n))];case"MirrorPad":return[mn.a(Object(k.d)("x",e,t,n),Object(k.d)("padding",e,t,n),Object(k.d)("mode",e,t,n))];case"PadV2":case"Pad":return[bn.a(Object(k.d)("x",e,t,n),Object(k.d)("padding",e,t,n),Object(k.d)("constantValue",e,t,n))];case"SpaceToBatchND":{const r=Object(k.d)("blockShape",e,t,n),a=Object(k.d)("paddings",e,t,n);return[gn.a(Object(k.d)("x",e,t,n),r,a)]}case"BatchToSpaceND":{const r=Object(k.d)("blockShape",e,t,n),a=Object(k.d)("crops",e,t,n);return[yn.a(Object(k.d)("x",e,t,n),r,a)]}case"DepthToSpace":{const r=Object(k.d)("blockSize",e,t,n),a=Object(k.d)("dataFormat",e,t,n).toUpperCase();return[xn.a(Object(k.d)("x",e,t,n),r,a)]}case"BroadcastTo":return[vn.a(Object(k.d)("x",e,t,n),Object(k.d)("shape",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}};class kn{constructor(e={},t={},n={},r={}){this.weightMap=e,this.tensorArrayMap=t,this.tensorListMap=n,this.functionMap=r,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(e,t){return{id:e,frameName:t,iterationId:0}}set currentContext(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){const e=[];for(let t=0;t<this.contexts.length-1;t++){const n=this.contexts.slice(0,this.contexts.length-t);e.push(this.contextIdforContexts(n))}e.push(""),this._currentContextIds=e}contextIdforContexts(e){return e?e.map(e=>0===e.id&&0===e.iterationId?"":`${e.frameName}-${e.iterationId}`).join("/"):""}enterFrame(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(!(this.contexts&&this.contexts.length>1))throw new Error("Cannot exit frame, the context is empty");this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift()}nextIteration(){if(!(this.contexts&&this.contexts.length>0))throw new Error("Cannot increase frame iteration, the context is empty");{this.contexts=this.contexts.slice(),this.lastId++;const e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}}getWeight(e){return this.weightMap[e]}addTensorArray(e){this.tensorArrayMap[e.id]=e}getTensorArray(e){return this.tensorArrayMap[e]}addTensorList(e){this.tensorListMap[e.id]=e}getTensorList(e){return this.tensorListMap[e]}dispose(e){for(const t in this.tensorArrayMap)this.tensorArrayMap[t].clearAndClose(e);for(const t in this.tensorListMap)this.tensorListMap[t].clearAndClose(e)}}const On=["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"],In=["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"],Nn=["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"];class jn{constructor(e,t){this.graph=e,this.parent=t,this.compiledMap=new Map,this._weightMap={},this.SEPERATOR=",",this._functions={},this._functionExecutorMap={},this._outputs=e.outputs,this._inputs=e.inputs,this._initNodes=e.initNodes,this._signature=e.signature,this._functions=e.functions,null!=e.functions&&Object.keys(e.functions).forEach(t=>{this._functionExecutorMap[t]=new jn(e.functions[t],this)})}get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(e){const t=Object.keys(e).map(t=>e[t].map(e=>e.id));this._weightIds=[].concat(...t),this._weightMap=e}set resourceManager(e){this._resourceManager=e}get inputs(){return this._inputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get outputs(){return this._outputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get inputNodes(){return this._inputs.map(e=>e.signatureKey||e.name)}get outputNodes(){return this._outputs.map(e=>{const t=e.signatureKey||e.name;return e.defaultOutput?`${t}:${e.defaultOutput}`:t})}get functions(){return Object.keys(this._functions).reduce((e,t)=>(e[t]=this._functions[t].signature,e),{})}getCompilationKey(e,t){const n=e.map(e=>e.name).sort(),r=t.map(e=>e.name).sort();return n.join(this.SEPERATOR)+"--"+r.join(this.SEPERATOR)}compile(e,t){const n=f(e,t,this.weightMap,this._initNodes),{missingInputs:r,dynamicNode:a,syncInputs:s}=n;if(null!=a)throw new Error(`This execution contains the node '${a.name}', which has `+`the dynamic op '${a.op}'. Please use `+"model.executeAsync() instead. Alternatively, to avoid the "+`dynamic ops, specify the inputs [${s}]`);if(r.length>0){const n=t.map(e=>e.name),a=Object.keys(e);throw new Error(`Cannot compute the outputs [${n}] from the provided inputs `+`[${a}]. Missing the following inputs: [${r}]`)}return m(this.graph,this.weightMap,n)}execute(e,t){e=this.mapInputs(e);const n=Object.keys(e).sort();this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t);const r=n.map(e=>this.graph.nodes[Object(k.g)(e)[0]]),a=t.map(e=>Object(k.g)(e)[0]);let s=a.map(e=>this.graph.nodes[e]);0===s.length&&(s=this._outputs);const i=this.getCompilationKey(r,s);let o=this.compiledMap.get(i);null==o&&(o=this.compile(e,s),this.compiledMap.set(i,o));const u={},c={};return Object(v.tidy)(()=>{const n=new kn(this.weightMap,u,c,this.functionExecutorMap),r=Object.assign({},this.weightMap);Object.keys(e).forEach(t=>{const[n,a]=Object(k.g)(t),s=[];s[a]=e[t],r[n]=s});const s=this.getFrozenTensorIds(r),i={};for(let e=0;e<o.length;e++){const t=o[e];if(!r[t.name]){const e=p(t,r,n,this._resourceManager);if(v.util.isPromise(e))throw new Error(`The execution of the op '${t.op}' returned a promise. `+"Please use model.executeAsync() instead.");r[t.name]=e,this.checkTensorForDisposal(t.name,t,r,n,s,a,i)}}return null==this.parent&&n.dispose(s),t.map(e=>Object(k.e)(e,r,n))})}getFrozenTensorIds(e){const t=[].concat.apply([],Object.keys(e).map(t=>e[t]).map(e=>e.map(e=>e.id)));return new Set(t)}checkTensorForDisposal(e,t,n,r,a,s,i){"control"!==t.category&&-1===s.indexOf(e)&&(n[e].forEach(e=>{null!=e&&(i[e.id]=(i[e.id]||0)+t.children.length)}),t.inputs.forEach(e=>{if("control"!==e.category){const t=Object(k.f)(e.name,n,r);null!=t&&t.forEach(e=>{if(e&&!e.kept&&!a.has(e.id)){const t=i[e.id];1===t?(e.dispose(),delete i[e.id]):null!=t&&i[e.id]--}})}}))}async executeAsync(e,t){return this._executeAsync(e,t)}async _executeAsync(e,t,n=!1,r={},a={}){n||(e=this.mapInputs(e),this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t));const s=new kn(this.weightMap,r,a,this.functionExecutorMap),i=await this.executeWithControlFlow(e,s,t,n),o=t.map(e=>Object(k.e)(e,i,s)),u=o.map(e=>e.id),c=Object.keys(e).map(t=>e[t].id),l=new Set([...u,...c,...this.weightIds]);return Object.keys(i).forEach(e=>{const t=i[e];t.forEach(e=>{!e||e.kept||e.isDisposed||l.has(e.id)||e.dispose()})}),null==this.parent&&s.dispose(l),o}async executeFunctionAsync(e,t,n){const r=e.reduce((e,t,n)=>(e[this.inputs[n].name]=t,e),{});return this._executeAsync(r,this.outputNodes,!0,t,n)}async executeWithControlFlow(e,t,n,r){const a=Object.keys(e),s=a.map(e=>this.graph.nodes[Object(k.g)(e)[0]]),i=n.map(e=>Object(k.g)(e)[0]);let o=i.map(e=>this.graph.nodes[e]);0===o.length&&(o=this._outputs);const{usedNodes:u,missingInputs:c,dynamicNode:l,syncInputs:d}=f(e,o,this.weightMap,this._initNodes),h=[...s,...this.graph.weights,...this._initNodes||[]].map(e=>({node:e,contexts:t.currentContext})),p=Object.assign({},this.weightMap);Object.keys(e).forEach(t=>{const[n,r]=Object(k.g)(t),a=[];a[r]=e[t],p[n]=a});const m={},g=this.getFrozenTensorIds(p),y={};for(;h.length>0;){const e=this.processStack(s,h,t,p,y,g,i,m,u);await Promise.all(e)}null!=l||r||console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");const x=o.filter(e=>!b(e)&&!Object(k.e)(e.name,p,t)).map(e=>e.name);if(x.length>0){let e="";throw null!=l&&(e="Alternatively, to avoid the dynamic ops, use model.execute() "+`and specify the inputs [${d}]`),new Error(`Cannot compute the outputs [${x}] from the provided `+`inputs [${a}]. Consider providing the following inputs: `+`[${c}]. ${e}`)}return p}processStack(e,t,n,r,a,s,i,o,u){const c=[];for(;t.length>0;){const e=t.pop();n.currentContext=e.contexts;let l="";if("Enter"===e.node.op&&Object(k.d)("isConstant",e.node,r,n)&&([l]=Object(k.b)(e.node.name,n)),null==r[e.node.name]){const d=p(e.node,r,n,this._resourceManager);l||([l]=Object(k.b)(e.node.name,n));const h=n.currentContext;v.util.isPromise(d)?c.push(d.then(c=>(r[l]=c,n.currentContext=h,this.checkTensorForDisposal(l,e.node,r,n,s,i,o),this.processChildNodes(e.node,t,n,r,a,u),c))):(r[l]=d,this.checkTensorForDisposal(l,e.node,r,n,s,i,o),this.processChildNodes(e.node,t,n,r,a,u))}else this.processChildNodes(e.node,t,n,r,a,u)}return c}processChildNodes(e,t,n,r,a,s){e.children.forEach(e=>{const[i]=Object(k.b)(e.name,n);!a[i]&&s.has(e.name)&&("Merge"===e.op?e.inputNames.some(e=>!!Object(k.e)(e,r,n))&&(a[i]=!0,t.push({contexts:n.currentContext,node:e})):e.inputNames.every(e=>!!Object(k.e)(e,r,n))&&(a[i]=!0,t.push({contexts:n.currentContext,node:e})))})}dispose(){Object.keys(this.weightMap).forEach(e=>this.weightMap[e].forEach(e=>e.dispose()))}checkInputShapeAndType(e){Object.keys(e).forEach(t=>{const n=e[t],[r]=Object(k.g)(t),a=this.graph.nodes[r];if(a.attrParams.shape&&a.attrParams.shape.value){const e=a.attrParams.shape.value,t=e.length===n.shape.length&&n.shape.every((t,n)=>-1===e[n]||e[n]===t);v.util.assert(t,()=>`The shape of dict['${a.name}'] provided in `+`model.execute(dict) must be [${e}], but was `+`[${n.shape}]`)}a.attrParams.dtype&&a.attrParams.dtype.value&&v.util.assert(n.dtype===a.attrParams.dtype.value,()=>`The dtype of dict['${a.name}'] provided in `+"model.execute(dict) must be "+`${a.attrParams.dtype.value}, but was ${n.dtype}`)})}mapInputs(e){const t={};for(const n in e)if(null!=this._signature&&null!=this._signature.inputs&&null!=this._signature.inputs[n]){const r=this._signature.inputs[n];t[r.name]=e[n]}else t[n]=e[n];return t}checkInputs(e){const t=Object.keys(e).filter(e=>{const[t]=Object(k.g)(e);return null==this.graph.nodes[t]});if(t.length>0)throw new Error("The dict provided in model.execute(dict) has "+`keys: [${t}] that are not part of graph`)}mapOutputs(e){return e.map(e=>{if(null!=this._signature&&null!=this._signature.outputs&&null!=this._signature.outputs[e]){const t=this._signature.outputs[e];return t.name}return e},{})}checkOutputs(e){e.forEach(e=>{const[t]=Object(k.g)(e);if(!this.graph.nodes[t])throw new Error(`The output '${e}' is not found in the graph`)})}}class Sn{constructor(e={},t={}){this.hashTableNameToHandle=e,this.hashTableMap=t}addHashTable(e,t){this.hashTableNameToHandle[e]=t.handle,this.hashTableMap[t.id]=t}getHashTableHandleByName(e){return this.hashTableNameToHandle[e]}getHashTableById(e){return this.hashTableMap[e]}dispose(){for(const e in this.hashTableMap)this.hashTableMap[e].clearAndClose(),delete this.hashTableMap[e];for(const e in this.hashTableNameToHandle)this.hashTableNameToHandle[e].dispose(),delete this.hashTableNameToHandle[e]}}const Tn="?tfjs-format=file",Cn="model.json";class En{constructor(e,t={}){this.modelUrl=e,this.loadOptions=t,this.version="n/a",null==t&&(this.loadOptions={}),this.resourceManager=new Sn}get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}findIOHandler(){const e=this.modelUrl;if(null!=e.load)this.handler=e;else if(null!=this.loadOptions.requestInit)this.handler=v.io.browserHTTPRequest(e,this.loadOptions);else{const t=v.io.getLoadHandlers(e,this.loadOptions);if(0===t.length)t.push(v.io.browserHTTPRequest(e,this.loadOptions));else if(t.length>1)throw new Error(`Found more than one (${t.length}) load handlers for `+`URL '${[e]}'`);this.handler=t[0]}}async load(){if(this.findIOHandler(),null==this.handler.load)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const e=await this.handler.load();return this.loadSync(e)}loadSync(e){this.artifacts=e;const t=this.artifacts.modelTopology;let n;n=null!=this.artifacts.userDefinedMetadata&&null!=this.artifacts.userDefinedMetadata.signature?this.artifacts.userDefinedMetadata.signature:this.artifacts.signature,this.signature=n,this.version=`${t.versions.producer}.${t.versions.minConsumer}`;const r=v.io.decodeWeights(this.artifacts.weightData,this.artifacts.weightSpecs);if(this.executor=new jn(w.a.Instance.transformGraph(t,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(r),this.executor.resourceManager=this.resourceManager,null!=e.modelInitializer&&null!=e.modelInitializer.node){const t=w.a.Instance.transformGraph(e.modelInitializer);this.initializer=new jn(t),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializer.executeAsync({},[])}return!0}async save(e,t){if("string"==typeof e){const t=v.io.getSaveHandlers(e);if(0===t.length)throw new Error(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw new Error(`Found more than one (${t.length}) save handlers for `+`URL '${e}'`);e=t[0]}if(null==e.save)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return e.save(this.artifacts)}predict(e,t){return this.execute(e,this.outputNodes)}normalizeInputs(e){if(!(e instanceof v.Tensor||Array.isArray(e)))return e;if(e=Array.isArray(e)?e:[e],e.length!==this.inputNodes.length)throw new Error("Input tensor count mismatch,"+`the graph model has ${this.inputNodes.length} placeholders, `+`while there are ${e.length} input tensors.`);return this.inputNodes.reduce((t,n,r)=>(t[n]=e[r],t),{})}normalizeOutputs(e){return e=e||this.outputNodes,Array.isArray(e)?e:[e]}execute(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const n=this.executor.execute(e,t);return n.length>1?n:n[0]}async executeAsync(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const n=await this.executor.executeAsync(e,t);return n.length>1?n:n[0]}convertTensorMapToTensorsMap(e){return Object.keys(e).reduce((t,n)=>(t[n]=[e[n]],t),{})}dispose(){this.executor.dispose(),this.initializer&&this.initializer.dispose(),this.resourceManager.dispose()}}const $n="3.5.0"},function(e,t,n){"use strict";function r(e,t,n,r,o){i.b(e.length===t.rank,()=>"Length of inShape "+`(${e.length}) and rank of dy (${t.rank}) must match`);let c=e,l=t,d=!1;4===t.rank&&(d=!0,l=Object(u.a)(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),c=[1,e[0],e[1],e[2],e[3]]);const h=c[4],p=l.shape[4];i.b(5===c.length,()=>"Error in conv3dDerInput: inShape must be length 5, but got length "+`${c.length}.`),i.b(5===l.rank,()=>"Error in conv3dDerInput: dy must be rank 5, but got "+`rank ${l.rank}`),i.b(5===n.rank,()=>"Error in conv3dDerInput: filter must be rank 5, but got "+`rank ${n.rank}`),i.b(h===n.shape[3],()=>`Error in conv3dDerInput: depth of input (${h}) must `+`match input depth for filter ${n.shape[3]}.`),i.b(p===n.shape[4],()=>`Error in conv3dDerInput: depth of output (${p}) must `+`match output depth for filter ${n.shape[4]}.`);const f={dy:l,filter:n},m={pad:o,strides:r,inputShape:c},b=a.a.runKernel(s.H,f,m);return d?Object(u.a)(b,[b.shape[1],b.shape[2],b.shape[3],b.shape[4]]):b}n.d(t,"a",function(){return c});var a=n(5),s=n(3),i=n(8),o=n(4),u=n(7);const c=Object(o.b)({conv3DBackpropInput_:r})},function(e,t,n){"use strict";function r(e,t,n=!1,r=!1){const u=Object(i.a)(e,"images","resizeNearestNeighbor");o.b(3===u.rank||4===u.rank,()=>"Error in resizeNearestNeighbor: x must be rank 3 or 4, but got "+`rank ${u.rank}.`),o.b(2===t.length,()=>"Error in resizeNearestNeighbor: new shape must 2D, but got shape "+`${t}.`),o.b("float32"===u.dtype||"int32"===u.dtype,()=>"`images` must have `int32` or `float32` as dtype"),o.b(!1===r||!1===n,()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false.");let l=u,d=!1;3===u.rank&&(d=!0,l=Object(c.a)(u,[1,u.shape[0],u.shape[1],u.shape[2]]));const[]=t,h={images:l},p={alignCorners:n,halfPixelCenters:r,size:t},f=a.a.runKernel(s.sc,h,p);return d?Object(c.a)(f,[f.shape[1],f.shape[2],f.shape[3]]):f}n.d(t,"a",function(){return l});var a=n(5),s=n(3),i=n(2),o=n(8),u=n(4),c=n(7);const l=Object(u.b)({resizeNearestNeighbor_:r})},function(e,t,n){"use strict";function r(e,t,n=!1,r=!1){const u=Object(i.a)(e,"images","resizeBilinear");o.b(3===u.rank||4===u.rank,()=>"Error in resizeBilinear: x must be rank 3 or 4, but got "+`rank ${u.rank}.`),o.b(2===t.length,()=>"Error in resizeBilinear: new shape must 2D, but got shape "+`${t}.`),o.b(!1===r||!1===n,()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false.");let l=u,d=!1;3===u.rank&&(d=!0,l=Object(c.a)(u,[1,u.shape[0],u.shape[1],u.shape[2]]));const[]=t,h={images:l},p={alignCorners:n,halfPixelCenters:r,size:t},f=a.a.runKernel(s.qc,h,p);return d?Object(c.a)(f,[f.shape[1],f.shape[2],f.shape[3]]):f}n.d(t,"a",function(){return l});var a=n(5),s=n(3),i=n(2),o=n(8),u=n(4),c=n(7);const l=Object(u.b)({resizeBilinear_:r})},function(e,t,n){"use strict";function r(e,t,n,r,i,u=[1,1],c){let l=t,d=!1;3===t.rank&&(d=!0,l=Object(o.a)(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const h={dy:l,filter:n},p={strides:r,pad:i,dimRoundingMode:c,dilations:u,inputShape:e},f=a.a.runKernel(s.Q,h,p);return d?Object(o.a)(f,[f.shape[1],f.shape[2],f.shape[3]]):f}n.d(t,"a",function(){return u});var a=n(5),s=n(3),i=n(4),o=n(7);const u=Object(i.b)({depthwiseConv2dNativeBackpropInput_:r})},function(e,t,n){"use strict";function r(e,t,n,r,i,u=[1,1],c){let l=e;3===e.rank&&(l=Object(o.a)(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let d=t;3===d.rank&&(d=Object(o.a)(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const h={x:l,dy:d},p={strides:r,pad:i,dimRoundingMode:c,dilations:u,filterShape:n};return a.a.runKernel(s.P,h,p)}n.d(t,"a",function(){return u});var a=n(5),s=n(3),i=n(4),o=n(7);const u=Object(i.b)({depthwiseConv2dNativeBackpropFilter_:r})},function(e,t,n){"use strict";function r(e,t,n="float32"){if("complex64"===n){const n=r(e,t,"float32"),a=r(e,t,"float32");return Object(s.a)({inputs:{real:n,imag:a},backend:e})}const i=a.util.makeZerosTypedArray(a.util.sizeFromShape(t),n);return e.makeTensorInfo(t,n,i)}n.d(t,"a",function(){return r});var a=n(0),s=n(38)},function(e,t,n){"use strict";(function(e){function r(){try{var e=new Uint8Array(1);return e.__proto__={__proto__:Uint8Array.prototype,foo:function(){return 42}},42===e.foo()&&"function"==typeof e.subarray&&0===e.subarray(1,1).byteLength}catch(e){return!1}}function a(){return i.TYPED_ARRAY_SUPPORT?2147483647:1073741823}function s(e,t){if(a()<t)throw new RangeError("Invalid typed array length");return i.TYPED_ARRAY_SUPPORT?(e=new Uint8Array(t),e.__proto__=i.prototype):(null===e&&(e=new i(t)),e.length=t),e}function i(e,t,n){if(!(i.TYPED_ARRAY_SUPPORT||this instanceof i))return new i(e,t,n);if("number"==typeof e){if("string"==typeof t)throw new Error("If encoding is specified then the first argument must be a string");return l(this,e)}return o(this,e,t,n)}function o(e,t,n,r){if("number"==typeof t)throw new TypeError('"value" argument must not be a number');return"undefined"!=typeof ArrayBuffer&&t instanceof ArrayBuffer?p(e,t,n,r):"string"==typeof t?d(e,t,n):f(e,t)}function u(e){if("number"!=typeof e)throw new TypeError('"size" argument must be a number');if(e<0)throw new RangeError('"size" argument must not be negative')}function c(e,t,n,r){return u(t),t<=0?s(e,t):void 0!==n?"string"==typeof r?s(e,t).fill(n,r):s(e,t).fill(n):s(e,t)}function l(e,t){if(u(t),e=s(e,t<0?0:0|m(t)),!i.TYPED_ARRAY_SUPPORT)for(var n=0;n<t;++n)e[n]=0;return e}function d(e,t,n){if("string"==typeof n&&""!==n||(n="utf8"),!i.isEncoding(n))throw new TypeError('"encoding" must be a valid string encoding');var r=0|g(t,n);e=s(e,r);var a=e.write(t,n);return a!==r&&(e=e.slice(0,a)),e}function h(e,t){var n=t.length<0?0:0|m(t.length);e=s(e,n);for(var r=0;r<n;r+=1)e[r]=255&t[r];return e}function p(e,t,n,r){if(t.byteLength,n<0||t.byteLength<n)throw new RangeError("'offset' is out of bounds");if(t.byteLength<n+(r||0))throw new RangeError("'length' is out of bounds");return t=void 0===n&&void 0===r?new Uint8Array(t):void 0===r?new Uint8Array(t,n):new Uint8Array(t,n,r),i.TYPED_ARRAY_SUPPORT?(e=t,e.__proto__=i.prototype):e=h(e,t),e}function f(e,t){if(i.isBuffer(t)){var n=0|m(t.length);return e=s(e,n),0===e.length?e:(t.copy(e,0,0,n),e)}if(t){if("undefined"!=typeof ArrayBuffer&&t.buffer instanceof ArrayBuffer||"length"in t)return"number"!=typeof t.length||Y(t.length)?s(e,0):h(e,t);if("Buffer"===t.type&&J(t.data))return h(e,t.data)}throw new TypeError("First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.")}function m(e){if(e>=a())throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x"+a().toString(16)+" bytes");return 0|e}function b(e){return+e!=e&&(e=0),i.alloc(+e)}function g(e,t){if(i.isBuffer(e))return e.length;if("undefined"!=typeof ArrayBuffer&&"function"==typeof ArrayBuffer.isView&&(ArrayBuffer.isView(e)||e instanceof ArrayBuffer))return e.byteLength;"string"!=typeof e&&(e=""+e);var n=e.length;if(0===n)return 0;for(var r=!1;;)switch(t){case"ascii":case"latin1":case"binary":return n;case"utf8":case"utf-8":case void 0:return G(e).length;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return 2*n;case"hex":return n>>>1;case"base64":return K(e).length;default:if(r)return G(e).length;t=(""+t).toLowerCase(),r=!0}}function y(e,t,n){var r=!1;if((void 0===t||t<0)&&(t=0),t>this.length)return"";if((void 0===n||n>this.length)&&(n=this.length),n<=0)return"";if(n>>>=0,t>>>=0,n<=t)return"";for(e||(e="utf8");;)switch(e){case"hex":return _(this,t,n);case"utf8":case"utf-8":return C(this,t,n);case"ascii":return $(this,t,n);case"latin1":case"binary":return A(this,t,n);case"base64":return T(this,t,n);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return D(this,t,n);default:if(r)throw new TypeError("Unknown encoding: "+e);e=(e+"").toLowerCase(),r=!0}}function x(e,t,n){var r=e[t];e[t]=e[n],e[n]=r}function v(e,t,n,r,a){if(0===e.length)return-1;if("string"==typeof n?(r=n,n=0):n>2147483647?n=2147483647:n<-2147483648&&(n=-2147483648),n=+n,isNaN(n)&&(n=a?0:e.length-1),n<0&&(n=e.length+n),n>=e.length){if(a)return-1;n=e.length-1}else if(n<0){if(!a)return-1;n=0}if("string"==typeof t&&(t=i.from(t,r)),i.isBuffer(t))return 0===t.length?-1:w(e,t,n,r,a);if("number"==typeof t)return t&=255,i.TYPED_ARRAY_SUPPORT&&"function"==typeof Uint8Array.prototype.indexOf?a?Uint8Array.prototype.indexOf.call(e,t,n):Uint8Array.prototype.lastIndexOf.call(e,t,n):w(e,[t],n,r,a);throw new TypeError("val must be string, number or Buffer")}function w(e,t,n,r,a){function s(e,t){return 1===o?e[t]:e.readUInt16BE(t*o)}var i,o=1,u=e.length,c=t.length;if(void 0!==r&&(r=String(r).toLowerCase(),"ucs2"===r||"ucs-2"===r||"utf16le"===r||"utf-16le"===r)){if(e.length<2||t.length<2)return-1;o=2,u/=2,c/=2,n/=2}if(a){var l=-1;for(i=n;i<u;i++)if(s(e,i)===s(t,-1===l?0:i-l)){if(-1===l&&(l=i),i-l+1===c)return l*o}else-1!==l&&(i-=i-l),l=-1}else for(n+c>u&&(n=u-c),i=n;i>=0;i--){for(var d=!0,h=0;h<c;h++)if(s(e,i+h)!==s(t,h)){d=!1;break}if(d)return i}return-1}function k(e,t,n,r){n=Number(n)||0;var a=e.length-n;r?(r=Number(r),r>a&&(r=a)):r=a;var s=t.length;if(s%2!=0)throw new TypeError("Invalid hex string");r>s/2&&(r=s/2);for(var i=0;i<r;++i){var o=parseInt(t.substr(2*i,2),16);if(isNaN(o))return i;e[n+i]=o}return i}function O(e,t,n,r){return X(G(t,e.length-n),e,n,r)}function I(e,t,n,r){return X(H(t),e,n,r)}function N(e,t,n,r){return I(e,t,n,r)}function j(e,t,n,r){return X(K(t),e,n,r)}function S(e,t,n,r){return X(q(t,e.length-n),e,n,r)}function T(e,t,n){return 0===t&&n===e.length?Z.fromByteArray(e):Z.fromByteArray(e.slice(t,n))}function C(e,t,n){n=Math.min(e.length,n);for(var r=[],a=t;a<n;){var s,i,o,u,c=e[a],l=null,d=c>239?4:c>223?3:c>191?2:1;if(a+d<=n)switch(d){case 1:c<128&&(l=c);break;case 2:s=e[a+1],128==(192&s)&&(u=(31&c)<<6|63&s,u>127&&(l=u));break;case 3:s=e[a+1],i=e[a+2],128==(192&s)&&128==(192&i)&&(u=(15&c)<<12|(63&s)<<6|63&i,u>2047&&(u<55296||u>57343)&&(l=u));break;case 4:s=e[a+1],i=e[a+2],o=e[a+3],128==(192&s)&&128==(192&i)&&128==(192&o)&&(u=(15&c)<<18|(63&s)<<12|(63&i)<<6|63&o,u>65535&&u<1114112&&(l=u))}null===l?(l=65533,d=1):l>65535&&(l-=65536,r.push(l>>>10&1023|55296),l=56320|1023&l),r.push(l),a+=d}return E(r)}function E(e){var t=e.length;if(t<=ee)return String.fromCharCode.apply(String,e);for(var n="",r=0;r<t;)n+=String.fromCharCode.apply(String,e.slice(r,r+=ee));return n}function $(e,t,n){var r="";n=Math.min(e.length,n);for(var a=t;a<n;++a)r+=String.fromCharCode(127&e[a]);return r}function A(e,t,n){var r="";n=Math.min(e.length,n);for(var a=t;a<n;++a)r+=String.fromCharCode(e[a]);return r}function _(e,t,n){var r=e.length;(!t||t<0)&&(t=0),(!n||n<0||n>r)&&(n=r);for(var a="",s=t;s<n;++s)a+=U(e[s]);return a}function D(e,t,n){for(var r=e.slice(t,n),a="",s=0;s<r.length;s+=2)a+=String.fromCharCode(r[s]+256*r[s+1]);return a}function F(e,t,n){if(e%1!=0||e<0)throw new RangeError("offset is not uint");if(e+t>n)throw new RangeError("Trying to access beyond buffer length")}function R(e,t,n,r,a,s){if(!i.isBuffer(e))throw new TypeError('"buffer" argument must be a Buffer instance');if(t>a||t<s)throw new RangeError('"value" argument is out of bounds');if(n+r>e.length)throw new RangeError("Index out of range")}function M(e,t,n,r){t<0&&(t=65535+t+1);for(var a=0,s=Math.min(e.length-n,2);a<s;++a)e[n+a]=(t&255<<8*(r?a:1-a))>>>8*(r?a:1-a)}function z(e,t,n,r){t<0&&(t=4294967295+t+1);for(var a=0,s=Math.min(e.length-n,4);a<s;++a)e[n+a]=t>>>8*(r?a:3-a)&255}function L(e,t,n,r,a,s){if(n+r>e.length)throw new RangeError("Index out of range");if(n<0)throw new RangeError("Index out of range")}function P(e,t,n,r,a){return a||L(e,t,n,4,3.4028234663852886e38,-3.4028234663852886e38),Q.write(e,t,n,r,23,4),n+4}function B(e,t,n,r,a){return a||L(e,t,n,8,1.7976931348623157e308,-1.7976931348623157e308),Q.write(e,t,n,r,52,8),n+8}function W(e){if(e=V(e).replace(te,""),e.length<2)return"";for(;e.length%4!=0;)e+="=";return e}function V(e){return e.trim?e.trim():e.replace(/^\s+|\s+$/g,"")}function U(e){return e<16?"0"+e.toString(16):e.toString(16)}function G(e,t){var n;t=t||1/0;for(var r=e.length,a=null,s=[],i=0;i<r;++i){if(n=e.charCodeAt(i),n>55295&&n<57344){if(!a){if(n>56319){(t-=3)>-1&&s.push(239,191,189);continue}if(i+1===r){(t-=3)>-1&&s.push(239,191,189);continue}a=n;continue}if(n<56320){(t-=3)>-1&&s.push(239,191,189),a=n;continue}n=65536+(a-55296<<10|n-56320)}else a&&(t-=3)>-1&&s.push(239,191,189);if(a=null,n<128){if((t-=1)<0)break;s.push(n)}else if(n<2048){if((t-=2)<0)break;s.push(n>>6|192,63&n|128)}else if(n<65536){if((t-=3)<0)break;s.push(n>>12|224,n>>6&63|128,63&n|128)}else{if(!(n<1114112))throw new Error("Invalid code point");if((t-=4)<0)break;s.push(n>>18|240,n>>12&63|128,n>>6&63|128,63&n|128)}}return s}function H(e){for(var t=[],n=0;n<e.length;++n)t.push(255&e.charCodeAt(n));return t}function q(e,t){for(var n,r,a,s=[],i=0;i<e.length&&!((t-=2)<0);++i)n=e.charCodeAt(i),r=n>>8,a=n%256,s.push(a),s.push(r);return s}function K(e){return Z.toByteArray(W(e))}function X(e,t,n,r){for(var a=0;a<r&&!(a+n>=t.length||a>=e.length);++a)t[a+n]=e[a];return a}function Y(e){return e!=e}var Z=n(275),Q=n(276),J=n(277);t.Buffer=i,t.SlowBuffer=b,t.INSPECT_MAX_BYTES=50,i.TYPED_ARRAY_SUPPORT=void 0!==e.TYPED_ARRAY_SUPPORT?e.TYPED_ARRAY_SUPPORT:r(),t.kMaxLength=a(),i.poolSize=8192,i._augment=function(e){return e.__proto__=i.prototype,e},i.from=function(e,t,n){return o(null,e,t,n)},i.TYPED_ARRAY_SUPPORT&&(i.prototype.__proto__=Uint8Array.prototype,i.__proto__=Uint8Array,"undefined"!=typeof Symbol&&Symbol.species&&i[Symbol.species]===i&&Object.defineProperty(i,Symbol.species,{value:null,configurable:!0})),i.alloc=function(e,t,n){return c(null,e,t,n)},i.allocUnsafe=function(e){return l(null,e)},i.allocUnsafeSlow=function(e){return l(null,e)},i.isBuffer=function(e){return!(null==e||!e._isBuffer)},i.compare=function(e,t){if(!i.isBuffer(e)||!i.isBuffer(t))throw new TypeError("Arguments must be Buffers");if(e===t)return 0;for(var n=e.length,r=t.length,a=0,s=Math.min(n,r);a<s;++a)if(e[a]!==t[a]){n=e[a],r=t[a];break}return n<r?-1:r<n?1:0},i.isEncoding=function(e){switch(String(e).toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"latin1":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return!0;default:return!1}},i.concat=function(e,t){if(!J(e))throw new TypeError('"list" argument must be an Array of Buffers');if(0===e.length)return i.alloc(0);var n;if(void 0===t)for(t=0,n=0;n<e.length;++n)t+=e[n].length;var r=i.allocUnsafe(t),a=0;for(n=0;n<e.length;++n){var s=e[n];if(!i.isBuffer(s))throw new TypeError('"list" argument must be an Array of Buffers');s.copy(r,a),a+=s.length}return r},i.byteLength=g,i.prototype._isBuffer=!0,i.prototype.swap16=function(){var e=this.length;if(e%2!=0)throw new RangeError("Buffer size must be a multiple of 16-bits");for(var t=0;t<e;t+=2)x(this,t,t+1);return this},
i.prototype.swap32=function(){var e=this.length;if(e%4!=0)throw new RangeError("Buffer size must be a multiple of 32-bits");for(var t=0;t<e;t+=4)x(this,t,t+3),x(this,t+1,t+2);return this},i.prototype.swap64=function(){var e=this.length;if(e%8!=0)throw new RangeError("Buffer size must be a multiple of 64-bits");for(var t=0;t<e;t+=8)x(this,t,t+7),x(this,t+1,t+6),x(this,t+2,t+5),x(this,t+3,t+4);return this},i.prototype.toString=function(){var e=0|this.length;return 0===e?"":0===arguments.length?C(this,0,e):y.apply(this,arguments)},i.prototype.equals=function(e){if(!i.isBuffer(e))throw new TypeError("Argument must be a Buffer");return this===e||0===i.compare(this,e)},i.prototype.inspect=function(){var e="",n=t.INSPECT_MAX_BYTES;return this.length>0&&(e=this.toString("hex",0,n).match(/.{2}/g).join(" "),this.length>n&&(e+=" ... ")),"<Buffer "+e+">"},i.prototype.compare=function(e,t,n,r,a){if(!i.isBuffer(e))throw new TypeError("Argument must be a Buffer");if(void 0===t&&(t=0),void 0===n&&(n=e?e.length:0),void 0===r&&(r=0),void 0===a&&(a=this.length),t<0||n>e.length||r<0||a>this.length)throw new RangeError("out of range index");if(r>=a&&t>=n)return 0;if(r>=a)return-1;if(t>=n)return 1;if(t>>>=0,n>>>=0,r>>>=0,a>>>=0,this===e)return 0;for(var s=a-r,o=n-t,u=Math.min(s,o),c=this.slice(r,a),l=e.slice(t,n),d=0;d<u;++d)if(c[d]!==l[d]){s=c[d],o=l[d];break}return s<o?-1:o<s?1:0},i.prototype.includes=function(e,t,n){return-1!==this.indexOf(e,t,n)},i.prototype.indexOf=function(e,t,n){return v(this,e,t,n,!0)},i.prototype.lastIndexOf=function(e,t,n){return v(this,e,t,n,!1)},i.prototype.write=function(e,t,n,r){if(void 0===t)r="utf8",n=this.length,t=0;else if(void 0===n&&"string"==typeof t)r=t,n=this.length,t=0;else{if(!isFinite(t))throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");t|=0,isFinite(n)?(n|=0,void 0===r&&(r="utf8")):(r=n,n=void 0)}var a=this.length-t;if((void 0===n||n>a)&&(n=a),e.length>0&&(n<0||t<0)||t>this.length)throw new RangeError("Attempt to write outside buffer bounds");r||(r="utf8");for(var s=!1;;)switch(r){case"hex":return k(this,e,t,n);case"utf8":case"utf-8":return O(this,e,t,n);case"ascii":return I(this,e,t,n);case"latin1":case"binary":return N(this,e,t,n);case"base64":return j(this,e,t,n);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return S(this,e,t,n);default:if(s)throw new TypeError("Unknown encoding: "+r);r=(""+r).toLowerCase(),s=!0}},i.prototype.toJSON=function(){return{type:"Buffer",data:Array.prototype.slice.call(this._arr||this,0)}};var ee=4096;i.prototype.slice=function(e,t){var n,r=this.length;if(e=~~e,t=void 0===t?r:~~t,e<0?(e+=r,e<0&&(e=0)):e>r&&(e=r),t<0?(t+=r,t<0&&(t=0)):t>r&&(t=r),t<e&&(t=e),i.TYPED_ARRAY_SUPPORT)n=this.subarray(e,t),n.__proto__=i.prototype;else{var a=t-e;n=new i(a,void 0);for(var s=0;s<a;++s)n[s]=this[s+e]}return n},i.prototype.readUIntLE=function(e,t,n){e|=0,t|=0,n||F(e,t,this.length);for(var r=this[e],a=1,s=0;++s<t&&(a*=256);)r+=this[e+s]*a;return r},i.prototype.readUIntBE=function(e,t,n){e|=0,t|=0,n||F(e,t,this.length);for(var r=this[e+--t],a=1;t>0&&(a*=256);)r+=this[e+--t]*a;return r},i.prototype.readUInt8=function(e,t){return t||F(e,1,this.length),this[e]},i.prototype.readUInt16LE=function(e,t){return t||F(e,2,this.length),this[e]|this[e+1]<<8},i.prototype.readUInt16BE=function(e,t){return t||F(e,2,this.length),this[e]<<8|this[e+1]},i.prototype.readUInt32LE=function(e,t){return t||F(e,4,this.length),(this[e]|this[e+1]<<8|this[e+2]<<16)+16777216*this[e+3]},i.prototype.readUInt32BE=function(e,t){return t||F(e,4,this.length),16777216*this[e]+(this[e+1]<<16|this[e+2]<<8|this[e+3])},i.prototype.readIntLE=function(e,t,n){e|=0,t|=0,n||F(e,t,this.length);for(var r=this[e],a=1,s=0;++s<t&&(a*=256);)r+=this[e+s]*a;return a*=128,r>=a&&(r-=Math.pow(2,8*t)),r},i.prototype.readIntBE=function(e,t,n){e|=0,t|=0,n||F(e,t,this.length);for(var r=t,a=1,s=this[e+--r];r>0&&(a*=256);)s+=this[e+--r]*a;return a*=128,s>=a&&(s-=Math.pow(2,8*t)),s},i.prototype.readInt8=function(e,t){return t||F(e,1,this.length),128&this[e]?-1*(255-this[e]+1):this[e]},i.prototype.readInt16LE=function(e,t){t||F(e,2,this.length);var n=this[e]|this[e+1]<<8;return 32768&n?4294901760|n:n},i.prototype.readInt16BE=function(e,t){t||F(e,2,this.length);var n=this[e+1]|this[e]<<8;return 32768&n?4294901760|n:n},i.prototype.readInt32LE=function(e,t){return t||F(e,4,this.length),this[e]|this[e+1]<<8|this[e+2]<<16|this[e+3]<<24},i.prototype.readInt32BE=function(e,t){return t||F(e,4,this.length),this[e]<<24|this[e+1]<<16|this[e+2]<<8|this[e+3]},i.prototype.readFloatLE=function(e,t){return t||F(e,4,this.length),Q.read(this,e,!0,23,4)},i.prototype.readFloatBE=function(e,t){return t||F(e,4,this.length),Q.read(this,e,!1,23,4)},i.prototype.readDoubleLE=function(e,t){return t||F(e,8,this.length),Q.read(this,e,!0,52,8)},i.prototype.readDoubleBE=function(e,t){return t||F(e,8,this.length),Q.read(this,e,!1,52,8)},i.prototype.writeUIntLE=function(e,t,n,r){if(e=+e,t|=0,n|=0,!r){var a=Math.pow(2,8*n)-1;R(this,e,t,n,a,0)}var s=1,i=0;for(this[t]=255&e;++i<n&&(s*=256);)this[t+i]=e/s&255;return t+n},i.prototype.writeUIntBE=function(e,t,n,r){if(e=+e,t|=0,n|=0,!r){var a=Math.pow(2,8*n)-1;R(this,e,t,n,a,0)}var s=n-1,i=1;for(this[t+s]=255&e;--s>=0&&(i*=256);)this[t+s]=e/i&255;return t+n},i.prototype.writeUInt8=function(e,t,n){return e=+e,t|=0,n||R(this,e,t,1,255,0),i.TYPED_ARRAY_SUPPORT||(e=Math.floor(e)),this[t]=255&e,t+1},i.prototype.writeUInt16LE=function(e,t,n){return e=+e,t|=0,n||R(this,e,t,2,65535,0),i.TYPED_ARRAY_SUPPORT?(this[t]=255&e,this[t+1]=e>>>8):M(this,e,t,!0),t+2},i.prototype.writeUInt16BE=function(e,t,n){return e=+e,t|=0,n||R(this,e,t,2,65535,0),i.TYPED_ARRAY_SUPPORT?(this[t]=e>>>8,this[t+1]=255&e):M(this,e,t,!1),t+2},i.prototype.writeUInt32LE=function(e,t,n){return e=+e,t|=0,n||R(this,e,t,4,4294967295,0),i.TYPED_ARRAY_SUPPORT?(this[t+3]=e>>>24,this[t+2]=e>>>16,this[t+1]=e>>>8,this[t]=255&e):z(this,e,t,!0),t+4},i.prototype.writeUInt32BE=function(e,t,n){return e=+e,t|=0,n||R(this,e,t,4,4294967295,0),i.TYPED_ARRAY_SUPPORT?(this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=255&e):z(this,e,t,!1),t+4},i.prototype.writeIntLE=function(e,t,n,r){if(e=+e,t|=0,!r){var a=Math.pow(2,8*n-1);R(this,e,t,n,a-1,-a)}var s=0,i=1,o=0;for(this[t]=255&e;++s<n&&(i*=256);)e<0&&0===o&&0!==this[t+s-1]&&(o=1),this[t+s]=(e/i>>0)-o&255;return t+n},i.prototype.writeIntBE=function(e,t,n,r){if(e=+e,t|=0,!r){var a=Math.pow(2,8*n-1);R(this,e,t,n,a-1,-a)}var s=n-1,i=1,o=0;for(this[t+s]=255&e;--s>=0&&(i*=256);)e<0&&0===o&&0!==this[t+s+1]&&(o=1),this[t+s]=(e/i>>0)-o&255;return t+n},i.prototype.writeInt8=function(e,t,n){return e=+e,t|=0,n||R(this,e,t,1,127,-128),i.TYPED_ARRAY_SUPPORT||(e=Math.floor(e)),e<0&&(e=255+e+1),this[t]=255&e,t+1},i.prototype.writeInt16LE=function(e,t,n){return e=+e,t|=0,n||R(this,e,t,2,32767,-32768),i.TYPED_ARRAY_SUPPORT?(this[t]=255&e,this[t+1]=e>>>8):M(this,e,t,!0),t+2},i.prototype.writeInt16BE=function(e,t,n){return e=+e,t|=0,n||R(this,e,t,2,32767,-32768),i.TYPED_ARRAY_SUPPORT?(this[t]=e>>>8,this[t+1]=255&e):M(this,e,t,!1),t+2},i.prototype.writeInt32LE=function(e,t,n){return e=+e,t|=0,n||R(this,e,t,4,2147483647,-2147483648),i.TYPED_ARRAY_SUPPORT?(this[t]=255&e,this[t+1]=e>>>8,this[t+2]=e>>>16,this[t+3]=e>>>24):z(this,e,t,!0),t+4},i.prototype.writeInt32BE=function(e,t,n){return e=+e,t|=0,n||R(this,e,t,4,2147483647,-2147483648),e<0&&(e=4294967295+e+1),i.TYPED_ARRAY_SUPPORT?(this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=255&e):z(this,e,t,!1),t+4},i.prototype.writeFloatLE=function(e,t,n){return P(this,e,t,!0,n)},i.prototype.writeFloatBE=function(e,t,n){return P(this,e,t,!1,n)},i.prototype.writeDoubleLE=function(e,t,n){return B(this,e,t,!0,n)},i.prototype.writeDoubleBE=function(e,t,n){return B(this,e,t,!1,n)},i.prototype.copy=function(e,t,n,r){if(n||(n=0),r||0===r||(r=this.length),t>=e.length&&(t=e.length),t||(t=0),r>0&&r<n&&(r=n),r===n)return 0;if(0===e.length||0===this.length)return 0;if(t<0)throw new RangeError("targetStart out of bounds");if(n<0||n>=this.length)throw new RangeError("sourceStart out of bounds");if(r<0)throw new RangeError("sourceEnd out of bounds");r>this.length&&(r=this.length),e.length-t<r-n&&(r=e.length-t+n);var a,s=r-n;if(this===e&&n<t&&t<r)for(a=s-1;a>=0;--a)e[a+t]=this[a+n];else if(s<1e3||!i.TYPED_ARRAY_SUPPORT)for(a=0;a<s;++a)e[a+t]=this[a+n];else Uint8Array.prototype.set.call(e,this.subarray(n,n+s),t);return s},i.prototype.fill=function(e,t,n,r){if("string"==typeof e){if("string"==typeof t?(r=t,t=0,n=this.length):"string"==typeof n&&(r=n,n=this.length),1===e.length){var a=e.charCodeAt(0);a<256&&(e=a)}if(void 0!==r&&"string"!=typeof r)throw new TypeError("encoding must be a string");if("string"==typeof r&&!i.isEncoding(r))throw new TypeError("Unknown encoding: "+r)}else"number"==typeof e&&(e&=255);if(t<0||this.length<t||this.length<n)throw new RangeError("Out of range index");if(n<=t)return this;var s;if(t>>>=0,n=void 0===n?this.length:n>>>0,e||(e=0),"number"==typeof e)for(s=t;s<n;++s)this[s]=e;else{var o=i.isBuffer(e)?e:G(new i(e,r).toString()),u=o.length;for(s=0;s<n-t;++s)this[s+t]=o[s%u]}return this};var te=/[^+\/0-9A-Za-z-_]/g}).call(this,n(103))},function(e,t,n){"use strict";function r(e){const t=Object(i.a)(e,"x","acos"),n={x:t};return a.a.runKernel(s.b,n)}n.d(t,"a",function(){return u});var a=n(5),s=n(3),i=n(2),o=n(4);const u=Object(o.b)({acos_:r})},function(e,t,n){"use strict";function r(e){const t=Object(i.a)(e,"x","acosh"),n={x:t};return a.a.runKernel(s.c,n)}n.d(t,"a",function(){return u});var a=n(5),s=n(3),i=n(2),o=n(4);const u=Object(o.b)({acosh_:r})},function(e,t,n){"use strict";function r(e){o.b(Array.isArray(e),()=>"The argument passed to tf.addN() must be a list of tensors"),o.b(e.length>=1,()=>"Must pass at least one tensor to tf.addN(), but got "+`${e.length}`);const t=e.map((e,t)=>Object(i.a)(e,`tensors${t}`,"addN")),n=t[0];t.forEach(e=>{if(e.dtype!==n.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")}),t.forEach(e=>{if(!o.a(e.shape,n.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")});const r=t;return a.a.runKernel(s.e,r)}n.d(t,"a",function(){return c});var a=n(5),s=n(3),i=n(2),o=n(8),u=n(4);const c=Object(u.b)({addN_:r})},function(e,t,n){"use strict";function r(e){const t=Object(i.a)(e,"x","asin"),n={x:t};return a.a.runKernel(s.j,n)}n.d(t,"a",function(){return u});var a=n(5),s=n(3),i=n(2),o=n(4);const u=Object(o.b)({asin_:r})},function(e,t,n){"use strict";function r(e){const t=Object(i.a)(e,"x","asinh"),n={x:t};return a.a.runKernel(s.k,n)}n.d(t,"a",function(){return u});var a=n(5),s=n(3),i=n(2),o=n(4);const u=Object(o.b)({asinh_:r})},function(e,t,n){"use strict";function r(e){const t=Object(i.a)(e,"x","atan"),n={x:t};return a.a.runKernel(s.l,n)}n.d(t,"a",function(){return u});var a=n(5),s=n(3),i=n(2),o=n(4);const u=Object(o.b)({atan_:r})},function(e,t,n){"use strict";function r(e){const t=Object(i.a)(e,"x","atanh"),n={x:t};return a.a.runKernel(s.n,n)}n.d(t,"a",function(){return u});var a=n(5),s=n(3),i=n(2),o=n(4);const u=Object(o.b)({atanh_:r})},function(e,t,n){"use strict";function r(e,t,n,r,c,d="NDHWC"){const h=Object(i.a)(e,"x","avgPool3d","float32");let p=h,f=!1;4===h.rank&&(f=!0,p=Object(l.a)(h,[1,h.shape[0],h.shape[1],h.shape[2],h.shape[3]])),o.b(5===p.rank,()=>`Error in avgPool3d: x must be rank 5 but got rank ${p.rank}.`),o.b("NDHWC"===d,()=>"Error in avgPool3d: Only NDHWC is currently supported, "+`but got dataFormat of ${d}`),null!=c&&o.b(o.v(r),()=>"Error in avgPool3d: pad must be an integer when using, "+`dimRoundingMode ${c} but got pad ${r}.`);const m={x:p},b={filterSize:t,strides:n,pad:r,dimRoundingMode:c,dataFormat:d};let g=a.a.runKernel(s.p,m,b);return g=Object(u.a)(g,p.dtype),f?Object(l.a)(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}n.d(t,"a",function(){return d});var a=n(5),s=n(3),i=n(2),o=n(8),u=n(12),c=n(4),l=n(7);const d=Object(c.b)({avgPool3d_:r})},function(e,t,n){"use strict";function r(e,t,n){const r=Object(i.a)(e,"x","bincount"),u=Object(i.a)(t,"weights","bincount");o.b("int32"===r.dtype,()=>"Error in bincount: input "+`dtype must be int32, but got ${r.dtype}`),o.b(n>=0,()=>`size must be non-negative, but got ${n}.`),o.b(u.size===r.size||0===u.size,()=>"Error in bincount: weights must have the same size as input or"+`0-length, but got input shape: ${r.shape}, weights shape: `+`${u.shape}.`);const c={x:r,weights:u},l={size:n};return a.a.runKernel(s.u,c,l)}n.d(t,"a",function(){return c});var a=n(5),s=n(3),i=n(2),o=n(8),u=n(4);const c=Object(u.b)({bincount_:r})},function(e,t,n){"use strict";function r(e){const t=Object(i.a)(e,"x","ceil"),n={x:t};return a.a.runKernel(s.x,n)}n.d(t,"a",function(){return u});var a=n(5),s=n(3),i=n(2),o=n(4);const u=Object(o.b)({ceil_:r})},function(e,t,n){"use strict";function r(e,t,n){const r=Object(i.a)(e,"x","clipByValue");o.b(t<=n,()=>`Error in clip: min (${t}) must be `+`less than or equal to max (${n}).`);const u={x:r},c={clipValueMin:t,clipValueMax:n};return a.a.runKernel(s.y,u,c)}n.d(t,"a",function(){return c});var a=n(5),s=n(3),i=n(2),o=n(8),u=n(4);const c=Object(u.b)({clipByValue_:r})},function(e,t,n){"use strict";function r(e,t,n,r,c="NDHWC",d=[1,1,1]){const h=Object(i.a)(e,"x","conv3d"),p=Object(i.a)(t,"filter","conv3d");let f=h,m=!1;4===h.rank&&(m=!0,f=Object(l.a)(h,[1,h.shape[0],h.shape[1],h.shape[2],h.shape[3]])),o.b(5===f.rank,()=>`Error in conv3d: input must be rank 5, but got rank ${f.rank}.`),o.b(5===p.rank,()=>"Error in conv3d: filter must be rank 5, but got rank "+`${p.rank}.`),o.b(f.shape[4]===p.shape[3],()=>`Error in conv3d: depth of input (${f.shape[4]}) must match `+`input depth for filter ${p.shape[3]}.`),o.b(Object(u.h)(n,d),()=>"Error in conv3D: Either strides or dilations must be 1. "+`Got strides ${n} and dilations '${d}'`),o.b("NDHWC"===c,()=>`Error in conv3d: got dataFormat of ${c} but only NDHWC is currently supported.`);const b={x:f,filter:p},g={strides:n,pad:r,dataFormat:c,dilations:d},y=a.a.runKernel(s.F,b,g);return m?Object(l.a)(y,[y.shape[1],y.shape[2],y.shape[3],y.shape[4]]):y}n.d(t,"a",function(){return d});var a=n(5),s=n(3),i=n(2),o=n(8),u=n(31),c=n(4),l=n(7);const d=Object(c.b)({conv3d_:r})},function(e,t,n){"use strict";function r(e,t,n,r=!1){const u=Object(i.a)(e,"x","denseBincount"),c=Object(i.a)(t,"weights","denseBincount");o.b("int32"===u.dtype,()=>"Error in denseBincount: input "+`dtype must be int32, but got ${u.dtype}`),o.b(u.rank<=2,()=>"Error in denseBincount: input must be at most rank 2, but got "+`rank ${u.rank}.`),o.b(n>=0,()=>`size must be non-negative, but got ${n}.`),o.b(c.size===u.size||0===c.size,()=>"Error in denseBincount: weights must have the same shape as x or "+`0-length, but got x shape: ${u.shape}, weights shape: `+`${c.shape}.`);const l={x:u,weights:c},d={size:n,binaryOutput:r};return a.a.runKernel(s.M,l,d)}n.d(t,"a",function(){return c});var a=n(5),s=n(3),i=n(2),o=n(8),u=n(4);const c=Object(u.b)({denseBincount_:r})},function(e,t,n){"use strict";function r(e,...t){const n=t.map((e,t)=>Object(i.a)(e,`tensors${t}`,"einsum")),r={equation:e};return a.a.runKernel(s.V,n,r)}n.d(t,"a",function(){return u});var a=n(5),s=n(3),i=n(2),o=n(4);const u=Object(o.b)({einsum_:r})},function(e,t,n){"use strict";function r(e){let t=Object(i.a)(e,"x","erf");o.b("int32"===t.dtype||"float32"===t.dtype,()=>"Input dtype must be `int32` or `float32`."),"int32"===t.dtype&&(t=Object(u.a)(t,"float32"));const n={x:t};return a.a.runKernel(s.Z,n)}n.d(t,"a",function(){return l});var a=n(5),s=n(3),i=n(2),o=n(8),u=n(12),c=n(4);const l=Object(c.b)({erf_:r})},function(e,t,n){"use strict";function r(e){const t=Object(i.a)(e,"x","expm1"),n={x:t};return a.a.runKernel(s.cb,n)}n.d(t,"a",function(){return u});var a=n(5),s=n(3),i=n(2),o=n(4);const u=Object(o.b)({expm1_:r})},function(e,t,n){"use strict";function r(e){const t=Object(i.a)(e,"x","isFinite"),n={x:t};return a.a.runKernel(s.tb,n)}n.d(t,"a",function(){return u});var a=n(5),s=n(3),i=n(2),o=n(4);const u=Object(o.b)({isFinite_:r})},function(e,t,n){"use strict";function r(e){const t=Object(i.a)(e,"x","isInf"),n={x:t};return a.a.runKernel(s.ub,n)}n.d(t,"a",function(){return u});var a=n(5),s=n(3),i=n(2),o=n(4);const u=Object(o.b)({isInf_:r})},function(e,t,n){"use strict";function r(e){const t=Object(i.a)(e,"x","isNaN"),n={x:t};return a.a.runKernel(s.vb,n)}n.d(t,"a",function(){return u});var a=n(5),s=n(3),i=n(2),o=n(4);const u=Object(o.b)({isNaN_:r})},function(e,t,n){"use strict";function r(e,t,n){if(n<=0)throw new Error("The number of values should be positive.");const r={start:e,stop:t,num:n};return a.a.runKernel(s.Bb,{},r)}n.d(t,"a",function(){return r});var a=n(5),s=n(3)},function(e,t,n){"use strict";function r(e){const t=Object(s.a)(e,"x","logSigmoid"),n=Object(a.a)(e=>{const t=Object(o.a)(Object(l.a)(Object(o.a)(e))),n=t=>{const n=Object(i.a)(t,Object(c.a)(Object(o.a)(e)));return n};return{value:t,gradFunc:n}});return n(t)}n.d(t,"a",function(){return d});var a=n(34),s=n(2),i=n(9),o=n(30),u=n(4),c=n(71),l=n(165);const d=Object(u.b)({logSigmoid_:r})},function(e,t,n){"use strict";function r(e,t=-1){const n=Object(s.a)(e,"logits","logSoftmax");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error("Log Softmax along a non-last dimension is not yet supported. "+`Logits was rank ${n.rank} and axis was ${t}`);const r=Object(a.a)((e,n)=>{const r=!0,a=Object(c.a)(e,t,!0),s=Object(h.a)(e,a),d=Object(h.a)(Object(i.a)(s,"float32"),Object(u.a)(Object(p.a)(Object(o.a)(s),t,r)));n([d]);const f=(e,n)=>{const[r]=n,a=!0,s=Object(o.a)(r);return Object(h.a)(e,Object(l.a)(Object(p.a)(e,t,a),s))};return{value:d,gradFunc:f}});return r(n)}n.d(t,"a",function(){return f});var a=n(34),s=n(2),i=n(12),o=n(41),u=n(75),c=n(72),l=n(9),d=n(4),h=n(14),p=n(19);const f=Object(d.b)({logSoftmax_:r})},function(e,t,n){"use strict";function r(e,t=[1,1,1],n,r,u,l="NDHWC"){const d=Object(i.a)(e,"x","maxPool3d");let h=d,p=!1;4===d.rank&&(p=!0,h=Object(c.a)(d,[1,d.shape[0],d.shape[1],d.shape[2],d.shape[3]])),o.b(5===h.rank,()=>`Error in maxPool3d: x must be rank 5 but got rank ${h.rank}.`),o.b("NDHWC"===l,()=>"Error in maxPool3d: Only NDHWC is currently supported, "+`but got dataFormat of ${l}`),null!=u&&o.b(o.v(r),()=>"Error in maxPool3d: pad must be an integer when using, "+`dimRoundingMode ${u} but got pad ${r}.`);const f={x:h},m={filterSize:t,strides:n,pad:r,dimRoundingMode:u,dataFormat:l},b=a.a.runKernel(s.Kb,f,m);return p?Object(c.a)(b,[b.shape[1],b.shape[2],b.shape[3],b.shape[4]]):b}n.d(t,"a",function(){return l});var a=n(5),s=n(3),i=n(2),o=n(8),u=n(4),c=n(7);const l=Object(u.b)({maxPool3d_:r})},function(e,t,n){"use strict";function r(e,t,n,r,o=!1){const u=Object(i.a)(e,"x","maxPoolWithArgmax"),c={x:u},l={filterSize:t,strides:n,pad:r,includeBatchInIndex:o},d=a.a.runKernel(s.Nb,c,l);return{result:d[0],indexes:d[1]}}n.d(t,"a",function(){return u});var a=n(5),s=n(3),i=n(2),o=n(4);const u=Object(o.b)({maxPoolWithArgmax_:r})},function(e,t,n){"use strict";function r(e,t,n,r=!1){const o=Object(i.a)(e,"logits","multinomial"),c=o.size,l=o.rank;if(c<2)throw new Error("Error in multinomial: you need at least 2 outcomes, but got "+`${c}.`);if(l>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${l}`);n=n||Math.random();const d=1===l?Object(u.a)(o,[1,-1]):o,h={logits:d},p={numSamples:t,seed:n,normalized:r},f=a.a.runKernel(s.Ub,h,p);return 1===l?Object(u.a)(f,[f.size]):f}n.d(t,"a",function(){return c});var a=n(5),s=n(3),i=n(2),o=n(4),u=n(7);const c=Object(o.b)({multinomial_:r})},function(e,t,n){"use strict";function r(e){const t=Object(i.a)(e,"x","onesLike"),n={x:t};return a.a.runKernel(s.cc,n)}n.d(t,"a",function(){return u});var a=n(5),s=n(3),i=n(2),o=n(4);const u=Object(o.b)({onesLike_:r})},function(e,t,n){"use strict";function r(e){const t=Object(i.a)(e,"x","reciprocal"),n={x:t};return a.a.runKernel(s.mc,n)}n.d(t,"a",function(){return u});var a=n(5),s=n(3),i=n(2),o=n(4);const u=Object(o.b)({reciprocal_:r})},function(e,t,n){"use strict";function r(e){const t=Object(i.a)(e,"x","round"),n={x:t};return a.a.runKernel(s.wc,n)}n.d(t,"a",function(){return u});var a=n(5),s=n(3),i=n(2),o=n(4);const u=Object(o.b)({round_:r})},function(e,t,n){"use strict";async function r(e,t){const n=Object(s.a)(e,"x","setdiff1d"),r=Object(s.a)(t,"y","setdiff1d");i.b(n.dtype===r.dtype,()=>`x and y should have the same dtype, but got x (${n.dtype}) and y (${r.dtype}).`),i.b(1===n.rank,()=>`x should be 1D tensor, but got x (${n.shape}).`),i.b(1===r.rank,()=>`y should be 1D tensor, but got y (${r.shape}).`);const o=await n.data(),u=await r.data(),c=new Set(u);let l=0;for(let e=0;e<o.length;e++)c.has(o[e])||l++;const d=new a.b([l],n.dtype),h=new a.b([l],"int32");for(let e=0,t=0;e<o.length;e++)c.has(o[e])||(d.values[t]=o[e],h.values[t]=e,t++);return[d.toTensor(),h.toTensor()]}n.d(t,"a",function(){return o});var a=n(6),s=n(2),i=n(8);const o=r},function(e,t,n){"use strict";function r(e){const t=Object(i.a)(e,"x","sign"),n={x:t};return a.a.runKernel(s.Cc,n)}n.d(t,"a",function(){return u});var a=n(5),s=n(3),i=n(2),o=n(4);const u=Object(o.b)({sign_:r})},function(e,t,n){"use strict";function r(e,t=-1){const n=Object(i.a)(e,"logits","softmax","float32");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error("Softmax along a non-last dimension is not yet supported. "+`Logits was rank ${n.rank} and dim was ${t}`);const r={logits:n},o={dim:t};return a.a.runKernel(s.Gc,r,o)}n.d(t,"a",function(){return u});var a=n(5),s=n(3),i=n(2),o=n(4);const u=Object(o.b)({softmax_:r})},function(e,t,n){"use strict";function r(e,t,n,r,o=0,u=0,c=0,l=0,d=0){const h=Object(i.a)(e,"x","stridedSlice"),p={x:h},f={begin:t,end:n,strides:r,beginMask:o,endMask:u,ellipsisMask:c,newAxisMask:l,shrinkAxisMask:d};return a.a.runKernel(s.Qc,p,f)}n.d(t,"a",function(){return u});var a=n(5),s=n(3),i=n(2),o=n(4);const u=Object(o.b)({stridedSlice_:r})},function(e,t,n){"use strict";function r(e){const t=Object(i.a)(e,"x","tan"),n={x:t};return a.a.runKernel(s.Tc,n)}n.d(t,"a",function(){return u});var a=n(5),s=n(3),i=n(2),o=n(4);const u=Object(o.b)({tan_:r})},function(e,t,n){"use strict";function r(e,t=0,n=1,r,s){if(null!=r&&"bool"===r)throw new Error("Unsupported data type $ { dtype }");const o=new i.a(t,n,r,!0,s),u=Object(a.a)(e,r);for(let e=0;e<u.values.length;e++)u.values[e]=o.nextValue();return u.toTensor()}n.d(t,"a",function(){return o});var a=n(47),s=n(4),i=n(102);const o=Object(s.b)({truncatedNormal_:r})},function(e,t,n){"use strict";function r(e,t,n){const r=Object(i.a)(e,"indices","scatterND","int32"),o=Object(i.a)(t,"updates","scatterND");u.validateInput(o,r,n);const c={indices:r,updates:o},l={shape:n};return a.a.runKernel(s.yc,c,l)}n.d(t,"a",function(){return c});var a=n(5),s=n(3),i=n(2),o=n(4),u=n(112);const c=Object(o.b)({scatterND_:r})},function(e,t,n){"use strict";function r(e,t){const n=Object(i.a)(t,"indices","gatherND","int32"),r=Object(i.a)(e,"x","gatherND"),o={params:r,indices:n};return a.a.runKernel(s.mb,o)}n.d(t,"a",function(){return u});var a=n(5),s=n(3),i=n(2),o=n(4);const u=Object(o.b)({gatherND_:r})},function(e,t,n){"use strict";(function(e){function r(){return new Promise(e=>a(()=>e()))}n.d(t,"a",function(){return r});const a=(()=>"undefined"!=typeof requestAnimationFrame?requestAnimationFrame:void 0!==e?e:e=>e())()}).call(this,n(289).setImmediate)},function(e,t,n){"use strict";function r(e,t,n,r){if("int32"!==e.dtype)throw new Error("tf.sparseToDense() expects the indices to be int32 type,"+` but the dtype was ${e.dtype}.`);if(e.rank>2)throw new Error("sparseIndices should be a scalar, vector, or matrix,"+` but got shape ${e.shape}.`);const a=e.rank>0?e.shape[0]:1,s=e.rank>1?e.shape[1]:1;if(n.length!==s)throw new Error("outputShape has incorrect number of elements:,"+` ${n.length}, should be: ${s}.`);const i=t.size;if(0!==t.rank&&(1!==t.rank||i!==a))throw new Error("sparseValues has incorrect shape "+`${t.shape}, should be [] or [${a}]`);if(t.dtype!==r.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}function a(e,t,n,a=0){const u=Object(o.a)(e,"sparseIndices","sparseToDense","int32"),c=Object(o.a)(t,"sparseValues","sparseToDense"),l=Object(o.a)(a,"defaultValue","sparseToDense",c.dtype);r(u,c,n,l);const d={sparseIndices:u,sparseValues:c,defaultValue:l},h={outputShape:n};return s.a.runKernel(i.Kc,d,h)}n.d(t,"a",function(){return c});var s=n(5),i=n(3),o=n(2),u=n(4);const c=Object(u.b)({sparseToDense_:a})},function(e,t,n){"use strict";n.r(t),n.d(t,"json",function(){return r});const r=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}]},function(e,t,n){"use strict";n.r(t),n.d(t,"json",function(){return r});const r=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,
name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Prod",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axes",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}]},function(e,t,n){"use strict";n.r(t),n.d(t,"json",function(){return r});const r=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]}]},function(e,t,n){"use strict";n.r(t),n.d(t,"json",function(){return r});const r=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number"}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}]},function(e,t,n){"use strict";n.r(t),n.d(t,"json",function(){return r});const r=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}]},function(e,t,n){"use strict";n.r(t),n.d(t,"json",function(){return r});const r=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}]},function(e,t,n){"use strict";n.r(t),n.d(t,"json",function(){return r});const r=[{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}]},function(e,t,n){"use strict";n.r(t),n.d(t,"json",function(){return r});const r=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}]},function(e,t,n){"use strict";n.r(t),n.d(t,"json",function(){return r});const r=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]}]},function(e,t,n){"use strict";n.r(t),n.d(t,"json",function(){return r});const r=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]}]},function(e,t,n){"use strict";n.r(t),n.d(t,"json",function(){return r});const r=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}]},function(e,t,n){"use strict";n.r(t),n.d(t,"json",function(){return r});const r=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]}]},function(e,t,n){"use strict";n.r(t),n.d(t,"json",function(){return r});const r=[{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"SparseToDense",category:"normalization",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!0,notSupported:!0}]}]},function(e,t,n){"use strict";n.r(t),n.d(t,"json",function(){return r})
;const r=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}]},function(e,t,n){"use strict";n.r(t),n.d(t,"json",function(){return r});const r=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]}]},function(e,t,n){"use strict";n.r(t),n.d(t,"json",function(){return r});const r=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}]},function(e,t,n){"use strict";n.r(t),n.d(t,"json",function(){return r});const r=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]}]},function(e,t,n){"use strict";(function(e){n.d(t,"a",function(){return i});var r=n(0),a=n(45),s=n(272);class i extends a.a{decodeUTF8(){return new o(this)}}class o extends s.a{constructor(e){super(),this.upstream=e,this.impl=new u(e)}summary(){return this.impl.summary()}async next(){return this.impl.next()}}class u extends a.b{constructor(e){if(super(),this.upstream=e,Object(r.env)().get("IS_BROWSER"))this.decoder=new TextDecoder("utf-8");else{const{StringDecoder:e}=n(291);this.decoder=new e("utf8")}}summary(){return`${this.upstream.summary()} -> Utf8`}async pump(){const t=await this.upstream.next();let n,a;return!t.done&&(n=t.value,a=Object(r.env)().get("IS_BROWSER")?this.decoder.decode(n,{stream:!0}):this.decoder.write(e.from(n.buffer)),this.outputQueue.push(a),!0)}}}).call(this,n(215).Buffer)},function(e,t,n){"use strict";n.d(t,"a",function(){return a});var r=n(45);class a extends r.a{split(e){return new s(this,e)}}class s extends a{constructor(e,t){super(),this.upstream=e,this.impl=new i(e,t)}summary(){return this.impl.summary()}async next(){return this.impl.next()}}class i extends r.b{constructor(e,t){super(),this.upstream=e,this.separator=t,this.carryover=""}summary(){return`${this.upstream.summary()} -> Split('${this.separator}')`}async pump(){const e=await this.upstream.next();if(e.done)return""!==this.carryover&&(this.outputQueue.push(this.carryover),this.carryover="",!0);const t=e.value.split(this.separator);t[0]=this.carryover+t[0];for(const e of t.slice(0,-1))this.outputQueue.push(e);return this.carryover=t[t.length-1],!0}}},function(e,t,n){"use strict";async function r({maxContinuousChecks:e=5,detectionConfidence:t=.9,maxFaces:n=10,iouThreshold:r=.3,scoreThreshold:i=.75}={}){const[o,u]=await Promise.all([a(n,r,i),s()]),c=new g(o,u,e,t,n);return c}async function a(e,t,n){return u.load({maxFaces:e,iouThreshold:t,scoreThreshold:n})}async function s(){return c.loadGraphModel(f,{fromTFHub:!0})}function i(e){return e instanceof l.Tensor?[e.shape[0],e.shape[1]]:[e.height,e.width]}function o(e,t){if(e.mesh instanceof l.Tensor){const[n,r,a,s]=l.tidy(()=>{const n=l.tensor1d([t-1,0,0]),r=l.tensor1d([1,-1,1]);return l.tidy(()=>[l.concat([l.sub(t-1,e.boundingBox.topLeft.slice(0,1)),e.boundingBox.topLeft.slice(1,1)]),l.concat([l.sub(t-1,e.boundingBox.bottomRight.slice(0,1)),e.boundingBox.bottomRight.slice(1,1)]),l.sub(n,e.mesh).mul(r),l.sub(n,e.scaledMesh).mul(r)])});return Object.assign({},e,{boundingBox:{topLeft:n,bottomRight:r},mesh:a,scaledMesh:s})}return Object.assign({},e,{boundingBox:{topLeft:[t-1-e.boundingBox.topLeft[0],e.boundingBox.topLeft[1]],bottomRight:[t-1-e.boundingBox.bottomRight[0],e.boundingBox.bottomRight[1]]},mesh:e.mesh.map(e=>{const n=e.slice(0);return n[0]=t-1-e[0],n}),scaledMesh:e.scaledMesh.map(e=>{const n=e.slice(0);return n[0]=t-1-e[0],n})})}Object.defineProperty(t,"__esModule",{value:!0});const u=n(295),c=n(208),l=n(0),d=n(296),h=n(297),p=n(299),f="https://tfhub.dev/mediapipe/tfjs-model/facemesh/1/default/1",m=192,b=192;t.load=r;class g{constructor(e,t,n,r,a){this.pipeline=new h.Pipeline(e,t,m,b,n,a),this.detectionConfidence=r}static getAnnotations(){return d.MESH_ANNOTATIONS}static getUVCoords(){return p.UV_COORDS}async estimateFaces(e,t=!1,n=!1){const[,r]=i(e),a=l.tidy(()=>(e instanceof l.Tensor||(e=l.browser.fromPixels(e)),e.toFloat().expandDims(0))),s=l.env().get("WEBGL_PACK_DEPTHWISECONV");l.env().set("WEBGL_PACK_DEPTHWISECONV",!0);const u=await this.pipeline.predict(a);return l.env().set("WEBGL_PACK_DEPTHWISECONV",s),a.dispose(),null!=u&&u.length>0?Promise.all(u.map(async(e,a)=>{const{coords:s,scaledCoords:i,box:u,flag:c}=e;let l=[c];t||(l=l.concat([s,i,u.startPoint,u.endPoint]));const h=await Promise.all(l.map(async e=>e.array())),p=h[0];if(c.dispose(),p<this.detectionConfidence&&this.pipeline.clearRegionOfInterest(a),t){const e={faceInViewConfidence:p,mesh:s,scaledMesh:i,boundingBox:{topLeft:u.startPoint.squeeze(),bottomRight:u.endPoint.squeeze()}};return n?o(e,r):e}const[f,m,b,g]=h.slice(1);i.dispose(),s.dispose();let y={faceInViewConfidence:p,boundingBox:{topLeft:b,bottomRight:g},mesh:f,scaledMesh:m};n&&(y=o(y,r));const x={};for(const e in d.MESH_ANNOTATIONS)x[e]=d.MESH_ANNOTATIONS[e].map(e=>y.scaledMesh[e]);return y.annotations=x,y})):[]}}t.FaceMesh=g},function(e,t,n){"use strict";(function(e,r){function a(e){throw new Error(`'${e}' not yet implemented or not found in the registry. `+"This kernel may not be supported by the tfjs backend you have chosen")}function s(e,t){if(!e)throw new Error("string"==typeof t?t:t())}function i(e,t,n=""){s(l(e,t),()=>n+` Shapes ${e} and ${t} must match`)}function o(e){s(null!=e,()=>"The input to the tensor constructor must be a non-null value.")}function u(e,t=[],n=!1){if(null==t&&(t=[]),Array.isArray(e)||y(e)&&!n)for(let r=0;r<e.length;++r)u(e[r],t,n);else t.push(e);return t}function c(e){if(0===e.length)return 1;let t=e[0];for(let n=1;n<e.length;n++)t*=e[n];return t}function l(e,t){if(e===t)return!0;if(null==e||null==t)return!1;if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}function d(e){return e%1==0}function h(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function p(e,t){const n=t.length;return e=null==e?t.map((e,t)=>t):[].concat(e),s(e.every(e=>e>=-n&&e<n),()=>`All values in axis param must be in range [-${n}, ${n}) but `+`got axis ${e}`),s(e.every(e=>d(e)),()=>"All values in axis param must be integers but "+`got axis ${e}`),e.map(e=>e<0?n+e:e)}function f(e,t){const n=[],r=[],a=null!=t&&Array.isArray(t)&&0===t.length,s=null==t||a?null:p(t,e).sort();let i=0;for(let t=0;t<e.length;++t){if(null!=s){if(s[i]===t&&1!==e[t])throw new Error(`Can't squeeze axis ${t} since its dim '${e[t]}' is not 1`);(null==s[i]||s[i]>t)&&1===e[t]&&(n.push(e[t]),r.push(t)),s[i]<=t&&i++}1!==e[t]&&(n.push(e[t]),r.push(t))}return{newShape:n,keptDims:r}}function m(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else if("bool"===e)n=new Uint8Array(t);else{if("string"!==e)throw new Error(`Unknown data type ${e}`);n=new Array(t)}return n}function b(e,t){for(let n=0;n<e.length;n++){const r=e[n];if(isNaN(r)||!isFinite(r))throw Error(`A tensor of type ${t} being uploaded contains ${r}.`)}}function g(e){return"bool"===e||"complex64"===e||"float32"===e||"int32"===e||"string"===e}function y(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array}function x(e){if("float32"===e||"int32"===e)return 4;if("complex64"===e)return 8;if("bool"===e)return 1;throw new Error(`Unknown dtype ${e}`)}function v(e){if(null==e)return 0;let t=0;return e.forEach(e=>t+=e.length),t}function w(e){return"string"==typeof e||e instanceof String}function k(e){return"boolean"==typeof e}function O(e){return"number"==typeof e}function I(e){return Array.isArray(e)?I(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array?"int32":O(e)?"float32":w(e)?"string":k(e)?"bool":"float32"}function N(e){return!!(e&&e.constructor&&e.call&&e.apply)}function j(e){const t=e.length;if(t<2)return[];const n=new Array(t-1);n[t-2]=e[t-1];for(let r=t-3;r>=0;--r)n[r]=n[r+1]*e[r+1];return n}function S(e,t,n,r=!1){const a=new Array;if(1===t.length){const s=t[0]*(r?2:1);for(let t=0;t<s;t++)a[t]=n[e+t]}else{const s=t[0],i=t.slice(1),o=i.reduce((e,t)=>e*t)*(r?2:1);for(let t=0;t<s;t++)a[t]=S(e+t*o,i,n,r)}return a}function T(e,t,n=!1){if(0===e.length)return t[0];const r=e.reduce((e,t)=>e*t)*(n?2:1);if(0===r)return[];if(r!==t.length)throw new Error(`[${e}] does not match the input size ${t.length}${n?" for a complex tensor":""}.`);return S(0,e,t,n)}function C(e,t){const n=E(e,t);for(let e=0;e<n.length;e++)n[e]=1;return n}function E(e,t){if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t)return new Uint8Array(e);throw new Error(`Unknown data type ${t}`)}function $(e){e.forEach(t=>{s(Number.isInteger(t)&&t>=0,()=>"Tensor must have a shape comprised of positive integers but got "+`shape [${e}].`)})}function A(e){return e&&e.then&&"function"==typeof e.then}function _(e){const t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(e,...n)=>(D(t,n[0],n[1]),n.join("="))),t}function D(e,t,n){e[decodeURIComponent(t)]=decodeURIComponent(n||"")}function F(e,t){if(t=t.toLowerCase(),"true"===t||"false"===t)return"true"===t;if(`${+t}`===t)return+t;throw new Error(`Could not parse value flag value ${t} for flag ${e}.`)}function R(){return Su}function M(e){Su=e}function z(){if(null==ju){let t;if("undefined"!=typeof window)t=window;else if(void 0!==e)t=e;else if(void 0!==r)t=r;else{if("undefined"==typeof self)throw new Error("Could not find a global object");t=self}ju=t}return ju}function L(){const e=z();return null==e._tfGlobals&&(e._tfGlobals=new Map),e._tfGlobals}function P(e,t){const n=L();if(n.has(e))return n.get(e);{const r=t();return n.set(e,r),n.get(e)}}function B(e,t){const n=G(e,t);return Tu.get(n)}function W(e){return Cu.get(e)}function V(e){const t=Tu.entries(),n=[];for(;;){const{done:r,value:a}=t.next();if(r)break;const[s,i]=a,[o]=s.split("_");o===e&&n.push(i)}return n}function U(e){const{kernelName:t}=e;Cu.has(t)&&R().getBool("DEBUG")&&console.warn(`Overriding the gradient for '${t}'`),Cu.set(t,e)}function G(e,t){return`${t}_${e}`}function H(e,t){return e instanceof Float32Array&&"float32"===t||e instanceof Int32Array&&"int32"===t||e instanceof Uint8Array&&"bool"===t}function q(e,t){if("string"===t)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=u(e)),R().getBool("DEBUG")&&b(e,t),H(e,t))return e;if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t){const t=new Uint8Array(e.length);for(let n=0;n<t.length;++n)0!==Math.round(e[n])&&(t[n]=1);return t}throw new Error(`Unknown data type ${t}`)}function K(){return R().platform.now()}function X(e,t="utf-8"){return t=t||"utf-8",R().platform.encode(e,t)}function Y(e,t="utf-8"){return t=t||"utf-8",R().platform.decode(e,t)}function Z(e,t,n){if("float32"!==t)return!1;for(let t=0;t<e.length;t++){const r=e[t];if(isNaN(r)||!isFinite(r))return console.warn(`Found ${r} in the result of '${n}'`),!0}return!1}function Q(e,t,n){const r={},a={};for(let e=0;e<t.length;e++)r[t[e].id]=!0;for(let n=0;n<e.length;n++){const s=e[n],i=s.inputs;for(const e in i){const n=i[e];let o=!1;for(let e=0;e<t.length;e++)if(r[n.id]){s.outputs.forEach(e=>r[e.id]=!0),o=!0,a[s.id]=!0;break}if(o)break}}const s={};s[n.id]=!0;const i={};for(let t=e.length-1;t>=0;t--){const n=e[t],r=n.inputs;for(let e=0;e<n.outputs.length;e++)if(s[n.outputs[e].id]){for(const e in r)s[r[e].id]=!0,i[n.id]=!0;break}}const o=[];for(let t=0;t<e.length;t++){const n=e[t];if(a[n.id]&&i[n.id]){const e={};for(const t in n.inputs){const a=n.inputs[t];r[a.id]&&(e[t]=a)}const t=Object.assign({},n);t.inputs=e,t.outputs=n.outputs,o.push(t)}}return o}function J(e,t,n,r){for(let a=t.length-1;a>=0;a--){const s=t[a],i=[];if(s.outputs.forEach(t=>{const n=e[t.id];null!=n?i.push(n):i.push(null)}),null==s.gradient)throw new Error("Cannot compute gradient: gradient function not found "+`for ${s.kernelName}.`);const o=s.gradient(i);for(const t in s.inputs){if(!(t in o))throw new Error(`Cannot backprop through input ${t}. `+`Available gradients found: ${Object.keys(o)}.`);const a=n(()=>o[t]());if("float32"!==a.dtype)throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input `+`${t} must have 'float32' dtype, but has '${a.dtype}'`);const i=s.inputs[t];if(!l(a.shape,i.shape))throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input `+`'${t}' has shape '${a.shape}', which does not match `+`the shape of the input '${i.shape}'`);if(null==e[i.id])e[i.id]=a;else{const t=e[i.id];e[i.id]=r(t,a),t.dispose()}}}}function ee(e,t,n,r){const a=j(t),s=te(e,t,n,a),i=t.length,o=ae(e,t,n,a,s),u=["Tensor"];return r&&(u.push(`  dtype: ${n}`),u.push(`  rank: ${i}`),u.push(`  shape: [${t}]`),u.push("  values:")),u.push(o.map(e=>"    "+e).join("\n")),u.join("\n")}function te(e,t,n,r){const a=c(t),s=r[r.length-1],i=new Array(s).fill(0),o=t.length,u="complex64"===n?se(e):e;if(o>1)for(let e=0;e<a/s;e++){const t=e*s;for(let e=0;e<s;e++)i[e]=Math.max(i[e],ne(u[t+e],0,n).length)}return i}function ne(e,t,n){let r;return r=Array.isArray(e)?`${parseFloat(e[0].toFixed(Du))} + `+`${parseFloat(e[1].toFixed(Du))}j`:w(e)?`'${e}'`:"bool"===n?re(e):parseFloat(e.toFixed(Du)).toString(),h(r,t)}function re(e){return 0===e?"false":"true"}function ae(e,t,n,r,a,s=!0){const i="complex64"===n?2:1,o=t[0],u=t.length;if(0===u){if("complex64"===n){const t=se(e);return[ne(t[0],0,n)]}return"bool"===n?[re(e[0])]:[e[0].toString()]}if(1===u){if(o>Au){const t=_u*i;let r=Array.from(e.slice(0,t)),s=Array.from(e.slice((o-_u)*i,o*i));return"complex64"===n&&(r=se(r),s=se(s)),["["+r.map((e,t)=>ne(e,a[t],n)).join(", ")+", ..., "+s.map((e,t)=>ne(e,a[o-_u+t],n)).join(", ")+"]"]}const t="complex64"===n?se(e):Array.from(e);return["["+t.map((e,t)=>ne(e,a[t],n)).join(", ")+"]"]}const c=t.slice(1),l=r.slice(1),d=r[0]*i,h=[];if(o>Au){for(let t=0;t<_u;t++){const r=t*d,s=r+d;h.push(...ae(e.slice(r,s),c,n,l,a,!1))}h.push("...");for(let t=o-_u;t<o;t++){const r=t*d,s=r+d;h.push(...ae(e.slice(r,s),c,n,l,a,t===o-1))}}else for(let t=0;t<o;t++){const r=t*d,s=r+d;h.push(...ae(e.slice(r,s),c,n,l,a,t===o-1))}const p=2===u?",":"";h[0]="["+h[0]+p;for(let e=1;e<h.length-1;e++)h[e]=" "+h[e]+p;let f=",\n";for(let e=2;e<u;e++)f+="\n";return h[h.length-1]=" "+h[h.length-1]+"]"+(s?"":f),h}function se(e){const t=[];for(let n=0;n<e.length;n+=2)t.push([e[n],e[n+1]]);return t}function ie(e){Ru=e}function oe(e){zu=e}function ue(){return P("Tensor",()=>Lu)}function ce(e,t){if("string"===e||"string"===t){if("string"===e&&"string"===t)return"string";throw new Error(`Can not upcast ${e} with ${t}`)}return Hu[e][t]}function le(e,t){if(e.dtype===t.dtype)return[e,t];const n=ce(e.dtype,t.dtype);return[e.cast(n),t.cast(n)]}function de(e,t){s(e.dtype===t.dtype,()=>`The dtypes of the first(${e.dtype}) and`+` second(${t.dtype}) input must match`)}function he(e){const t=[],n=new Set;return pe(e,t,n),t}function pe(e,t,n){if(null==e)return;if(e instanceof Lu)return void t.push(e);if(!fe(e))return;const r=e;for(const e in r){const a=r[e];n.has(a)||(n.add(a),pe(a,t,n))}}function fe(e){return Array.isArray(e)||"object"==typeof e}function me(e){return null!=e.kernelName}function be(e){const t=C(c(e),"float32");return Xu.makeTensor(t,e,"float32")}function ge(){const e=z();if(null==e._tfengine){const t=new Nu(e);e._tfengine=new Ku(t)}return M(e._tfengine.ENV),ie(()=>e._tfengine),e._tfengine}function ye(e,t){const n={a:e,b:t};return Xu.runKernel(Ts,n)}function xe(e,t){let n=e;if(y(e))return"string"===t?[]:[e.length];if(!Array.isArray(e))return[];const r=[];for(;Array.isArray(n)||y(n)&&"string"!==t;)r.push(n.length),n=n[0];return Array.isArray(e)&&R().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&ve(e,r,[]),r}function ve(e,t,n){if(n=n||[],!Array.isArray(e)&&!y(e))return void s(0===t.length,()=>`Element arr[${n.join("][")}] is a primitive, `+`but should be an array/TypedArray of ${t[0]} elements`);s(t.length>0,()=>`Element arr[${n.join("][")}] should be a primitive, `+`but is an array of ${e.length} elements`),s(e.length===t[0],()=>`Element arr[${n.join("][")}] should have ${t[0]} `+`elements, but has ${e.length} elements`);const r=t.slice(1);for(let t=0;t<e.length;++t)ve(e[t],r,n.concat(t))}function we(e,t,n,r){if("string_or_numeric"!==e){if(null==e)throw new Error("Expected dtype cannot be null.");if("numeric"!==e&&e!==t||"numeric"===e&&"string"===t)throw new Error(`Argument '${n}' passed to '${r}' must `+`be ${e} tensor, but got ${t} tensor`)}}function ke(e,t,n,r="numeric"){if(e instanceof Lu)return we(r,e.dtype,t,n),e;let a=I(e);if("string"!==a&&["bool","int32","float32"].indexOf(r)>=0&&(a=r),we(r,a,t,n),null==e||!y(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e){const r=null==e?"null":e.constructor.name;throw new Error(`Argument '${t}' passed to '${n}' must be a `+`Tensor or TensorLike, but got '${r}'`)}const s=xe(e,a);y(e)||Array.isArray(e)||(e=[e]);const i=!0,o="string"!==a?q(e,a):u(e,[],i);return Xu.makeTensor(o,s,a)}function Oe(e,t,n,r="numeric"){if(!Array.isArray(e))throw new Error(`Argument ${t} passed to ${n} must be a `+"`Tensor[]` or `TensorLike[]`");const a=e;return a.map((e,a)=>ke(e,`${t}[${a}]`,n,r))}function Ie(e){const t=Object.keys(e);if(1!==t.length)throw new Error("Please provide an object with a single key (operation name) mapping to a function. Got an object with "+`${t.length} keys.`);let n=t[0];const r=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+=Yu;const a=(...e)=>{Xu.startScope(n);try{const t=r(...e);return A(t)&&console.error("Cannot return a Promise inside of tidy."),Xu.endScope(t),t}catch(e){throw Xu.endScope(null),e}};return Object.defineProperty(a,"name",{value:n,configurable:!0}),a}function Ne(e,t){const n=ke(e,"x","cast");if(!g(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if("string"===t&&"string"!==n.dtype||"string"!==t&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");const r={x:n},a={dtype:t};return Xu.runKernel(qs,r,a)}function je(e,t){let n=ke(e,"a","mul"),r=ke(t,"b","mul");[n,r]=le(n,r);const a={a:n,b:r};return Xu.runKernel(fo,a)}function Se(e,t=0){const n=ke(e,"x","step"),r={x:n},a={alpha:t};return Xu.runKernel(bu,r,a)}function Te(e,t){let n=ke(e,"a","floorDiv"),r=ke(t,"b","floorDiv");[n,r]=le(n,r);const a={a:n,b:r};return Xu.runKernel($i,a)}function Ce(e,t){let n=ke(e,"a","div"),r=ke(t,"b","div");if([n,r]=le(n,r),"int32"===n.dtype&&"int32"===r.dtype)return tc(n,r);const a={a:n,b:r},s={};return Xu.runKernel(yi,a,s)}function Ee(e){const t=ke(e,"x","neg"),n={x:t};return Xu.runKernel(mo,n)}function $e(e,t,n,r){if(null==r&&(r=I(e)),"complex64"===r)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!y(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=t){$(t);const e=c(t),r=c(n);s(e===r,()=>`Based on the provided shape, [${t}], the tensor should have `+`${e} values but has ${r}`);for(let e=0;e<n.length;++e){const r=n[e],a=e!==n.length-1||r!==c(t.slice(e));s(n[e]===t[e]||!a,()=>"Error creating a new Tensor. Inferred shape "+`(${n}) does not match the provided `+`shape (${t}). `)}}return y(e)||Array.isArray(e)||(e=[e]),t=t||n,e="string"!==r?q(e,r):u(e,[],!0),Xu.makeTensor(e,t,r)}function Ae(e,t){if((y(e)&&"string"!==t||Array.isArray(e))&&"complex64"!==t)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===t&&y(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");const n=[],r=[];return $e(e,n,r,t)}function _e(e){const t=ke(e,"x","sqrt"),n={x:t};return Xu.runKernel(Xo,n)}function De(e){const t=ke(e,"x","square"),n={};return Xu.runKernel("Square",{x:t},n)}function Fe(e,t){let n=ke(e,"a","sub"),r=ke(t,"b","sub");[n,r]=le(n,r);const a={a:n,b:r};return Xu.runKernel(su,a)}function Re(e,t){const n=[];for(let r=0;r<t.length;r++){const a=e[e.length-r-1],s=t.length-r-1,i=t[s];(null==a||1===a&&i>1)&&n.unshift(s)}return n}function Me(e,t){const n=[],r=Math.max(e.length,t.length);for(let a=0;a<r;a++){let r=e[e.length-a-1];null==r&&(r=1);let s=t[t.length-a-1];if(null==s&&(s=1),1===r)n.unshift(s);else if(1===s)n.unshift(r);else{if(r!==s){const n="Operands could not be broadcast together with shapes "+`${e} and ${t}.`;throw Error(n)}n.unshift(r)}}return n}function ze(e,t){const n=ke(e,"x","reshape","string_or_numeric"),r={x:n},a={shape:t};return Xu.runKernel($o,r,a)}function Le(e,t=null,n=!1){let r=ke(e,"x","sum");"bool"===r.dtype&&(r=Zu(r,"int32"));const a={x:r},s={axis:t,keepDims:n};return Xu.runKernel(Yo,a,s)}function Pe(e){const t=ke(e,"x","zerosLike"),n={x:t};return Xu.runKernel(mu,n)}function Be(e,t){let n=ke(e,"a","add"),r=ke(t,"b","add");[n,r]=le(n,r);const a={a:n,b:r};return Xu.runKernel(Ts,a)}function We(e,t,n,r,a,i){const o=ke(e,"dy","avgPool3dGrad"),u=ke(t,"input","avgPool3dGrad");let c=o,l=u,h=!1;4===u.rank&&(h=!0,c=cc(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),l=cc(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]])),s(5===c.rank,()=>"Error in avgPool3dGrad: dy must be rank 5 but got rank "+`${c.rank}.`),s(5===l.rank,()=>"Error in avgPool3dGrad: input must be rank 5 but got rank "+`${l.rank}.`),null!=i&&s(d(a),()=>"Error in avgPool3dGrad: pad must be an integer when "+`using, dimRoundingMode ${i} but got pad ${a}.`);const p={dy:c,input:l},f={filterSize:n,strides:r,pad:a,dimRoundingMode:i},m=Xu.runKernel(Ws,p,f);return h?cc(m,[m.shape[1],m.shape[2],m.shape[3],m.shape[4]]):m}function Ve(e,t,n,r,a){const i=ke(e,"dy","avgPoolGrad"),o=ke(t,"input","avgPoolGrad");s(o.rank===i.rank,()=>`Rank of input (${o.rank}) does not match rank of dy (${i.rank})`);let u=o,c=i,l=!1;3===o.rank&&(l=!0,u=cc(o,[1,o.shape[0],o.shape[1],o.shape[2]]),c=cc(i,[1,i.shape[0],i.shape[1],i.shape[2]])),s(4===c.rank,()=>"Error in avgPoolGrad: dy must be rank 4 but got rank "+`${c.rank}.`),s(4===u.rank,()=>"Error in avgPoolGrad: input must be rank 4 but got rank "+`${u.rank}.`);const d={dy:c,input:u},h={filterSize:n,strides:r,pad:a},p=Xu.runKernel(Ps,d,h);return l?cc(p,[p.shape[1],p.shape[2],p.shape[3]]):p}function Ue(e,t,n=!1,r=!1){let a=ke(e,"a","matMul"),s=ke(t,"b","matMul");[a,s]=le(a,s);const i={a:a,b:s},o={transposeA:n,transposeB:r};return Xu.runKernel(Vs,i,o)}function Ge(e,t,n){const r=ke(e,"x","spaceToBatchND");s(r.rank>=1+t.length,()=>`input rank ${r.rank} should be > than [blockShape] ${t.length}`),s(n.length===t.length,()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${t.length}`),s(r.shape.reduce((e,r,a)=>a>0&&a<=t.length?e&&(r+n[a-1][0]+n[a-1][1])%t[a-1]==0:e,!0),()=>`input spatial dimensions ${r.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${t.toString()}`);const a={x:r},i={blockShape:t,paddings:n};return Xu.runKernel(Zo,a,i)}function He(e,t){let n=ke(e,"a","greaterEqual"),r=ke(t,"b","greaterEqual");[n,r]=le(n,r),Me(n.shape,r.shape);const a={a:n,b:r};return Xu.runKernel(Ri,a)}function qe(e,t){let n=ke(e,"a","lessEqual"),r=ke(t,"b","lessEqual");[n,r]=le(n,r),Me(n.shape,r.shape);const a={a:n,b:r};return Xu.runKernel(Gi,a)}function Ke(e,t){const n=ke(e,"a","logicalAnd","bool"),r=ke(t,"b","logicalAnd","bool");Me(n.shape,r.shape);const a={a:n,b:r};return Xu.runKernel(Ki,a)}function Xe(e){const t=ke(e,"x","clone","string_or_numeric"),n={x:t};return Xu.runKernel(Mi,n)}function Ye(e,t){let n=ke(e,"broadcastTo","x");const r=n.shape;if(t.some(e=>!(e>0)||e%1!=0))throw new Error(`broadcastTo(): Invalid broadcast shape [${t}].`);if(t.length<n.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${n.rank}.`);if(t.length>n.rank){const e=n.shape.slice();for(;e.length<t.length;)e.unshift(1);n=cc(n,e)}const a=n.shape,s=Array.from(t);for(let e=t.length-1;e>=0;e--)if(a[e]===t[e])s[e]=1;else if(1!==n.shape[e])throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${t}].`);const i=s.map((e,t)=>e>1?t:-1).filter(e=>e>=0);if(0===i.length)return Rc(n);const o={x:n},u={reps:s};return Xu.runKernel(uu,o,u)}function Ze(e,t,n){const r=ke(t,"a","where"),a=ke(n,"b","where"),s=ke(e,"condition","where","bool"),i=Me(Me(s.shape,r.shape),a.shape),o=Mc(s,i),u=Mc(r,i),c=Mc(a,i),l={condition:o,t:u,e:c};return Xu.runKernel(Bo,l)}function Qe(e,t,n=0){const r=ke(e,"x","split"),a={x:r},s={numOrSizeSplits:t,axis:n};return Xu.runKernel(Qo,a,s)}function Je(e,t,n,r,a,i="NHWC",o){let u=e;3===e.rank&&(u=cc(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let c=t
;3===c.rank&&(c=cc(t,[1,t.shape[0],t.shape[1],t.shape[2]])),s(4===u.rank,()=>"Error in conv2dDerFilter: input must be rank 4, but got shape "+`${u.shape}.`),s(4===c.rank,()=>"Error in conv2dDerFilter: dy must be rank 4, but got shape "+`${c.shape}.`),s(4===n.length,()=>"Error in conv2dDerFilter: filterShape must be length 4, but got "+`${n}.`);const l="NHWC"===i?u.shape[3]:u.shape[1],h="NHWC"===i?c.shape[3]:c.shape[1];s(l===n[2],()=>`Error in conv2dDerFilter: depth of input ${l}) must `+`match input depth in filter (${n[2]}.`),s(h===n[3],()=>`Error in conv2dDerFilter: depth of dy (${h}) must `+`match output depth for filter (${n[3]}).`),null!=o&&s(d(a),()=>"Error in conv2dDerFilter: pad must be an integer when using, "+`dimRoundingMode ${o} but got pad ${a}.`);const p={x:u,dy:c},f={strides:r,pad:a,dataFormat:i,dimRoundingMode:o,filterShape:n};return Xu.runKernel(ei,p,f)}function et(e,t,n,r,a,i="NHWC",o){s(e.length===t.rank,()=>"Length of inShape "+`(${e.length}) and rank of dy (${t.rank}) must match`);let u=e,c=t,l=!1;3===t.rank&&(l=!0,c=cc(t,[1,t.shape[0],t.shape[1],t.shape[2]]),u=[1,e[0],e[1],e[2]]),s(4===u.length,()=>"Error in conv2dDerInput: inShape must be length 4, but got length "+`${u.length}.`),s(4===c.rank,()=>"Error in conv2dDerInput: dy must be rank 4, but got "+`rank ${c.rank}`),s(4===n.rank,()=>"Error in conv2dDerInput: filter must be rank 4, but got "+`rank ${n.rank}`);const h="NHWC"===i?u[3]:u[1],p="NHWC"===i?c.shape[3]:c.shape[1];s(h===n.shape[2],()=>`Error in conv2dDerInput: depth of input (${h}) must `+`match input depth for filter ${n.shape[2]}.`),s(p===n.shape[3],()=>`Error in conv2dDerInput: depth of output (${p}) must `+`match output depth for filter ${n.shape[3]}.`),null!=o&&s(d(a),()=>"Error in conv2dDerInput: pad must be an integer when using, "+`dimRoundingMode ${o} but got pad ${a}.`);const f={dy:c,filter:n},m={strides:r,pad:a,dataFormat:i,dimRoundingMode:o,inputShape:u},b=Xu.runKernel(ti,f,m);return l?cc(b,[b.shape[1],b.shape[2],b.shape[3]]):b}function tt(e,t,n,r,a,s,i="channelsLast"){const[o,u]=st(t);let c;if("channelsLast"===i)c=[o,u,e[3],e[3]];else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);c=[o,u,e[1],e[1]]}return nt(e,c,n,r,a,s,!1,i)}function nt(e,t,n,r,a,s,i=!1,o="channelsLast"){let[u,c,l,d]=[-1,-1,-1,-1];if("channelsLast"===o)[u,c,l,d]=e;else{if("channelsFirst"!==o)throw new Error(`Unknown dataFormat ${o}`);[u,d,c,l]=e}const[h,p,,f]=t,[m,b]=st(n),[g,y]=st(r),x=it(h,g),v=it(p,y),{padInfo:w,outHeight:k,outWidth:O}=ot(a,c,l,m,b,x,v,s,o),I=i?f*d:f;let N;return"channelsFirst"===o?N=[u,I,k,O]:"channelsLast"===o&&(N=[u,k,O,I]),{batchSize:u,dataFormat:o,inHeight:c,inWidth:l,inChannels:d,outHeight:k,outWidth:O,outChannels:I,padInfo:w,strideHeight:m,strideWidth:b,filterHeight:h,filterWidth:p,effectiveFilterHeight:x,effectiveFilterWidth:v,dilationHeight:g,dilationWidth:y,inShape:e,outShape:N,filterShape:t}}function rt(e,t,n,r,a){null==r&&(r=at(e,t,n));const s=e[0],i=e[1],o=ut((s-t+2*r)/n+1,a),u=ut((i-t+2*r)/n+1,a);return[o,u]}function at(e,t,n,r=1){const a=it(t,r);return Math.floor((e[0]*(n-1)-n+a)/2)}function st(e){return"number"==typeof e?[e,e,e]:2===e.length?[e[0],e[1],1]:e}function it(e,t){return t<=1?e:e+(e-1)*(t-1)}function ot(e,t,n,r,a,s,i,o,u){let c,l,d;if("number"==typeof e){const a=0===e?"VALID":"NUMBER";c={top:e,bottom:e,left:e,right:e,type:a};const i=rt([t,n],s,r,e,o);l=i[0],d=i[1]}else if("same"===e){l=Math.ceil(t/r),d=Math.ceil(n/a);const e=Math.max(0,(l-1)*r+s-t),o=Math.max(0,(d-1)*a+i-n),u=Math.floor(e/2),h=e-u,p=Math.floor(o/2),f=o-p;c={top:u,bottom:h,left:p,right:f,type:"SAME"}}else if("valid"===e)c={top:0,bottom:0,left:0,right:0,type:"VALID"},l=Math.ceil((t-s+1)/r),d=Math.ceil((n-i+1)/a);else{if("object"!=typeof e)throw Error(`Unknown padding parameter: ${e}`);{const h="channelsLast"===u?e[1][0]:e[2][0],p="channelsLast"===u?e[1][1]:e[2][1],f="channelsLast"===u?e[2][0]:e[3][0],m="channelsLast"===u?e[2][1]:e[3][1],b=0===h&&0===p&&0===f&&0===m?"VALID":"EXPLICIT";c={top:h,bottom:p,left:f,right:m,type:b},l=ut((t-s+h+p)/r+1,o),d=ut((n-i+f+m)/a+1,o)}}return{padInfo:c,outHeight:l,outWidth:d}}function ut(e,t){if(!t)return Math.trunc(e);switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error(`Unknown roundingMode ${t}`)}}function ct(e){const[t,n,r]=st(e);return 1===t&&1===n&&1===r}function lt(e,t){return ct(e)||ct(t)}function dt(e,t,n,r,a="NHWC",i=[1,1],o){const u=ke(e,"x","conv2d"),c=ke(t,"filter","conv2d");let l=u,h=!1;3===u.rank&&(h=!0,l=cc(u,[1,u.shape[0],u.shape[1],u.shape[2]])),s(4===l.rank,()=>`Error in conv2d: input must be rank 4, but got rank ${l.rank}.`),s(4===c.rank,()=>"Error in conv2d: filter must be rank 4, but got rank "+`${c.rank}.`),null!=o&&s(d(r),()=>"Error in conv2d: pad must be an integer when using, "+`dimRoundingMode ${o} but got pad ${r}.`);const p="NHWC"===a?l.shape[3]:l.shape[1];s(p===c.shape[2],()=>`Error in conv2d: depth of input (${p}) must match `+`input depth for filter ${c.shape[2]}.`),s(lt(n,i),()=>"Error in conv2D: Either strides or dilations must be 1. "+`Got strides ${n} and dilations '${i}'`);const f={x:l,filter:c},m={strides:n,pad:r,dataFormat:a,dilations:i,dimRoundingMode:o},b=Xu.runKernel(Js,f,m);return h?cc(b,[b.shape[1],b.shape[2],b.shape[3]]):b}function ht(e,t,n,r,a){let i=e;4===e.rank&&(i=cc(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]));let o=t;4===o.rank&&(o=cc(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),s(5===i.rank,()=>"Error in conv3dDerFilter: input must be rank 5, but got shape "+`${i.shape}.`),s(5===o.rank,()=>"Error in conv3dDerFilter: dy must be rank 5, but got shape "+`${o.shape}.`),s(5===n.length,()=>"Error in conv3dDerFilter: filterShape must be length 5, but got "+`${n}.`),s(i.shape[4]===n[3],()=>`Error in conv3dDerFilter: depth of input ${i.shape[4]}) must `+`match input depth in filter (${n[3]}.`),s(o.shape[4]===n[4],()=>`Error in conv3dDerFilter: depth of dy (${o.shape[4]}) must `+`match output depth for filter (${n[4]}).`);const u={x:i,dy:o},c={strides:r,pad:a,filterShape:n};return Xu.runKernel(ri,u,c)}function pt(e,t,n,r,a){s(e.length===t.rank,()=>"Length of inShape "+`(${e.length}) and rank of dy (${t.rank}) must match`);let i=e,o=t,u=!1;4===t.rank&&(u=!0,o=cc(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),i=[1,e[0],e[1],e[2],e[3]]);const c=i[4],l=o.shape[4];s(5===i.length,()=>"Error in conv3dDerInput: inShape must be length 5, but got length "+`${i.length}.`),s(5===o.rank,()=>"Error in conv3dDerInput: dy must be rank 5, but got "+`rank ${o.rank}`),s(5===n.rank,()=>"Error in conv3dDerInput: filter must be rank 5, but got "+`rank ${n.rank}`),s(c===n.shape[3],()=>`Error in conv3dDerInput: depth of input (${c}) must `+`match input depth for filter ${n.shape[3]}.`),s(l===n.shape[4],()=>`Error in conv3dDerInput: depth of output (${l}) must `+`match output depth for filter ${n.shape[4]}.`);const d={dy:o,filter:n},h={pad:a,strides:r,inputShape:i},p=Xu.runKernel(ai,d,h);return u?cc(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}function ft(e){const t=ke(e,"x","sin"),n={x:t};return Xu.runKernel(Uo,n)}function mt(e){const t=ke(e,"x","sinh"),n={x:t};return Xu.runKernel(Go,n)}function bt(e,t){for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0}function gt(e,t,n){const r=e.length+t.length,a=[];let s=0,i=0;for(let o=0;o<r;o++)-1===n.indexOf(o)?a.push(e[s++]):a.push(t[i++]);return a}function yt(e,t){const n=[],r=e.length;for(let a=0;a<r;a++)-1===t.indexOf(a)&&n.push(e[a]);const a=t.map(t=>e[t]);return[n,a]}function xt(e,t){const n=t.map(e=>1);return gt(e,n,t)}function vt(e,t){if(bt(e,t))return null;const n=[];for(let r=0;r<t;++r)-1===e.indexOf(r)&&n.push(r);return e.forEach(e=>n.push(e)),n}function wt(e){return e.map((e,t)=>[t,e]).sort((e,t)=>e[1]-t[1]).map(e=>e[0])}function kt(e,t=0,n=!1,r=!1){const a=ke(e,"x","cumsum"),s={x:a},i={axis:t,exclusive:n,reverse:r};return Xu.runKernel(oi,s,i)}function Ot(e,t){const n=ke(e,"x","transpose");if(null==t&&(t=n.shape.map((e,t)=>t).reverse()),s(n.rank===t.length,()=>`Error in transpose: rank of input ${n.rank} `+`must match length of perm ${t}.`),t.forEach(e=>{s(e>=0&&e<n.rank,()=>`All entries in 'perm' must be between 0 and ${n.rank-1}`+` but got ${t}`)}),n.rank<=1)return n.clone();const r={x:n},a={perm:t};return Xu.runKernel(du,r,a)}function It(e,t,n,r,a,s=[1,1],i){let o=e;3===e.rank&&(o=cc(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let u=t;3===u.rank&&(u=cc(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const c={x:o,dy:u},l={strides:r,pad:a,dimRoundingMode:i,dilations:s,filterShape:n};return Xu.runKernel(hi,c,l)}function Nt(e,t,n,r,a,s=[1,1],i){let o=t,u=!1;3===t.rank&&(u=!0,o=cc(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const c={dy:o,filter:n},l={strides:r,pad:a,dimRoundingMode:i,dilations:s,inputShape:e},d=Xu.runKernel(pi,c,l);return u?cc(d,[d.shape[1],d.shape[2],d.shape[3]]):d}function jt(e){const t=ke(e,"x","exp"),n={x:t};return Xu.runKernel(Ii,n)}function St(e){const t=ke(e,"x","rsqrt"),n={x:t};return Xu.runKernel(Lo,n)}function Tt(e,t){const n=ke(e,"x","tile","string_or_numeric");s(n.rank===t.length,()=>`Error in transpose: rank of input ${n.rank} `+`must match length of reps ${t}.`);const r={x:n},a={reps:t};return Xu.runKernel(uu,r,a)}function Ct(e,t,n){const r=ke(e,"x","unsortedSegmentSum"),a=ke(t,"segmentIds","unsortedSegmentSum","int32");s(d(n),()=>"numSegments must be of dtype int");const i={x:r,segmentIds:a},o={numSegments:n};return Xu.runKernel(fu,i,o)}function Et(e,t){const n=[];for(let r=e;r<t;++r)n.push(r);return n}function $t(e){const t=[];for(let n=0;n<e.length;++n)for(let r=0;r<e[n].length;++r)t.push(e[n][r]);return t}function At(e,t){let n=ke(e,"a","greater"),r=ke(t,"b","greater");[n,r]=le(n,r),Me(n.shape,r.shape);const a={a:n,b:r};return Xu.runKernel(Fi,a)}function _t(e,t,n,r=5,a=1,s=1,i=.5){const o={x:e,y:t,dy:n},u={depthRadius:r,bias:a,alpha:s,beta:i};return Xu.runKernel(Ji,o,u)}function Dt(e,t){let n=ke(e,"a","equal"),r=ke(t,"b","equal");[n,r]=le(n,r),Me(n.shape,r.shape);const a={a:n,b:r};return Xu.runKernel(Oi,a)}function Ft(e,t,n,r){return t.rank<n.rank&&(t=cc(t,xt(t.shape,r))),e.rank<n.rank&&(e=cc(e,xt(e.shape,r))),{x:()=>{const r=Qu(e,Zu(_l(n,t),e.dtype));return r}}}function Rt(e,t){let n=ke(e,"a","less"),r=ke(t,"b","less");[n,r]=le(n,r),Me(n.shape,r.shape);const a={a:n,b:r};return Xu.runKernel(Ui,a)}function Mt(e,t,n,r,a,i,o){const u=ke(e,"dy","maxPool3dGrad"),c=ke(t,"input","maxPool3dGrad"),l=ke(n,"output","maxPool3dGrad");let h=u,p=c,f=l,m=!1;4===c.rank&&(m=!0,h=cc(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]]),p=cc(c,[1,c.shape[0],c.shape[1],c.shape[2],c.shape[3]]),f=cc(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]])),s(5===h.rank,()=>"Error in maxPool3dGrad: dy must be rank 5 but got rank "+`${h.rank}.`),s(5===p.rank,()=>"Error in maxPool3dGrad: input must be rank 5 but got rank "+`${p.rank}.`),s(5===f.rank,()=>"Error in maxPool3dGrad: output must be rank 5 but got rank "+`${f.rank}.`),null!=o&&s(d(i),()=>"Error in maxPool3dGrad: pad must be an integer when "+`using, dimRoundingMode ${o} but got pad ${i}.`);const b={dy:h,input:p,output:f},g={filterSize:r,strides:a,pad:i,dimRoundingMode:o},y=Xu.runKernel(so,b,g);return m?cc(y,[y.shape[1],y.shape[2],y.shape[3],y.shape[4]]):y}function zt(e,t,n,r,a,i,o){const u=ke(e,"dy","maxPoolGrad"),c=ke(t,"input","maxPoolGrad"),l=ke(n,"output","maxPoolGrad");s(c.rank===u.rank,()=>`Rank of input (${c.rank}) does not match rank of dy `+`(${u.rank})`),s(4===u.rank,()=>"Error in maxPoolGrad: dy must be rank 4 but got rank "+`${u.rank}.`),s(4===c.rank,()=>"Error in maxPoolGrad: input must be rank 4 but got rank "+`${c.rank}.`),null!=o&&s(d(i),()=>"Error in maxPoolGrad: pad must be an integer when using, "+`dimRoundingMode ${o} but got pad ${i}.`);const h={dy:u,input:c,output:l},p={filterSize:r,strides:a,pad:i,dimRoundingMode:o};return Xu.runKernel(ro,h,p)}function Lt(e,t){const n=ke(e,"real","complex"),r=ke(t,"imag","complex");i(n.shape,r.shape,`real and imag shapes, ${n.shape} and ${r.shape}, `+"must match in call to tf.complex().");const a={real:n,imag:r};return Xu.runKernel(Ys,a)}function Pt(e,t="float32"){if("complex64"===t){const t=Pt(e,"float32"),n=Pt(e,"float32");return Bl(t,n)}const n=E(c(e),t);return Xu.makeTensor(n,e,t)}function Bt(e,t="float32"){if("complex64"===t){const t=Bt(e,"float32"),n=Pt(e,"float32");return Bl(t,n)}const n=C(c(e),t);return Xu.makeTensor(n,e,t)}function Wt(e,t,n){const r=ke(e,"x","slice","string_or_numeric");if(0===r.rank)throw new Error("Slicing scalar is not possible");const a={x:r},s={begin:t,size:n};return Xu.runKernel(Vo,a,s)}function Vt(e){const t=ke(e,"x","floor"),n={x:t};return Xu.runKernel(Ei,n)}function Ut(e,t=0){const n=ke(e,"x","unstack","string_or_numeric");s(t>=-n.shape.length&&t<n.shape.length,()=>`Axis = ${t} is not in [-${n.shape.length}, ${n.shape.length})`);const r={value:n},a={axis:t};return Xu.runKernel(pu,r,a)}function Gt(e){const t=ke(e,"x","log"),n={x:t};return Xu.runKernel(Hi,n)}function Ht(e,t){let n=ke(e,"base","pow"),r=ke(t,"exp","pow");[n,r]=le(n,r);const a={a:n,b:r};return Xu.runKernel(Io,a)}function qt(e,t){const n=ke(e,"x","reverse"),r={x:n},a={dims:t};return Xu.runKernel(Mo,r,a)}function Kt(e){const t=ke(e,"x","logicalNot","bool"),n={x:t};return Xu.runKernel(Xi,n)}function Xt(e){const t=ke(e,"x","cos"),n={x:t};return Xu.runKernel(si,n)}function Yt(e){const t=ke(e,"x","cosh"),n={x:t};return Xu.runKernel(ii,n)}function Zt(e,t,n=0){const r=ke(e,"x","pad");if(0===r.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const a={paddings:t,constantValue:n},s={x:r};return Xu.runKernel(Oo,s,a)}function Qt(e,t,n){let r;const a=e.shape.length;let i;return r="number"==typeof t?[t,...new Array(a-1).fill(0)]:t.length<a?t.concat(new Array(a-t.length).fill(0)):t.slice(),r.forEach(e=>{s(-1!==e,()=>"slice() does not support negative begin indexing.")}),i=null==n?new Array(a).fill(-1):"number"==typeof n?[n,...new Array(a-1).fill(-1)]:n.length<a?n.concat(new Array(a-n.length).fill(-1)):n,i=i.map((t,n)=>t>=0?t:(s(-1===t,()=>"Negative size values should be exactly -1 but got "+`${t} for the slice() size at index ${n}.`),e.shape[n]-r[n])),[r,i]}function Jt(e){const t=ke(e,"x","sigmoid"),n={x:t};return Xu.runKernel(qo,n)}function en(e,t,n){const r=ke(e,"x","batchToSpaceND"),a=t.reduce((e,t)=>e*t);s(r.rank>=1+t.length,()=>`input rank is ${r.rank} but should be > than blockShape.length ${t.length}`),s(n.length===t.length,()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${t.length}`),s(r.shape[0]%a==0,()=>`input tensor batch is ${r.shape[0]} but is not divisible by the product of `+`the elements of blockShape ${t.join(" * ")} === ${a}`);const i={x:r},o={blockShape:t,crops:n};return Xu.runKernel(Us,i,o)}function tn(e,t=0){s(e.length>=1,()=>"Pass at least one tensor to concat");const n=Oe(e,"tensors","concat","string_or_numeric");if("complex64"===n[0].dtype&&n.forEach(e=>{if("complex64"!==e.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${e.dtype}. `)}),1===n.length)return Rc(n[0]);const r=n,a={axis:t};return Xu.runKernel(Qs,r,a)}function nn(e,t=0){const n=Oe(e,"tensors","stack","string_or_numeric");s(n.length>=1,()=>"Pass at least one tensor to tf.stack"),n.length>0&&s(t<=n[0].rank,()=>"Axis must be <= rank of the tensor");const r=n,a={axis:t};return Xu.runKernel(ko,r,a)}function rn(e,t=0){const n=ke(e,"x","expandDims","string_or_numeric");s(t<=n.rank,()=>"Axis must be <= rank of the tensor");const r={input:n},a={dim:t};return Xu.runKernel(Ni,r,a)}function an(e,t,n=0,r=0){const a=ke(e,"x","gather"),s=ke(t,"indices","gather","int32"),i={x:a,indices:s},o={axis:n,batchDims:r};return Xu.runKernel(_i,i,o)}function sn(e,t){let n=ke(e,"a","maximum"),r=ke(t,"b","maximum");[n,r]=le(n,r),"bool"===n.dtype&&(n=Zu(n,"int32"),r=Zu(r,"int32")),Me(n.shape,r.shape);const a={a:n,b:r};return Xu.runKernel(to,a)}function on(e,t){const n=Zd(t,pc(t)),r=Yd(e,n);let a=_c(t,Ae(0,"int32"));const s=r.rank-a.rank;for(let e=0;e<s;++e)a=Xd(a,e+1);a=Fc(a,Bt(r.shape,"bool"));const i=pc(r);return zc(a,r,i)}function un(e){const t=ke(e,"x","abs");if("complex64"===t.dtype){const e={x:t};return Xu.runKernel(Zs,e)}{const e={x:t};return Xu.runKernel(Ns,e)}}function cn(e){const t=ke(e,"x","acos"),n={x:t};return Xu.runKernel(js,n)}function ln(e){const t=ke(e,"x","acosh"),n={x:t};return Xu.runKernel(Ss,n)}function dn(e){s(Array.isArray(e),()=>"The argument passed to tf.addN() must be a list of tensors"),s(e.length>=1,()=>"Must pass at least one tensor to tf.addN(), but got "+`${e.length}`);const t=e.map((e,t)=>ke(e,`tensors${t}`,"addN")),n=t[0];t.forEach(e=>{if(e.dtype!==n.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")}),t.forEach(e=>{if(!l(e.shape,n.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")});const r=t;return Xu.runKernel(Cs,r)}function hn(e,t=null,n=!1){const r=ke(e,"x","all","bool"),a={x:r},s={axis:t,keepDims:n};return Xu.runKernel(Es,a,s)}function pn(e,t=null,n=!1){const r=ke(e,"x","any","bool"),a={x:r},s={axis:t,keepDims:n};return Xu.runKernel($s,a,s)}function fn(e,t=0){const n=ke(e,"x","argMax"),r={x:n},a={axis:t};return Xu.runKernel(As,r,a)}function mn(e,t=0){const n=ke(e,"x","argMin"),r={x:n},a={axis:t};return Xu.runKernel(_s,r,a)}function bn(e){const t=ke(e,"x","asin"),n={x:t};return Xu.runKernel(Ds,n)}function gn(e){const t=ke(e,"x","asinh"),n={x:t};return Xu.runKernel(Fs,n)}function yn(e){const t=ke(e,"x","atan"),n={x:t};return Xu.runKernel(Rs,n)}function xn(e,t){let n=ke(e,"a","atan2"),r=ke(t,"b","atan2");[n,r]=le(n,r);const a={a:n,b:r};return Xu.runKernel(zs,a)}function vn(e){const t=ke(e,"x","atanh"),n={x:t};return Xu.runKernel(Ms,n)}function wn(e,t,n,r,a){const i=ke(e,"x","avgPool","float32"),o=1;s(lt(n,o),()=>"Error in avgPool: Either strides or dilations must be 1. "+`Got strides ${n} and dilations '${o}'`);let u=i,c=!1;3===i.rank&&(c=!0,u=cc(i,[1,i.shape[0],i.shape[1],i.shape[2]])),s(4===u.rank,()=>`Error in avgPool: x must be rank 4 but got rank ${u.rank}.`),null!=a&&s(d(r),()=>"Error in avgPool: pad must be an integer when using, "+`dimRoundingMode ${a} but got pad ${r}.`);const l={x:u},h={filterSize:t,strides:n,pad:r,dimRoundingMode:a};let p=Xu.runKernel(Ls,l,h);return p=Zu(p,i.dtype),c?cc(p,[p.shape[1],p.shape[2],p.shape[3]]):p}function kn(e,t,n,r,a,i="NDHWC"){const o=ke(e,"x","avgPool3d","float32");let u=o,c=!1;4===o.rank&&(c=!0,u=cc(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),s(5===u.rank,()=>`Error in avgPool3d: x must be rank 5 but got rank ${u.rank}.`),s("NDHWC"===i,()=>"Error in avgPool3d: Only NDHWC is currently supported, "+`but got dataFormat of ${i}`),null!=a&&s(d(r),()=>"Error in avgPool3d: pad must be an integer when using, "+`dimRoundingMode ${a} but got pad ${r}.`);const l={x:u},h={filterSize:t,strides:n,pad:r,dimRoundingMode:a,dataFormat:i};let p=Xu.runKernel(Bs,l,h);return p=Zu(p,u.dtype),c?cc(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}function On(e){const t=ke(e,"x","tanh"),n={x:t};return Xu.runKernel(ou,n)}function In(e,t,n,r,a,s){const i=ke(e,"forgetBias","basicLSTMCell"),o=ke(t,"lstmKernel","basicLSTMCell"),u=ke(n,"lstmBias","basicLSTMCell"),c=ke(r,"data","basicLSTMCell"),l=ke(a,"c","basicLSTMCell"),d=ke(s,"h","basicLSTMCell"),h=Fd([c,d],1),p=jc(h,o),f=gc(p,u),m=f.shape[0],b=f.shape[1]/4,g=[m,b],y=Gl(f,[0,0],g),x=Gl(f,[0,b],g),v=Gl(f,[0,2*b],g),w=Gl(f,[0,3*b],g),k=gc(Qu($d(y),fh(x)),Qu(l,$d(gc(i,v)))),O=Qu(fh(k),$d(w));return[k,O]}function Nn(e){let t;return t=0===e.rank||1===e.rank?cc(e,[1,1,1,e.size]):2===e.rank?cc(e,[1,1,e.shape[0],e.shape[1]]):3===e.rank?cc(e,[1,e.shape[0],e.shape[1],e.shape[2]]):e,t}function jn(e,t,n,r,a,i){null==i&&(i=.001);const o=ke(e,"x","batchNorm"),u=ke(t,"mean","batchNorm"),c=ke(n,"variance","batchNorm");let l,d;null!=a&&(l=ke(a,"scale","batchNorm")),null!=r&&(d=ke(r,"offset","batchNorm")),s(u.rank===c.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),s(null==d||u.rank===d.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),s(null==l||u.rank===l.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");const h=Nn(o),p={x:h,scale:l,offset:d,mean:u,variance:c},f={varianceEpsilon:i},m=Xu.runKernel(Ai,p,f);return cc(m,o.shape)}function Sn(e,t,n,r,a,i){const o=ke(e,"x","batchNorm"),u=ke(t,"mean","batchNorm"),c=ke(n,"variance","batchNorm");let l,d;return null!=a&&(l=ke(a,"scale","batchNorm")),null!=r&&(d=ke(r,"offset","batchNorm")),s(2===o.rank,()=>"Error in batchNorm2D: x must be rank 2 but got rank "+`${o.rank}.`),s(2===u.rank||1===u.rank,()=>"Error in batchNorm2D: mean must be rank 2 or rank 1 but "+`got rank ${u.rank}.`),s(2===c.rank||1===c.rank,()=>"Error in batchNorm2D: variance must be rank 2 or rank 1 "+`but got rank ${c.rank}.`),null!=l&&s(2===l.rank||1===l.rank,()=>"Error in batchNorm2D: scale must be rank 2 or rank 1 "+`but got rank ${l.rank}.`),null!=d&&s(2===d.rank||1===d.rank,()=>"Error in batchNorm2D: offset must be rank 2 or rank 1 "+`but got rank ${d.rank}.`),mh(o,u,c,d,l,i)}function Tn(e,t,n,r,a,i){const o=ke(e,"x","batchNorm"),u=ke(t,"mean","batchNorm"),c=ke(n,"variance","batchNorm");let l,d;return null!=a&&(l=ke(a,"scale","batchNorm")),null!=r&&(d=ke(r,"offset","batchNorm")),s(3===o.rank,()=>"Error in batchNorm3D: x must be rank 3 but got rank "+`${o.rank}.`),s(3===u.rank||1===u.rank,()=>"Error in batchNorm3D: mean must be rank 3 or rank 1 but "+`got rank ${u.rank}.`),s(3===c.rank||1===c.rank,()=>"Error in batchNorm3D: variance must be rank 3 or rank 1 "+`but got rank ${c.rank}.`),null!=l&&s(3===l.rank||1===l.rank,()=>"Error in batchNorm3D: scale must be rank 3 or rank 1 "+`but got rank ${l.rank}.`),null!=d&&s(3===d.rank||1===d.rank,()=>"Error in batchNorm3D: offset must be rank 3 or rank 1 "+`but got rank ${d.rank}.`),mh(o,u,c,d,l,i)}function Cn(e,t,n,r,a,i){const o=ke(e,"x","batchNorm"),u=ke(t,"mean","batchNorm"),c=ke(n,"variance","batchNorm");let l,d;return null!=a&&(l=ke(a,"scale","batchNorm")),null!=r&&(d=ke(r,"offset","batchNorm")),s(4===o.rank,()=>"Error in batchNorm4D: x must be rank 4 but got rank "+`${o.rank}.`),s(4===u.rank||1===u.rank,()=>"Error in batchNorm4D: mean must be rank 4 or rank 1 but "+`got rank ${u.rank}.`),s(4===c.rank||1===c.rank,()=>"Error in batchNorm4D: variance must be rank 4 or rank 1 "+`but got rank ${c.rank}.`),null!=l&&s(4===l.rank||1===l.rank,()=>"Error in batchNorm4D: scale must be rank 4 or rank 1 "+`but got rank ${l.rank}.`),null!=d&&s(4===d.rank||1===d.rank,()=>"Error in batchNorm4D: offset must be rank 4 or rank 1 "+`but got rank ${d.rank}.`),mh(o,u,c,d,l,i)}function En(e,t,n){const r=ke(e,"x","bincount"),a=ke(t,"weights","bincount");s("int32"===r.dtype,()=>"Error in bincount: input "+`dtype must be int32, but got ${r.dtype}`),s(n>=0,()=>`size must be non-negative, but got ${n}.`),s(a.size===r.size||0===a.size,()=>"Error in bincount: weights must have the same size as input or"+`0-length, but got input shape: ${r.shape}, weights shape: `+`${a.shape}.`);const i={x:r,weights:a},o={size:n};return Xu.runKernel(Gs,i,o)}function $n(e,t="float32",n){return t=t||"float32",$(e),new Fu(e,t,n)}function An(e){const t=ke(e,"x","ceil"),n={x:t};return Xu.runKernel(Ks,n)}function _n(e,t,n){const r=ke(e,"x","clipByValue");s(t<=n,()=>`Error in clip: min (${t}) must be `+`less than or equal to max (${n}).`);const a={x:r},i={clipValueMin:t,clipValueMax:n};return Xu.runKernel(Xs,a,i)}function Dn(e){return Fd(e,0)}function Fn(e,t){return Fd(e,t)}function Rn(e,t){return Fd(e,t)}function Mn(e,t){return Fd(e,t)}function zn(e,t,n,r,a="NWC",i=1,o){const u=ke(e,"x","conv1d"),c=ke(t,"filter","conv1d");let l=u,h=!1;2===u.rank&&(h=!0,l=cc(u,[1,u.shape[0],u.shape[1]])),s(3===l.rank,()=>`Error in conv1d: input must be rank 3, but got rank ${l.rank}.`),s(3===c.rank,()=>"Error in conv1d: filter must be rank 3, but got rank "+`${c.rank}.`),null!=o&&s(d(r),()=>"Error in conv1d: pad must be an integer when using, "+`dimRoundingMode ${o} but got pad ${r}.`),s(l.shape[2]===c.shape[1],()=>`Error in conv1d: depth of input (${l.shape[2]}) must match `+`input depth for filter ${c.shape[1]}.`),s(lt(n,i),()=>"Error in conv1D: Either stride or dilation must be 1. "+`Got stride ${n} and dilation '${i}'`),s("NWC"===a,()=>`Error in conv1d: got dataFormat of ${a} but only NWC is currently supported.`);const p=cc(c,[1,c.shape[0],c.shape[1],c.shape[2]]),f=cc(l,[l.shape[0],1,l.shape[1],l.shape[2]]),m=[1,n],b=[1,i],g="NHWC",y=Hc(f,p,m,r,g,b,o);return cc(y,h?[y.shape[2],y.shape[3]]:[y.shape[0],y.shape[2],y.shape[3]])}function Ln(e,t,n,r,a,s){const i=ke(e,"x","conv2dTranspose"),o=ke(t,"filter","conv2dTranspose");return Uc(n,i,o,r,a,"NHWC",s)}function Pn(e,t,n,r,a="NDHWC",i=[1,1,1]){const o=ke(e,"x","conv3d"),u=ke(t,"filter","conv3d");let c=o,l=!1;4===o.rank&&(l=!0,c=cc(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),s(5===c.rank,()=>`Error in conv3d: input must be rank 5, but got rank ${c.rank}.`),s(5===u.rank,()=>"Error in conv3d: filter must be rank 5, but got rank "+`${u.rank}.`),s(c.shape[4]===u.shape[3],()=>`Error in conv3d: depth of input (${c.shape[4]}) must match `+`input depth for filter ${u.shape[3]}.`),s(lt(n,i),()=>"Error in conv3D: Either strides or dilations must be 1. "+`Got strides ${n} and dilations '${i}'`),s("NDHWC"===a,()=>`Error in conv3d: got dataFormat of ${a} but only NDHWC is currently supported.`);const d={x:c,filter:u},h={strides:n,pad:r,dataFormat:a,dilations:i},p=Xu.runKernel(ni,d,h);return l?cc(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}function Bn(e,t,n,r,a){const s=ke(e,"x","conv3dTranspose"),i=ke(t,"filter","conv3dTranspose");return Xc(n,s,i,r,a)}function Wn(e,t,n,r=!1){const a=ke(e,"x","denseBincount"),i=ke(t,"weights","denseBincount");s("int32"===a.dtype,()=>"Error in denseBincount: input "+`dtype must be int32, but got ${a.dtype}`),s(a.rank<=2,()=>"Error in denseBincount: input must be at most rank 2, but got "+`rank ${a.rank}.`),s(n>=0,()=>`size must be non-negative, but got ${n}.`),s(i.size===a.size||0===i.size,()=>"Error in denseBincount: weights must have the same shape as x or "+`0-length, but got x shape: ${a.shape}, weights shape: `+`${i.shape}.`);const o={x:a,weights:i},u={size:n,binaryOutput:r};return Xu.runKernel(ci,o,u)}function Vn(e,t,n="NHWC"){const r=ke(e,"x","depthToSpace"),a="NHWC"===n?r.shape[1]:r.shape[2],i="NHWC"===n?r.shape[2]:r.shape[3],o="NHWC"===n?r.shape[3]:r.shape[1];s(a*t>=0,()=>`Negative dimension size caused by overflow when multiplying\n    ${a} and ${t}  for depthToSpace with input shape\n    ${r.shape}`),s(i*t>=0,()=>`Negative dimension size caused by overflow when multiplying\n    ${i} and ${t} for depthToSpace with input shape\n        ${r.shape}`),s(o%(t*t)==0,()=>`Dimension size must be evenly divisible by ${t*t} but is ${o} for depthToSpace with input shape ${r.shape}`);const u={x:r},c={blockSize:t,dataFormat:n};return Xu.runKernel(li,u,c)}function Un(e,t,n,r,a="NHWC",i=[1,1],o){const u=ke(e,"x","depthwiseConv2d"),c=ke(t,"filter","depthwiseConv2d");let l=u,h=!1;3===u.rank&&(h=!0,l=cc(u,[1,u.shape[0],u.shape[1],u.shape[2]])),s(4===l.rank,()=>"Error in depthwiseConv2d: input must be rank 4, but got "+`rank ${l.rank}.`),s(4===c.rank,()=>"Error in depthwiseConv2d: filter must be rank 4, but got rank "+`${c.rank}.`),s(l.shape[3]===c.shape[2],()=>"Error in depthwiseConv2d: number of input channels "+`(${l.shape[3]}) must match the inChannels dimension in `+`filter ${c.shape[2]}.`),null!=o&&s(d(r),()=>"Error in depthwiseConv2d: pad must be an integer when using, "+`dimRoundingMode ${o} but got pad ${r}.`);const p={x:l,filter:c},f={strides:n,pad:r,dataFormat:a,dilations:i,dimRoundingMode:o},m=Xu.runKernel(di,p,f);return h?cc(m,[m.shape[1],m.shape[2],m.shape[3]]):m}function Gn(e){const t=ke(e,"x","diag"),n={x:t};return Xu.runKernel(fi,n)}function Hn(e,t,n,r,a=[1,1],i="NHWC"){const o=ke(e,"x","dilation2d"),u=ke(t,"filter","dilation2d");s(3===o.rank||4===o.rank,()=>"Error in dilation2d: input must be rank 3 or 4, but got rank "+`${o.rank}.`),s(3===u.rank,()=>"Error in dilation2d: filter must be rank 3, but got rank "+`${u.rank}.`),s("NHWC"===i,()=>"Error in dilation2d: Only NHWC is currently supported, "+`but got dataFormat of ${i}`);let c=o,l=!1;3===o.rank&&(c=cc(o,[1,o.shape[0],o.shape[1],o.shape[2]]),l=!0);const d={x:c,filter:u},h={strides:n,pad:r,dilations:a},p=Xu.runKernel(mi,d,h);return l?cc(p,[p.shape[1],p.shape[2],p.shape[3]]):p}function qn(e,t){let n=ke(e,"a","div"),r=ke(t,"b","div");[n,r]=le(n,r);const a=nc(n,r),s=pc(a),i=_l(r,s);return zc(i,s,a)}function Kn(e,t){const n=ke(e,"t1","dot"),r=ke(t,"t2","dot");s(!(1!==n.rank&&2!==n.rank||1!==r.rank&&2!==r.rank),()=>"Error in dot: inputs must all be rank 1 or 2, but got ranks "+`${n.rank} and ${r.rank}.`);const a=1===n.rank?n.size:n.shape[1],i=1===r.rank?r.size:r.shape[0];if(s(a===i,()=>"Error in dot: inner dimensions of inputs must match, but got "+`${a} and ${i}.`),1===n.rank&&1===r.rank){const e=cc(n,[1,-1]),t=cc(r,[-1,1]),a=jc(e,t);return cc(a,[])}if(1===n.rank&&2===r.rank){const e=cc(n,[1,-1]),t=cc(r,[r.shape[0],r.shape[1]]),a=jc(e,t);return cc(a,[a.size])}if(2===n.rank&&1===r.rank){const e=cc(r,[-1,1]),t=jc(n,e);return cc(t,[t.size])}{const e=cc(r,[r.shape[0],r.shape[1]]),t=jc(n,e);return t}}function Xn(e,...t){const n=t.map((e,t)=>ke(e,`tensors${t}`,"einsum")),r={equation:e};return Xu.runKernel(xi,n,r)}function Yn(e){const t=ke(e,"x","elu"),n={x:t};return Xu.runKernel(vi,n)}function Zn(e){let t=ke(e,"x","erf");s("int32"===t.dtype||"float32"===t.dtype,()=>"Input dtype must be `int32` or `float32`."),"int32"===t.dtype&&(t=Zu(t,"float32"));const n={x:t};return Xu.runKernel(ki,n)}function Qn(e){const t=ke(e,"x","expm1"),n={x:t};return Xu.runKernel(ji,n)}function Jn(e,t,n,r="float32"){null==t&&(t=e);const a=$n([e,t],r),s=e<=t?e:t;for(let e=0;e<s;++e)a.set(1,e,e);const i=cc(a.toTensor(),[e,t]);if(null==n)return i;if(1===n.length)return gl(Xd(i,0),[n[0],1,1]);if(2===n.length)return gl(Xd(Xd(i,0),0),[n[0],n[1],1,1]);if(3===n.length)return gl(Xd(Xd(Xd(i,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error("eye() currently supports only 1D and 2D "+`batchShapes, but received ${n.length}D.`)}function er(e,t,n){const r={shape:e,value:t,dtype:n};return Xu.runKernel(Ti,{},r)}function tr(e){const t=ke(e,"input","imag"),n={input:t};return Xu.runKernel(Li,n)}function nr(e){const t=ke(e,"x","isFinite"),n={x:t};return Xu.runKernel(Pi,n)}function rr(e){const t=ke(e,"x","isInf"),n={x:t};return Xu.runKernel(Bi,n)}function ar(e){const t=ke(e,"x","isNaN"),n={x:t};return Xu.runKernel(Wi,n)}function sr(e,t=.2){const n=ke(e,"x","leakyRelu"),r={x:n},a={alpha:t};return Xu.runKernel(Vi,r,a)}function ir(e,t=5,n=1,r=1,a=.5){const i=ke(e,"x","localResponseNormalization");s(4===i.rank||3===i.rank,()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ${i.rank}.`),s(d(t),()=>"Error in localResponseNormalization: depthRadius must be an "+`integer but got depthRadius ${t}.`);let o=i,u=!1;3===i.rank&&(u=!0,o=cc(i,[1,i.shape[0],i.shape[1],i.shape[2]]));const c={x:o},l={depthRadius:t,bias:n,alpha:r,beta:a},h=Xu.runKernel(Qi,c,l);return u?cc(h,[h.shape[1],h.shape[2],h.shape[3]]):h}function or(e){const t=ke(e,"x","log1p"),n={x:t};return Xu.runKernel(qi,n)}function ur(e){return Xu.customGrad(e)}function cr(e){const t=ke(e,"x","softplus"),n={x:t};return Xu.runKernel(Ko,n)}function lr(e){const t=ke(e,"x","logSigmoid"),n=ur(e=>{const t=rc(Rh(rc(e))),n=t=>{const n=Qu(t,$d(rc(e)));return n};return{value:t,gradFunc:n}});return n(t)}function dr(e,t=null,n=!1){const r=ke(e,"x","max"),a={x:r},s={reductionIndices:t,keepDims:n};return Xu.runKernel(eo,a,s)}function hr(e,t=-1){const n=ke(e,"logits","logSoftmax");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error("Log Softmax along a non-last dimension is not yet supported. "+`Logits was rank ${n.rank} and axis was ${t}`);const r=ur((e,n)=>{
const r=!0,a=zh(e,t,!0),s=ic(e,a),i=ic(Zu(s,"float32"),nd(lc(cl(s),t,r)));n([i]);const o=(e,n)=>{const[r]=n,a=!0,s=cl(r);return ic(e,Qu(lc(e,t,a),s))};return{value:i,gradFunc:o}});return r(n)}function pr(e,t=null,n=!1){const r=ke(e,"x","logSumExp"),a=p(t,r.shape),s=zh(r,a,!0),i=ic(r,s),o=cl(i),u=lc(o,a),c=nd(u),l=gc(cc(s,c.shape),c);if(n){const e=xt(l.shape,a);return cc(l,e)}return l}function fr(e,t){const n=ke(e,"a","logicalOr","bool"),r=ke(t,"b","logicalOr","bool");Me(n.shape,r.shape);const a={a:n,b:r};return Xu.runKernel(Yi,a)}function mr(e,t){const n=ke(e,"a","logicalXor","bool"),r=ke(t,"b","logicalXor","bool");return Me(n.shape,r.shape),Fc(Bh(e,t),gd(Fc(e,t)))}function br(e,t,n,r,a){const i=ke(e,"x","maxPool"),o=1;let u=i,c=!1;3===i.rank&&(c=!0,u=cc(i,[1,i.shape[0],i.shape[1],i.shape[2]])),s(4===u.rank,()=>`Error in maxPool: input must be rank 4 but got rank ${u.rank}.`),s(lt(n,o),()=>"Error in maxPool: Either strides or dilations must be 1. "+`Got strides ${n} and dilations '${o}'`),null!=a&&s(d(r),()=>"Error in maxPool: pad must be an integer when using, "+`dimRoundingMode ${a} but got pad ${r}.`);const l={x:u},h={filterSize:t,strides:n,pad:r,dimRoundingMode:a},p=Xu.runKernel(no,l,h);return c?cc(p,[p.shape[1],p.shape[2],p.shape[3]]):p}function gr(e,t=[1,1,1],n,r,a,i="NDHWC"){const o=ke(e,"x","maxPool3d");let u=o,c=!1;4===o.rank&&(c=!0,u=cc(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),s(5===u.rank,()=>`Error in maxPool3d: x must be rank 5 but got rank ${u.rank}.`),s("NDHWC"===i,()=>"Error in maxPool3d: Only NDHWC is currently supported, "+`but got dataFormat of ${i}`),null!=a&&s(d(r),()=>"Error in maxPool3d: pad must be an integer when using, "+`dimRoundingMode ${a} but got pad ${r}.`);const l={x:u},h={filterSize:t,strides:n,pad:r,dimRoundingMode:a,dataFormat:i},p=Xu.runKernel(ao,l,h);return c?cc(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}function yr(e,t,n,r,a=!1){const s=ke(e,"x","maxPoolWithArgmax"),i={x:s},o={filterSize:t,strides:n,pad:r,includeBatchInIndex:a},u=Xu.runKernel(io,i,o);return{result:u[0],indexes:u[1]}}function xr(e,t=null,n=!1){const r=ke(e,"x","mean"),a={x:r},s={axis:t,keepDims:n};return Xu.runKernel(oo,a,s)}function vr(e,t=null,n=!1){const r=ke(e,"x","min"),a={x:r},s={axis:t,keepDims:n};return Xu.runKernel(uo,a,s)}function wr(e,t){let n=ke(e,"a","minimum"),r=ke(t,"b","minimum");[n,r]=le(n,r),"bool"===n.dtype&&(n=Zu(n,"int32"),r=Zu(r,"int32")),Me(n.shape,r.shape);const a={a:n,b:r};return Xu.runKernel(co,a)}function kr(e,t,n){s("reflect"===n||"symmetric"===n,()=>"Invalid mode. Mode must be either reflect or symmetric. "+`Got ${n}.`);const r=ke(e,"x","mirrorPad");if(0===r.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");s(t.length===r.rank,()=>`Padding doesn't match input. Must be ${r.rank}. `+`Got ${t.length}.`);const a="reflect"===n?1:0;for(let e=0;e<r.rank;e++)s(2===t[e].length,()=>"Invalid number of paddings. Must be length of 2 each."),s(t[e][0]>=0&&t[e][0]<=r.shape[e]-a&&t[e][1]>=0&&t[e][1]<=r.shape[e]-a,()=>`Padding in dimension ${e} cannot be greater than or equal `+`to ${r.shape[e]-a} or less than 0 for input of `+`shape ${r.shape}`);const i={paddings:t,mode:n},o={x:r};return Xu.runKernel(lo,o,i)}function Or(e,t){let n=ke(e,"a","mod"),r=ke(t,"b","mod");[n,r]=le(n,r);const a={a:n,b:r};return Xu.runKernel(ho,a)}function Ir(e,t=null,n=!1){e=ke(e,"x","moments");const r=p(t,e.shape),a=Uh(e,r,n);let s=a.shape;n||(s=xt(a.shape,r));const i=sc(ic(Zu(e,"float32"),cc(a,s))),o=Uh(i,r,n);return{mean:a,variance:o}}function Nr(e,t,n,r){const a=ke(t,"data","multiRNNCell"),s=Oe(n,"c","multiRNNCell"),i=Oe(r,"h","multiRNNCell");let o=a;const u=[];for(let t=0;t<e.length;t++){const n=e[t](o,s[t],i[t]);u.push(n[0]),u.push(n[1]),o=n[1]}const c=[],l=[];for(let e=0;e<u.length;e+=2)c.push(u[e]),l.push(u[e+1]);return[c,l]}function jr(e,t,n,r=!1){const a=ke(e,"logits","multinomial"),s=a.size,i=a.rank;if(s<2)throw new Error("Error in multinomial: you need at least 2 outcomes, but got "+`${s}.`);if(i>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${i}`);n=n||Math.random();const o=1===i?cc(a,[1,-1]):a,u={logits:o},c={numSamples:t,seed:n,normalized:r},l=Xu.runKernel(po,u,c);return 1===i?cc(l,[l.size]):l}function Sr(e,t){let n=ke(e,"a","notEqual"),r=ke(t,"b","notEqual");[n,r]=le(n,r),Me(n.shape,r.shape);const a={a:n,b:r};return Xu.runKernel(bo,a)}function Tr(e,t,n=1,r=0){if(t<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${t}`);const a=ke(e,"indices","oneHot","int32"),s={indices:a},i={depth:t,onValue:n,offValue:r};return Xu.runKernel(wo,s,i)}function Cr(e){const t=ke(e,"x","onesLike"),n={x:t};return Xu.runKernel(vo,n)}function Er(e,t){const n=ke(e,"v1","outerProduct"),r=ke(t,"v2","outerProduct");s(1===n.rank&&1===r.rank,()=>"Error in outerProduct: inputs must be rank 1, but got ranks "+`${n.rank} and ${r.rank}.`);const a=cc(n,[-1,1]),i=cc(r,[1,-1]);return jc(a,i)}function $r(e,t,n=0){return s(2===t.length,()=>"Invalid number of paddings. Must be length of 2."),Td(e,[t],n)}function Ar(e,t,n=0){return s(2===t.length&&2===t[0].length&&2===t[1].length,()=>"Invalid number of paddings. Must be length of 2 each."),Td(e,t,n)}function _r(e,t,n=0){return s(3===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length,()=>"Invalid number of paddings. Must be length of 2 each."),Td(e,t,n)}function Dr(e,t,n=0){return s(4===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length&&2===t[3].length,()=>"Invalid number of paddings. Must be length of 2 each."),Td(e,t,n)}function Fr(e,t,n,r,a,i){null==a&&(a=[1,1]),null==i&&(i=1),0===r&&(r="valid");const o=ke(e,"x","maxPool");let u=o,c=!1;3===o.rank&&(c=!0,u=cc(o,[1,o.shape[0],o.shape[1],o.shape[2]])),s(lt(i,a),()=>"Error in pool: Either strides or dilations must be 1. "+`Got strides ${i} and dilations '${a}'`);const l=tt(u.shape,t,i,a,r),d=[l.dilationHeight,l.dilationWidth];let h;h="same"===r?Mr([l.filterHeight,l.filterWidth],d):[[0,0],[0,0]];const p=1===d[0]&&1===d[1],[f,m]=Rr([l.inHeight,l.inWidth],d,h),b=p?r:"valid",g=p?u:Tc(u,d,f),y="avg"===n?()=>ph(g,t,i,b):()=>Vh(g,t,i,b),x=y(),v=p?x:_d(x,d,m);return c?cc(v,[v.shape[1],v.shape[2],v.shape[3]]):v}function Rr(e,t,n){const r=n.map(e=>e[0]),a=n.map(e=>e[1]),s=e.concat(r,a),i=t.map((e,t)=>(e-s[t]%e)%e),o=a.map((e,t)=>e+i[t]),u=t.map((e,t)=>[r[t],o[t]]),c=t.map((e,t)=>[0,i[t]]);return[u,c]}function Mr(e,t){const n=e.map((e,n)=>e+(e-1)*(t[n]-1)),r=n.map(e=>e-1),a=r.map(e=>Math.floor(e/2)),s=r.map((e,t)=>e-a[t]);return r.map((e,t)=>[a[t],s[t]])}function zr(e,t){const n=ke(e,"x","prelu"),r=ke(t,"alpha","prelu"),a={x:n,alpha:r};return Xu.runKernel(No,a)}function Lr(e,t=null,n=!1){let r=ke(e,"x","prod");"bool"===r.dtype&&(r=Zu(r,"int32"));const a={x:r},s={axis:t,keepDims:n};return Xu.runKernel(jo,a,s)}function Pr(e,t,n){const r=c(e);let a=null;if(null==n||"float32"===n)a=new Float32Array(r);else if("int32"===n)a=new Int32Array(r);else{if("bool"!==n)throw new Error(`Unknown data type ${n}`);a=new Uint8Array(r)}for(let e=0;e<r;e++)a[e]=t();return Xu.makeTensor(a,e,n)}function Br(e,t){return t={exports:{}},e(t,t.exports),t.exports}function Wr(e,t,n=1,r="float32",a){if(null==n&&(n=1),null==r&&(r="float32"),"float32"!==r&&"int32"!==r)throw new Error(`Unsupported data type ${r}`);const s=new dp(t,n,r,a),i=$n(e,r);for(let e=0;e<i.values.length;e++)i.values[e]=s.nextValue();return i.toTensor()}function Vr(e,t=0,n=1,r,a){if(null!=r&&"bool"===r)throw new Error(`Unsupported data type ${r}`);const s=new lp(t,n,r,!1,a),i=$n(e,r);for(let e=0;e<i.values.length;e++)i.values[e]=s.nextValue();return i.toTensor()}function Ur(e,t=0,n=1,r="float32",a){const s=$n(e,r),i=new hp(t,n,null,a);for(let e=0;e<s.values.length;e++)s.values[e]=i.nextValue();return s.toTensor()}function Gr(e,t,n=1,r="float32"){if(0===n)throw new Error("Cannot have a step of zero");const a={start:e,stop:t,step:n,dtype:r};return Xu.runKernel(So,{},a)}function Hr(e){const t=ke(e,"input","real"),n={input:t};return Xu.runKernel(To,n)}function qr(e){const t=ke(e,"x","reciprocal"),n={x:t};return Xu.runKernel(Co,n)}function Kr(e){const t=ke(e,"x","relu"),n={x:t};return Xu.runKernel(Eo,n)}function Xr(e){const t=ke(e,"x","relu6"),n={x:t};return Xu.runKernel(Ro,n)}function Yr(e){const t=ke(e,"x","reverse");return s(1===t.rank,()=>`Error in reverse1D: x must be rank 1 but got rank ${t.rank}.`),pd(t,0)}function Zr(e,t){const n=ke(e,"x","reverse");return s(2===n.rank,()=>`Error in reverse2D: x must be rank 2 but got rank ${n.rank}.`),pd(n,t)}function Qr(e,t){const n=ke(e,"x","reverse");return s(3===n.rank,()=>`Error in reverse3D: x must be rank 3 but got rank ${n.rank}.`),pd(n,t)}function Jr(e,t){const n=ke(e,"x","reverse");return s(4===n.rank,()=>`Error in reverse4D: x must be rank 4 but got rank ${n.rank}.`),pd(n,t)}function ea(e){const t=ke(e,"x","round"),n={x:t};return Xu.runKernel(zo,n)}function ta(e){const t=ke(e,"x","selu"),n={x:t};return Xu.runKernel(Wo,n)}function na(e,t,n,r,a,i=[1,1],o="NHWC"){const u=ke(e,"x","separableConv2d"),c=ke(t,"depthwiseFilter","separableConv2d"),l=ke(n,"pointwiseFilter","separableConv2d");let d=u,h=!1;if(3===u.rank&&(h=!0,d=cc(u,[1,u.shape[0],u.shape[1],u.shape[2]])),"NCHW"===o)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");s(4===d.rank,()=>"Error in separableConv2d: input must be rank 4, but got "+`rank ${d.rank}.`),s(4===c.rank,()=>"Error in separableConv2d: depthwise filter must be rank 4, but "+`got rank ${c.rank}.`),s(4===l.rank,()=>"Error in separableConv2d: pointwise filter must be rank 4, but "+`got rank ${c.rank}.`),s(1===l.shape[0],()=>"Error in separableConv2d: the first dimension of pointwise filter "+` must be 1, but got ${l.shape[0]}.`),s(1===l.shape[1],()=>"Error in separableConv2d: the second dimension of pointwise "+`filter must be 1, but got ${l.shape[1]}.`);const p=c.shape[2],f=c.shape[3];s(l.shape[2]===p*f,()=>"Error in separableConv2d: the third dimension of pointwise filter "+`must be ${p*f}, `+`but got ${l.shape[2]}.`);const m=wh(d,c,r,a,o,i),b=1,g=Hc(m,l,b,"valid",o);return h?cc(g,[g.shape[1],g.shape[2],g.shape[3]]):g}function ra(e){const t=ke(e,"x","sign"),n={x:t};return Xu.runKernel(Ho,n)}function aa(e,t,n){const r=ke(e,"x","slice1d");return s(1===r.rank,()=>`slice1d expects a rank-1 tensor, but got a rank-${r.rank} tensor`),Gl(r,[t],[n])}function sa(e,t,n){const r=ke(e,"x","slice2d");return s(2===r.rank,()=>`slice2d expects a rank-2 tensor, but got a rank-${r.rank} tensor`),Gl(r,t,n)}function ia(e,t,n){const r=ke(e,"x","slice3d");return s(3===r.rank,()=>`slice3d expects a rank-3 tensor, but got a rank-${r.rank} tensor`),Gl(r,t,n)}function oa(e,t,n){const r=ke(e,"x","slice4d");return s(4===r.rank,()=>`slice4d expects a rank-4 tensor, but got a rank-${r.rank} tensor`),Gl(r,t,n)}function ua(e,t=-1){const n=ke(e,"logits","softmax","float32");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error("Softmax along a non-last dimension is not yet supported. "+`Logits was rank ${n.rank} and dim was ${t}`);const r={logits:n},a={dim:t};return Xu.runKernel(Jo,r,a)}function ca(e){s("complex64"===e.dtype,()=>"The dtype for tf.spectral.fft() must be complex64 "+`but got ${e.dtype}.`);const t={input:e};return Xu.runKernel(Si,t)}function la(e){s("complex64"===e.dtype,()=>"The dtype for tf.spectral.ifft() must be complex64 "+`but got ${e.dtype}.`);const t={input:e};return Xu.runKernel(zi,t)}function da(e){const t=e.shape[e.shape.length-1],n=e.size/t;let r;if(t<=2){const a=cc(e,[n,t]);r=Ip(a)}else{const a=[n,2*(t-1)],s=cc(fp(e),[n,t]),i=cc(Ch(e),[n,t]),o=pd(Gl(s,[0,1],[n,t-2]),1),u=Qu(pd(Gl(i,[0,1],[n,t-2]),1),Ae(-1)),c=Fd([s,o],1),l=Fd([i,u],1),d=cc(Bl(c,l),[a[0],a[1]]);r=Ip(d)}if(r=fp(r),3===e.rank&&0!==e.shape[0]){const t=r,n=e.shape[0];r=cc(r,[n,r.shape[0]/n,r.shape[1]]),t.dispose()}return r}function ha(e,t){s("float32"===e.dtype,()=>`The dtype for rfft() must be real value but got ${e.dtype}`);let n=e.shape[e.shape.length-1];const r=e.size/n;let a;if(null!=t&&t<n){const r=e.shape.map(e=>0),s=e.shape.map(e=>e);s[e.shape.length-1]=t,a=Gl(e,r,s),n=t}else if(null!=t&&t>n){const r=e.shape.map(e=>e);r[e.shape.length-1]=t-n,a=Fd([e,Pt(r)],e.shape.length-1),n=t}else a=e;const i=pc(a),o=cc(Bl(a,i),[r,n]),u=Op(o),c=Math.floor(n/2)+1,l=fp(u),d=Ch(u),h=Bc(l,[c,n-c],l.shape.length-1),p=Bc(d,[c,n-c],d.shape.length-1),f=a.shape.slice();return f[a.shape.length-1]=c,cc(Bl(h[0],p[0]),f)}function pa(e,t){let n=ke(e,"a","squaredDifference"),r=ke(t,"b","squaredDifference");[n,r]=le(n,r),Me(n.shape,r.shape);const a={a:n,b:r},s={};return Xu.runKernel(nu,a,s)}function fa(e,t){const n=ke(e,"x","squeeze");return cc(n,f(n.shape,t).newShape)}function ma(e,t,n,r,a=0,s=0,i=0,o=0,u=0){const c=ke(e,"x","stridedSlice"),l={x:c},d={begin:t,end:n,strides:r,beginMask:a,endMask:s,ellipsisMask:i,newAxisMask:o,shrinkAxisMask:u};return Xu.runKernel(au,l,d)}function ba(e){const t=ke(e,"x","tan"),n={x:t};return Xu.runKernel(iu,n)}function ga(e,t){o(e);const n=xe(e,t);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");const r=null;return $e(e,r,n,t)}function ya(e,t,n){if(o(e),null!=t&&2!==t.length)throw new Error("tensor2d() requires shape to have two numbers");const r=xe(e,n);if(2!==r.length&&1!==r.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return $e(e,t,r,n)}function xa(e,t=1,n=!0){const r=ke(e,"x","topk");if(0===r.rank)throw new Error("topk() expects the input to be of rank 1 or higher");const a=r.shape[r.shape.length-1];if(t>a)throw new Error(`'k' passed to topk() must be <= the last dimension (${a}) `+`but got ${t}`);const s={x:r},i={k:t,sorted:n},[o,u]=Xu.runKernel(cu,s,i);return{values:o,indices:u}}function va(e,t=0,n=1,r,a){if(null!=r&&"bool"===r)throw new Error("Unsupported data type $ { dtype }");const s=new lp(t,n,r,!0,a),i=$n(e,r);for(let e=0;e<i.values.length;e++)i.values[e]=s.nextValue();return i.toTensor()}function wa(e,t=0){const n=ke(e,"x","unique","string_or_numeric");s(n.rank>0,()=>"The input tensor must be at least 1D");const r={x:n},a={axis:t},[i,o]=Xu.runKernel(hu,r,a);return{values:i,indices:o}}function ka(e,t="euclidean",n=null,r=!1){e=ke(e,"x","norm");const a=Oa(e,t,n);let s=a.shape;if(r){const t=p(n,e.shape);s=xt(a.shape,t)}return cc(a,s)}function Oa(e,t,n=null){if(0===e.rank)return th(e);if(1!==e.rank&&null===n)return Oa(cc(e,[-1]),t,n);if(1===e.rank||"number"==typeof n||Array.isArray(n)&&1===n.length){if(1===t)return lc(th(e),n);if(t===1/0)return zh(th(e),n);if(t===-1/0)return Gh(th(e),n);if("euclidean"===t||2===t)return ac(lc(rd(th(e),Ae(2,"int32")),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(n)&&2===n.length){if(1===t)return zh(lc(th(e),n[0]),n[1]-1);if(t===1/0)return zh(lc(th(e),n[1]),n[0]);if(t===-1/0)return Gh(lc(th(e),n[1]),n[0]);if("fro"===t||"euclidean"===t)return ac(lc(sc(e),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${n}`)}function Ia(e,t,n,r,a=!0){const i=ke(e,"v","movingAverage"),o=ke(t,"x","movingAverage"),u=ke(n,"decay","movingAverage");de(i,o),s(l(i.shape,o.shape),()=>"Shape mismatch in v and x");const c=Ae(1),d=ic(c,u);let h=Qu(ic(o,i),d);if(a){s(null!=r,()=>"When using zeroDebias: true, step is required.");const e=ke(r,"step","movingAverage");h=nc(h,ic(c,rd(u,e)))}return gc(i,h)}function Na(e,t,n){const r=t.rank>1?t.shape[t.rank-1]:1,a=t.rank>1?t.rank-1:1,s="Must have updates.shape = indices.shape[:batchDim] + "+`shape[sliceDim:], got updates.shape: ${n.shape}`+`, indices.shape: ${t.shape}, shape: ${e}`+`, sliceDim: ${r}, and batchDim: ${a}.`;if(n.rank<a)throw new Error(s+` update.rank < ${a}. `);if(e.length<r+(n.rank-a))throw new Error(s+` Output shape length < ${r+(n.rank-a)}`);if(n.rank!==a+e.length-r)throw new Error(s+` update.rank != ${a+e.length-r}`);for(let e=0;e<a;++e)if(n.shape[e]!==t.shape[e])throw new Error(s+` updates.shape[${e}] (${n.shape[e]}) != indices.shape[${e}] (${t.shape[e]}).`);for(let t=0;t<n.rank-a;++t)if(n.shape[t+a]!==e[t+r])throw new Error(s+` updates.shape[${t+a}] (${n.shape[t+a]}) != shape[${t+a}] (${e[t+a]})`)}function ja(e,t,n){if(t.rank<1)throw new Error("tf.scatterND() expects the indices to be rank 1 or higher,"+` but the rank was ${t.rank}.`);if(e.rank<1)throw new Error("tf.scatterND() expects the updates to be rank 1 or higher,"+` but the rank was ${e.rank}.`);if("int32"!==t.dtype)throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(n.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${n}`);if(0===n.length){if(0===t.size)throw new Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(0===e.size)throw new Error(`Updates specified for empty output. updates shape: ${e.shape}`)}Na(n,t,e)}function Sa(e,t,n){const r=ke(e,"indices","scatterND","int32"),a=ke(t,"updates","scatterND");ja(a,r,n);const s={indices:r,updates:a},i={shape:n};return Xu.runKernel(Po,s,i)}function Ta(e,t,n,r){if("int32"!==e.dtype)throw new Error("tf.sparseToDense() expects the indices to be int32 type,"+` but the dtype was ${e.dtype}.`);if(e.rank>2)throw new Error("sparseIndices should be a scalar, vector, or matrix,"+` but got shape ${e.shape}.`);const a=e.rank>0?e.shape[0]:1,s=e.rank>1?e.shape[1]:1;if(n.length!==s)throw new Error("outputShape has incorrect number of elements:,"+` ${n.length}, should be: ${s}.`);const i=t.size;if(0!==t.rank&&(1!==t.rank||i!==a))throw new Error("sparseValues has incorrect shape "+`${t.shape}, should be [] or [${a}]`);if(t.dtype!==r.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}function Ca(e,t,n,r=0){const a=ke(e,"sparseIndices","sparseToDense","int32"),s=ke(t,"sparseValues","sparseToDense"),i=ke(r,"defaultValue","sparseToDense",s.dtype);Ta(a,s,n,i);const o={sparseIndices:a,sparseValues:s,defaultValue:i},u={outputShape:n};return Xu.runKernel(tu,o,u)}function Ea(e,t){const n=ke(t,"indices","gatherND","int32"),r=ke(e,"x","gatherND"),a={params:r,indices:n};return Xu.runKernel(Di,a)}function $a(e,t){if(null==t)return e.shape.slice();if(l(e.shape,t))return t;if(e.shape.length===t.length){const n=[];for(let r=0;r<e.shape.length;r++)null==t[r]&&null!=e.shape[r]?n.push(e.shape[r]):n.push(t[r]);return n}return t}function Aa(e,t,n,r){const a=ke(e,"x","dropout");if(s("float32"===a.dtype,()=>"x has to be a floating point tensor since it's going to be "+`scaled, but got a ${a.dtype} tensor instead.`),s(t>=0&&t<1,()=>`rate must be a float in the range [0, 1), but got ${t}.`),0===t)return e instanceof Lu?a.clone():a;const i=$a(a,n),o=1-t,u=nc(ql(gc(pp(i,0,1,"float32",r),o)),o);return Qu(a,u)}function _a(e){return Math.floor(Math.pow(2,Math.ceil(Math.log(e)/Math.log(2))))}function Da(e,t,n){const r=1-e%2,a=new Float32Array(e);for(let s=0;s<e;++s){const i=2*Math.PI*s/(e+r-1);a[s]=t-n*Math.cos(i)}return ga(a,"float32")}function Fa(e,t,n){if(null==n||"linear"===n)return e;if("relu"===n)return Qu(e,Ju(t));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function Ra(e,t){let n=t;const r=Re(e.shape,t.shape);return r.length>0&&(n=lc(n,r)),cc(n,e.shape)}function Ma(e,t,n,r){if("linear"===t)return e;if("relu"===t)return bp(e);if("elu"===t)return Nh(e);if("relu6"===t)return gp(e);if("prelu"===t)return Jh(e,n);if("leakyrelu"===t)return _h(e,r);if("sigmoid"===t)return $d(e);throw new Error(`Unknown fused activation ${t}.`)}function za({x:e,filter:t,strides:n,pad:r,dataFormat:a="NHWC",dilations:i=[1,1],dimRoundingMode:o,bias:u,activation:c="linear",preluActivationWeights:l,leakyreluAlpha:h}){if(c=c||"linear",!1===Dp(Xu.state.gradientDepth,c)){let s=Hc(e,t,n,r,a,i,o);return null!=u&&(s=gc(s,u)),Ma(s,c,l,h)}const p=ke(e,"x","conv2d"),f=ke(t,"filter","conv2d");let m=p,b=!1;3===p.rank&&(b=!0,m=cc(p,[1,p.shape[0],p.shape[1],p.shape[2]])),s(4===m.rank,()=>"Error in fused conv2d: input must be rank 4, but got rank "+`${m.rank}.`),s(4===f.rank,()=>"Error in fused conv2d: filter must be rank 4, but got rank "+`${f.rank}.`),null!=o&&s(d(r),()=>"Error in fused conv2d: pad must be an integer when using, "+`dimRoundingMode ${o} but got pad ${r}.`),s(m.shape[3]===f.shape[2],()=>`Error in conv2d: depth of input (${m.shape[3]}) must match `+`input depth for filter ${f.shape[2]}.`),s(lt(n,i),()=>"Error in conv2D: Either strides or dilations must be 1. "+`Got strides ${n} and dilations '${i}'`),s("NHWC"===a,()=>`Error in conv2d: got dataFormat of ${a} but only NHWC is currently supported.`);const g=nt(m.shape,f.shape,n,i,r,o);let y,x;null!=u&&(y=ke(u,"bias","fused conv2d"),[y]=le(y,p),Me(g.outShape,y.shape)),null!=l&&(x=ke(l,"prelu weights","fused conv2d"));const v=(e,t)=>{const[a,o,u,l]=t,d=Fa(e,u,c);s(ct(i),()=>"Error in gradient of fused conv2D: dilation rates greater than 1 "+`are not yet supported in gradients. Got dilations '${i}'`);const h=Uc(o.shape,d,a,n,r),p=Vc(o,d,a.shape,n,r),f=[h,p];if(null!=l){const e=Ra(l,d);f.push(e)}return f},w={x:m,filter:f,bias:y,preluActivationWeights:x},k={strides:n,pad:r,dataFormat:a,dilations:i,dimRoundingMode:o,activation:c,leakyreluAlpha:h};if(null==u){const e=ur((e,t,n)=>{let r=Xu.runKernel(xu,w,k);return n([t,e,r]),b&&(r=cc(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:v}});return e(m,f)}{const e=ur((e,t,n,r)=>{let a=Xu.runKernel(xu,w,k);return r([t,e,a,n]),b&&(a=cc(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:v}});return e(m,f,y)}}function La({x:e,filter:t,strides:n,pad:r,dataFormat:a="NHWC",dilations:i=[1,1],dimRoundingMode:o,bias:u,activation:c="linear",preluActivationWeights:l,leakyreluAlpha:h}){if(!1===Dp(Xu.state.gradientDepth,c)){let s=wh(e,t,n,r,a,i,o);return null!=u&&(s=gc(s,u)),Ma(s,c,l,h)}const p=ke(e,"x","depthwiseConv2d"),f=ke(t,"filter","depthwiseConv2d");let m=p,b=!1;3===p.rank&&(b=!0,m=cc(p,[1,p.shape[0],p.shape[1],p.shape[2]])),s(4===m.rank,()=>"Error in fused depthwiseConv2d: input must be rank 4, but got "+`rank ${m.rank}.`),s(4===f.rank,()=>"Error in fused depthwiseConv2d: filter must be rank 4, "+`but got rank ${f.rank}.`),s(m.shape[3]===f.shape[2],()=>"Error in fused depthwiseConv2d: number of input channels "+`(${m.shape[3]}) must match the inChannels dimension in `+`filter ${f.shape[2]}.`),null==i&&(i=[1,1]),s(lt(n,i),()=>"Error in fused depthwiseConv2d: Either strides or dilations must "+`be 1. Got strides ${n} and dilations '${i}'`),null!=o&&s(d(r),()=>"Error in fused depthwiseConv2d: pad must be an integer when "+`using dimRoundingMode ${o} but got pad ${r}.`);const g=nt(m.shape,f.shape,n,i,r,o,!0);let y,x;null!=u&&(y=ke(u,"bias","fused conv2d"),[y]=le(y,p),Me(g.outShape,y.shape)),null!=l&&(x=ke(l,"prelu weights","fused depthwiseConv2d"));const v=(e,t)=>{s(ct(i),()=>"Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations "+`'${i}'`);const[a,u,l,d]=t,h=Fa(e,l,c),p=sl(u.shape,h,a,n,r,i,o),f=al(u,h,a.shape,n,r,i,o);if(null!=d){const e=Ra(y,h);return[p,f,e]}return[p,f]},w={x:m,filter:f,bias:y,preluActivationWeights:x},k={strides:n,pad:r,dataFormat:a,dilations:i,dimRoundingMode:o,activation:c,leakyreluAlpha:h};if(null==u){const e=ur((e,t,n)=>{let r=Xu.runKernel(vu,w,k);return n([t,e,r]),b&&(r=cc(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:v}});return e(m,f)}{const e=ur((e,t,n,r)=>{let a=Xu.runKernel(vu,w,k);return r([t,e,a,n]),b&&(a=cc(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:v}});return e(m,f,y)}}function Pa({a:e,b:t,transposeA:n=!1,transposeB:r=!1,bias:a,activation:i="linear",preluActivationWeights:o,leakyreluAlpha:u}){if(!1===Dp(Xu.state.gradientDepth,i)){let s=jc(e,t,n,r);return null!=a&&(s=gc(s,a)),Ma(s,i,o,u)}let d=ke(e,"a","fused matMul"),h=ke(t,"b","fused matMul");[d,h]=le(d,h);const p=n?d.shape[d.rank-2]:d.shape[d.rank-1],f=r?h.shape[h.rank-1]:h.shape[h.rank-2],m=n?d.shape[d.rank-1]:d.shape[d.rank-2],b=r?h.shape[h.rank-2]:h.shape[h.rank-1],g=d.shape.slice(0,-2),y=h.shape.slice(0,-2),x=c(g),v=c(y);s(d.rank>=2&&h.rank>=2&&d.rank===h.rank,()=>"Error in fused matMul: inputs must have the same rank of at "+`least 2, got ranks ${d.rank} and ${h.rank}.`),s(l(g,y),()=>`Error in fused matMul: outer dimensions (${g}) and (`+`${y}) of Tensors with shapes ${d.shape} and `+`${h.shape} must match.`),s(p===f,()=>`Error in fused matMul: inner shapes (${p}) and (`+`${f}) of Tensors with shapes ${d.shape} and `+`${h.shape} and transposeA=${n}`+` and transposeB=${r} must match.`);const w=d.shape.slice(0,-2).concat([m,b]),k=cc(d,n?[x,p,m]:[x,m,p]),O=cc(h,r?[v,b,f]:[v,f,b]);let I,N;null!=a&&(I=ke(a,"bias","fused matMul"),[I]=le(I,d),Me(w,I.shape)),null!=o&&(N=ke(o,"prelu weights","fused matMul"));const j=(e,t)=>{const[s,o,u,c]=t,l=Fa(cc(e,u.shape),u,i);let d,h;if(n||r?!n&&r?(d=jc(l,o,!1,!1),h=jc(l,s,!0,!1)):n&&!r?(d=jc(o,l,!1,!0),h=jc(s,l,!1,!1)):(d=jc(o,l,!0,!0),h=jc(l,s,!0,!0)):(d=jc(l,o,!1,!0),h=jc(s,l,!0,!1)),null!=a){const e=Ra(c,l);return[d,h,e]}return[d,h]},S={a:k,b:O,bias:I,preluActivationWeights:N},T={transposeA:n,transposeB:r,activation:i,leakyreluAlpha:u};if(null==a){const e=ur((e,t,n)=>{const r=Xu.runKernel(yu,S,T);return n([e,t,r]),{value:cc(r,w),gradFunc:j}});return e(k,O)}{const e=ur((e,t,n,r)=>{const a=Xu.runKernel(yu,S,T);return r([e,t,a,n]),{value:cc(a,w),gradFunc:j}});return e(k,O,I)}}function Ba(e){return Da(e,.54,.46)}function Wa(e){return Da(e,.5,.5)}function Va(e,t,n,r=!1,a=0){let s=0;const i=[];for(;s+t<=e.size;)i.push(Gl(e,s,t)),s+=n;if(r)for(;s<e.size;){const r=s+t-e.size,o=Fd([Gl(e,s,t-r),er([r],a)]);i.push(o),s+=n}return 0===i.length?ya([],[0,t]):cc(Fd(i),[i.length,t])}function Ua(e,t,n,r,a=Fp){null==r&&(r=_a(t));const s=Rp(e,t,n),i=Qu(s,a(t));return jp(i,r)}function Ga(e,t,n,r,a="bilinear",i=0){const o=ke(e,"image","cropAndResize"),u=ke(t,"boxes","cropAndResize","float32"),c=ke(n,"boxInd","cropAndResize","int32"),l=u.shape[0];s(4===o.rank,()=>"Error in cropAndResize: image must be rank 4,"+`but got rank ${o.rank}.`),s(2===u.rank&&4===u.shape[1],()=>`Error in cropAndResize: boxes must be have size [${l},4] `+`but had shape ${u.shape}.`),s(1===c.rank&&c.shape[0]===l,()=>`Error in cropAndResize: boxInd must be have size [${l}] `+`but had shape ${u.shape}.`),s(2===r.length,()=>"Error in cropAndResize: cropSize must be of length 2, but got "+`length ${r.length}.`),s(r[0]>=1&&r[1]>=1,()=>`cropSize must be atleast [1,1], but was ${r}`),s("bilinear"===a||"nearest"===a,()=>`method must be bilinear or nearest, but was ${a}`);const d={image:o,boxes:u,boxInd:c},h={method:a,extrapolationValue:i,cropSize:r},p=Xu.runKernel(ui,d,h);return p}function Ha(e){const t=ke(e,"image","flipLeftRight","float32");s(4===t.rank,()=>"Error in flipLeftRight: image must be rank 4,"+`but got rank ${t.rank}.`);const n={image:t},r=Xu.runKernel(Ci,n,{});return r}function qa(e,t,n=0,r=.5){const a=ke(e,"image","rotateWithOffset","float32");s(4===a.rank,()=>"Error in rotateWithOffset: image must be rank 4,"+`but got rank ${a.rank}.`);const i={image:a},o={radians:t,fillValue:n,center:r},u=Xu.runKernel(gu,i,o);return u}function Ka(e,t,n,r,a,i){null==r&&(r=.5),null==a&&(a=Number.NEGATIVE_INFINITY),null==i&&(i=0);const o=e.shape[0];return n=Math.min(n,o),s(0<=r&&r<=1,()=>`iouThreshold must be in [0, 1], but was '${r}'`),s(2===e.rank,()=>`boxes must be a 2D tensor, but was of rank '${e.rank}'`),s(4===e.shape[1],()=>`boxes must have 4 columns, but 2nd dimension was ${e.shape[1]}`),s(1===t.rank,()=>"scores must be a 1D tensor"),s(t.shape[0]===o,()=>`scores has incompatible shape with boxes. Expected ${o}, `+`but was ${t.shape[0]}`),s(0<=i&&i<=1,()=>`softNmsSigma must be in [0, 1], but was '${i}'`),{maxOutputSize:n,iouThreshold:r,scoreThreshold:a,softNmsSigma:i}}function Xa(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY){const s=ke(e,"boxes","nonMaxSuppression"),i=ke(t,"scores","nonMaxSuppression"),o=Ka(s,i,n,r,a);n=o.maxOutputSize,r=o.iouThreshold,a=o.scoreThreshold;const u={maxOutputSize:n,iouThreshold:r,scoreThreshold:a};return Xu.runKernel(go,{boxes:s,scores:i},u)}function Ya(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=0){const i=ke(e,"boxes","nonMaxSuppression"),o=ke(t,"scores","nonMaxSuppression"),u=Ka(i,o,n,r,a,s);n=u.maxOutputSize,r=u.iouThreshold,a=u.scoreThreshold,s=u.softNmsSigma;const c={boxes:i,scores:o},l={maxOutputSize:n,iouThreshold:r,scoreThreshold:a,softNmsSigma:s},d=Xu.runKernel(xo,c,l);return{selectedIndices:d[0],selectedScores:d[1]}}function Za(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=!1){const i=ke(e,"boxes","nonMaxSuppression"),o=ke(t,"scores","nonMaxSuppression"),u=Ka(i,o,n,r,a,null),c=u.maxOutputSize,l=u.iouThreshold,d=u.scoreThreshold,h={boxes:i,scores:o},p={maxOutputSize:c,iouThreshold:l,scoreThreshold:d,padToMaxOutputSize:s},f=Xu.runKernel(yo,h,p);return{selectedIndices:f[0],validOutputs:f[1]}}function Qa(e,t,n=!1,r=!1){const a=ke(e,"images","resizeBilinear");s(3===a.rank||4===a.rank,()=>"Error in resizeBilinear: x must be rank 3 or 4, but got "+`rank ${a.rank}.`),s(2===t.length,()=>"Error in resizeBilinear: new shape must 2D, but got shape "+`${t}.`),s(!1===r||!1===n,()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false.");let i=a,o=!1;3===a.rank&&(o=!0,i=cc(a,[1,a.shape[0],a.shape[1],a.shape[2]]));const[]=t,u={images:i},c={alignCorners:n,halfPixelCenters:r,size:t},l=Xu.runKernel(Do,u,c);return o?cc(l,[l.shape[1],l.shape[2],l.shape[3]]):l}function Ja(e,t,n=!1,r=!1){const a=ke(e,"images","resizeNearestNeighbor");s(3===a.rank||4===a.rank,()=>"Error in resizeNearestNeighbor: x must be rank 3 or 4, but got "+`rank ${a.rank}.`),s(2===t.length,()=>"Error in resizeNearestNeighbor: new shape must 2D, but got shape "+`${t}.`),s("float32"===a.dtype||"int32"===a.dtype,()=>"`images` must have `int32` or `float32` as dtype"),s(!1===r||!1===n,()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false.");let i=a,o=!1;3===a.rank&&(o=!0,i=cc(a,[1,a.shape[0],a.shape[1],a.shape[2]]));const[]=t,u={images:i},c={alignCorners:n,halfPixelCenters:r,size:t},l=Xu.runKernel(Ao,u,c);return o?cc(l,[l.shape[1],l.shape[2],l.shape[3]]):l}function es(e,t,n="nearest",r="constant",a=0,i){const o=ke(e,"image","transform","float32"),u=ke(t,"transforms","transform","float32");s(4===o.rank,()=>"Error in transform: image must be rank 4,"+`but got rank ${o.rank}.`),s(2===u.rank&&(u.shape[0]===o.shape[0]||1===u.shape[0])&&8===u.shape[1],()=>"Error in transform: Input transform should be batch x 8 or 1 x 8"),s(null==i||2===i.length,()=>"Error in transform: outputShape must be [height, width] or null, "+`but got ${i}.`);const c={image:o,transforms:u},l={interpolation:n,fillMode:r,fillValue:a,outputShape:i};return Xu.runKernel(lu,c,l)}function ts(e,t,n){s(t%1==0,()=>`bandPart(): numLower must be an integer, got ${t}.`),s(n%1==0,()=>`bandPart(): numUpper must be an integer, got ${n}.`);const r=ke(e,"a","bandPart");s(r.rank>=2,()=>`bandPart(): Rank must be at least 2, got ${r.rank}.`);const a=r.shape,[i,o]=r.shape.slice(-2);if(!(t<=i))throw new Error(`bandPart(): numLower (${t})`+` must not be greater than the number of rows (${i}).`);if(!(n<=o))throw new Error(`bandPart(): numUpper (${n})`+` must not be greater than the number of columns (${o}).`);t<0&&(t=i),n<0&&(n=o);const u=cc(Gr(0,i,1,"int32"),[-1,1]),c=Gr(0,o,1,"int32"),l=ic(u,c),d=Fc(Dc(l,Ae(+t,"int32")),_c(l,Ae(-n,"int32"))),h=Pt([i,o],r.dtype);return cc(qd(Jl(cc(r,[-1,i,o])).map(e=>zc(d,e,h))),a)}function ns(e){let t;if(Array.isArray(e)){t=!1,s(null!=e&&e.length>0,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");const n=e[0].shape[0];for(let t=1;t<e.length;++t)s(e[t].shape[0]===n,()=>"Gram-Schmidt: Non-unique lengths found in the input vectors: "+`(${e[t].shape[0]} vs. ${n})`)}else t=!0,e=Bc(e,e.shape[0],0).map(e=>Tp(e,[0]));s(e.length<=e[0].shape[0],()=>`Gram-Schmidt: Number of vectors (${e.length}) exceeds `+`number of dimensions (${e[0].shape[0]}).`);const n=[],r=e
;for(let t=0;t<e.length;++t)n.push(Xu.tidy(()=>{let e=r[t];if(t>0)for(let r=0;r<t;++r){const t=Qu(lc(Qu(n[r],e)),n[r]);e=ic(e,t)}return nc(e,_p(e,"euclidean"))}));return t?qd(n,0):n}function rs(e){R().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(e+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}function as(e){const t=he(e);t.forEach(e=>e.dispose())}function ss(e,t=!1){if(s(e.rank>=2,()=>`qr() requires input tensor to have a rank >= 2, but got rank ${e.rank}`),2===e.rank)return is(e,t);{const n=e.shape.slice(0,e.shape.length-2).reduce((e,t)=>e*t),r=Jl(cc(e,[n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),a=[],s=[];r.forEach(e=>{const[n,r]=is(e,t);a.push(n),s.push(r)});const i=cc(qd(a,0),e.shape),o=cc(qd(s,0),e.shape);return[i,o]}}function is(e,t=!1){return Xu.tidy(()=>{s(2===e.shape.length,()=>`qr2d() requires a 2D Tensor, but got a ${e.shape.length}D Tensor.`);const n=e.shape[0],r=e.shape[1];let a=Th(n),i=Rc(e);const o=ya([[1]],[1,1]);let u=Rc(o);const c=n>=r?r:n;for(let e=0;e<c;++e){const t=i,s=u,c=a;[u,i,a]=Xu.tidy(()=>{const t=Gl(i,[e,e],[n-e,1]),s=_p(t),c=Gl(i,[e,e],[1,1]),l=zc(jl(c,0),ya([[-1]]),ya([[1]])),d=ic(c,Qu(l,s)),h=nc(t,d);u=1===h.shape[0]?Rc(o):Fd([o,Gl(h,[1,0],[h.shape[0]-1,h.shape[1]])],0);const p=rc(nc(jc(l,d),s)),f=Gl(i,[e,0],[n-e,r]),m=Qu(p,u),b=nl(u);if(0===e)i=ic(f,jc(m,jc(b,f)));else{const t=ic(f,jc(m,jc(b,f)));i=Fd([Gl(i,[0,0],[e,r]),t],0)}const g=nl(m),y=Gl(a,[0,e],[n,a.shape[1]-e]);if(0===e)a=ic(y,jc(jc(y,u),g));else{const t=ic(y,jc(jc(y,u),g));a=Fd([Gl(a,[0,0],[n,e]),t],1)}return[u,i,a]}),as([t,s,c])}return!t&&n>r&&(a=Gl(a,[0,0],[n,r]),i=Gl(i,[0,0],[r,r])),[a,i]})}function os(e,t,n=Lp.SUM_BY_NONZERO_WEIGHTS){const r=ke(e,"losses","computeWeightedLoss");let a=null;null!=t&&(a=ke(t,"weights","computeWeightedLoss"));const s=null==a?r:Qu(r,a);if(n===Lp.NONE)return s;if(n===Lp.SUM)return lc(s);if(n===Lp.MEAN){if(null==a)return Uh(s);{const e=r.size/a.size,t=nc(lc(s),lc(a));return e>1?nc(t,Ae(e)):t}}if(n===Lp.SUM_BY_NONZERO_WEIGHTS){if(null==a)return nc(lc(s),Ae(r.size));{const e=Qu(a,Bt(r.shape)),t=Zu(lc(Xh(e,Ae(0))),"float32");return nc(lc(s),t)}}throw Error(`Unknown reduction: ${n}`)}function us(e,t,n,r=Lp.SUM_BY_NONZERO_WEIGHTS){const a=ke(e,"labels","absoluteDifference"),s=ke(t,"predictions","absoluteDifference");let o=null;null!=n&&(o=ke(n,"weights","absoluteDifference")),i(a.shape,s.shape,"Error in absoluteDifference: ");const u=th(ic(a,s));return Pp(u,o,r)}function cs(e,t,n,r,a=Lp.SUM_BY_NONZERO_WEIGHTS){const s=ke(e,"labels","cosineDistance"),o=ke(t,"predictions","cosineDistance");let u=null;null!=r&&(u=ke(r,"weights","cosineDistance")),i(s.shape,o.shape,"Error in cosineDistance: ");const c=Ae(1),l=ic(c,lc(Qu(s,o),n,!0));return Pp(l,u,a)}function ls(e,t,n,r=Lp.SUM_BY_NONZERO_WEIGHTS){let a=ke(e,"labels","hingeLoss");const s=ke(t,"predictions","hingeLoss");let o=null;null!=n&&(o=ke(n,"weights","hingeLoss")),i(a.shape,s.shape,"Error in hingeLoss: ");const u=Ae(1);a=ic(Qu(Ae(2),a),u);const c=bp(ic(u,Qu(a,s)));return Pp(c,o,r)}function ds(e,t,n,r=1,a=Lp.SUM_BY_NONZERO_WEIGHTS){const s=ke(e,"labels","huberLoss"),o=ke(t,"predictions","huberLoss");let u=null;null!=n&&(u=ke(n,"weights","huberLoss")),i(s.shape,o.shape,"Error in huberLoss: ");const c=Ae(r),l=th(ic(o,s)),d=Hh(l,c),h=ic(l,d),p=gc(Qu(Ae(.5),sc(d)),Qu(c,h));return Pp(p,u,a)}function hs(e,t,n,r=1e-7,a=Lp.SUM_BY_NONZERO_WEIGHTS){const s=ke(e,"labels","logLoss"),o=ke(t,"predictions","logLoss");let u=null;null!=n&&(u=ke(n,"weights","logLoss")),i(s.shape,o.shape,"Error in logLoss: ");const c=Ae(1),l=Ae(r),d=rc(Qu(s,nd(gc(o,l)))),h=Qu(ic(c,s),nd(gc(ic(c,o),l))),p=ic(d,h);return Pp(p,u,a)}function ps(e,t,n,r=Lp.SUM_BY_NONZERO_WEIGHTS){const a=ke(e,"labels","meanSquaredError"),s=ke(t,"predictions","meanSquaredError");let o=null;null!=n&&(o=ke(n,"weights","meanSquaredError")),i(a.shape,s.shape,"Error in meanSquaredError: ");const u=Sp(a,s);return Pp(u,o,r)}function fs(e,t){const n=ke(e,"labels","sigmoidCrossEntropyWithLogits"),r=ke(t,"logits","sigmoidCrossEntropyWithLogits");i(n.shape,r.shape,"Error in sigmoidCrossEntropyWithLogits: ");const a=bp(r),s=Qu(r,n),o=Fh(cl(rc(th(r))));return gc(ic(a,s),o)}function ms(e,t,n,r=0,a=Lp.SUM_BY_NONZERO_WEIGHTS){let s=ke(e,"multiClassLabels","sigmoidCrossEntropy");const o=ke(t,"logits","sigmoidCrossEntropy");let u=null;if(null!=n&&(u=ke(n,"weights","sigmoidCrossEntropy")),i(s.shape,o.shape,"Error in sigmoidCrossEntropy: "),r>0){const e=Ae(r),t=Ae(1),n=Ae(.5);s=gc(Qu(s,ic(t,e)),Qu(n,e))}const c=fs(s,o);return Pp(c,u,a)}function bs(e,t,n=-1){if(-1===n&&(n=t.rank-1),n!==t.rank-1)throw Error("Softmax cross entropy along a non-last dimension is not yet "+`supported. Labels / logits was rank ${t.rank} `+`and dim was ${n}`);const r=ur((e,t,r)=>{const a=!0,s=Ph(t,[n],a),i=ic(Zu(t,"float32"),s);r([e,i]);const o=rc(Qu(i,e)),u=lc(o,[n]),c=(e,t)=>{const[r,a]=t,s=xt(e.shape,[n]);return[Qu(cc(e,s),ic(Zu(r,"float32"),cl(a))),Qu(cc(e,s),ic(cl(a),Zu(r,"float32")))]};return{value:u,gradFunc:c}});return r(e,t)}function gs(e,t,n,r=0,a=Lp.SUM_BY_NONZERO_WEIGHTS){let s=ke(e,"onehotLabels","softmaxCrossEntropy");const o=ke(t,"logits","softmaxCrossEntropy");let u=null;if(null!=n&&(u=ke(n,"weights","softmaxCrossEntropy")),i(s.shape,o.shape,"Error in softmaxCrossEntropy: "),r>0){const e=Ae(r),t=Ae(1),n=Ae(s.shape[1]);s=gc(Qu(s,ic(t,e)),nc(e,n))}const c=bs(s,o);return Pp(c,u,a)}function ys(e,t,n){const r=ke(e,"inputIndices","sparseReshape"),a=ke(t,"inputShape","sparseReshape"),s=ke(n,"newShape","sparseReshape");if(2!==r.rank)throw new Error(`Input indices should be Tensor2D but received shape\n        ${r.shape}`);if(1!==a.rank)throw new Error(`Input shape should be Tensor1D but received shape ${a.shape}`);if(1!==s.rank)throw new Error(`New shape should be Tensor1D but received shape ${s.shape}`);const i={inputIndices:r,inputShape:a,newShape:s},o=Xu.runKernel(eu,i);return{outputIndices:o[0],outputShape:o[1]}}Object.defineProperty(t,"__esModule",{value:!0});var xs=n(0),vs=n(300),ws=n(208),ks=n(303),Os=n(302),Is=n(301);const Ns="Abs",js="Acos",Ss="Acosh",Ts="Add",Cs="AddN",Es="All",$s="Any",As="ArgMax",_s="ArgMin",Ds="Asin",Fs="Asinh",Rs="Atan",Ms="Atanh",zs="Atan2",Ls="AvgPool",Ps="AvgPoolGrad",Bs="AvgPool3D",Ws="AvgPool3DGrad",Vs="BatchMatMul",Us="BatchToSpaceND",Gs="Bincount",Hs="BroadcastTo",qs="Cast",Ks="Ceil",Xs="ClipByValue",Ys="Complex",Zs="ComplexAbs",Qs="Concat",Js="Conv2D",ei="Conv2DBackpropFilter",ti="Conv2DBackpropInput",ni="Conv3D",ri="Conv3DBackpropFilterV2",ai="Conv3DBackpropInputV2",si="Cos",ii="Cosh",oi="Cumsum",ui="CropAndResize",ci="DenseBincount",li="DepthToSpace",di="DepthwiseConv2dNative",hi="DepthwiseConv2dNativeBackpropFilter",pi="DepthwiseConv2dNativeBackpropInput",fi="Diag",mi="Dilation2D",bi="Dilation2DBackpropInput",gi="Dilation2DBackpropFilter",yi="RealDiv",xi="Einsum",vi="Elu",wi="EluGrad",ki="Erf",Oi="Equal",Ii="Exp",Ni="ExpandDims",ji="Expm1",Si="FFT",Ti="Fill",Ci="FlipLeftRight",Ei="Floor",$i="FloorDiv",Ai="FusedBatchNorm",_i="GatherV2",Di="GatherNd",Fi="Greater",Ri="GreaterEqual",Mi="Identity",zi="IFFT",Li="Imag",Pi="IsFinite",Bi="IsInf",Wi="IsNan",Vi="LeakyRelu",Ui="Less",Gi="LessEqual",Hi="Log",qi="Log1p",Ki="LogicalAnd",Xi="LogicalNot",Yi="LogicalOr",Zi="LogSoftmax",Qi="LRN",Ji="LRNGrad",eo="Max",to="Maximum",no="MaxPool",ro="MaxPoolGrad",ao="MaxPool3D",so="MaxPool3DGrad",io="MaxPoolWithArgmax",oo="Mean",uo="Min",co="Minimum",lo="MirrorPad",ho="Mod",po="Multinomial",fo="Multiply",mo="Neg",bo="NotEqual",go="NonMaxSuppressionV3",yo="NonMaxSuppressionV4",xo="NonMaxSuppressionV5",vo="OnesLike",wo="OneHot",ko="Pack",Oo="PadV2",Io="Pow",No="Prelu",jo="Prod",So="Range",To="Real",Co="Reciprocal",Eo="Relu",$o="Reshape",Ao="ResizeNearestNeighbor",_o="ResizeNearestNeighborGrad",Do="ResizeBilinear",Fo="ResizeBilinearGrad",Ro="Relu6",Mo="Reverse",zo="Round",Lo="Rsqrt",Po="ScatterNd",Bo="Select",Wo="Selu",Vo="Slice",Uo="Sin",Go="Sinh",Ho="Sign",qo="Sigmoid",Ko="Softplus",Xo="Sqrt",Yo="Sum",Zo="SpaceToBatchND",Qo="SplitV",Jo="Softmax",eu="SparseReshape",tu="SparseToDense",nu="SquaredDifference",ru="Square",au="StridedSlice",su="Sub",iu="Tan",ou="Tanh",uu="Tile",cu="TopK",lu="Transform",du="Transpose",hu="Unique",pu="Unpack",fu="UnsortedSegmentSum",mu="ZerosLike",bu="Step",gu="RotateWithOffset",yu="_FusedMatMul",xu="FusedConv2D",vu="FusedDepthwiseConv2D",wu=1e-7,ku=1e-4;class Ou{refCount(e){return a("refCount")}incRef(e){return a("incRef")}timerAvailable(){return!0}time(e){return a("time")}read(e){return a("read")}readSync(e){return a("readSync")}numDataIds(){return a("numDataIds")}disposeData(e,t){return a("disposeData")}write(e,t,n){return a("write")}move(e,t,n,r,s){return a("move")}memory(){return a("memory")}floatPrecision(){return a("floatPrecision")}epsilon(){return 32===this.floatPrecision()?wu:ku}dispose(){return a("dispose")}}const Iu="tfjsflags";class Nu{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=_,this.populateURLFlags()}setPlatform(e,t){null!=this.platform&&console.warn(`Platform ${this.platformName} has already been set. `+`Overwriting the platform with ${t}.`),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},null!=this.urlFlags[e]){const t=this.urlFlags[e];console.warn(`Setting feature override from URL ${e}: ${t}.`),this.set(e,t)}}async getAsync(e){return e in this.flags?this.flags[e]:(this.flags[e]=await this.evaluateFlag(e),this.flags[e])}get(e){if(e in this.flags)return this.flags[e];const t=this.evaluateFlag(e);if(A(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. `+"Please use getAsync() instead.");return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(null==this.flagRegistry[e])throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,null!=this.flagRegistry[e].setHook&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(null==this.flagRegistry[e])throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(void 0===this.global||void 0===this.global.location||void 0===this.global.location.search)return;const e=this.getQueryParams(this.global.location.search);if(Iu in e){const t=e[Iu].split(",");t.forEach(e=>{const[t,n]=e.split(":");this.urlFlags[t]=F(t,n)})}}}let ju,Su=null;const Tu=P("kernelRegistry",()=>new Map),Cu=P("gradRegistry",()=>new Map);class Eu{constructor(e,t){this.backendTimer=e,this.logger=t,null==t&&(this.logger=new $u)}profileKernel(e,t,n){let r;const a=()=>{r=n()};let s;const i=K();if(this.backendTimer.timerAvailable())s=this.backendTimer.time(a);else{a();for(const e of r)e.dataSync();s=Promise.resolve({kernelMs:K()-i})}if(R().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let t=0;t<r.length;t++){const n=r[t];n.data().then(t=>{Z(t,n.dtype,e)})}const o={kernelName:e,outputs:r,inputs:t,timeMs:s.then(e=>e.kernelMs),extraInfo:s.then(e=>null!=e.getExtraProfileInfo?e.getExtraProfileInfo():"")};return o}logKernelProfile(e){const{kernelName:t,outputs:n,timeMs:r,inputs:a,extraInfo:s}=e;n.forEach(e=>{Promise.all([e.data(),r,s]).then(n=>{this.logger.logKernelProfile(t,e,n[0],n[1],a,n[2])})})}}class $u{logKernelProfile(e,t,n,r,a,s){const i="number"==typeof r?h(`${r}ms`,9):r.error,o=h(e,25),u=t.rank,c=t.size,l=h(t.shape.toString(),14);let d="";for(const e in a){const n=a[e];if(null!=n){const r=n.shape||t.shape,a=r.length;d+=`${e}: ${a}D ${a>0?r:""} `}}console.log(`%c${o}\t%c${i}\t%c${u}D ${l}\t%c${c}\t%c${d}\t%c${s}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}const Au=20,_u=3,Du=7;class Fu{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=c(e),null!=n){const e=n.length;s(e===this.size,()=>`Length of values '${e}' does not match the size `+`inferred by the shape '${this.size}'.`)}if("complex64"===t)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||m(t,this.size),this.strides=j(e)}set(e,...t){0===t.length&&(t=[0]),s(t.length===this.rank,()=>`The number of provided coordinates (${t.length}) must `+`match the rank (${this.rank})`);const n=this.locToIndex(t);this.values[n]=e}get(...e){0===e.length&&(e=[0]);let t=0;for(const n of e){if(n<0||n>=this.shape[t]){const t=`Requested out of range element at ${e}. `+`  Buffer shape=${this.shape}`;throw new Error(t)}t++}let n=e[e.length-1];for(let t=0;t<e.length-1;++t)n+=this.strides[t]*e[t];return this.values[n]}locToIndex(e){if(0===this.rank)return 0;if(1===this.rank)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(0===this.rank)return[];if(1===this.rank)return[e];const t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return Ru().makeTensor(this.values,this.shape,this.dtype)}}let Ru=null,Mu=null,zu=null;class Lu{constructor(e,t,n,r){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=c(e),this.strides=j(e),this.dataId=n,this.id=r,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const e=await this.data();return Mu.buffer(this.shape,this.dtype,e)}bufferSync(){return Mu.buffer(this.shape,this.dtype,this.dataSync())}async array(){const e=await this.data();return T(this.shape,e,"complex64"===this.dtype)}arraySync(){return T(this.shape,this.dataSync(),"complex64"===this.dtype)}async data(){this.throwIfDisposed();const e=Ru().read(this.dataId);if("string"===this.dtype){const t=await e;try{return t.map(e=>Y(e))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataSync(){this.throwIfDisposed();const e=Ru().readSync(this.dataId);if("string"===this.dtype)try{return e.map(e=>Y(e))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();const e=await Ru().read(this.dataId);return"string"===this.dtype?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(Ru().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return Mu.print(this,e)}clone(){return this.throwIfDisposed(),Mu.clone(this)}toString(e=!1){const t=this.dataSync();return ee(t,this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),Mu.cast(this,e)}variable(e=!0,t,n){return this.throwIfDisposed(),Ru().makeVariable(this,e,t,n)}}Object.defineProperty(Lu,Symbol.hasInstance,{value:e=>!!e&&null!=e.data&&null!=e.dataSync&&null!=e.throwIfDisposed}),ue();class Pu extends Lu{constructor(e,t,n,r){super(e.shape,e.dtype,e.dataId,r),this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and `+`previous value (${this.dtype}) must match`);if(!l(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and `+`previous value (${this.shape}) must match`);Ru().disposeTensor(this),this.dataId=e.dataId,Ru().incRef(this,null)}dispose(){Ru().disposeVariable(this),this.isDisposedInternal=!0}}var Bu,Wu,Vu,Uu,Gu;Object.defineProperty(Pu,Symbol.hasInstance,{value:e=>e instanceof Lu&&null!=e.assign&&e.assign instanceof Function}),function(e){e.R0="R0",e.R1="R1",e.R2="R2",e.R3="R3",e.R4="R4",e.R5="R5",e.R6="R6"}(Bu||(Bu={})),function(e){e.float32="float32",e.int32="int32",e.bool="int32",e.complex64="complex64"}(Wu||(Wu={})),function(e){e.float32="float32",e.int32="int32",e.bool="bool",e.complex64="complex64"}(Vu||(Vu={})),function(e){e.float32="float32",e.int32="float32",e.bool="float32",e.complex64="complex64"}(Uu||(Uu={})),function(e){e.float32="complex64",e.int32="complex64",e.bool="complex64",e.complex64="complex64"}(Gu||(Gu={}));const Hu={float32:Uu,int32:Wu,bool:Vu,complex64:Gu};class qu{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map(e=>e.name)))}}}dispose(){for(const e in this.registeredVariables)this.registeredVariables[e].dispose()}}class Ku{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new qu}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then(()=>{});if(null!=this.backendInstance)return;const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t],r=await this.initializeBackend(n).success;if(r)return void await this.setBackend(n)}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make `+"sure to await tf.ready() or await tf.setBackend() before calling other methods");if(null==this.backendInstance){const{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been `+"initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods");this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry)){if(!(e in this.registryFactory))return null;{const{asyncInit:t}=this.initializeBackend(e);if(t)return null}}return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,n=1){return e in this.registryFactory?(console.warn(`${e} backend was already registered. `+"Reusing existing backend factory."),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(null==this.registryFactory[e])throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,null==this.registry[e]){this.backendInstance=null;const{success:t,asyncInit:n}=this.initializeBackend(e),r=n?await t:t;if(!r)return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new Eu(this.backendInstance),!0}setupRegisteredKernels(){const e=V(this.backendName);e.forEach(e=>{null!=e.setupFunc&&e.setupFunc(this.backendInstance)})}disposeRegisteredKernels(e){const t=V(e);t.forEach(t=>{null!=t.disposeFunc&&t.disposeFunc(this.registry[e])})}initializeBackend(e){const t=this.registryFactory[e];if(null==t)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{const n=t.factory();if(!n||n instanceof Ou||"function"!=typeof n.then)return this.registry[e]=n,{success:!0,asyncInit:!1};{const t=++this.pendingBackendInitId,r=n.then(n=>!(t<this.pendingBackendInitId)&&(this.registry[e]=n,this.pendingBackendInit=null,!0)).catch(n=>!(t<this.pendingBackendInitId)&&(this.pendingBackendInit=null,console.warn(`Initialization of backend ${e} failed`),console.warn(n.stack||n.message),!1));return this.pendingBackendInit=r,{success:r,asyncInit:!0}}}catch(t){return console.warn(`Initialization of backend ${e} failed`),console.warn(t.stack||t.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority)}initializeBackendsAndReturnBest(){const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t],{success:r,asyncInit:a}=this.initializeBackend(n);if(a||r)return{name:n,asyncInit:a}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){const n=this.state.tensorInfo.get(t),r=n.backend,a=this.readSync(t),s=r.refCount(t);r.disposeData(t,!0),n.backend=e,e.move(t,a,n.shape,n.dtype,s),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n,r=null;if(null==t){if("function"!=typeof e)throw new Error("Please provide a function to tidy()");t=e}else{if("string"!=typeof e&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!=typeof t)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");r=e}return this.scopedRun(()=>this.startScope(r),()=>this.endScope(n),()=>(n=t(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n))}scopedRun(e,t,n){e();try{const e=n();return t(),e}catch(e){throw t(),e}}nextTensorId(){return Ku.nextTensorId++}nextVariableId(){return Ku.nextVariableId++}clone(e){const t=Xu.runKernel(Mi,{x:e}),n={x:e},r=e=>({x:()=>{const t="float32",n={x:e},r={dtype:t};return Xu.runKernel(qs,n,r)}}),a=[];return this.addTapeNode(this.state.activeScope.name,n,[t],r,a,{}),t}runKernel(e,t,n){const r=null!=B(e,this.backendName);if(!r)throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){const r=this.backend.numDataIds();let a=0;n.forEach(e=>{a+="complex64"===e.dtype?3:1});const s=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],i=r-t-a-s;if(i>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak `+`(${i} data ids) after running '${e}'`)}runKernelFunc(e){let t,n=[];const r=this.isTapeOn(),a=this.state.numBytes,i=this.state.numTensors;let o,u;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0),null==this.backendName&&this.backend;const c=me(e)?e.kernelName:null!=this.state.activeScope?this.state.activeScope.name:"";if(me(e)){const{kernelName:t,inputs:a,attrs:i}=e;null==this.backendName&&this.backend;const c=B(t,this.backendName);s(null!=c,()=>`Cannot find registered kernel '${t}' for backend '${this.backendName}'`),o=(()=>{const e=this.backend.numDataIds();u=c.kernelFunc({inputs:a,attrs:i,backend:this.backend});const s=Array.isArray(u)?u:[u];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(t,e,s);const o=s.map(e=>{if(null!=e.rank)return e;const{dataId:t,shape:n,dtype:r}=e;return this.makeTensorFromDataId(t,n,r)});if(r){const e=this.getTensorsForGradient(t,a,o);n=this.saveTensorsForBackwardMode(e)}return o})}else{const{forwardFunc:t}=e,a=e=>{r&&(n=e.map(e=>this.keep(this.clone(e))))};o=(()=>{const e=this.backend.numDataIds();u=this.tidy(()=>t(this.backend,a));const n=Array.isArray(u)?u:[u];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(c,e,n),n})}const{inputs:l,attrs:d}=e,h=me(e)?null:e.backwardsFunc;let p;return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(p=this.profiler.profileKernel(c,l,()=>o()),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(p),t=p.outputs):t=o()}),r&&this.addTapeNode(c,l,t,h,n,d),this.state.profiling&&this.state.activeProfile.kernels.push({name:c,bytesAdded:this.state.numBytes-a,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-i,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(l).map(e=>null!=l[e]?l[e].shape:null),outputShapes:t.map(e=>e.shape),kernelTimeMs:p.timeMs,extraInfo:p.extraInfo}),Array.isArray(u)?t:t[0]}saveTensorsForBackwardMode(e){const t=e.map(e=>this.keep(this.clone(e)));return t}getTensorsForGradient(e,t,n){const r=W(e);if(null!=r){const e=r.inputsToSave||[],a=r.outputsToSave||[];let i;r.saveAllInputs?(s(Array.isArray(t),()=>"saveAllInputs is true, expected inputs to be an array."),i=Object.keys(t).map(e=>t[e])):i=e.map(e=>t[e]);const o=n.filter((e,t)=>a[t]);return i.concat(o)}return[]}makeTensor(e,t,n,r){if(null==e)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",r=r||this.backend;let a=e;"string"===n&&w(e[0])&&(a=e.map(e=>X(e)));const s=r.write(a,t,n),i=new Lu(t,n,s,this.nextTensorId());if(this.trackTensor(i,r),"string"===n){const e=this.state.tensorInfo.get(s),t=v(a);this.state.numBytes+=t-e.bytes,e.bytes=t}return i}makeTensorFromDataId(e,t,n,r){n=n||"float32";const a=new Lu(t,n,e,this.nextTensorId());return this.trackTensor(a,r),a}makeVariable(e,t=!0,n,r){n=n||this.nextVariableId().toString(),null!=r&&r!==e.dtype&&(e=e.cast(r));const a=new Pu(e,t,n,this.nextTensorId());if(null!=this.state.registeredVariables[a.name])throw new Error(`Variable with name ${a.name} was already registered`);return this.state.registeredVariables[a.name]=a,this.incRef(a,this.backend),a}trackTensor(e,t){this.state.numTensors++,"string"===e.dtype&&this.state.numStringTensors++;let n=0;"complex64"!==e.dtype&&"string"!==e.dtype&&(n=e.size*x(e.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n})),e instanceof Pu||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;const t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,"string"===e.dtype&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),"complex64"!==e.dtype&&"string"!==e.dtype){const t=e.size*x(e.dtype);this.state.numBytes-=t}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(const e in this.state.registeredVariables){const t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),null!=this.state.registeredVariables[e.name]&&delete this.state.registeredVariables[e.name]}memory(){const e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,null==e.reasons&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;const t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map(e=>e.totalBytesSnapshot)),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(const e of this.state.activeProfile.kernels)e.kernelTimeMs=await e.kernelTimeMs,e.extraInfo=await e.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(e,t,n,r,a,s){const i={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:a},o=W(e);null!=o&&(r=o.gradFunc),null!=r&&(i.gradient=(e=>(e=e.map((e,t)=>{if(null==e){const e=n[t],r=E(e.size,e.dtype);return this.makeTensor(r,e.shape,e.dtype)}return e}),r(e.length>1?e:e[0],a,s)))),this.state.activeTape.push(i)}keep(e){return e.kept=!0,e}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){const t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){const t=he(e),n=new Set(t.map(e=>e.id));for(let e=0;e<this.state.activeScope.track.length;e++){const t=this.state.activeScope.track[e];t.kept||n.has(t.id)||t.dispose()}const r=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach(e=>{e.kept||e.scopeId!==r.id||this.track(e)})}gradients(e,t,n,r=!1){if(s(t.length>0,()=>"gradients() received an empty list of xs."),null!=n&&"float32"!==n.dtype)throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);const a=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",e));s(a instanceof Lu,()=>"The result y returned by f() must be a tensor.");const i=Q(this.state.activeTape,t,a);if(!r&&0===i.length&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{const e={};e[a.id]=null==n?be(a.shape):n,J(e,i,e=>this.tidy(e),ye);const r=t.map(t=>e[t.id]);return 0===this.state.gradientDepth&&(this.state.activeTape.forEach(e=>{for(const t of e.saved)t.dispose()}),this.state.activeTape=null),{value:a,grads:r}})}customGrad(e){return s(N(e),()=>"The f passed in customGrad(f) must be a function."),(...t)=>{let n;s(t.every(e=>e instanceof Lu),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");const r={};t.forEach((e,t)=>{r[t]=e});const a=(r,a)=>(n=e(...t,a),s(n.value instanceof Lu,()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),s(N(n.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),n.value),i=(e,r)=>{const a=n.gradFunc(e,r),i=Array.isArray(a)?a:[a];s(i.length===t.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),s(i.every(e=>e instanceof Lu),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");const o={};return i.forEach((e,t)=>{o[t]=(()=>e)}),o};return this.runKernelFunc({forwardFunc:a,backwardsFunc:i,inputs:r})}}readSync(e){const t=this.state.tensorInfo.get(e);return t.backend.readSync(e)}read(e){const t=this.state.tensorInfo.get(e);return t.backend.read(e)}async time(e){const t=K(),n=await this.backend.time(e);return n.wallMs=K()-t,n}track(e){return null!=this.state.activeScope&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new qu;for(const e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}Ku.nextTensorId=0,Ku.nextVariableId=0;const Xu=ge(),Yu="__op",Zu=Ie({cast_:Ne}),Qu=Ie({mul_:je}),Ju=Ie({step_:Se}),ec={kernelName:Ns,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Qu(e,Ju(Zu(n,"float32"),-1))}}},tc=Ie({floorDiv_:Te}),nc=Ie({div_:Ce}),rc=Ie({neg_:Ee}),ac=Ie({sqrt_:_e}),sc=Ie({square_:De}),ic=Ie({sub_:Fe}),oc={kernelName:js,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{
const t=sc(Zu(n,"float32")),r=ac(ic(Ae(1),t));return rc(nc(e,r))}}}},uc={kernelName:Ss,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=ac(ic(sc(Zu(n,"float32")),1));return nc(e,t)}}}},cc=Ie({reshape_:ze}),lc=Ie({sum_:Le}),dc={kernelName:Ts,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=Me(n.shape,r.shape),s=()=>{let t=e;const r=Re(n.shape,a);return r.length>0&&(t=lc(t,r)),cc(t,n.shape)},i=()=>{let t=e;const n=Re(r.shape,a);return n.length>0&&(t=lc(t,n)),cc(t,r.shape)};return{a:s,b:i}}},hc={kernelName:Cs,saveAllInputs:!0,gradFunc:(e,t)=>{const n={};return t.forEach((t,r)=>{n[r]=(()=>e.clone())}),n}},pc=Ie({zerosLike_:Pe}),fc={kernelName:As,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>pc(n)}}},mc={kernelName:_s,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>pc(n)}}},bc={kernelName:Ds,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>nc(e,ac(ic(Ae(1),sc(Zu(n,"float32")))))}}},gc=Ie({add_:Be}),yc={kernelName:Fs,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=ac(gc(Ae(1),sc(Zu(n,"float32"))));return nc(e,t)}}}},xc={kernelName:zs,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=Me(n.shape,r.shape),s=()=>{const t=gc(sc(n),sc(r));let s=Qu(e,nc(r,t));const i=Re(n.shape,a);return i.length>0&&(s=lc(s,i)),cc(s,n.shape)},i=()=>{const t=gc(sc(n),sc(r));let s=rc(Qu(e,nc(n,t)));const i=Re(r.shape,a);return i.length>0&&(s=lc(s,i)),cc(s,r.shape)};return{a:s,b:i}}},vc={kernelName:Rs,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>nc(e,gc(sc(Zu(n,"float32")),1))}}},wc={kernelName:Ms,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>nc(e,ic(Ae(1),sc(Zu(n,"float32"))))}}},kc=Ie({avgPool3dGrad_:We}),Oc={kernelName:Bs,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{filterSize:a,strides:s,pad:i,dimRoundingMode:o}=n;return{x:()=>kc(e,r,a,s,i,o)}}},Ic=Ie({avgPoolGrad_:Ve}),Nc={kernelName:Ls,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{filterSize:a,strides:s,pad:i}=n;return{x:()=>Ic(e,r,a,s,i)}}},jc=Ie({matMul_:Ue}),Sc={kernelName:Vs,inputsToSave:["a","b"],gradFunc:(e,t,n)=>{const[r,a]=t,{transposeA:s,transposeB:i}=n;return s||i?!s&&i?{a:()=>jc(e,a,!1,!1),b:()=>jc(e,r,!0,!1)}:s&&!i?{a:()=>jc(a,e,!1,!0),b:()=>jc(r,e,!1,!1)}:{a:()=>jc(a,e,!0,!0),b:()=>jc(e,r,!0,!0)}:{a:()=>jc(e,a,!1,!0),b:()=>jc(r,e,!0,!1)}}},Tc=Ie({spaceToBatchND_:Ge}),Cc={kernelName:Us,gradFunc:(e,t,n)=>{const{blockShape:r,crops:a}=n;return{x:()=>Tc(e,r,a)}}},Ec={kernelName:Hs,gradFunc:(e,t,n)=>{const r=n,a=r.inputShape,s=r.shape,i=Array.from(s);for(let e=a.length-1;e>=0;e--)if(a[e]===s[e])i[e]=1;else if(1!==a[e])throw new Error(`broadcastTo(): [${a}] cannot be broadcast to [${s}].`);const o=[];for(let e=0;e<i.length;e++)i[e]>1&&o.push(e);return{x:()=>lc(e,o,!0)}}},$c={kernelName:qs,gradFunc:e=>({x:()=>e.clone()})},Ac={kernelName:Ks,gradFunc:e=>({x:()=>pc(e)})},_c=Ie({greaterEqual_:He}),Dc=Ie({lessEqual_:qe}),Fc=Ie({logicalAnd_:Ke}),Rc=Ie({clone_:Xe}),Mc=Ie({broadcastTo_:Ye}),zc=Ie({where_:Ze}),Lc={kernelName:Xs,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{clipValueMin:a,clipValueMax:s}=n;return{x:()=>zc(Fc(_c(r,a),Dc(r,s)),e,pc(e))}}},Pc={kernelName:Zs,inputsToSave:["x"],gradFunc:ec.gradFunc},Bc=Ie({split_:Qe}),Wc={kernelName:Qs,saveAllInputs:!0,gradFunc:(e,t,n)=>{const r=t.map(e=>e.shape),{axis:a}=n,s=p(a,t[0].shape)[0],i=r.map(e=>e[s]),o=Bc(e,i,s);return o.map(e=>()=>e)}},Vc=Ie({conv2DBackpropFilter_:Je}),Uc=Ie({conv2DBackpropInput_:et}),Gc={kernelName:Js,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[r,a]=t,{dilations:i,strides:o,pad:u,dataFormat:c}=n;return s(ct(i),()=>"Error in gradient of conv2D: dilation rates greater than 1 "+`are not yet supported in gradients. Got dilations '${i}'`),{x:()=>Uc(r.shape,e,a,o,u,c),filter:()=>Vc(r,e,a.shape,o,u,c)}}},Hc=Ie({conv2d_:dt}),qc={kernelName:ti,inputsToSave:["dy","filter"],gradFunc:(e,t,n)=>{const[r,a]=t,{strides:s,pad:i,dataFormat:o,dimRoundingMode:u}=n;return{dy:()=>Hc(e,a,s,i,o,1,u),filter:()=>Vc(e,r,a.shape,s,i,o,u)}}},Kc=Ie({conv3DBackpropFilter_:ht}),Xc=Ie({conv3DBackpropInput_:pt}),Yc={kernelName:ni,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:r,strides:a,pad:i}=n;s(ct(r),()=>"Error in gradient of conv3D: dilation rates greater than 1 are "+`not yet supported in gradients. Got dilations '${r}'`);const[o,u]=t;return{x:()=>Xc(o.shape,e,u,a,i),filter:()=>Kc(o,e,u.shape,a,i)}}},Zc=Ie({sin_:ft}),Qc={kernelName:si,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Qu(rc(Zc(Zu(n,"float32"))),e)}}},Jc=Ie({sinh_:mt}),el={kernelName:ii,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Qu(Jc(Zu(n,"float32")),e)}}},tl=Ie({cumsum_:kt}),nl=Ie({transpose_:Ot}),rl={kernelName:oi,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{axis:a,exclusive:s,reverse:i}=n;return{x:()=>{const t=vt([a],r.rank);let n=tl(e,a,s,!i);return null!=t&&(n=nl(n,t)),n}}}},al=Ie({depthwiseConv2dNativeBackpropFilter_:It}),sl=Ie({depthwiseConv2dNativeBackpropInput_:Nt}),il={kernelName:di,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:r,strides:a,pad:i,dimRoundingMode:o}=n,u=null==r?[1,1]:r;s(ct(u),()=>"Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations "+`'${u}'`);const[c,l]=t;return s(4===c.rank,()=>"Error in gradient of depthwiseConv2dNative: input must be "+`rank 4, but got rank ${c.rank}.`),s(4===l.rank,()=>"Error in gradient of depthwiseConv2dNative: filter must be "+`rank 4, but got rank ${l.rank}.`),s(c.shape[3]===l.shape[2],()=>"Error in gradient of depthwiseConv2d: number of input "+`channels (${c.shape[3]}) must match the inChannels dimension `+`in filter ${l.shape[2]}.`),s(lt(a,u),()=>"Error in gradient of depthwiseConv2d: Either strides or "+`dilations must be  1. Got strides ${a} and dilations `+`'${u}'.`),null!=o&&s(d(i),()=>"Error in depthwiseConv2d: pad must be an integer when using, "+`dimRoundingMode ${o} but got pad ${i}.`),{x:()=>sl(c.shape,e,l,a,i,r,o),filter:()=>al(c,e,l.shape,a,i,r,o)}}},ol={kernelName:mi,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[r,a]=t,s={x:r,filter:a,dy:e},i={x:r,filter:a,dy:e};return{x:()=>Xu.runKernel(bi,s,n),filter:()=>Xu.runKernel(gi,i,n)}}},ul={kernelName:vi,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t,r={dy:e,y:n};return{x:()=>Xu.runKernel(wi,r)}}},cl=Ie({exp_:jt}),ll={kernelName:ki,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,r=Qu(cl(rc(sc(n))),2/Math.sqrt(Math.PI));return{x:()=>Qu(e,r)}}},dl={kernelName:Ii,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Qu(e,n)}}},hl={kernelName:Ni,inputsToSave:["input"],gradFunc:(e,t)=>{const[n]=t;return{input:()=>cc(e,n.shape)}}},pl={kernelName:ji,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Qu(e,cl(n))}}},fl={kernelName:Ei,gradFunc:e=>({x:()=>pc(e)})},ml={kernelName:$i,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=Me(n.shape,r.shape),s=()=>{const t=nc(e,Zu(r,"float32")),s=Re(n.shape,a);return s.length>0?cc(lc(t,s),n.shape):t},i=()=>{let t=Qu(e,Zu(n,"float32"));const s=Re(r.shape,a);s.length>0&&(t=cc(lc(t,s),r.shape));const i=sc(r);return rc(nc(t,Zu(i,"float32")))};return{a:s,b:i}}},bl=Ie({rsqrt_:St}),gl=Ie({tile_:Tt}),yl={kernelName:Ai,inputsToSave:["x","mean","variance","scale"],gradFunc:(e,t,n)=>{const{varianceEpsilon:r}=n,[a,s,i,o]=t,u=null==o?Ae(1):o,c=Re(s.shape,a.shape),l=[];if(1===s.rank){for(let e=0;e<a.shape.length-1;++e)l.push(a.shape[e]);l.push(1)}const d=ic(a,s),h=Qu(e,u),p=bl(gc(i,Ae(r))),f=Qu(Qu(Qu(p,p),p),Ae(-.5)),m=()=>1===s.rank?cc(Qu(Qu(e,gl(cc(p,[1,1,1,s.shape[0]]),l)),u),a.shape):cc(Qu(Qu(e,p),u),a.shape),b=()=>{let e=Qu(Qu(p,Ae(-1)),h);return 1===s.rank&&(e=lc(e,c)),cc(e,s.shape)},g=()=>{let e=Qu(Qu(f,d),h);return 1===s.rank&&(e=lc(e,c)),cc(e,s.shape)},y=()=>{const t=Qu(d,p);let n=Qu(e,t);return 1===s.rank&&(n=lc(n,c)),cc(n,s.shape)},x=()=>{let t=e;return 1===s.rank&&(t=lc(t,c)),cc(t,s.shape)};return{x:m,mean:b,variance:g,scale:y,offset:x}}},xl=Ie({unsortedSegmentSum_:Ct}),vl={kernelName:_i,inputsToSave:["x","indices"],gradFunc:(e,t,n)=>{const[r,a]=t,{axis:s}=n,i=p(s,r.shape)[0],o=()=>{const t=r.shape,n=a.size,o=t.slice(0,i),u=o.length,c=t.slice(s,t.length).slice(1),l=c.length,d=Et(0,u),h=Et(u+1,u+1+l),p=$t([o,[n],c]),f=cc(e,p),m=cc(a,[n]),b=$t([[u],d,h]),g=nl(f,b);let y=xl(g,m,r.shape[i]);const x=wt(b);return y=nl(y,x),y};return{x:o,indices:()=>a}}},wl={kernelName:Ri,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>pc(n),b:()=>pc(r)}}},kl={kernelName:Mi,gradFunc:e=>({x:()=>Zu(e,"float32")})},Ol={kernelName:Pi,gradFunc:e=>({x:()=>pc(e)})},Il={kernelName:Bi,gradFunc:e=>({x:()=>pc(e)})},Nl={kernelName:Wi,gradFunc:e=>({x:()=>pc(e)})},jl=Ie({greater_:At}),Sl={kernelName:Vi,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{alpha:a}=n,s=jl(r,0);return{x:()=>zc(s,e,Qu(e,a))}}},Tl={kernelName:qi,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>nc(e,gc(n,1))}}},Cl={kernelName:Hi,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>nc(e,Zu(n,"float32"))}}},El={kernelName:Zi,inputsToSave:[],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r]=t,{axis:a}=n;return{logits:()=>{const t=!0,n=cl(r);return ic(e,Qu(lc(e,a,t),n))}}}},$l=Ie({localResponseNormalizationBackprop_:_t}),Al={kernelName:Qi,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,a]=t,{depthRadius:s,bias:i,alpha:o,beta:u}=n;return{x:()=>$l(r,a,e,s,i,o,u)}}},_l=Ie({equal_:Dt}),Dl={kernelName:eo,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const r=n,{reductionIndices:a}=r,s=t[0],i=t[1],o=p(a,s.shape),u=Ft(e,i,s,o);return{x:()=>u.x()}}},Fl=Ie({less_:Rt}),Rl={kernelName:to,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=()=>Qu(e,Zu(_c(n,r),"float32")),s=()=>Qu(e,Zu(Fl(n,r),"float32"));return{a:a,b:s}}},Ml=Ie({maxPool3dGrad_:Mt}),zl={kernelName:ao,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,a]=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:u}=n;return{x:()=>Ml(e,r,a,s,i,o,u)}}},Ll=Ie({maxPoolGrad_:zt}),Pl={kernelName:no,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,a]=t,{filterSize:s,strides:i,pad:o}=n;return{x:()=>Ll(e,r,a,s,i,o)}}},Bl=Ie({complex_:Lt}),Wl={kernelName:oo,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{axis:a}=n,s=p(a,r.shape),i=yt(r.shape,s),o=i[1],u=c(o),l=()=>{const t=r.shape.slice();s.forEach(e=>{t[e]=1});const n=cc(e,t),a=nc(Qu(n,Bt(r.shape,"float32")),u);return a};return{x:l}}},Vl={kernelName:uo,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const r=n,{axis:a}=r,[s,i]=t,o=p(a,s.shape),u=Ft(e,i,s,o);return{x:()=>u.x()}}},Ul={kernelName:co,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=()=>Qu(e,Zu(Dc(n,r),"float32")),s=()=>Qu(e,Zu(jl(n,r),"float32"));return{a:a,b:s}}},Gl=Ie({slice_:Wt}),Hl={kernelName:lo,inputsToSave:["x"],gradFunc:(e,t,n)=>{const r=t[0],{paddings:a}=n,s=a.map(e=>e[0]);return{x:()=>Gl(e,s,r.shape)}}},ql=Ie({floor_:Vt}),Kl={kernelName:ho,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=Me(n.shape,r.shape),s=()=>{const t=Re(n.shape,a);return t.length>0?cc(lc(e,t),n.shape):e},i=()=>{const t=Qu(e,rc(ql(nc(n,r)))),s=Re(r.shape,a);return s.length>0?cc(lc(t,s),r.shape):t};return{a:s,b:i}}},Xl={kernelName:fo,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=Me(n.shape,r.shape),s=()=>{const t=Qu(e,Zu(r,"float32")),s=Re(n.shape,a);return s.length>0?cc(lc(t,s),n.shape):t},i=()=>{const t=Qu(e,Zu(n,"float32")),s=Re(r.shape,a);return s.length>0?cc(lc(t,s),r.shape):t};return{a:s,b:i}}},Yl={kernelName:mo,gradFunc:e=>({x:()=>rc(e)})},Zl={kernelName:wo,inputsToSave:["indices"],gradFunc:(e,t)=>{const n=t[0];return{indices:()=>Pt(n.shape,"float32")}}},Ql={kernelName:vo,gradFunc:e=>({x:()=>pc(e)})},Jl=Ie({unstack_:Ut}),ed={kernelName:ko,saveAllInputs:!0,gradFunc:(e,t,n)=>{const{axis:r}=n,a=Jl(e,r);return a.map(e=>()=>e)}},td={kernelName:Oo,inputsToSave:["x"],gradFunc:(e,t,n)=>{const r=t[0],{paddings:a}=n,s=a.map(e=>e[0]);return{x:()=>Gl(e,s,r.shape)}}},nd=Ie({log_:Gt}),rd=Ie({pow_:Ht}),ad={kernelName:Io,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(e,t)=>{const[n,r,a]=t,s=n,i=r,o=Me(s.shape,i.shape),u=()=>{const t=Zu(i,"float32");let n=Qu(e,Qu(t,rd(s,ic(t,Ae(1)))));const r=Re(s.shape,o);return r.length>0&&(n=lc(n,r)),cc(n,s.shape)},c=()=>{const t=jl(s,0),n=zc(t,nd(s),pc(s));let r=Qu(e,Qu(a,n));const u=Re(i.shape,o);return u.length>0&&(r=lc(r,u)),cc(r,i.shape)};return{a:u,b:c}}},sd={kernelName:No,inputsToSave:["x","alpha"],gradFunc:(e,t)=>{const[n,r]=t,a=jl(n,0);return{x:()=>zc(a,e,Qu(e,r)),alpha:()=>{let t=zc(a,pc(e),Qu(e,n));const s=Re(r.shape,e.shape);return s.length>0&&(t=lc(t,s)),cc(t,r.shape)}}}},id={kernelName:yi,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=Me(n.shape,r.shape),s=()=>{const t=nc(e,Zu(r,"float32")),s=Re(n.shape,a);return s.length>0?cc(lc(t,s),n.shape):t},i=()=>{let t=Qu(e,Zu(n,"float32"));const s=Re(r.shape,a);s.length>0&&(t=cc(lc(t,s),r.shape));const i=sc(r);return rc(nc(t,Zu(i,"float32")))};return{a:s,b:i}}},od={kernelName:Co,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>nc(e,rc(sc(n)))}}},ud={kernelName:Ro,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,r=Qu(Dc(n,6),Ju(n));return{x:()=>Qu(e,Zu(r,"float32"))}}},cd={kernelName:Eo,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Qu(e,Zu(Ju(n),"float32"))}}},ld={kernelName:$o,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>cc(e,n.shape)}}},dd={kernelName:Do,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[r]=t,a={dy:e,images:r},s=()=>Xu.runKernel(Fo,a,n);return{images:s}}},hd={kernelName:Ao,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[r]=t,a={dy:e,images:r},s=()=>Xu.runKernel(_o,a,n);return{images:s}}},pd=Ie({reverse_:qt}),fd={kernelName:Mo,gradFunc:(e,t,n)=>{const{dims:r}=n,a=p(r,e.shape);return{x:()=>pd(e,a)}}},md={kernelName:zo,gradFunc:e=>({x:()=>pc(e)})},bd={kernelName:Lo,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>rc(nc(e,Qu(rd(n,1.5),2)))}}},gd=Ie({logicalNot_:Kt}),yd={kernelName:Bo,inputsToSave:["condition"],gradFunc:(e,t)=>{const[n]=t;return{condition:()=>Zu(pc(n),"float32"),t:()=>Qu(e,Zu(n,e.dtype)),e:()=>Qu(e,Zu(gd(n),e.dtype))}}},xd=1.7580993408473768,vd=1.0507009873554805,wd={kernelName:Wo,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=jl(n,Ae(0)),r=Ae(xd),a=Ae(vd),s=Qu(e,a),i=Qu(Qu(e,r),cl(Zu(n,"float32")));return zc(t,s,i)}}}},kd={kernelName:qo,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Qu(e,Qu(n,ic(Ae(1),n)))}}},Od={kernelName:Ho,gradFunc:e=>({x:()=>pc(e)})},Id=Ie({cos_:Xt}),Nd={kernelName:Uo,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Qu(Id(Zu(n,"float32")),e)}}},jd=Ie({cosh_:Yt}),Sd={kernelName:Go,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Qu(jd(Zu(n,"float32")),e)}}},Td=Ie({pad_:Zt}),Cd={kernelName:Vo,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{begin:a,size:s}=n,i=r.shape,[o,u]=Qt(r,a,s),c=[];for(let t=0;t<e.rank;t++)c.push([o[t],i[t]-o[t]-u[t]]);return{x:()=>Td(e,c)}}},Ed={kernelName:Jo,outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r]=t,{dim:a}=n,s=!0,i=Qu(e,r);return{logits:()=>ic(i,Qu(lc(i,[a],s),r))}}},$d=Ie({sigmoid_:Jt}),Ad={kernelName:Ko,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Qu(e,$d(n))}}},_d=Ie({batchToSpaceND_:en}),Dd={kernelName:Zo,gradFunc:(e,t,n)=>{const{blockShape:r,paddings:a}=n;return{x:()=>_d(e,r,a)}}},Fd=Ie({concat_:tn}),Rd={kernelName:Qo,gradFunc:(e,t,n)=>{const{axis:r}=n;return{x:()=>Fd(e,r)}}},Md={kernelName:Xo,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>nc(e,Qu(ac(Zu(n,"float32")),2))}}},zd={kernelName:ru,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Qu(e,Qu(Zu(n,"float32"),2))}}},Ld={kernelName:nu,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=Ae(2),s=()=>Qu(e,Qu(a,ic(n,r))),i=()=>Qu(e,Qu(a,ic(r,n)));return{a:s,b:i}}},Pd={kernelName:bu,gradFunc:e=>({x:()=>pc(e)})},Bd={kernelName:su,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=Me(n.shape,r.shape),s=()=>{let t=e;const r=Re(n.shape,a);return r.length>0&&(t=lc(t,r)),cc(t,n.shape)},i=()=>{let t=e;const n=Re(r.shape,a);return n.length>0&&(t=lc(t,n)),cc(rc(t),r.shape)};return{a:s,b:i}}},Wd={kernelName:Yo,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,a=r.shape.slice(),{axis:s}=n,i=p(s,r.shape);i.forEach(e=>{a[e]=1});const o=cc(e,a),u=Qu(o,Bt(r.shape,"float32"));return{x:()=>u}}},Vd={kernelName:iu,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>nc(e,sc(Id(n)))}}},Ud={kernelName:ou,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Qu(ic(Ae(1),sc(n)),e)}}},Gd={kernelName:uu,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{reps:a}=n,s=()=>{let t=pc(r);if(1===r.rank)for(let n=0;n<a[0];++n)t=gc(t,Gl(e,[n*r.shape[0]],[r.shape[0]]));else if(2===r.rank)for(let n=0;n<a[0];++n)for(let s=0;s<a[1];++s)t=gc(t,Gl(e,[n*r.shape[0],s*r.shape[1]],[r.shape[0],r.shape[1]]));else if(3===r.rank)for(let n=0;n<a[0];++n)for(let s=0;s<a[1];++s)for(let i=0;i<a[2];++i)t=gc(t,Gl(e,[n*r.shape[0],s*r.shape[1],i*r.shape[2]],[r.shape[0],r.shape[1],r.shape[2]]));else{if(4!==r.rank)throw new Error("Gradient for tile operation is not implemented for rank-"+`${r.rank} tensors yet.`);for(let n=0;n<a[0];++n)for(let s=0;s<a[1];++s)for(let i=0;i<a[2];++i)for(let o=0;o<a[3];++o)t=gc(t,Gl(e,[n*r.shape[0],s*r.shape[1],i*r.shape[2],o*r.shape[3]],[r.shape[0],r.shape[1],r.shape[2],r.shape[3]]))}return t};return{x:s}}},Hd={kernelName:du,gradFunc:(e,t,n)=>{const r=n,{perm:a}=r,s=wt(a);return{x:()=>nl(e,s)}}},qd=Ie({stack_:nn}),Kd={kernelName:pu,gradFunc:(e,t,n)=>{const r=n,{axis:a}=r;return{value:()=>qd(e,a)}}},Xd=Ie({expandDims_:rn}),Yd=Ie({gather_:an}),Zd=Ie({maximum_:sn}),Qd={kernelName:fu,inputsToSave:["segmentIds"],gradFunc:(e,t)=>{const[n]=t,r=()=>on(e,n);return{x:r}}},Jd={kernelName:mu,gradFunc:e=>({x:()=>pc(e)})},eh=[ec,oc,uc,dc,hc,fc,mc,bc,yc,xc,vc,wc,Oc,Nc,Sc,Cc,Ec,$c,Ac,Lc,Pc,Wc,qc,Gc,Yc,Qc,el,rl,il,ol,id,ul,ll,dl,hl,pl,ml,fl,yl,vl,wl,kl,Ol,Il,Nl,Sl,Tl,Cl,El,Al,Dl,Dl,Rl,zl,Pl,Wl,Vl,Ul,Hl,Kl,Xl,Yl,Zl,Ql,ed,td,td,ad,sd,od,ud,cd,ld,dd,hd,fd,md,bd,yd,wd,kd,Od,Nd,Sd,Cd,Ed,Ad,Dd,Dd,Rd,Rd,Md,Ld,zd,Pd,Bd,Wd,Vd,Ud,Gd,Hd,Kd,Qd,Jd];for(const e of eh)U(e);const th=Ie({abs_:un}),nh=Ie({acos_:cn}),rh=Ie({acosh_:ln}),ah=(Ie({addN_:dn}),Ie({all_:hn})),sh=Ie({any_:pn}),ih=Ie({argMax_:fn}),oh=Ie({argMin_:mn}),uh=Ie({asin_:bn}),ch=Ie({asinh_:gn}),lh=Ie({atan_:yn}),dh=Ie({atan2_:xn}),hh=Ie({atanh_:vn}),ph=Ie({avgPool_:wn}),fh=(Ie({avgPool3d_:kn}),Ie({tanh_:On})),mh=(Ie({basicLSTMCell_:In}),Ie({batchNorm_:jn})),bh=(Ie({batchNorm2d_:Sn}),Ie({batchNorm3d_:Tn}),Ie({batchNorm4d_:Cn}),Ie({bincount_:En}),Ie({ceil_:An})),gh=Ie({clipByValue_:_n}),yh=(Ie({concat1d_:Dn}),Ie({concat2d_:Fn}),Ie({concat3d_:Rn}),Ie({concat4d_:Mn}),Ie({conv1d_:zn})),xh=Ie({conv2dTranspose_:Ln}),vh=(Ie({conv3d_:Pn}),Ie({conv3dTranspose_:Bn}),Ie({denseBincount_:Wn}),Ie({depthToSpace_:Vn})),wh=Ie({depthwiseConv2d_:Un}),kh=(Ie({diag_:Gn}),Ie({dilation2d_:Hn})),Oh=Ie({divNoNan_:qn}),Ih=Ie({dot_:Kn}),Nh=(Ie({einsum_:Xn}),Ie({elu_:Yn})),jh=Ie({erf_:Zn}),Sh=Ie({expm1_:Qn}),Th=Ie({eye_:Jn}),Ch=Ie({imag_:tr}),Eh=Ie({isFinite_:nr}),$h=Ie({isInf_:rr}),Ah=Ie({isNaN_:ar}),_h=Ie({leakyRelu_:sr}),Dh=Ie({localResponseNormalization_:ir}),Fh=Ie({log1p_:or}),Rh=Ie({softplus_:cr}),Mh=Ie({logSigmoid_:lr}),zh=Ie({max_:dr}),Lh=Ie({logSoftmax_:hr}),Ph=Ie({logSumExp_:pr}),Bh=Ie({logicalOr_:fr}),Wh=Ie({logicalXor_:mr}),Vh=Ie({maxPool_:br}),Uh=(Ie({maxPool3d_:gr}),Ie({maxPoolWithArgmax_:yr}),Ie({mean_:xr})),Gh=Ie({min_:vr}),Hh=Ie({minimum_:wr}),qh=Ie({mirrorPad_:kr}),Kh=Ie({mod_:Or}),Xh=(Ie({moments_:Ir}),Ie({multiRNNCell_:Nr}),Ie({multinomial_:jr}),Ie({notEqual_:Sr})),Yh=Ie({oneHot_:Tr}),Zh=Ie({onesLike_:Cr}),Qh=(Ie({outerProduct_:Er}),Ie({pad1d_:$r}),Ie({pad2d_:Ar}),Ie({pad3d_:_r}),Ie({pad4d_:Dr}),Ie({pool_:Fr})),Jh=Ie({prelu_:zr}),ep=Ie({prod_:Lr});Ie({rand_:Pr});"undefined"!=typeof globalThis?globalThis:"undefined"!=typeof window?window:void 0!==e||"undefined"!=typeof self&&self;var tp=Br(function(e){(function(e,t,n){function r(e){var t=this,n=i();t.next=function(){var e=2091639*t.s0+2.3283064365386963e-10*t.c;return t.s0=t.s1,t.s1=t.s2,t.s2=e-(t.c=0|e)},t.c=1,t.s0=n(" "),t.s1=n(" "),t.s2=n(" "),t.s0-=n(e),t.s0<0&&(t.s0+=1),t.s1-=n(e),t.s1<0&&(t.s1+=1),t.s2-=n(e),t.s2<0&&(t.s2+=1),n=null}function a(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function s(e,t){var n=new r(e),s=t&&t.state,i=n.next;return i.int32=function(){return 4294967296*n.next()|0},i.double=function(){return i()+1.1102230246251565e-16*(2097152*i()|0)},i.quick=i,s&&("object"==typeof s&&a(s,n),i.state=function(){return a(n,{})}),i}function i(){var e=4022871197,t=function(t){t=t.toString();for(var n=0;n<t.length;n++){e+=t.charCodeAt(n);var r=.02519603282416938*e;e=r>>>0,r-=e,r*=e,e=r>>>0,r-=e,e+=4294967296*r}return 2.3283064365386963e-10*(e>>>0)};return t}t&&t.exports?t.exports=s:n&&n.amd?n(function(){return s}):this.alea=s})(0,e,!1)}),np=Br(function(e){(function(e,t,n){function r(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),t.next()}function a(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function s(e,t){var n=new r(e),s=t&&t.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var e=n.next()>>>11,t=(n.next()>>>0)/4294967296,r=(e+t)/(1<<21)}while(0===r);return r},i.int32=n.next,i.quick=i,s&&("object"==typeof s&&a(s,n),i.state=function(){return a(n,{})}),i}t&&t.exports?t.exports=s:n&&n.amd?n(function(){return s}):this.xor128=s})(0,e,!1)}),rp=Br(function(e){(function(e,t,n){function r(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),r==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function a(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function s(e,t){var n=new r(e),s=t&&t.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var e=n.next()>>>11,t=(n.next()>>>0)/4294967296,r=(e+t)/(1<<21)}while(0===r);return r},i.int32=n.next,i.quick=i,s&&("object"==typeof s&&a(s,n),i.state=function(){return a(n,{})}),i}t&&t.exports?t.exports=s:n&&n.amd?n(function(){return s}):this.xorwow=s})(0,e,!1)}),ap=Br(function(e){(function(e,t,n){function r(e){function t(e,t){var n,r=[];if(t===(0|t))r[0]=t;else for(t=""+t,n=0;n<t.length;++n)r[7&n]=r[7&n]<<15^t.charCodeAt(n)+r[n+1&7]<<13;for(;r.length<8;)r.push(0);for(n=0;n<8&&0===r[n];++n);for(8==n?r[7]=-1:r[n],e.x=r,e.i=0,n=256;n>0;--n)e.next()}var n=this;n.next=function(){var e,t,r=n.x,a=n.i;return e=r[a],e^=e>>>7,t=e^e<<24,e=r[a+1&7],t^=e^e>>>10,e=r[a+3&7],t^=e^e>>>3,e=r[a+4&7],t^=e^e<<7,e=r[a+7&7],e^=e<<13,t^=e^e<<9,r[a]=t,n.i=a+1&7,t},t(n,e)}function a(e,t){return t.x=e.x.slice(),t.i=e.i,t}function s(e,t){null==e&&(e=+new Date);var n=new r(e),s=t&&t.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var e=n.next()>>>11,t=(n.next()>>>0)/4294967296,r=(e+t)/(1<<21)}while(0===r);return r},i.int32=n.next,i.quick=i,s&&(s.x&&a(s,n),i.state=function(){return a(n,{})}),i}t&&t.exports?t.exports=s:n&&n.amd?n(function(){return s}):this.xorshift7=s})(0,e,!1)}),sp=Br(function(e){(function(e,t,n){function r(e){function t(e,t){var n,r,a,s,i,o=[],u=128;for(t===(0|t)?(r=t,t=null):(t+="\0",r=0,u=Math.max(u,t.length)),a=0,s=-32;s<u;++s)t&&(r^=t.charCodeAt((s+32)%t.length)),0===s&&(i=r),r^=r<<10,r^=r>>>15,r^=r<<4,r^=r>>>13,s>=0&&(i=i+1640531527|0,n=o[127&s]^=r+i,a=0==n?a+1:0);for(a>=128&&(o[127&(t&&t.length||0)]=-1),a=127,s=512;s>0;--s)r=o[a+34&127],n=o[a=a+1&127],r^=r<<13,n^=n<<17,r^=r>>>15,n^=n>>>12,o[a]=r^n;e.w=i,e.X=o,e.i=a}var n=this;n.next=function(){var e,t,r=n.w,a=n.X,s=n.i;return n.w=r=r+1640531527|0,t=a[s+34&127],e=a[s=s+1&127],t^=t<<13,e^=e<<17,t^=t>>>15,e^=e>>>12,t=a[s]=t^e,n.i=s,t+(r^r>>>16)|0},t(n,e)}function a(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function s(e,t){null==e&&(e=+new Date);var n=new r(e),s=t&&t.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var e=n.next()>>>11,t=(n.next()>>>0)/4294967296,r=(e+t)/(1<<21)}while(0===r);return r},i.int32=n.next,i.quick=i,s&&(s.X&&a(s,n),i.state=function(){return a(n,{})}),i}t&&t.exports?t.exports=s:n&&n.amd?n(function(){return s}):this.xor4096=s})(0,e,!1)}),ip=Br(function(e){(function(e,t,n){function r(e){var t=this,n="";t.next=function(){var e=t.b,n=t.c,r=t.d,a=t.a;return e=e<<25^e>>>7^n,n=n-r|0,r=r<<24^r>>>8^a,a=a-e|0,t.b=e=e<<20^e>>>12^n,t.c=n=n-r|0,t.d=r<<16^n>>>16^a,t.a=a-e|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var r=0;r<n.length+20;r++)t.b^=0|n.charCodeAt(r),t.next()}function a(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function s(e,t){var n=new r(e),s=t&&t.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var e=n.next()>>>11,t=(n.next()>>>0)/4294967296,r=(e+t)/(1<<21)}while(0===r);return r},i.int32=n.next,i.quick=i,s&&("object"==typeof s&&a(s,n),i.state=function(){return a(n,{})}),i}t&&t.exports?t.exports=s:n&&n.amd?n(function(){return s}):this.tychei=s})(0,e,!1)}),op=Br(function(e){(function(t,r){function a(e,n,a){var d=[];n=1==n?{entropy:!0}:n||{};var h=u(o(n.entropy?[e,l(t)]:null==e?c():e,3),d),m=new s(d),v=function(){for(var e=m.g(f),t=g,n=0;e<y;)e=(e+n)*p,t*=p,n=m.g(1);for(;e>=x;)e/=2,t/=2,n>>>=1;return(e+n)/t};return v.int32=function(){return 0|m.g(4)},v.quick=function(){return m.g(4)/4294967296},v.double=v,u(l(m.S),t),(n.pass||a||function(e,t,n,a){return a&&(a.S&&i(a,m),e.state=function(){return i(m,{})}),n?(r[b]=e,t):e})(v,h,"global"in n?n.global:this==r,n.state)}function s(e){var t,n=e.length,r=this,a=0,s=r.i=r.j=0,i=r.S=[];for(n||(e=[n++]);a<p;)i[a]=a++;for(a=0;a<p;a++)i[a]=i[s=v&s+e[a%n]+(t=i[a])],i[s]=t;(r.g=function(e){for(var t,n=0,a=r.i,s=r.j,i=r.S;e--;)t=i[a=v&a+1],n=n*p+i[v&(i[a]=i[s=v&s+t])+(i[s]=t)];return r.i=a,r.j=s,n})(p)}function i(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function o(e,t){var n,r=[],a=typeof e;if(t&&"object"==a)for(n in e)try{r.push(o(e[n],t-1))}catch(e){}return r.length?r:"string"==a?e:e+"\0"}function u(e,t){for(var n,r=e+"",a=0;a<r.length;)t[v&a]=v&(n^=19*t[v&a])+r.charCodeAt(a++);return l(t)}function c(){try{var e;return d&&(e=d.randomBytes)?e=e(p):(e=new Uint8Array(p),(h.crypto||h.msCrypto).getRandomValues(e)),l(e)}catch(e){var n=h.navigator,r=n&&n.plugins;return[+new Date,h,r,h.screen,l(t)]}}function l(e){return String.fromCharCode.apply(0,e)}var d,h=this,p=256,f=6,m=52,b="random",g=r.pow(p,f),y=r.pow(2,m),x=2*y,v=p-1;if(r["seed"+b]=a,u(r.random(),t),e.exports){e.exports=a;try{d=n(293)}catch(e){}}else 0})([],Math)});op.alea=tp,op.xor128=np,op.xorwow=rp,op.xorshift7=ap,op.xor4096=sp,op.tychei=ip;var up=op,cp=up.alea;class lp{constructor(e,t,n,r,a){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=r,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);const s=a||Math.random();this.random=cp(s.toString())}nextValue(){if(!isNaN(this.nextVal)){const e=this.nextVal;return this.nextVal=NaN,e}let e,t,n=!1;for(;!n;){let r,a,s;do{r=2*this.random()-1,a=2*this.random()-1,s=r*r+a*a}while(s>=1||0===s);const i=Math.sqrt(-2*Math.log(s)/s);e=this.mean+this.stdDev*r*i,t=this.mean+this.stdDev*a*i,this.truncated&&!this.isValidTruncated(e)||(n=!0)}return this.truncated&&!this.isValidTruncated(t)||(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return null==this.dtype||"float32"===this.dtype?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}}class dp{constructor(e,t,n,r){this.alpha=e,this.beta=1/t,this.dtype=n;const a=r||Math.random();this.randu=cp(a.toString()),this.randn=new lp(0,1,n,!1,this.randu()),this.d=e<1?e+2/3:e-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let e,t,n,r,a,s;for(;;){do{r=this.randn.nextValue(),s=1+this.c*r}while(s<=0);if(s*=s*s,e=r*r,t=1-.331*e*e,n=.5*e+this.d*(1-s+Math.log(s)),a=this.randu(),a<t||Math.log(a)<n)break}return s=1/this.beta*this.d*s,this.alpha<1&&(s*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(s)}convertValue(e){return"float32"===this.dtype?e:Math.round(e)}}class hp{constructor(e=0,t=1,n,r){if(this.canReturnFloat=(()=>null==this.dtype||"float32"===this.dtype),this.min=e,this.range=t-e,this.dtype=n,null==r&&(r=Math.random()),"number"==typeof r&&(r=r.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=cp(r)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}Ie({randomGamma_:Wr}),Ie({randomNormal_:Vr});const pp=Ie({randomUniform_:Ur}),fp=Ie({real_:Hr}),mp=Ie({reciprocal_:qr}),bp=Ie({relu_:Kr}),gp=Ie({relu6_:Xr}),yp=(Ie({reverse1d_:Yr}),Ie({reverse2d_:Zr}),Ie({reverse3d_:Qr}),Ie({reverse4d_:Jr}),Ie({round_:ea})),xp=Ie({selu_:ta}),vp=Ie({separableConv2d_:na}),wp=Ie({sign_:ra}),kp=(Ie({slice1d_:aa}),Ie({slice2d_:sa}),Ie({slice3d_:ia}),Ie({slice4d_:oa}),Ie({softmax_:ua})),Op=Ie({fft_:ca}),Ip=Ie({ifft_:la}),Np=Ie({irfft_:da}),jp=Ie({rfft_:ha}),Sp=Ie({squaredDifference_:pa}),Tp=Ie({squeeze_:fa}),Cp=Ie({stridedSlice_:ma}),Ep=Ie({tan_:ba}),$p=Ie({topk_:xa}),Ap=(Ie({truncatedNormal_:va}),Ie({unique_:wa})),_p=Ie({norm_:ka}),Dp=(Ie({movingAverage_:Ia}),Ie({scatterND_:Sa}),Ie({sparseToDense_:Ca}),Ie({gatherND_:Ea}),Ie({dropout_:Aa}),(e,t)=>{const n=e>0;return!n||"linear"===t}),Fp=(Ie({fusedConv2d_:za}),Ie({fusedDepthwiseConv2d_:La}),Ie({fusedMatMul_:Pa}),Ie({hammingWindow_:Ba}),Ie({hannWindow_:Wa})),Rp=Ie({frame_:Va}),Mp=(Ie({stft_:Ua}),Ie({cropAndResize_:Ga}),Ie({flipLeftRight_:Ha}),Ie({rotateWithOffset_:qa}),Ie({nonMaxSuppression_:Xa}),Ie({nonMaxSuppressionWithScore_:Ya}),Ie({nonMaxSuppressionPadded_:Za}),Ie({resizeBilinear_:Qa})),zp=Ie({resizeNearestNeighbor_:Ja});Ie({transform_:es}),Ie({bandPart_:ts}),Ie({gramSchmidt_:ns});oe(rs);Ie({qr_:ss});var Lp;(function(e){e[e.NONE=0]="NONE",e[e.MEAN=1]="MEAN",e[e.SUM=2]="SUM",e[e.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"})(Lp||(Lp={}));const Pp=Ie({computeWeightedLoss_:os});Ie({absoluteDifference_:us}),Ie({cosineDistance_:cs}),Ie({hingeLoss_:ls}),Ie({huberLoss_:ds}),Ie({logLoss_:hs}),Ie({meanSquaredError_:ps}),Ie({sigmoidCrossEntropy_:ms}),Ie({softmaxCrossEntropy_:gs}),Ie({sparseReshape_:ys});ue().prototype.abs=function(){return this.throwIfDisposed(),th(this)},ue().prototype.acos=function(){return this.throwIfDisposed(),nh(this)},ue().prototype.acosh=function(){return this.throwIfDisposed(),rh(this)},ue().prototype.add=function(e){return this.throwIfDisposed(),gc(this,e)},ue().prototype.all=function(e,t){return this.throwIfDisposed(),ah(this,e,t)},ue().prototype.any=function(e,t){return this.throwIfDisposed(),sh(this,e,t)},ue().prototype.argMax=function(e){return this.throwIfDisposed(),ih(this,e)},ue().prototype.argMin=function(e){return this.throwIfDisposed(),oh(this,e)},ue().prototype.asScalar=function(){return this.throwIfDisposed(),s(1===this.size,()=>"The array must have only 1 element."),cc(this,[])},ue().prototype.asType=function(e){return this.throwIfDisposed(),Zu(this,e)},ue().prototype.as1D=function(){return this.throwIfDisposed(),cc(this,[this.size])},ue().prototype.as2D=function(e,t){return this.throwIfDisposed(),cc(this,[e,t])},ue().prototype.as3D=function(e,t,n){return this.throwIfDisposed(),cc(this,[e,t,n])},ue().prototype.as4D=function(e,t,n,r){return this.throwIfDisposed(),cc(this,[e,t,n,r])},ue().prototype.as5D=function(e,t,n,r,a){return this.throwIfDisposed(),cc(this,[e,t,n,r,a])},ue().prototype.asin=function(){return this.throwIfDisposed(),uh(this)},ue().prototype.asinh=function(){return this.throwIfDisposed(),ch(this)},ue().prototype.atan=function(){return this.throwIfDisposed(),lh(this)},ue().prototype.atan2=function(e){return this.throwIfDisposed(),dh(this,e)},ue().prototype.atanh=function(){
return this.throwIfDisposed(),hh(this)},ue().prototype.avgPool=function(e,t,n,r){return this.throwIfDisposed(),ph(this,e,t,n,r)},ue().prototype.batchToSpaceND=function(e,t){return this.throwIfDisposed(),_d(this,e,t)},ue().prototype.batchNorm=function(e,t,n,r,a){return this.throwIfDisposed(),mh(this,e,t,n,r,a)},ue().prototype.broadcastTo=function(e){return this.throwIfDisposed(),Mc(this,e)},ue().prototype.cast=function(e){return this.throwIfDisposed(),Zu(this,e)},ue().prototype.ceil=function(){return this.throwIfDisposed(),bh(this)},ue().prototype.clipByValue=function(e,t){return this.throwIfDisposed(),gh(this,e,t)},ue().prototype.concat=function(e,t){return this.throwIfDisposed(),e instanceof Lu&&(e=[e]),Fd([this,...e],t)},ue().prototype.conv1d=function(e,t,n,r,a,s){return this.throwIfDisposed(),yh(this,e,t,n,r,a,s)},ue().prototype.conv2dTranspose=function(e,t,n,r,a){return this.throwIfDisposed(),xh(this,e,t,n,r,a)},ue().prototype.conv2d=function(e,t,n,r,a,s){return this.throwIfDisposed(),Hc(this,e,t,n,r,a,s)},ue().prototype.cos=function(){return this.throwIfDisposed(),Id(this)},ue().prototype.cosh=function(){return this.throwIfDisposed(),jd(this)},ue().prototype.cumsum=function(e,t,n){return this.throwIfDisposed(),tl(this,e,t,n)},ue().prototype.depthToSpace=function(e,t){return this.throwIfDisposed(),vh(this,e,t)},ue().prototype.depthwiseConv2d=function(e,t,n,r,a,s){return this.throwIfDisposed(),wh(this,e,t,n,r,a,s)},ue().prototype.dilation2d=function(e,t,n,r,a){return this.throwIfDisposed(),kh(this,e,t,n,r,a)},ue().prototype.divNoNan=function(e){return this.throwIfDisposed(),Oh(this,e)},ue().prototype.div=function(e){return this.throwIfDisposed(),nc(this,e)},ue().prototype.dot=function(e){return this.throwIfDisposed(),Ih(this,e)},ue().prototype.elu=function(){return this.throwIfDisposed(),Nh(this)},ue().prototype.equal=function(e){return this.throwIfDisposed(),_l(this,e)},ue().prototype.erf=function(){return this.throwIfDisposed(),jh(this)},ue().prototype.exp=function(){return this.throwIfDisposed(),cl(this)},ue().prototype.expandDims=function(e){return this.throwIfDisposed(),Xd(this,e)},ue().prototype.expm1=function(){return this.throwIfDisposed(),Sh(this)},ue().prototype.fft=function(){return this.throwIfDisposed(),Op(this)},ue().prototype.flatten=function(){return this.throwIfDisposed(),cc(this,[this.size])},ue().prototype.floor=function(){return this.throwIfDisposed(),ql(this)},ue().prototype.floorDiv=function(e){return this.throwIfDisposed(),tc(this,e)},ue().prototype.gather=function(e,t){return this.throwIfDisposed(),Yd(this,e,t)},ue().prototype.greaterEqual=function(e){return this.throwIfDisposed(),_c(this,e)},ue().prototype.greater=function(e){return this.throwIfDisposed(),jl(this,e)},ue().prototype.ifft=function(){return this.throwIfDisposed(),Ip(this)},ue().prototype.irfft=function(){return this.throwIfDisposed(),Np(this)},ue().prototype.isFinite=function(){return this.throwIfDisposed(),Eh(this)},ue().prototype.isInf=function(){return this.throwIfDisposed(),$h(this)},ue().prototype.isNaN=function(){return this.throwIfDisposed(),Ah(this)},ue().prototype.leakyRelu=function(e){return this.throwIfDisposed(),_h(this,e)},ue().prototype.lessEqual=function(e){return this.throwIfDisposed(),Dc(this,e)},ue().prototype.less=function(e){return this.throwIfDisposed(),Fl(this,e)},ue().prototype.localResponseNormalization=function(e,t,n,r){return this.throwIfDisposed(),Dh(this,e,t,n,r)},ue().prototype.logSigmoid=function(){return this.throwIfDisposed(),Mh(this)},ue().prototype.logSoftmax=function(e){return this.throwIfDisposed(),Lh(this,e)},ue().prototype.logSumExp=function(e,t){return this.throwIfDisposed(),Ph(this,e,t)},ue().prototype.log=function(){return this.throwIfDisposed(),nd(this)},ue().prototype.log1p=function(){return this.throwIfDisposed(),Fh(this)},ue().prototype.logicalAnd=function(e){return this.throwIfDisposed(),Fc(this,e)},ue().prototype.logicalNot=function(){return this.throwIfDisposed(),gd(this)},ue().prototype.logicalOr=function(e){return this.throwIfDisposed(),Bh(this,e)},ue().prototype.logicalXor=function(e){return this.throwIfDisposed(),Wh(this,e)},ue().prototype.matMul=function(e,t,n){return this.throwIfDisposed(),jc(this,e,t,n)},ue().prototype.maxPool=function(e,t,n,r){return this.throwIfDisposed(),Vh(this,e,t,n,r)},ue().prototype.max=function(e,t){return this.throwIfDisposed(),zh(this,e,t)},ue().prototype.maximum=function(e){return this.throwIfDisposed(),Zd(this,e)},ue().prototype.mean=function(e,t){return this.throwIfDisposed(),Uh(this,e,t)},ue().prototype.min=function(e,t){return this.throwIfDisposed(),Gh(this,e,t)},ue().prototype.minimum=function(e){return this.throwIfDisposed(),Hh(this,e)},ue().prototype.mirrorPad=function(e,t){return this.throwIfDisposed(),qh(this,e,t)},ue().prototype.mod=function(e){return this.throwIfDisposed(),Kh(this,e)},ue().prototype.mul=function(e){return this.throwIfDisposed(),Qu(this,e)},ue().prototype.neg=function(){return this.throwIfDisposed(),rc(this)},ue().prototype.norm=function(e,t,n){return this.throwIfDisposed(),_p(this,e,t,n)},ue().prototype.notEqual=function(e){return this.throwIfDisposed(),Xh(this,e)},ue().prototype.oneHot=function(e,t=1,n=0){return this.throwIfDisposed(),Yh(this,e,t,n)},ue().prototype.onesLike=function(){return this.throwIfDisposed(),Zh(this)},ue().prototype.pad=function(e,t){return this.throwIfDisposed(),Td(this,e,t)},ue().prototype.pool=function(e,t,n,r,a){return this.throwIfDisposed(),Qh(this,e,t,n,r,a)},ue().prototype.pow=function(e){return this.throwIfDisposed(),rd(this,e)},ue().prototype.prelu=function(e){return this.throwIfDisposed(),Jh(this,e)},ue().prototype.prod=function(e,t){return this.throwIfDisposed(),ep(this,e,t)},ue().prototype.reciprocal=function(){return this.throwIfDisposed(),mp(this)},ue().prototype.relu=function(){return this.throwIfDisposed(),bp(this)},ue().prototype.relu6=function(){return this.throwIfDisposed(),gp(this)},ue().prototype.reshapeAs=function(e){return this.throwIfDisposed(),cc(this,e.shape)},ue().prototype.reshape=function(e){return this.throwIfDisposed(),cc(this,e)},ue().prototype.resizeBilinear=function(e,t,n){return this.throwIfDisposed(),Mp(this,e,t,n)},ue().prototype.resizeNearestNeighbor=function(e,t,n){return this.throwIfDisposed(),zp(this,e,t,n)},ue().prototype.reverse=function(e){return this.throwIfDisposed(),pd(this,e)},ue().prototype.rfft=function(){return this.throwIfDisposed(),jp(this)},ue().prototype.round=function(){return this.throwIfDisposed(),yp(this)},ue().prototype.rsqrt=function(){return this.throwIfDisposed(),bl(this)},ue().prototype.selu=function(){return this.throwIfDisposed(),xp(this)},ue().prototype.separableConv2d=function(e,t,n,r,a,s){return this.throwIfDisposed(),vp(this,e,t,n,r,a,s)},ue().prototype.sigmoid=function(){return this.throwIfDisposed(),$d(this)},ue().prototype.sign=function(){return this.throwIfDisposed(),wp(this)},ue().prototype.sin=function(){return this.throwIfDisposed(),Zc(this)},ue().prototype.sinh=function(){return this.throwIfDisposed(),Jc(this)},ue().prototype.slice=function(e,t){return this.throwIfDisposed(),Gl(this,e,t)},ue().prototype.softmax=function(e){return this.throwIfDisposed(),kp(this,e)},ue().prototype.softplus=function(){return this.throwIfDisposed(),Rh(this)},ue().prototype.spaceToBatchND=function(e,t){return this.throwIfDisposed(),Tc(this,e,t)},ue().prototype.split=function(e,t){return this.throwIfDisposed(),Bc(this,e,t)},ue().prototype.sqrt=function(){return this.throwIfDisposed(),ac(this)},ue().prototype.square=function(){return this.throwIfDisposed(),sc(this)},ue().prototype.squaredDifference=function(e){return this.throwIfDisposed(),Sp(this,e)},ue().prototype.squeeze=function(e){return this.throwIfDisposed(),Tp(this,e)},ue().prototype.stack=function(e,t){this.throwIfDisposed();const n=e instanceof Lu?[this,e]:[this,...e];return qd(n,t)},ue().prototype.step=function(e){return this.throwIfDisposed(),Ju(this,e)},ue().prototype.stridedSlice=function(e,t,n,r,a,s,i,o){return this.throwIfDisposed(),Cp(this,e,t,n,r,a,s,i,o)},ue().prototype.sub=function(e){return this.throwIfDisposed(),ic(this,e)},ue().prototype.sum=function(e,t){return this.throwIfDisposed(),lc(this,e,t)},ue().prototype.tan=function(){return this.throwIfDisposed(),Ep(this)},ue().prototype.tanh=function(){return this.throwIfDisposed(),fh(this)},ue().prototype.tile=function(e){return this.throwIfDisposed(),gl(this,e)},ue().prototype.toBool=function(){return this.throwIfDisposed(),Zu(this,"bool")},ue().prototype.toFloat=function(){return this.throwIfDisposed(),Zu(this,"float32")},ue().prototype.toInt=function(){return this.throwIfDisposed(),Zu(this,"int32")},ue().prototype.topk=function(e,t){return this.throwIfDisposed(),$p(this,e,t)},ue().prototype.transpose=function(e){return this.throwIfDisposed(),nl(this,e)},ue().prototype.unique=function(e){return this.throwIfDisposed(),Ap(this,e)},ue().prototype.unsortedSegmentSum=function(e,t){return this.throwIfDisposed(),xl(this,e,t)},ue().prototype.unstack=function(e){return this.throwIfDisposed(),Jl(this,e)},ue().prototype.where=function(e,t){return this.throwIfDisposed(),zc(e,this,t)},ue().prototype.zerosLike=function(){return this.throwIfDisposed(),pc(this)};var Bp="3.5.0",Wp={"tfjs-core":xs.version_core,"tfjs-backend-cpu":Os.version_cpu,"tfjs-backend-webgl":Is.version_webgl,"tfjs-data":ks.version_data,"tfjs-layers":vs.version_layers,"tfjs-converter":ws.version_converter,tfjs:Bp};Object.keys(xs).forEach(function(e){"default"!==e&&Object.defineProperty(t,e,{enumerable:!0,get:function(){return xs[e]}})}),Object.keys(vs).forEach(function(e){"default"!==e&&Object.defineProperty(t,e,{enumerable:!0,get:function(){return vs[e]}})}),Object.keys(ws).forEach(function(e){"default"!==e&&Object.defineProperty(t,e,{enumerable:!0,get:function(){return ws[e]}})}),t.data=ks,t.version=Wp}).call(this,n(103),n(142))},function(e,t,n){"use strict";function r(e){var t=e.length;if(t%4>0)throw new Error("Invalid string. Length must be a multiple of 4");var n=e.indexOf("=");-1===n&&(n=t);var r=n===t?0:4-n%4;return[n,r]}function a(e){var t=r(e),n=t[0],a=t[1];return 3*(n+a)/4-a}function s(e,t,n){return 3*(t+n)/4-n}function i(e){var t,n,a=r(e),i=a[0],o=a[1],u=new h(s(e,i,o)),c=0,l=o>0?i-4:i;for(n=0;n<l;n+=4)t=d[e.charCodeAt(n)]<<18|d[e.charCodeAt(n+1)]<<12|d[e.charCodeAt(n+2)]<<6|d[e.charCodeAt(n+3)],u[c++]=t>>16&255,u[c++]=t>>8&255,u[c++]=255&t;return 2===o&&(t=d[e.charCodeAt(n)]<<2|d[e.charCodeAt(n+1)]>>4,u[c++]=255&t),1===o&&(t=d[e.charCodeAt(n)]<<10|d[e.charCodeAt(n+1)]<<4|d[e.charCodeAt(n+2)]>>2,u[c++]=t>>8&255,u[c++]=255&t),u}function o(e){return l[e>>18&63]+l[e>>12&63]+l[e>>6&63]+l[63&e]}function u(e,t,n){for(var r,a=[],s=t;s<n;s+=3)r=(e[s]<<16&16711680)+(e[s+1]<<8&65280)+(255&e[s+2]),a.push(o(r));return a.join("")}function c(e){for(var t,n=e.length,r=n%3,a=[],s=16383,i=0,o=n-r;i<o;i+=s)a.push(u(e,i,i+s>o?o:i+s));return 1===r?(t=e[n-1],a.push(l[t>>2]+l[t<<4&63]+"==")):2===r&&(t=(e[n-2]<<8)+e[n-1],a.push(l[t>>10]+l[t>>4&63]+l[t<<2&63]+"=")),a.join("")}t.byteLength=a,t.toByteArray=i,t.fromByteArray=c;for(var l=[],d=[],h="undefined"!=typeof Uint8Array?Uint8Array:Array,p="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",f=0,m=p.length;f<m;++f)l[f]=p[f],d[p.charCodeAt(f)]=f;d["-".charCodeAt(0)]=62,d["_".charCodeAt(0)]=63},function(e,t){t.read=function(e,t,n,r,a){var s,i,o=8*a-r-1,u=(1<<o)-1,c=u>>1,l=-7,d=n?a-1:0,h=n?-1:1,p=e[t+d];for(d+=h,s=p&(1<<-l)-1,p>>=-l,l+=o;l>0;s=256*s+e[t+d],d+=h,l-=8);for(i=s&(1<<-l)-1,s>>=-l,l+=r;l>0;i=256*i+e[t+d],d+=h,l-=8);if(0===s)s=1-c;else{if(s===u)return i?NaN:1/0*(p?-1:1);i+=Math.pow(2,r),s-=c}return(p?-1:1)*i*Math.pow(2,s-r)},t.write=function(e,t,n,r,a,s){var i,o,u,c=8*s-a-1,l=(1<<c)-1,d=l>>1,h=23===a?Math.pow(2,-24)-Math.pow(2,-77):0,p=r?0:s-1,f=r?1:-1,m=t<0||0===t&&1/t<0?1:0;for(t=Math.abs(t),isNaN(t)||t===1/0?(o=isNaN(t)?1:0,i=l):(i=Math.floor(Math.log(t)/Math.LN2),t*(u=Math.pow(2,-i))<1&&(i--,u*=2),t+=i+d>=1?h/u:h*Math.pow(2,1-d),t*u>=2&&(i++,u/=2),i+d>=l?(o=0,i=l):i+d>=1?(o=(t*u-1)*Math.pow(2,a),i+=d):(o=t*Math.pow(2,d-1)*Math.pow(2,a),i=0));a>=8;e[n+p]=255&o,p+=f,o/=256,a-=8);for(i=i<<a|o,c+=a;c>0;e[n+p]=255&i,p+=f,i/=256,c-=8);e[n+p-f]|=128*m}},function(e,t){var n={}.toString;e.exports=Array.isArray||function(e){return"[object Array]"==n.call(e)}},function(e,t,n){"use strict";(function(e){var t=n(22);const r={importFetch:()=>n(279)};let a;class s{constructor(){this.util=n(280),this.textEncoder=new this.util.TextEncoder}fetch(e,n){return null!=Object(t.c)().global.fetch?Object(t.c)().global.fetch(e,n):(null==a&&(a=r.importFetch()),a(e,n))}now(){const t=e.hrtime();return 1e3*t[0]+t[1]/1e6}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return 0===e.length?"":new this.util.TextDecoder(t).decode(e)}}Object(t.c)().get("IS_NODE")&&Object(t.c)().setPlatform("node",new s)}).call(this,n(142))},function(e,t){},function(e,t){},function(e,t,n){(function(e){var r;(function(e,a,s){function i(e){var t=this,n=c();t.next=function(){var e=2091639*t.s0+2.3283064365386963e-10*t.c;return t.s0=t.s1,t.s1=t.s2,t.s2=e-(t.c=0|e)},t.c=1,t.s0=n(" "),t.s1=n(" "),t.s2=n(" "),t.s0-=n(e),t.s0<0&&(t.s0+=1),t.s1-=n(e),t.s1<0&&(t.s1+=1),t.s2-=n(e),t.s2<0&&(t.s2+=1),n=null}function o(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function u(e,t){var n=new i(e),r=t&&t.state,a=n.next;return a.int32=function(){return 4294967296*n.next()|0},a.double=function(){return a()+1.1102230246251565e-16*(2097152*a()|0)},a.quick=a,r&&("object"==typeof r&&o(r,n),a.state=function(){return o(n,{})}),a}function c(){var e=4022871197,t=function(t){t=t.toString();for(var n=0;n<t.length;n++){e+=t.charCodeAt(n);var r=.02519603282416938*e;e=r>>>0,r-=e,r*=e,e=r>>>0,r-=e,e+=4294967296*r}return 2.3283064365386963e-10*(e>>>0)};return t}a&&a.exports?a.exports=u:n(64)&&n(111)?(r=function(){return u}.call(t,n,t,a),void 0===r||(a.exports=r)):this.alea=u})(0,e,n(64))}).call(this,n(110)(e))},function(e,t,n){(function(e){var r;(function(e,a,s){function i(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),t.next()}function o(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function u(e,t){var n=new i(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=n.next()>>>11,t=(n.next()>>>0)/4294967296,r=(e+t)/(1<<21)}while(0===r);return r},a.int32=n.next,a.quick=a,r&&("object"==typeof r&&o(r,n),a.state=function(){return o(n,{})}),a}a&&a.exports?a.exports=u:n(64)&&n(111)?(r=function(){return u}.call(t,n,t,a),void 0===r||(a.exports=r)):this.xor128=u})(0,e,n(64))}).call(this,n(110)(e))},function(e,t,n){(function(e){var r;(function(e,a,s){function i(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),r==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function o(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function u(e,t){var n=new i(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=n.next()>>>11,t=(n.next()>>>0)/4294967296,r=(e+t)/(1<<21)}while(0===r);return r},a.int32=n.next,a.quick=a,r&&("object"==typeof r&&o(r,n),a.state=function(){return o(n,{})}),a}a&&a.exports?a.exports=u:n(64)&&n(111)?(r=function(){return u}.call(t,n,t,a),void 0===r||(a.exports=r)):this.xorwow=u})(0,e,n(64))}).call(this,n(110)(e))},function(e,t,n){(function(e){var r;(function(e,a,s){function i(e){function t(e,t){var n,r=[];if(t===(0|t))r[0]=t;else for(t=""+t,n=0;n<t.length;++n)r[7&n]=r[7&n]<<15^t.charCodeAt(n)+r[n+1&7]<<13;for(;r.length<8;)r.push(0);for(n=0;n<8&&0===r[n];++n);for(8==n?r[7]=-1:r[n],e.x=r,e.i=0,n=256;n>0;--n)e.next()}var n=this;n.next=function(){var e,t,r=n.x,a=n.i;return e=r[a],e^=e>>>7,t=e^e<<24,e=r[a+1&7],t^=e^e>>>10,e=r[a+3&7],t^=e^e>>>3,e=r[a+4&7],t^=e^e<<7,e=r[a+7&7],e^=e<<13,t^=e^e<<9,r[a]=t,n.i=a+1&7,t},t(n,e)}function o(e,t){return t.x=e.x.slice(),t.i=e.i,t}function u(e,t){null==e&&(e=+new Date);var n=new i(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=n.next()>>>11,t=(n.next()>>>0)/4294967296,r=(e+t)/(1<<21)}while(0===r);return r},a.int32=n.next,a.quick=a,r&&(r.x&&o(r,n),a.state=function(){return o(n,{})}),a}a&&a.exports?a.exports=u:n(64)&&n(111)?(r=function(){return u}.call(t,n,t,a),void 0===r||(a.exports=r)):this.xorshift7=u})(0,e,n(64))}).call(this,n(110)(e))},function(e,t,n){(function(e){var r;(function(e,a,s){function i(e){function t(e,t){var n,r,a,s,i,o=[],u=128;for(t===(0|t)?(r=t,t=null):(t+="\0",r=0,u=Math.max(u,t.length)),a=0,s=-32;s<u;++s)t&&(r^=t.charCodeAt((s+32)%t.length)),0===s&&(i=r),r^=r<<10,r^=r>>>15,r^=r<<4,r^=r>>>13,s>=0&&(i=i+1640531527|0,n=o[127&s]^=r+i,a=0==n?a+1:0);for(a>=128&&(o[127&(t&&t.length||0)]=-1),a=127,s=512;s>0;--s)r=o[a+34&127],n=o[a=a+1&127],r^=r<<13,n^=n<<17,r^=r>>>15,n^=n>>>12,o[a]=r^n;e.w=i,e.X=o,e.i=a}var n=this;n.next=function(){var e,t,r=n.w,a=n.X,s=n.i;return n.w=r=r+1640531527|0,t=a[s+34&127],e=a[s=s+1&127],t^=t<<13,e^=e<<17,t^=t>>>15,e^=e>>>12,t=a[s]=t^e,n.i=s,t+(r^r>>>16)|0},t(n,e)}function o(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function u(e,t){null==e&&(e=+new Date);var n=new i(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=n.next()>>>11,t=(n.next()>>>0)/4294967296,r=(e+t)/(1<<21)}while(0===r);return r},a.int32=n.next,a.quick=a,r&&(r.X&&o(r,n),a.state=function(){return o(n,{})}),a}a&&a.exports?a.exports=u:n(64)&&n(111)?(r=function(){return u}.call(t,n,t,a),void 0===r||(a.exports=r)):this.xor4096=u})(0,e,n(64))}).call(this,n(110)(e))},function(e,t,n){(function(e){var r;(function(e,a,s){function i(e){var t=this,n="";t.next=function(){var e=t.b,n=t.c,r=t.d,a=t.a;return e=e<<25^e>>>7^n,n=n-r|0,r=r<<24^r>>>8^a,a=a-e|0,t.b=e=e<<20^e>>>12^n,t.c=n=n-r|0,t.d=r<<16^n>>>16^a,t.a=a-e|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var r=0;r<n.length+20;r++)t.b^=0|n.charCodeAt(r),t.next()}function o(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function u(e,t){var n=new i(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=n.next()>>>11,t=(n.next()>>>0)/4294967296,r=(e+t)/(1<<21)}while(0===r);return r},a.int32=n.next,a.quick=a,r&&("object"==typeof r&&o(r,n),a.state=function(){return o(n,{})}),a}a&&a.exports?a.exports=u:n(64)&&n(111)?(r=function(){return u}.call(t,n,t,a),void 0===r||(a.exports=r)):this.tychei=u})(0,e,n(64))}).call(this,n(110)(e))},function(e,t,n){var r;(function(a,s){function i(e,t,n){var r=[];t=1==t?{entropy:!0}:t||{};var i=l(c(t.entropy?[e,h(a)]:null==e?d():e,3),r),p=new o(r),f=function(){for(var e=p.g(b),t=x,n=0;e<v;)e=(e+n)*m,t*=m,n=p.g(1);for(;e>=w;)e/=2,t/=2,n>>>=1;return(e+n)/t};return f.int32=function(){return 0|p.g(4)},f.quick=function(){return p.g(4)/4294967296},f.double=f,l(h(p.S),a),(t.pass||n||function(e,t,n,r){return r&&(r.S&&u(r,p),e.state=function(){return u(p,{})}),n?(s[y]=e,t):e})(f,i,"global"in t?t.global:this==s,t.state)}function o(e){var t,n=e.length,r=this,a=0,s=r.i=r.j=0,i=r.S=[];for(n||(e=[n++]);a<m;)i[a]=a++;for(a=0;a<m;a++)i[a]=i[s=k&s+e[a%n]+(t=i[a])],i[s]=t;(r.g=function(e){for(var t,n=0,a=r.i,s=r.j,i=r.S;e--;)t=i[a=k&a+1],n=n*m+i[k&(i[a]=i[s=k&s+t])+(i[s]=t)];return r.i=a,r.j=s,n})(m)}function u(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function c(e,t){var n,r=[],a=typeof e;if(t&&"object"==a)for(n in e)try{r.push(c(e[n],t-1))}catch(e){}return r.length?r:"string"==a?e:e+"\0"}function l(e,t){for(var n,r=e+"",a=0;a<r.length;)t[k&a]=k&(n^=19*t[k&a])+r.charCodeAt(a++);return h(t)}function d(){try{var e;return p&&(e=p.randomBytes)?e=e(m):(e=new Uint8Array(m),(f.crypto||f.msCrypto).getRandomValues(e)),h(e)}catch(e){var t=f.navigator,n=t&&t.plugins;return[+new Date,f,n,f.screen,h(a)]}}function h(e){return String.fromCharCode.apply(0,e)}var p,f=this,m=256,b=6,g=52,y="random",x=s.pow(m,b),v=s.pow(2,g),w=2*v,k=m-1;if(s["seed"+y]=i,l(s.random(),a),e.exports){e.exports=i;try{p=n(288)}catch(e){}}else r=function(){return i}.call(t,n,t,e),void 0===r||(e.exports=r)})([],Math)},function(e,t){},function(e,t,n){(function(e){function r(e,t){this._id=e,this._clearFn=t}var a=void 0!==e&&e||"undefined"!=typeof self&&self||window,s=Function.prototype.apply;t.setTimeout=function(){return new r(s.call(setTimeout,a,arguments),clearTimeout)},t.setInterval=function(){return new r(s.call(setInterval,a,arguments),clearInterval)},t.clearTimeout=t.clearInterval=function(e){e&&e.close()},r.prototype.unref=r.prototype.ref=function(){},r.prototype.close=function(){this._clearFn.call(a,this._id)},t.enroll=function(e,t){clearTimeout(e._idleTimeoutId),e._idleTimeout=t},t.unenroll=function(e){clearTimeout(e._idleTimeoutId),e._idleTimeout=-1},t._unrefActive=t.active=function(e){clearTimeout(e._idleTimeoutId);var t=e._idleTimeout;t>=0&&(e._idleTimeoutId=setTimeout(function(){e._onTimeout&&e._onTimeout()},t))},n(290),t.setImmediate="undefined"!=typeof self&&self.setImmediate||void 0!==e&&e.setImmediate||this&&this.setImmediate,t.clearImmediate="undefined"!=typeof self&&self.clearImmediate||void 0!==e&&e.clearImmediate||this&&this.clearImmediate}).call(this,n(103))},function(e,t,n){(function(e,t){(function(e,n){"use strict";function r(e){"function"!=typeof e&&(e=new Function(""+e));for(var t=new Array(arguments.length-1),n=0;n<t.length;n++)t[n]=arguments[n+1];var r={callback:e,args:t};return m[f]=r,p(f),f++}function a(e){delete m[e]}function s(e){var t=e.callback,r=e.args;switch(r.length){case 0:t();break;case 1:t(r[0]);break;case 2:t(r[0],r[1]);break;case 3:t(r[0],r[1],r[2]);break;default:t.apply(n,r)}}function i(e){if(b)setTimeout(i,0,e);else{var t=m[e];if(t){b=!0;try{s(t)}finally{a(e),b=!1}}}}function o(){p=function(e){t.nextTick(function(){i(e)})}}function u(){if(e.postMessage&&!e.importScripts){var t=!0,n=e.onmessage;return e.onmessage=function(){t=!1},e.postMessage("","*"),e.onmessage=n,t}}function c(){var t="setImmediate$"+Math.random()+"$",n=function(n){n.source===e&&"string"==typeof n.data&&0===n.data.indexOf(t)&&i(+n.data.slice(t.length))};e.addEventListener?e.addEventListener("message",n,!1):e.attachEvent("onmessage",n),p=function(n){e.postMessage(t+n,"*")}}function l(){var e=new MessageChannel;e.port1.onmessage=function(e){var t=e.data;i(t)},p=function(t){e.port2.postMessage(t)}}function d(){var e=g.documentElement;p=function(t){var n=g.createElement("script");n.onreadystatechange=function(){i(t),n.onreadystatechange=null,e.removeChild(n),n=null},e.appendChild(n)}}function h(){p=function(e){setTimeout(i,0,e)}}if(!e.setImmediate){var p,f=1,m={},b=!1,g=e.document,y=Object.getPrototypeOf&&Object.getPrototypeOf(e);y=y&&y.setTimeout?y:e,"[object process]"==={}.toString.call(e.process)?o():u()?c():e.MessageChannel?l():g&&"onreadystatechange"in g.createElement("script")?d():h(),y.setImmediate=r,y.clearImmediate=a}})("undefined"==typeof self?void 0===e?this:e:self)}).call(this,n(103),n(142))},function(e,t){},function(e,t){},function(e,t){},function(e,t,n){var r,a,s,i;i=function(e){"use strict";function t(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function n(e){if(Array.isArray(e)){for(var t=0,n=Array(e.length);t<e.length;t++)n[t]=e[t];return n}return Array.from(e)}function r(e,t){var n=[],r=[];e.forEach(function(e,a){null!==e[1]&&(r.push(e),n.push(t[a]))});var a=r.reduce(function(e,t){return e+t[1]},0),s=a/r.length,i=r.reduce(function(e,t){var n=t[1]-s;return e+n*n},0),o=r.reduce(function(e,t,r){var a=n[r],s=t[1]-a[1];return e+s*s},0);return 1-o/i}function a(e,t){for(var n=e,r=e.length-1,a=[t],s=0;s<r;s++){for(var i=s,o=s+1;o<r;o++)Math.abs(n[s][o])>Math.abs(n[s][i])&&(i=o);for(var u=s;u<r+1;u++){var c=n[u][s];n[u][s]=n[u][i],n[u][i]=c}for(var l=s+1;l<r;l++)for(var d=r;d>=s;d--)n[d][l]-=n[d][s]*n[s][l]/n[s][s]}for(var h=r-1;h>=0;h--){for(var p=0,f=h+1;f<r;f++)p+=n[f][h]*a[f];a[h]=(n[r][h]-p)/n[h][h]}return a}function s(e,t){var n=Math.pow(10,t);return Math.round(e*n)/n}function i(){var e=function(e,n){return o({_round:s},e,t({},n,function(e,t){return c[n](e,o({},u,t))}))};return Object.keys(c).reduce(e,{})}var o=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},u={order:2,precision:2,period:null},c={linear:function(e,t){for(var n=[0,0,0,0,0],a=0,i=0;i<e.length;i++)null!==e[i][1]&&(a++,n[0]+=e[i][0],n[1]+=e[i][1],n[2]+=e[i][0]*e[i][0],n[3]+=e[i][0]*e[i][1],n[4]+=e[i][1]*e[i][1]);var o=a*n[2]-n[0]*n[0],u=a*n[3]-n[0]*n[1],c=0===o?0:s(u/o,t.precision),l=s(n[1]/a-c*n[0]/a,t.precision),d=function(e){return[s(e,t.precision),s(c*e+l,t.precision)]},h=e.map(function(e){return d(e[0])});return{points:h,predict:d,equation:[c,l],r2:s(r(e,h),t.precision),string:0===l?"y = "+c+"x":"y = "+c+"x + "+l}},exponential:function(e,t){for(var n=[0,0,0,0,0,0],a=0;a<e.length;a++)null!==e[a][1]&&(n[0]+=e[a][0],n[1]+=e[a][1],n[2]+=e[a][0]*e[a][0]*e[a][1],n[3]+=e[a][1]*Math.log(e[a][1]),n[4]+=e[a][0]*e[a][1]*Math.log(e[a][1]),n[5]+=e[a][0]*e[a][1]);var i=n[1]*n[2]-n[5]*n[5],o=Math.exp((n[2]*n[3]-n[5]*n[4])/i),u=(n[1]*n[4]-n[5]*n[3])/i,c=s(o,t.precision),l=s(u,t.precision),d=function(e){return[s(e,t.precision),s(c*Math.exp(l*e),t.precision)]},h=e.map(function(e){return d(e[0])});return{points:h,predict:d,equation:[c,l],string:"y = "+c+"e^("+l+"x)",r2:s(r(e,h),t.precision)}},logarithmic:function(e,t){for(var n=[0,0,0,0],a=e.length,i=0;i<a;i++)null!==e[i][1]&&(n[0]+=Math.log(e[i][0]),n[1]+=e[i][1]*Math.log(e[i][0]),n[2]+=e[i][1],n[3]+=Math.pow(Math.log(e[i][0]),2));var o=(a*n[1]-n[2]*n[0])/(a*n[3]-n[0]*n[0]),u=s(o,t.precision),c=s((n[2]-u*n[0])/a,t.precision),l=function(e){return[s(e,t.precision),s(s(c+u*Math.log(e),t.precision),t.precision)]},d=e.map(function(e){return l(e[0])});return{points:d,predict:l,equation:[c,u],string:"y = "+c+" + "+u+" ln(x)",r2:s(r(e,d),t.precision)}},power:function(e,t){for(var n=[0,0,0,0,0],a=e.length,i=0;i<a;i++)null!==e[i][1]&&(n[0]+=Math.log(e[i][0]),n[1]+=Math.log(e[i][1])*Math.log(e[i][0]),n[2]+=Math.log(e[i][1]),n[3]+=Math.pow(Math.log(e[i][0]),2));var o=(a*n[1]-n[0]*n[2])/(a*n[3]-Math.pow(n[0],2)),u=(n[2]-o*n[0])/a,c=s(Math.exp(u),t.precision),l=s(o,t.precision),d=function(e){return[s(e,t.precision),s(s(c*Math.pow(e,l),t.precision),t.precision)]},h=e.map(function(e){return d(e[0])});return{points:h,predict:d,equation:[c,l],string:"y = "+c+"x^"+l,r2:s(r(e,h),t.precision)}},polynomial:function(e,t){for(var i=[],o=[],u=0,c=0,l=e.length,d=t.order+1,h=0;h<d;h++){for(var p=0;p<l;p++)null!==e[p][1]&&(u+=Math.pow(e[p][0],h)*e[p][1]);i.push(u),u=0;for(var f=[],m=0;m<d;m++){for(var b=0;b<l;b++)null!==e[b][1]&&(c+=Math.pow(e[b][0],h+m));f.push(c),c=0}o.push(f)}o.push(i);for(var g=a(o,d).map(function(e){return s(e,t.precision)}),y=function(e){return[s(e,t.precision),s(g.reduce(function(t,n,r){return t+n*Math.pow(e,r)},0),t.precision)]},x=e.map(function(e){return y(e[0])}),v="y = ",w=g.length-1;w>=0;w--)v+=w>1?g[w]+"x^"+w+" + ":1===w?g[w]+"x + ":g[w];return{string:v,points:x,predict:y,equation:[].concat(n(g)).reverse(),r2:s(r(e,x),t.precision)}}};e.exports=i()},a=[e],r=i,s="function"==typeof r?r.apply(t,a):r,void 0===s||(e.exports=s)},function(e,t,n){"use strict";function r(e,t,n){const r=[];for(let a=0;a<n.strides.length;a++){const s=n.strides[a],i=Math.floor((t+s-1)/s),o=Math.floor((e+s-1)/s),u=n.anchors[a];for(let e=0;e<i;e++){const t=s*(e+.5);for(let e=0;e<o;e++){const n=s*(e+.5);for(let e=0;e<u;e++)r.push([n,t])}}}return r}function a(e,t,n){const r=Object(c.slice)(e,[0,1],[-1,2]),a=Object(c.add)(r,t),s=Object(c.slice)(e,[0,3],[-1,2]),i=Object(c.div)(s,n),o=Object(c.div)(a,n),u=Object(c.div)(i,2),l=Object(c.sub)(o,u),d=Object(c.add)(o,u),h=Object(c.mul)(l,n),p=Object(c.mul)(d,n);return Object(c.concat2d)([h,p],1)}function s(e){return e instanceof c.Tensor?[e.shape[0],e.shape[1]]:[e.height,e.width]}function i(e,t){let n,r,a;if(e.topLeft instanceof c.Tensor&&e.bottomRight instanceof c.Tensor){const[s,i]=Object(c.tidy)(()=>[Object(c.concat)([Object(c.sub)(t-1,e.topLeft.slice(0,1)),e.topLeft.slice(1,1)]),Object(c.concat)([Object(c.sub)(t-1,e.bottomRight.slice(0,1)),e.bottomRight.slice(1,1)])]);n=s,r=i,null!=e.landmarks&&(a=Object(c.tidy)(()=>{const n=Object(c.sub)(Object(c.tensor1d)([t-1,0]),e.landmarks),r=Object(c.tensor1d)([1,-1]);return Object(c.mul)(n,r)}))}else{const[s,i]=e.topLeft,[o,u]=e.bottomRight;n=[t-1-s,i],r=[t-1-o,u],null!=e.landmarks&&(a=e.landmarks.map(e=>[t-1-e[0],e[1]]))}const s={topLeft:n,bottomRight:r};return null!=a&&(s.landmarks=a),null!=e.probability&&(s.probability=e.probability instanceof c.Tensor?e.probability.clone():e.probability),s}function o(e,t){return Object(c.tidy)(()=>{let n;return n=e.hasOwnProperty("box")?e.box:e,p(n,t).startEndTensor.squeeze()})}async function u({maxFaces:e=10,inputWidth:t=128,inputHeight:n=128,iouThreshold:r=.3,scoreThreshold:a=.75}={}){const s=await Object(l.loadGraphModel)(g,{fromTFHub:!0});return new b(s,t,n,e,r,a)}n.r(t),n.d(t,"load",function(){return u}),n.d(t,"BlazeFaceModel",function(){return b});var c=n(0),l=n(208);const d=e=>{e.startEndTensor.dispose(),e.startPoint.dispose(),e.endPoint.dispose()},h=e=>({startEndTensor:e,startPoint:Object(c.slice)(e,[0,0],[-1,2]),endPoint:Object(c.slice)(e,[0,2],[-1,2])}),p=(e,t)=>{const n=Object(c.mul)(e.startPoint,t),r=Object(c.mul)(e.endPoint,t),a=Object(c.concat2d)([n,r],1);return h(a)},f={strides:[8,16],anchors:[2,6]},m=6;class b{constructor(e,t,n,a,s,i){this.blazeFaceModel=e,this.width=t,this.height=n,this.maxFaces=a,this.anchorsData=r(t,n,f),this.anchors=Object(c.tensor2d)(this.anchorsData),this.inputSizeData=[t,n],this.inputSize=Object(c.tensor1d)([t,n]),this.iouThreshold=s,this.scoreThreshold=i}async getBoundingBoxes(e,t,n=!0){const[r,s,i]=Object(c.tidy)(()=>{const t=e.resizeBilinear([this.width,this.height]),n=Object(c.mul)(Object(c.sub)(t.div(255),.5),2),r=this.blazeFaceModel.predict(n).squeeze(),s=a(r,this.anchors,this.inputSize),i=Object(c.slice)(r,[0,0],[-1,1]);return[r,s,Object(c.sigmoid)(i).squeeze()]}),o=console.warn;console.warn=(()=>{});const u=c.image.nonMaxSuppression(s,i,this.maxFaces,this.iouThreshold,this.scoreThreshold);console.warn=o;const l=await u.array();u.dispose();let d=l.map(e=>Object(c.slice)(s,[e,0],[1,-1]));t||(d=await Promise.all(d.map(async e=>{const t=await e.array();return e.dispose(),t})));const p=e.shape[1],f=e.shape[2];let b;b=t?Object(c.div)([f,p],this.inputSize):[f/this.inputSizeData[0],p/this.inputSizeData[1]];const g=[];for(let e=0;e<d.length;e++){const a=d[e],s=Object(c.tidy)(()=>{const s=h(a instanceof c.Tensor?a:Object(c.tensor2d)(a));if(!n)return s;const o=l[e];let u;return u=t?this.anchors.slice([o,0],[1,2]):this.anchorsData[o],{box:s,landmarks:Object(c.slice)(r,[o,m-1],[1,-1]).squeeze().reshape([m,-1]),probability:Object(c.slice)(i,[o],[1]),anchor:u}});g.push(s)}return s.dispose(),i.dispose(),r.dispose(),{boxes:g,scaleFactor:b}}async estimateFaces(e,t=!1,n=!1,r=!0){const[,a]=s(e),u=Object(c.tidy)(()=>(e instanceof c.Tensor||(e=c.browser.fromPixels(e)),e.toFloat().expandDims(0))),{boxes:l,scaleFactor:h}=await this.getBoundingBoxes(u,t,r);return u.dispose(),t?l.map(e=>{const t=o(e,h);let s={topLeft:t.slice([0],[2]),bottomRight:t.slice([2],[2])};if(r){const{landmarks:t,probability:n,anchor:r}=e,a=t.add(r).mul(h);s.landmarks=a,s.probability=n}return n&&(s=i(s,a)),s}):Promise.all(l.map(async e=>{const t=o(e,h);let s;if(r){const[n,r,a]=await Promise.all([e.landmarks,t,e.probability].map(async e=>e.array())),i=e.anchor,[o,u]=h,c=n.map(e=>[(e[0]+i[0])*o,(e[1]+i[1])*u]);s={topLeft:r.slice(0,2),bottomRight:r.slice(2),landmarks:c,
probability:a},d(e.box),e.landmarks.dispose(),e.probability.dispose()}else{const e=await t.array();s={topLeft:e.slice(0,2),bottomRight:e.slice(2)}}return t.dispose(),n&&(s=i(s,a)),s}))}}const g="https://tfhub.dev/tensorflow/tfjs-model/blazeface/1/default/1"},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.MESH_ANNOTATIONS={silhouette:[10,338,297,332,284,251,389,356,454,323,361,288,397,365,379,378,400,377,152,148,176,149,150,136,172,58,132,93,234,127,162,21,54,103,67,109],lipsUpperOuter:[61,185,40,39,37,0,267,269,270,409,291],lipsLowerOuter:[146,91,181,84,17,314,405,321,375,291],lipsUpperInner:[78,191,80,81,82,13,312,311,310,415,308],lipsLowerInner:[78,95,88,178,87,14,317,402,318,324,308],rightEyeUpper0:[246,161,160,159,158,157,173],rightEyeLower0:[33,7,163,144,145,153,154,155,133],rightEyeUpper1:[247,30,29,27,28,56,190],rightEyeLower1:[130,25,110,24,23,22,26,112,243],rightEyeUpper2:[113,225,224,223,222,221,189],rightEyeLower2:[226,31,228,229,230,231,232,233,244],rightEyeLower3:[143,111,117,118,119,120,121,128,245],rightEyebrowUpper:[156,70,63,105,66,107,55,193],rightEyebrowLower:[35,124,46,53,52,65],leftEyeUpper0:[466,388,387,386,385,384,398],leftEyeLower0:[263,249,390,373,374,380,381,382,362],leftEyeUpper1:[467,260,259,257,258,286,414],leftEyeLower1:[359,255,339,254,253,252,256,341,463],leftEyeUpper2:[342,445,444,443,442,441,413],leftEyeLower2:[446,261,448,449,450,451,452,453,464],leftEyeLower3:[372,340,346,347,348,349,350,357,465],leftEyebrowUpper:[383,300,293,334,296,336,285,417],leftEyebrowLower:[265,353,276,283,282,295],midwayBetweenEyes:[168],noseTip:[1],noseBottom:[2],noseRightCorner:[98],noseLeftCorner:[327],rightCheek:[205],leftCheek:[425]}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const r=n(0),a=n(298),s=468,i=.25;class o{constructor(e,t,n,r,a,s){this.regionsOfInterest=[],this.runsWithoutFaceDetector=0,this.boundingBoxDetector=e,this.meshDetector=t,this.meshWidth=n,this.meshHeight=r,this.maxContinuousChecks=a,this.maxFaces=s}async predict(e){if(this.shouldUpdateRegionsOfInterest()){const t=!0,n=!1,{boxes:r,scaleFactor:s}=await this.boundingBoxDetector.getBoundingBoxes(e,t,n);if(0===r.length)return s.dispose(),this.clearAllRegionsOfInterest(),null;const i=r.map(e=>a.enlargeBox(a.scaleBoxCoordinates(e,s)));r.forEach(a.disposeBox),this.updateRegionsOfInterest(i),this.runsWithoutFaceDetector=0}else this.runsWithoutFaceDetector++;return r.tidy(()=>this.regionsOfInterest.map((t,n)=>{const s=a.cutBoxFromImageAndResize(t,e,[this.meshHeight,this.meshWidth]).div(255),[,i,o]=this.meshDetector.predict(s),u=r.reshape(o,[-1,3]),c=r.div(a.getBoxSize(t),[this.meshWidth,this.meshHeight]),l=r.mul(u,c.concat(r.tensor2d([1],[1,1]),1)).add(t.startPoint.concat(r.tensor2d([0],[1,1]),1)),d=this.calculateLandmarksBoundingBox(l),h=this.regionsOfInterest[n];a.disposeBox(h),this.regionsOfInterest[n]=d;const p={coords:u,scaledCoords:l,box:d,flag:i.squeeze()};return p}))}updateRegionsOfInterest(e){for(let t=0;t<e.length;t++){const n=e[t],r=this.regionsOfInterest[t];let s=0;if(r&&r.startPoint){const[e,t,a,i]=n.startEndTensor.arraySync()[0],[o,u,c,l]=r.startEndTensor.arraySync()[0],d=Math.max(e,o),h=Math.max(t,u),p=Math.min(a,c),f=Math.min(i,l),m=(p-d)*(f-h),b=(a-e)*(i-t),g=(c-o)*(l-t);s=m/(b+g-m)}s>i?a.disposeBox(n):(this.regionsOfInterest[t]=n,a.disposeBox(r))}for(let t=e.length;t<this.regionsOfInterest.length;t++)a.disposeBox(this.regionsOfInterest[t]);this.regionsOfInterest=this.regionsOfInterest.slice(0,e.length)}clearRegionOfInterest(e){null!=this.regionsOfInterest[e]&&(a.disposeBox(this.regionsOfInterest[e]),this.regionsOfInterest=[...this.regionsOfInterest.slice(0,e),...this.regionsOfInterest.slice(e+1)])}clearAllRegionsOfInterest(){for(let e=0;e<this.regionsOfInterest.length;e++)a.disposeBox(this.regionsOfInterest[e]);this.regionsOfInterest=[]}shouldUpdateRegionsOfInterest(){const e=this.regionsOfInterest.length,t=0===e;return 1===this.maxFaces||t?t:e!==this.maxFaces&&this.runsWithoutFaceDetector>=this.maxContinuousChecks}calculateLandmarksBoundingBox(e){const t=e.slice([0,0],[s,1]),n=e.slice([0,1],[s,1]),i=r.stack([t.min(),n.min(),t.max(),n.max()]),o=a.createBox(i.expandDims(0));return a.enlargeBox(o)}}t.Pipeline=o},function(e,t,n){"use strict";function r(e){null!=e&&null!=e.startPoint&&(e.startEndTensor.dispose(),e.startPoint.dispose(),e.endPoint.dispose())}function a(e,t,n){return{startEndTensor:e,startPoint:null!=t?t:l.slice(e,[0,0],[-1,2]),endPoint:null!=n?n:l.slice(e,[0,2],[-1,2])}}function s(e,t){const n=l.mul(e.startPoint,t),r=l.mul(e.endPoint,t);return a(l.concat2d([n,r],1))}function i(e){return l.tidy(()=>{const t=l.sub(e.endPoint,e.startPoint);return l.abs(t)})}function o(e){return l.tidy(()=>{const t=l.div(l.sub(e.endPoint,e.startPoint),2);return l.add(e.startPoint,t)})}function u(e,t,n){const r=t.shape[1],a=t.shape[2],s=e.startEndTensor;return l.tidy(()=>{const e=l.concat2d([s.slice([0,1],[-1,1]),s.slice([0,0],[-1,1]),s.slice([0,3],[-1,1]),s.slice([0,2],[-1,1])],0),i=l.div(e.transpose(),[r,a,r,a]);return l.image.cropAndResize(t,i,[0],n)})}function c(e,t=1.5){return l.tidy(()=>{const n=o(e),r=i(e),s=l.mul(l.div(r,2),t),u=l.sub(n,s),c=l.add(n,s);return a(l.concat2d([u,c],1),u,c)})}Object.defineProperty(t,"__esModule",{value:!0});const l=n(0);t.disposeBox=r,t.createBox=a,t.scaleBoxCoordinates=s,t.getBoxSize=i,t.getBoxCenter=o,t.cutBoxFromImageAndResize=u,t.enlargeBox=c},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t},function(e,t,n){"use strict";function r(e,t,n,r,a,s){const i=Object(Po.a)(e,"dy","avgPool3dGrad"),o=Object(Po.a)(t,"input","avgPool3dGrad");let u=i,c=o,l=!1;4===o.rank&&(l=!0,u=Object(ms.a)(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),c=Object(ms.a)(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),bs.b(5===u.rank,()=>"Error in avgPool3dGrad: dy must be rank 5 but got rank "+`${u.rank}.`),bs.b(5===c.rank,()=>"Error in avgPool3dGrad: input must be rank 5 but got rank "+`${c.rank}.`),null!=s&&bs.b(bs.v(a),()=>"Error in avgPool3dGrad: pad must be an integer when "+`using, dimRoundingMode ${s} but got pad ${a}.`);const d={dy:u,input:c},h={filterSize:n,strides:r,pad:a,dimRoundingMode:s},p=Lo.a.runKernel(Io.q,d,h);return l?Object(ms.a)(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}function a(e,t,n,r,a){const s=Object(Po.a)(e,"dy","avgPoolGrad"),i=Object(Po.a)(t,"input","avgPoolGrad");bs.b(i.rank===s.rank,()=>`Rank of input (${i.rank}) does not match rank of dy (${s.rank})`);let o=i,u=s,c=!1;3===i.rank&&(c=!0,o=Object(ms.a)(i,[1,i.shape[0],i.shape[1],i.shape[2]]),u=Object(ms.a)(s,[1,s.shape[0],s.shape[1],s.shape[2]])),bs.b(4===u.rank,()=>"Error in avgPoolGrad: dy must be rank 4 but got rank "+`${u.rank}.`),bs.b(4===o.rank,()=>"Error in avgPoolGrad: input must be rank 4 but got rank "+`${o.rank}.`);const l={dy:u,input:o},d={filterSize:n,strides:r,pad:a},h=Lo.a.runKernel(Io.r,l,d);return c?Object(ms.a)(h,[h.shape[1],h.shape[2],h.shape[3]]):h}function s(e,t,n,r,a){let s=e;4===e.rank&&(s=Object(ms.a)(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]));let i=t;4===i.rank&&(i=Object(ms.a)(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),bs.b(5===s.rank,()=>"Error in conv3dDerFilter: input must be rank 5, but got shape "+`${s.shape}.`),bs.b(5===i.rank,()=>"Error in conv3dDerFilter: dy must be rank 5, but got shape "+`${i.shape}.`),bs.b(5===n.length,()=>"Error in conv3dDerFilter: filterShape must be length 5, but got "+`${n}.`),bs.b(s.shape[4]===n[3],()=>`Error in conv3dDerFilter: depth of input ${s.shape[4]}) must `+`match input depth in filter (${n[3]}.`),bs.b(i.shape[4]===n[4],()=>`Error in conv3dDerFilter: depth of dy (${i.shape[4]}) must `+`match output depth for filter (${n[4]}).`);const o={x:s,dy:i},u={strides:r,pad:a,filterShape:n};return Lo.a.runKernel(Io.G,o,u)}function i(e,t){const n=[];for(let r=e;r<t;++r)n.push(r);return n}function o(e){const t=[];for(let n=0;n<e.length;++n)for(let r=0;r<e[n].length;++r)t.push(e[n][r]);return t}function u(e,t,n,r=5,a=1,s=1,i=.5){const o={x:e,y:t,dy:n},u={depthRadius:r,bias:a,alpha:s,beta:i};return Lo.a.runKernel(Io.xb,o,u)}function c(e,t,n,r){return t.rank<n.rank&&(t=Object(ms.a)(t,lu.e(t.shape,r))),e.rank<n.rank&&(e=Object(ms.a)(e,lu.e(e.shape,r))),{x:()=>{const r=Object(Si.a)(e,Object(gs.a)(Object(Vs.a)(n,t),e.dtype));return r}}}function l(e,t,n,r,a,s,i){const o=Object(Po.a)(e,"dy","maxPool3dGrad"),u=Object(Po.a)(t,"input","maxPool3dGrad"),c=Object(Po.a)(n,"output","maxPool3dGrad");let l=o,d=u,h=c,p=!1;4===u.rank&&(p=!0,l=Object(ms.a)(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),d=Object(ms.a)(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]]),h=Object(ms.a)(c,[1,c.shape[0],c.shape[1],c.shape[2],c.shape[3]])),bs.b(5===l.rank,()=>"Error in maxPool3dGrad: dy must be rank 5 but got rank "+`${l.rank}.`),bs.b(5===d.rank,()=>"Error in maxPool3dGrad: input must be rank 5 but got rank "+`${d.rank}.`),bs.b(5===h.rank,()=>"Error in maxPool3dGrad: output must be rank 5 but got rank "+`${h.rank}.`),null!=i&&bs.b(bs.v(s),()=>"Error in maxPool3dGrad: pad must be an integer when "+`using, dimRoundingMode ${i} but got pad ${s}.`);const f={dy:l,input:d,output:h},m={filterSize:r,strides:a,pad:s,dimRoundingMode:i},b=Lo.a.runKernel(Io.Lb,f,m);return p?Object(ms.a)(b,[b.shape[1],b.shape[2],b.shape[3],b.shape[4]]):b}function d(e,t,n,r,a,s,i){const o=Object(Po.a)(e,"dy","maxPoolGrad"),u=Object(Po.a)(t,"input","maxPoolGrad"),c=Object(Po.a)(n,"output","maxPoolGrad");bs.b(u.rank===o.rank,()=>`Rank of input (${u.rank}) does not match rank of dy `+`(${o.rank})`),bs.b(4===o.rank,()=>"Error in maxPoolGrad: dy must be rank 4 but got rank "+`${o.rank}.`),bs.b(4===u.rank,()=>"Error in maxPoolGrad: input must be rank 4 but got rank "+`${u.rank}.`),null!=i&&bs.b(bs.v(s),()=>"Error in maxPoolGrad: pad must be an integer when using, "+`dimRoundingMode ${i} but got pad ${s}.`);const l={dy:o,input:u,output:c},d={filterSize:r,strides:a,pad:s,dimRoundingMode:i};return Lo.a.runKernel(Io.Mb,l,d)}function h(e,t){const n=Object(wi.a)(t,Object(Oo.a)(t)),r=Object(Zs.a)(e,n);let a=Object(Qs.a)(t,Object(jo.a)(0,"int32"));const s=r.rank-a.rank;for(let e=0;e<s;++e)a=Object(Hs.a)(a,e+1);a=Object(fi.a)(a,Object(Wu.a)(r.shape,"bool"));const i=Object(Oo.a)(r);return Object(ko.a)(a,r,i)}function p(){return null==Bc&&(Bc=Object(ss.backend)().epsilon()),Bc}function f(){return"channelsLast"}function m(e,t){if(Array.isArray(e)){let n=[];for(let r=0;r<t;r++)n=n.concat(e);return n}{const n=new Array(t);return n.fill(e),n}}function b(e,t){if(!e)throw new Hc(t)}function g(e,t){let n=0;for(const r of e)r===t&&n++;return n}function y(e){return 1===e.length?e[0]:e}function x(e){return Array.isArray(e)?e:[e]}function v(e){const t=e.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2"),n=t.replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return"_"!==n[0]?n:"private"+n}function w(e){return e.length<=1?e:-1===e.indexOf("_")?e:e.replace(/[_]+(\w|$)/g,(e,t)=>t.toUpperCase())}function k(e){if(null==e)return null;const t={};return t.className=e.getClassName(),t.config=e.getConfig(),t}function O(e){if(null!=e&&"object"==typeof e)if(Array.isArray(e))e.forEach(e=>O(e));else{const t=Object.keys(e);for(const n of t){const t=e[n];null!=t&&"object"==typeof t&&(Array.isArray(t)||"ndarray"!==t.type||"number"!=typeof t.value?O(t):e[n]=t.value)}}}function I(e,t={},n={},r="object",a=!1){if("string"==typeof e){const a=e;let s;if(a in n)s=n[a];else if(a in qc)s=qc[a];else if(s=t[a],null==s)throw new Uc(`Unknown ${r}: ${e}. `+"This may be due to one of the following reasons:\n"+`1. The ${r} is defined in Python, in which `+"case it needs to be ported to TensorFlow.js or your JavaScript code.\n"+`2. The custom ${r} is defined in JavaScript, `+"but is not registered properly with tf.serialization.registerClass().");return s}{const s=e;if(null==s.className||null==s.config)throw new Uc(`${r}: Improper config format: `+`${JSON.stringify(s)}.\n`+"'className' and 'config' must set.");const i=s.className;let o,u;if(i in n?[o,u]=n[i]:i in qc?[o,u]=qc.className:i in t&&([o,u]=t[i]),null==o)throw new Uc(`Unknown ${r}: ${i}. `+"This may be due to one of the following reasons:\n"+`1. The ${r} is defined in Python, in which `+"case it needs to be ported to TensorFlow.js or your JavaScript code.\n"+`2. The custom ${r} is defined in JavaScript, `+"but is not registered properly with tf.serialization.registerClass().");if(null!=u){const e={};for(const t of Object.keys(qc))e[t]=qc[t];for(const t of Object.keys(n))e[t]=n[t];const t=s.config;t.customObjects=e;const r=Object.assign({},qc);for(const e of Object.keys(n))qc[e]=n[e];O(s.config);const i=u(o,s.config,n,a);return qc=Object.assign({},r),i}{const e=Object.assign({},qc);for(const e of Object.keys(n))qc[e]=n[e];const t=new o(s.config);return qc=Object.assign({},e),t}}}function N(e,t){return e<t?-1:e>t?1:0}function j(e,t){return-1*N(e,t)}function S(e){if(null==e)return e;const t=[];for(const n of e)-1===t.indexOf(n)&&t.push(n);return t}function T(e){if(null==e)throw new Uc(`Invalid value in obj: ${JSON.stringify(e)}`);for(const t in e)if(e.hasOwnProperty(t))return!1;return!0}function C(e,t,n){if(null!=n&&e.indexOf(n)<0)throw new Uc(`${n} is not a valid ${t}.  Valid values are ${e} or null/undefined.`)}function E(e,t,n=0,r=1/0){return b(n>=0),b(r>=n),Array.isArray(e)&&e.length>=n&&e.length<=r&&e.every(e=>typeof e===t)}function $(e,t){Array.isArray(e)?(ss.util.assert(e.length>0,()=>`${t} is unexpectedly an empty array.`),e.forEach((e,n)=>$(e,`element ${n+1} of ${t}`))):ss.util.assert(Number.isInteger(e)&&e>0,()=>`Expected ${t} to be a positive integer, but got `+`${A(e)}.`)}function A(e){return null===e?"null":Array.isArray(e)?"["+e.map(e=>A(e)).join(",")+"]":"string"==typeof e?`"${e}"`:`${e}`}function _(e,t){let n,r=ss.util.now();const a=(...a)=>{const s=ss.util.now();return s-r<t?n:(r=s,n=e(...a),n)};return a}function D(e){return"relu"===e?"relu":"linear"===e?"linear":"elu"===e?"elu":null}function F(e,t){return Object(ss.tidy)(()=>ss.sqrt(ss.sum(ss.mul(e,e),t,!0)))}function R(e){return k(e)}function M(e,t={}){return I(e,ss.serialization.SerializationMap.getMap().classNameMap,t,"constraint")}function z(e){if(null==e)return null;if("string"==typeof e){const t=e in Jc?Jc[e]:e,n={className:t,config:{}};return M(n)}return e instanceof Kc?e:M(e)}function L(e){return new Xc(e)}function P(e){return new Yc(e)}function B(){return new Zc}function W(e){return new Qc(e)}function V(e){C(el,"DataFormat",e)}function U(e){C(tl,"InterpolationFormat",e)}function G(e){C(nl,"PaddingMode",e)}function H(e){C(rl,"PoolMode",e)}function q(e,t){il.push(e);try{const e=t();return il.pop(),e}catch(e){throw il.pop(),e}}function K(){return 0===il.length?"":il.join(ol)+ol}function X(e){if(!Z(e))throw new Error("Not a valid tensor name: '"+e+"'");return K()+e}function Y(e){if(!Z(e))throw new Error("Not a valid tensor name: '"+e+"'");sl.has(e)||sl.set(e,0);const t=sl.get(e);if(sl.set(e,sl.get(e)+1),t>0){const n=`${e}_${t}`;return sl.set(n,1),n}return e}function Z(e){return!!e.match(ul)}function Q(e){return e===parseInt(e.toString(),10)}function J(e,t,n){null==t&&(t=0),null==n&&(n=e.length);let r=1;for(let a=t;a<n;++a)r*=e[a];return r}function ee(e){
return e=Array.isArray(e)?new Float32Array(e):e,Object(ss.tensor1d)(e)}function te(e){return ss.min(ee(e)).dataSync()[0]}function ne(e){return ss.max(ee(e)).dataSync()[0]}function re(e,t){if(t<e)throw new Uc(`end (${t}) < begin (${e}) is forbidden.`);const n=[];for(let r=e;r<t;++r)n.push(r);return n}function ae(e,t){return e.asType(t)}function se(e,t=-1){const n=e.shape.slice();return t<0&&(t=n.length+t+1),n.splice(t,0,1),e.reshape(n)}function ie(e,t){return Object(ss.tidy)(()=>{if(2!==e.shape.length)throw new Uc("repeat() expects a rank-2 tensor, but received a "+`rank-${e.shape.length} tensor.`);const n=se(e,1);return fe(n,[1,t,1])})}function oe(e){const t=[J(e.shape)];return e.reshape(t)}function ue(e){if(e.rank<=1)throw new Uc(`batchFlatten requires a minimum rank of 2. Got rank: ${e.rank}.`);const t=[e.shape[0],J(e.shape,1)];return e.reshape(t)}function ce(e,t,n){return Object(ss.tidy)(()=>{switch(e.rank){case 1:return ss.slice1d(e,t,n);case 2:return ss.slice2d(e,[t,0],[n,e.shape[1]]);case 3:return ss.slice3d(e,[t,0,0],[n,e.shape[1],e.shape[2]]);case 4:return ss.slice4d(e,[t,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3]]);case 5:return ss.slice(e,[t,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4]]);case 6:return ss.slice(e,[t,0,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4],e.shape[5]]);default:throw new Uc("sliceAlongFirstAxis() received an unsupported tensor rank: "+`${e.rank}`)}})}function le(e,t,n){return Object(ss.tidy)(()=>{switch(e.rank){case 1:return ss.slice1d(e,t,n);case 2:return ss.slice2d(e,[0,t],[e.shape[0],n]);case 3:return ss.slice3d(e,[0,0,t],[e.shape[0],e.shape[1],n]);case 4:return ss.slice4d(e,[0,0,0,t],[e.shape[0],e.shape[1],e.shape[2],n]);default:throw new Uc("sliceAlongLastAxis() received an unsupported tensor rank: "+`${e.rank}`)}})}function de(e,t,n,r){return Object(ss.tidy)(()=>{switch(e.rank){case 1:return ss.slice1d(e,t,n);case 2:switch(r){case 1:return ce(e,t,n);case 2:return le(e,t,n);default:throw new Uc("The axis is not within the rank of the tensor "+`${r}`)}case 3:switch(r){case 1:return ce(e,t,n);case 2:return ss.slice3d(e,[0,t,0],[e.shape[0],n,e.shape[2]]);case 3:return le(e,t,n);default:throw new Uc("The axis is not within the rank of the tensor "+`${r}`)}case 4:switch(r){case 1:return ce(e,t,n);case 2:return ss.slice4d(e,[0,t,0,0],[e.shape[0],n,e.shape[2],e.shape[3]]);case 3:return ss.slice4d(e,[0,0,t,0],[e.shape[0],e.shape[1],n,e.shape[3]]);case 4:return le(e,t,n);default:throw new Uc("The axis is not within the rank of the tensor "+`${r}`)}default:throw new Uc("sliceAlongLastAxis() received an unsupported tensor rank: "+`${e.rank}`)}})}function he(e,t=-1){let n;return t<0&&(n=e[0].rank,t=0!==n?n:0),t===e[0].rank&&(t=-1),ss.concat(e,t)}function pe(e,t){switch(e.rank){case 1:return ss.concat1d([e,t]);case 2:return ss.concat2d([e,t],0);case 3:return ss.concat3d([e,t],0);case 4:return ss.concat4d([e,t],0);default:throw new Uc("concatAlongFirstAxis() received an unsupported "+`tensor rank: ${e.rank}`)}}function fe(e,t){if(Array.isArray(t)||(t=[t]),e.rank!==t.length)throw new Uc(`The length of input n (${t.length}) does not match `+`the number of dimensions in input x (${e.rank})`);return ss.tile(e,t)}function me(e,t=0,n=1,r,a){return ss.randomNormal(e,t,n,r,a)}function be(e,t,n,r){if(e.rank<2||t.rank<2)throw new Gc("dot requires both inputs to be rank >= 2"+` but got x shape = ${e.shape} and y shape = ${t.shape}`);if(t.rank>=3){const n=e.shape.slice(-1)[0],r=t.shape.slice(-2)[0];if(n!==r)throw new Gc("If rank y >= 3, then the second last dim"+` of y must equal the last dim of x but got x shape = ${e.shape} and `+` y shape = ${t.shape}`)}if(2===e.rank&&2===t.rank){const a=!1,s=!1;return ss.fused.matMul({a:e,b:t,transposeA:a,transposeB:s,bias:r?xe(e.rank,r,f()):null,activation:n})}{const a=e.shape.slice(),s=a.pop();e=e.reshape([-1,s]);const i=t.shape.slice(),o=i.pop(),u=i.pop(),c=[...i,o],l=Array.from({length:t.rank},(e,n)=>0===n?t.rank-2:n<=t.rank-2?n-1:n);t=t.transpose(l).reshape([u,-1]);const d=[...a,...c],h=!1,p=!1;return ss.fused.matMul({a:e,b:t,transposeA:h,transposeB:p,bias:r?xe(e.rank,r,f()):null,activation:n}).reshape(d)}}function ge(e,t,n){return Object(ss.tidy)(()=>(t=Array.isArray(t)?Object(ss.tensor1d)(t,"int32"):t.toInt(),ss.gather(e,t,n)))}function ye(e){return ss.mul(e,e)}function xe(e,t,n){const r=t.shape;if(1!==t.rank&&t.rank!==e)throw new Uc(`Unexpected bias dimensions: ${t.rank}`+`; expected it to be 1 or ${e}`);if(5===e){if("channelsFirst"===n)return 1===r.length?t.reshape([1,r[0],1,1,1]):t.reshape([1,r[3],r[0],r[1],r[2]]);if("channelsLast"===n)return 1===r.length?t.reshape([1,1,1,1,r[0]]):t.reshape([1].concat(r))}else if(4===e){if("channelsFirst"===n)return 1===r.length?t.reshape([1,r[0],1,1]):t.reshape([1,r[2],r[0],r[1]]);if("channelsLast"===n)return 1===r.length?t.reshape([1,1,1,r[0]]):t.reshape([1].concat(r))}else if(3===e){if("channelsFirst"===n)return 1===r.length?t.reshape([1,r[0],1]):t.reshape([1,r[1],r[0]]);if("channelsLast"===n)return 1===r.length?t.reshape([1,1,r[0]]):t.reshape([1].concat(r))}else if(e<3)return t;throw new Uc(`Unsupported input rank by biasAdd: ${t.rank}`)}function ve(e,t,n){return Object(ss.tidy)(()=>(null==n&&(n=f()),V(n),e.add(xe(e.rank,t,n))))}function we(e,t=1){if(1!==t)throw new Gc(`Support for alpha values other than 1 (${t}) is not implemented `+"yet.");return ss.elu(e)}function ke(e){return Object(ss.tidy)(()=>ss.div(e,ss.abs(e).add(1)))}function Oe(e,t,n,r){return Object(ss.tidy)(()=>ss.dropout(e,t,n,r))}function Ie(e){return Object(ss.tidy)(()=>{const t=ss.add(.5,ss.mul(.2,e));return ss.clipByValue(t,0,1)})}function Ne(e,t,n=!1){return n?e():t()}function je(e){C(cl,"FanMode",e)}function Se(e){C(ll,"Distribution",e)}function Te(e,t="channelsLast"){let n,r;if(V(t),2===e.length)n=e[0],r=e[1];else if(-1!==[3,4,5].indexOf(e.length)){if("channelsFirst"===t){const t=J(e,2);n=e[1]*t,r=e[0]*t}else if("channelsLast"===t){const t=J(e,0,e.length-2);n=e[e.length-2]*t,r=e[e.length-1]*t}}else{const t=J(e);n=Math.sqrt(t),r=Math.sqrt(t)}return[n,r]}function Ce(e,t={}){return I(e,ss.serialization.SerializationMap.getMap().classNameMap,t,"initializer")}function Ee(e){return k(e)}function $e(e){if("string"==typeof e){const t=e in Sl?Sl[e]:e;if("GlorotNormal"===t)return new wl;if("GlorotUniform"===t)return new vl;if("HeNormal"===t)return new kl;if("HeUniform"===t)return new Ol;if("LeCunNormal"===t)return new Il;if("LeCunUniform"===t)return new Nl;{const e={};return e.className=t,e.config={},Ce(e)}}return e instanceof dl?e:Ce(e)}function Ae(){return new hl}function _e(){return new pl}function De(e){return new fl(e)}function Fe(e){return new ml(e)}function Re(e){return new bl(e)}function Me(e){return new gl(e)}function ze(e){return new yl(e)}function Le(e){return new xl(e)}function Pe(e){return new vl(e)}function Be(e){return new wl(e)}function We(e){return new kl(e)}function Ve(e){return new Ol(e)}function Ue(e){return new Il(e)}function Ge(e){return new Nl(e)}function He(e){return new jl(e)}function qe(){return Tl++}function Ke(e=""){return e in Cl||(Cl[e]=0),Cl[e]+=1,e+Cl[e].toString()}function Xe(e){return Array.isArray(e)&&Array.isArray(e[0])}function Ye(e){return 0===e.length?[]:Array.isArray(e[0])?e:[e]}function Ze(e){let t;if(Array.isArray(e)){if(1!==e.length)throw new Uc(`Expected Tensor length to be 1; got ${e.length}`);t=e[0]}else t=e;return t}function Qe(e){if(Array.isArray(e)&&Array.isArray(e[0])){if(1===e.length)return e=e,e[0];throw new Uc(`Expected exactly 1 Shape; got ${e.length}`)}return e}function Je(e){let t=0;for(const n of e)0===n.shape.length?t+=1:t+=n.shape.reduce((e,t)=>e*t);return t}function et(e,t){if(e.shape.toString()!==t.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(e.shape)+" vs. "+JSON.stringify(t.shape))}function tt(e){return e.map(e=>e.read())}function nt(e){e.forEach(e=>{const t=e[0];t.write(e[1])})}function rt(e){e=x(e);const t=[];for(const n of e)t.push(n.shape);return y(t)}function at(e){return"float32"}function st(e,t,n){if((null==t||null!=n&&n>0)&&(t=e.sourceLayer,n=e.nodeIndex),0===t.inboundNodes.length)return[e];{const e=t.inboundNodes[n];if(0===e.inboundLayers.length)return e.inputTensors;{const t=[];for(let n=0;n<e.inboundLayers.length;n++){const r=e.inputTensors[n],a=e.inboundLayers[n],s=e.nodeIndices[n],i=st(r,a,s);for(const e of i)-1===t.indexOf(e)&&t.push(e)}return t}}}function it(e){if(null==e.batchShape&&null==e.shape)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(null!=e.batchShape&&null!=e.shape)throw new Uc("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let t=e.batchShape;null!=e.shape&&null==t&&(t=[null].concat(e.shape));let n=e.dtype;null==n&&(n="float32");const r=new zl({batchInputShape:t,name:e.name,dtype:n,sparse:e.sparse}),a=r.inboundNodes[0].outputTensors;return a[0]}async function ot(e){if(null==e)return;const t=[],n=[],r=[];for(const a in e){const s=e[a];if("number"!=typeof s){const e=s;t.push(e.data()),n.push(a),r.push(e)}}if(t.length>0){const a=await Promise.all(t);for(let t=0;t<a.length;++t)e[n[t]]=a[t][0];Object(ss.dispose)(r)}}function ut(e){if(null!=e)for(const t in e){const n=e[t];"number"!=typeof n&&n.dispose()}}function ct(e,t){if(null==e&&(e={}),e instanceof Bl)return[e];if(Array.isArray(e)&&e[0]instanceof Bl)return e;const n=x(e);return n.map(e=>new Gl(e,t))}function lt(e,t,n,r,a,s,i,o,u){const c=new Ul,l=[new Vl,...Hl.createCallbacks(t)];null!=e&&l.push(...e),l.push(c);const d=new Wl(l);return d.setParams({epochs:n,initialEpoch:r,samples:a,steps:s,batchSize:i,verbose:t,doValidation:o,metrics:u}),{callbackList:d,history:c}}function dt(e,t={},n=!1){return I(e,ss.serialization.SerializationMap.getMap().classNameMap,t,"layer",n)}function ht(e,t){return Object(ss.tidy)(()=>{"float32"!==e.dtype&&(e=e.asType("float32"));const n=ss.sum(ye(e),t,!0),r=ss.fill(n.shape,p()),a=ss.sqrt(ss.maximum(n,r));return ss.div(e,a)})}function pt(e,t){return Object(ss.tidy)(()=>ss.mean(ye(ss.sub(t,e)),-1))}function ft(e,t){return Object(ss.tidy)(()=>ss.mean(ss.abs(ss.sub(t,e)),-1))}function mt(e,t){return Object(ss.tidy)(()=>{const n=ss.sub(e,t),r=ss.clipByValue(ss.abs(e),p(),Number.MAX_VALUE),a=ss.abs(ss.div(n,r));return ss.mul(100,ss.mean(a,-1))})}function bt(e,t){return Object(ss.tidy)(()=>{const n=ss.clipByValue(t,p(),Number.MAX_VALUE),r=ss.log(ss.add(1,n)),a=ss.clipByValue(e,p(),Number.MAX_VALUE),s=ss.log(ss.add(1,a));return ss.mean(ye(ss.sub(r,s)),-1)})}function gt(e,t){return Object(ss.tidy)(()=>{const n=ss.maximum(0,ss.sub(1,ss.mul(e,t)));return ss.mean(ye(n),-1)})}function yt(e,t){return Object(ss.tidy)(()=>{const n=ss.maximum(0,ss.sub(1,ss.mul(e,t)));return ss.mean(n,-1)})}function xt(e,t){return Object(ss.tidy)(()=>{const n=ss.sum(ss.mul(e,t),-1),r=ss.max(ss.mul(ss.sub(1,e),t),-1);return ss.maximum(0,ss.add(1,ss.sub(r,n)))})}function vt(e,t){return Object(ss.tidy)(()=>{const n=Math.log(2),r=ss.sub(t,e),a=ss.sub(ss.add(r,ss.softplus(ss.mul(-2,r))),n);return ss.mean(a,-1)})}function wt(e,t,n=!1){return Object(ss.tidy)(()=>{if(n)t=ss.softmax(t);else{const e=ss.sum(t,t.shape.length-1,!0);t=ss.div(t,e)}return t=ss.clipByValue(t,p(),1-p()),ss.neg(ss.sum(ss.mul(e.toFloat(),ss.log(t)),t.shape.length-1))})}function kt(e,t,n=!1){return Object(ss.tidy)(()=>{const r=ss.floor(oe(e)).toInt();t=ss.clipByValue(t,p(),1-p());const a=t.shape,s=ss.oneHot(r,a[a.length-1]).reshape(a);return wt(s,t,n)})}function Ot(e,t){if(!ss.util.arraysEqual(e.shape,t.shape))throw new Uc("logits and labels must have the same shape, but got shapes "+`${JSON.stringify(e.shape)} and ${JSON.stringify(t.shape)}`);return Object(ss.tidy)(()=>{const n=t.relu(),r=t.abs().neg();return n.sub(t.mul(e)).add(r.exp().log1p())})}function It(e,t){return Object(ss.tidy)(()=>{let n;return n=ss.clipByValue(t,p(),1-p()),n=ss.log(ss.div(n,ss.sub(1,n))),ss.mean(Ot(e,n),-1)})}function Nt(e,t){return Object(ss.tidy)(()=>{const n=ss.clipByValue(e,p(),1),r=ss.clipByValue(t,p(),1);return ss.sum(ss.mul(e,ss.log(ss.div(n,r))),-1)})}function jt(e,t){return Object(ss.tidy)(()=>{const n=ss.log(ss.add(p(),t));return ss.mean(ss.sub(t,ss.mul(e,n)),-1)})}function St(e,t){return Object(ss.tidy)(()=>{const n=ht(e,-1),r=ht(t,-1),a=ss.mul(n,r);return ss.neg(ss.sum(a,-1))})}function Tt(e){if("string"==typeof e){if(e in ql)return ql[e];let t=`Unknown loss ${e}`;throw e.toLowerCase().includes("softmaxcrossentropy")&&(t=`Unknown loss ${e}. `+'Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy'),new Uc(t)}return e}function Ct(e,t){return Object(ss.tidy)(()=>{const n=ss.mul(.5,ss.onesLike(t)),r=ae(ss.greater(t,n),e.dtype);return ss.mean(ss.equal(e,r),-1)})}function Et(e,t){return Object(ss.tidy)(()=>ae(ss.equal(ss.argMax(e,-1),ss.argMax(t,-1)),"float32"))}function $t(e,t){return Object(ss.tidy)(()=>ss.logicalAnd(e.equal(1),t.equal(1)).sum().cast("float32"))}function At(e,t){return Object(ss.tidy)(()=>ss.logicalAnd(e.equal(1),t.equal(0)).sum().cast("float32"))}function _t(e,t){return Object(ss.tidy)(()=>ss.logicalAnd(e.equal(0),t.equal(1)).sum().cast("float32"))}function Dt(e,t){return Object(ss.tidy)(()=>{const n=$t(e,t),r=_t(e,t),a=n.add(r);return ss.where(ss.greater(a,0),n.div(a),0).cast("float32")})}function Ft(e,t){return Object(ss.tidy)(()=>{const n=$t(e,t),r=At(e,t),a=n.add(r);return ss.where(ss.greater(a,0),n.div(a),0).cast("float32")})}function Rt(e,t){return It(e,t)}function Mt(e,t){return e.rank===t.rank&&(e=e.squeeze([e.rank-1])),t=t.argMax(-1),t.dtype!==e.dtype&&(t=t.asType(e.dtype)),ss.equal(e,t).asType("float32")}function zt(e){if("string"==typeof e&&e in rd)return rd[e];if("string"!=typeof e&&null!=e)return e;throw new Uc(`Unknown metric ${e}`)}function Lt(e){if(b(null!==e,`Unknown LossOrMetricFn ${e}`),"string"==typeof e)return e;{let t;for(const n of Object.keys(ql))if(ql[n]===e){t=n;break}if(void 0!==t)return t;for(const n of Object.keys(rd))if(rd[n]===e){t=n;break}return void 0!==t?t:e.name}}function Pt(e){const t={Adagrad:()=>ss.train.adagrad(.01),Adadelta:()=>ss.train.adadelta(1,.95,p()),Adam:()=>ss.train.adam(.001,.9,.999,p()),Adamax:()=>ss.train.adamax(.002,.9,.999,p(),0),RMSProp:()=>ss.train.rmsprop(.001,.9,0,p()),SGD:()=>ss.train.sgd(.01)};if(t.adagrad=t.Adagrad,t.adadelta=t.Adadelta,t.adam=t.Adam,t.adamax=t.Adamax,t.rmsprop=t.RMSProp,t.sgd=t.SGD,e in t)return t[e]();throw new Uc(`Unknown Optimizer ${e}`)}function Bt(e,t,n=!1){if(null==e||"object"!=typeof e||Object.getPrototypeOf(e)!==Object.prototype||!Wt(e))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){const n=JSON.stringify(e);n.length>ad&&console.warn(`User-defined metadata of model "${t}" is too large in `+`size (length=${n.length} when serialized). It is not `+"recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= "+`${ad}.`)}}function Wt(e){if(null===e)return!0;if("object"==typeof e){if(Object.getPrototypeOf(e)===Object.prototype){const t=Object.keys(e);for(const n of t){if("string"!=typeof n)return!1;if(!Wt(e[n]))return!1}return!0}if(Array.isArray(e)){for(const t of e)if(!Wt(t))return!1;return!0}return!1}{const t=typeof e;return"string"===t||"number"===t||"boolean"===t}}function Vt(e,t,n,r=console.log){const a=Gt(e),s=["Layer (type)","Output shape","Param #"];let i;if(a?(t=t||65,n=n||[.45,.85,1]):(t=t||98,n=n||[.33,.55,.67,1]),n[n.length-1]<=1&&(n=n.map(e=>Math.floor(t*e))),!a){s.push("Receives inputs"),i=[];for(const t in e.nodesByDepth)i.push(...e.nodesByDepth[t])}r("_".repeat(t)),Ht(s,n,r),r("=".repeat(t));const o=e.layers;for(let e=0;e<o.length;++e)a?qt(o[e],n,r):Kt(o[e],n,i,r),r((e===o.length-1?"=":"_").repeat(t));e.checkTrainableWeightsConsistency();const u=Ut(e),c=Je(e.nonTrainableWeights);r(`Total params: ${u+c}`),r(`Trainable params: ${u}`),r(`Non-trainable params: ${c}`),r("_".repeat(t))}function Ut(e){let t;return t=null!=e.collectedTrainableWeights?Je(e.collectedTrainableWeights):Je(e.trainableWeights),t}function Gt(e){let t=!0;const n=[],r=[];for(const t in e.nodesByDepth)n.push(e.nodesByDepth[t]);for(const e of n){if(e.length>1||1===e.length&&e[0].inboundLayers.length>1){t=!1;break}r.push(...e)}if(t)for(const n of e.layers){let e=!1;for(const a of n.inboundNodes)if(-1!==r.indexOf(a)){if(e){t=!1;break}e=!0}if(!t)break}return t}function Ht(e,t,n=console.log){let r="";for(let n=0;n<e.length;++n)n>0&&(r=r.slice(0,r.length-1)+" "),r+=e[n],r=r.slice(0,t[n]),r+=" ".repeat(t[n]-r.length);n(r)}function qt(e,t,n){let r;try{r=JSON.stringify(e.outputShape)}catch(e){r="multiple"}const a=e.name,s=e.getClassName(),i=[`${a} (${s})`,r,e.countParams().toString()];Ht(i,t,n)}function Kt(e,t,n,r){let a;try{a=JSON.stringify(e.outputShape)}catch(e){a="multiple"}const s=[];for(const t of e.inboundNodes)if(!(null!=n&&n.length>0&&-1===n.indexOf(t)))for(let e=0;e<t.inboundLayers.length;++e){const n=t.inboundLayers[e].name,r=t.nodeIndices[e],a=t.tensorIndices[e];s.push(`${n}[${r}][${a}]`)}const i=e.name,o=e.getClassName(),u=0===s.length?"":s[0],c=[`${i} (${o})`,a,e.countParams().toString(),u];Ht(c,t,r);for(let e=1;e<s.length;++e)Ht(["","","",s[e]],t,r)}function Xt(e,t,n){return("inboundNodes"===e||"outputLayers"===e||"inputLayers"===e)&&0===t&&"string"==typeof n}function Yt(e,t){if(null===e)return null;if("string"==typeof e)return w(e);if("number"==typeof e||"boolean"==typeof e)return e;if(e instanceof Array){const n=[],r=e.length;for(let a=0;a<r;++a){const r=e[a];Xt(t,a,r)?n.push(r):n.push(Yt(r,t))}return n}{const t={};for(const n of Object.keys(e)){const r=e[n];if("name"===n&&"string"==typeof r)t[n]=r;else{const e=w(n);t[e]=Yt(r,e)}}return t}}function Zt(e,t){if(null==e)return null;if("string"==typeof e)return v(e);if("number"==typeof e||"boolean"==typeof e)return e;if(e instanceof Array){const n=[],r=e.length;for(let a=0;a<r;++a){const r=e[a];Xt(t,a,r)?n.push(r):n.push(Zt(r,t))}return n}{const t={};for(const n of Object.keys(e)){const r=e[n],a=v(n);t[a]="name"!==n&&"className"!==n||"string"!=typeof r?Zt(r,n):r}return t}}function Qt(e,t){if(null==e.dtype||e.dtype===t.dtype)return t;try{return Object(ss.cast)(t,e.dtype)}catch(n){throw new Uc(`The dtype of the feed (${t.dtype}) can not be cast to the dtype `+`of the key '${e.name}' (${e.dtype}).`)}}function Jt(e,t,n,r){const a=null!=n&&n.training,s=Array.isArray(e),i=s?e:[e],o=i.map(e=>e.name),u=[],c=t.names();for(const e of o)-1!==c.indexOf(e)?u.push(t.getValue(e)):u.push(null);null!=r&&(r.maxNumTensors=-1/0,r.minNumTensors=1/0);const l=o.join(",")+"|"+t.names().join(",");let d,h;if(null==od[l]){const e=en(i,t);d=e.sorted,h=e.recipientCounts,od[l]=d,ud[l]=h}d=od[l],h={},a||Object.assign(h,ud[l]);const p=new id(t);for(let e=0;e<d.length;++e){if(null!=r){const e=Object(ss.memory)().numTensors;e>r.maxNumTensors&&(r.maxNumTensors=e),e<r.minNumTensors&&(r.minNumTensors=e)}const s=d[e],i=s.sourceLayer;if(i instanceof zl)continue;const c=[],l=[],f=[];let m=!1;for(const e of s.inputs){const n=p.getValue(e),r=p.getMask(e);c.push(n),l.push(r),null!=r&&(m=!0),a||(h[e.name]--,0!==h[e.name]||t.hasKey(e)||-1!==o.indexOf(e.name)||n.isDisposed||!0===e.sourceLayer.stateful||f.push(n))}m&&(n=n||{},n.mask=l[0]);const b=x(i.apply(c,n));let g=null;i.supportsMasking&&(g=i.computeMask(c,l));const y=rn(s),v=Array.isArray(y)?y:[y];for(let e=0;e<v.length;++e){p.hasKey(v[e])||p.add(v[e],b[e],Array.isArray(g)?g[0]:g);const t=o.indexOf(v[e].name);-1!==t&&(u[t]=b[e])}a||Object(ss.dispose)(f)}return p.disposeMasks(),s?u:u[0]}function en(e,t){ss.util.assert(null!=e&&e.length>0,()=>"Expected at least one fetch, got none");let n=[],r={};if(1===e.length){const a=nn(e[0],t);n=a.sorted,r=a.recipientMap}else{const a=new Set;for(const s of e){const{sorted:e,recipientMap:i}=nn(s,t);for(const t of e)a.has(t.name)||(n.push(t),a.add(t.name));for(const e in i)null==r[e]&&(r[e]=new Set),i[e].forEach(t=>r[e].add(t))}}return{sorted:n,recipientCounts:tn(r)}}function tn(e){const t={};for(const n in e)t[n]=e[n].size;return t}function nn(e,t){const n=new Set,r=[],a={};for(const e of t.names())n.add(e);const s=[],i=[];for(s.push(e);s.length>0;){const e=s[s.length-1];if(n.has(e.name)){s.pop();continue}const t=i[i.length-1]===s.length-1;if(0===e.inputs.length||t)s.pop(),r.push(e),n.add(e.name),t&&i.pop();else{i.push(s.length-1);for(const t of e.inputs)null==a[t.name]&&(a[t.name]=new Set),a[t.name].add(e.name),n.has(t.name)||s.push(t)}}return{sorted:r,recipientMap:a}}function rn(e){let t;if(1===e.sourceLayer.inboundNodes.length)t=e.sourceLayer.output;else{let n=null;for(let t=0;t<e.sourceLayer.inboundNodes.length;++t)for(const r of e.sourceLayer.inboundNodes[t].outputTensors)if(r.id===e.id){n=t;break}t=e.sourceLayer.getOutputAt(n)}return t}function an(e,t,n){const r=t.length;if(null==e||Array.isArray(e)&&0===e.length)return t.map(e=>null);if(1===r)return Array.isArray(e)&&1===e.length?e:"object"==typeof e&&t[0]in e?[e[t[0]]]:[e];if(Array.isArray(e)){if(e.length!==r)throw new Error(`Provided ${n} is an array of ${e.length} `+`element(s), but the model has ${r} outputs. `+"Make sure a set of weights is provided for each model output.");return e}if("object"==typeof e&&Object.keys(e).length>0&&"object"==typeof e[Object.keys(e)[0]]){const n=[];return t.forEach(t=>{t in e?n.push(e[t]):n.push(null)}),n}throw new Error(`The model has multiple (${r}) outputs, `+`so ${n} must be either an array with `+`${r} elements or an object with ${t} keys. `+`Provided ${n} not understood: ${JSON.stringify(e)}`)}function sn(e,t){return an(e,t,"classWeight")}async function on(e,t,n,r){if(null!=t||null!=r)throw new Error("Support sampleWeight is not implemented yet");if(null!=n){const t=Object(ss.tidy)(()=>{if(1===e.shape.length)return e.clone();if(2===e.shape.length){if(e.shape[1]>1){const t=1;return e.argMax(t)}if(1===e.shape[1])return e.reshape([e.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${e.shape[1]}) `+"during handling of class weights. The size is expected to be >= 1.")}throw new Error(`Unexpected rank of target (y) tensor (${e.rank}) during `+"handling of class weights. The rank is expected to be 1 or 2.")}),r=Array.from(await t.data());Object(ss.dispose)(t);const a=[];return r.forEach(e=>{if(null==n[e])throw new Error("classWeight must contain all classes in the training data. "+`The class ${e} exists in the data but not in `+"classWeight");a.push(n[e])}),Object(ss.tensor1d)(a,"float32")}return null}function un(e,t){return Object(ss.mul)(e,t)}function cn(e,t){let n,r;const a=t;n=a.xs,r=a.ys,ss.util.assert(null!=n&&null!=r,()=>"A Dataset iterator for fitDataset() is expected to generate objects of the form `{xs: xVal, ys: yVal}`, where the two values may be `tf.Tensor`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates "+`${t}`);const s=ln("input",e.inputNames,n),i=ln("output",e.outputNames,r),o=s[0].shape[0];ss.util.assert(s.length===e.inputs.length,()=>`LayersModel has ${e.inputs.length} inputs, but the dataset `+`provides ${s.length} inputs.  (Expected input keys: `+`${JSON.stringify(e.inputNames)})`),ss.util.assert(i.length===e.outputs.length,()=>`LayersModel has ${e.outputs.length} outputs, but the dataset `+`provides ${i.length} outputs.  (Expected output keys: `+`${JSON.stringify(e.outputNames)})`);for(let t=0;t<s.length;t++)ss.util.assert(s[t].shape[0]===o,()=>"Batch size mismatch: input "+`${e.inputNames[t]} has ${s[t].shape[0]}; `+`expected  ${o} based on input ${e.inputNames[0]}.`);for(let t=0;t<i.length;t++)ss.util.assert(i[t].shape[0]===o,()=>"Batch size mismatch: output "+`${e.outputNames[t]} has ${i[t].shape[0]}; `+`expected  ${o} based on input ${e.inputNames[0]}.`);return{xs:s,ys:i}}function ln(e,t,n){if(n instanceof ss.Tensor)return[n];if(Array.isArray(n))return ss.util.assert(n.length===t.length,()=>`Received an array of ${n.length} Tensors, but expected ${t.length} to match the ${e} keys ${t}.`),n;{const r=[];for(const a of t){if(null==n[a])throw new Uc("The feature data generated by the dataset lacks the required "+`${e} key '${a}'.`);r.push(n[a])}return r}}function dn(e){if(3===e.length)throw new Gc("Validation with sample weights is not implemented yet.");return{xs:e[0],ys:e[1]}}async function hn(e,t,n){const r=null!=n.batchesPerEpoch;if(ss.util.assert(null!=e.optimizer,()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig)."),ss.util.assert(null!=n,()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call."),ss.util.assert(null!=n.epochs&&n.epochs>0&&Number.isInteger(n.epochs),()=>"For fitDataset(), config.epochs is expected to be a positive "+`integer, but got ${n.epochs}`),ss.util.assert(!r||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),()=>"For fitDataset(), config.batchesPerEpoch is expected to be a "+`positive integer if specified, but got ${n.batchesPerEpoch}`),ss.util.assert(null==n.validationSplit,()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead."),e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");e.isTraining=!0;try{const a=null!=n.validationData;let s,i;if(a)if(fn(n.validationData))ss.util.assert(null==n.validationBatches||n.validationBatches>0&&Number.isInteger(n.validationBatches),()=>"For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, "+`but got ${n.validationBatches}`);else{const e=dn(n.validationData);s=e.xs,i=e.ys}const o=e.makeTrainFunction(),u=e.getDedupedMetricsNames();let c;c=a?u.slice().concat(u.map(e=>"val_"+e)):u.slice();const l=ct(n.callbacks,n.yieldEvery),d=null==n.verbose?1:n.verbose,{callbackList:h,history:p}=lt(l,d,n.epochs,null,null,pn(t,n),null,a,c);h.setModel(e),e.history=p,await h.onTrainBegin(),e.stopTraining_=!1;let f=null==n.initialEpoch?0:n.initialEpoch,m=await t.iterator();for(;f<n.epochs;){const c={};await h.onEpochBegin(f);let l=0,d=0;for(r||(m=await t.iterator());!r||l<n.batchesPerEpoch;){const t=await m.next();if(r&&t.done){console.warn("You provided `batchesPerEpoch` as "+`${n.batchesPerEpoch}, `+"but your dataset iterator ran out of data after "+`${l} batches; `+"interrupting training. Make sure that your dataset can generate at least `batchesPerEpoch * epochs` batches (in this case, "+`${n.batchesPerEpoch*n.epochs} batches). `+"You may need to use the repeat() function when building your dataset.");break}if(null!=t.value){const{xs:r,ys:a}=cn(e,t.value),s={};s.batch=d,s.size=r[0].shape[0],await h.onBatchBegin(d,s);const i=[];if(null!=n.classWeight){const t=sn(n.classWeight,e.outputNames);for(let e=0;e<t.length;++e)i.push(await on(a[e],null,t[e]))}const c=r.concat(a).concat(i),p=o(c);ss.dispose(c);for(let e=0;e<u.length;++e){const t=u[e],n=p[e];s[t]=n,ss.keep(n)}await h.onBatchEnd(d,s),ut(s),d++,l++}if(r?l>=n.batchesPerEpoch:t.done){if(a){let t;t=fn(n.validationData)?x(await e.evaluateDataset(n.validationData,{batches:n.validationBatches})):x(e.evaluate(s,i,{batchSize:null==n.validationBatchSize?ld:n.validationBatchSize,verbose:0}));for(let n=0;n<e.metricsNames.length;++n)c[`val_${e.metricsNames[n]}`]=t[n]}break}if(e.stopTraining_)break}if(await h.onEpochEnd(f,c),f++,e.stopTraining_)break}return await h.onTrainEnd(),await e.history.syncData(),e.history}finally{e.isTraining=!1}}function pn(e,t){let n=null;return null!=t.batchesPerEpoch?n=t.batchesPerEpoch:Number.isFinite(e.size)&&(n=e.size),n}function fn(e){return"function"==typeof e.iterator}function mn(e){return"function"==typeof e.next}async function bn(e,t,n){n=n||{};const r=null!=n.batches,a=e.testFunction;let s=[];if(n.verbose>0)throw new Gc("Verbose mode is not implemented yet.");ss.util.assert(!r||n.batches>0&&Number.isInteger(n.batches),()=>"Test loop expects `batches` to be a positive integer, but "+`received ${JSON.stringify(n.batches)}`);const i=mn(t)?t:await t.iterator();let o=0,u=0;for(;!r||u<n.batches;){const t=await i.next();if(s=ss.tidy(()=>{if(t.value){const{xs:n,ys:r}=cn(e,t.value),i=n.concat(r),c=ss.tidy(()=>a(i));if(ss.dispose(i),0===u)for(let e=0;e<c.length;++e)s.push(Object(ss.scalar)(0));const l=i[0].shape[0];for(let e=0;e<c.length;++e){const t=c[e],n=s[e];s[e]=ss.tidy(()=>ss.add(s[e],ss.mul(l,t))),u>0&&ss.dispose(n)}ss.dispose(c),o+=l,++u}return s}),t.done){r&&console.warn("Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least `batches` "+`batches (in this case, ${n.batches} batches). `+"You may need to use the repeat() function when building your dataset.");break}}for(let e=0;e<s.length;++e){const t=s[e];s[e]=ss.div(s[e],o),ss.dispose(t)}return y(s)}function gn(e){ss.util.assert(e>0&&Number.isInteger(e),()=>`batchSize is required to be a positive integer, but got ${e}`)}function yn(e,t,n){return null==e?[null]:Array.isArray(e)?e.map(e=>ce(e,t,n-t)):ce(e,t,n-t)}function xn(e,t){return ss.tidy(()=>null==e?null:Array.isArray(e)?e.map(e=>xn(e,t)):ge(e,"int32"===t.dtype?t:t.toInt()))}function vn(e,t){const n=[];let r=0,a=null;for(;r<e;)a=r+t,a>=e&&(a=e),n.push([r,a]),r=a;return n}async function wn(e,t,n,r,a,s,i,o,u,c,l,d,h,p,f){null==a&&(a=32),null==s&&(s=1),null==l&&(l=!0),null==h&&(h=0);let m=!1;if(null!=u&&null!=c&&(m=!0),null!=f&&(m=!0,null==p))throw new Uc("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");const b=e.checkNumSamples(n,a,p,"steps_per_epoch");let g;null!=b&&(g=re(0,b)),null==i&&(i=1);const{callbackList:y,history:x}=lt(o,i,s,h,b,p,a,m,d);y.setModel(e),e.history=x,await y.onTrainBegin(),e.stopTraining_=!1;for(let i=h;i<s;++i){await y.onEpochBegin(i);const s={};if(null!=p)throw new Gc("stepsPerEpoch mode is not implemented yet.");{if("batch"===l)throw new Gc("batch shuffling is not implemneted yet");l&&ss.util.shuffle(g);const i=Object(ss.tensor1d)(g),o=vn(b,a);for(let l=0;l<o.length;++l){const d={};if(await y.onBatchBegin(l,d),ss.tidy(()=>{const h=o[l][0],p=o[l][1],f=ce(i,h,p-h);d.batch=l,d.size=p-h;const b=xn(n,f),g=t(b);for(let e=0;e<r.length;++e){const t=r[e],n=g[e];d[t]=n,ss.keep(n)}if(l===o.length-1&&m){const t=e.testLoop(u,c,a);for(let e=0;e<r.length;++e){const n=r[e],a=t[e];ss.keep(a),s["val_"+n]=a}}}),await y.onBatchEnd(l,d),ut(d),e.stopTraining_)break}i.dispose()}if(await y.onEpochEnd(i,s),e.stopTraining_)break}return await y.onTrainEnd(),await e.history.syncData(),e.history}async function kn(e,t,n,r={}){if(e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");let a,s,i,o,u,c,l;e.isTraining=!0;try{const d=null==r.batchSize?32:r.batchSize;gn(d);const h=!1,p=await e.standardizeUserData(t,n,r.sampleWeight,r.classWeight,h,d);a=p[0],s=p[1],l=p[2];let f,m=!1;if(null!=r.validationData&&r.validationData.length>0){if(m=!0,2!==r.validationData.length)throw 3===r.validationData.length?new Gc("validationData including sample weights is not supported yet."):new Uc("When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; "+`${r.validationData} is invalid.`);i=r.validationData[0],o=r.validationData[1];const t=!0,n=await e.standardizeUserData(i,o,null,null,t,d);u=n[0],c=n[1],f=u.concat(c)}else if(null!=r.validationSplit&&r.validationSplit>0&&r.validationSplit<1){m=!0;const e=Math.floor(a[0].shape[0]*(1-r.validationSplit)),t=a[0].shape[0];u=yn(a,e,t),a=yn(a,0,e),c=yn(s,e,t),s=yn(s,0,e),f=u.concat(c)}else null!=r.validationSteps&&(m=!0);const b=a.concat(s).concat(l);e.checkTrainableWeightsConsistency();const g=e.makeTrainFunction(),y=e.getDedupedMetricsNames();let x,v;m?(e.makeTestFunction(),x=e.testFunction,v=y.slice().concat(y.map(e=>"val_"+e))):(x=null,f=[],v=y.slice());const w=ct(r.callbacks,r.yieldEvery),k=await wn(e,g,b,y,d,r.epochs,r.verbose,w,x,f,r.shuffle,v,r.initialEpoch,null,null);return k}finally{e.isTraining=!1,In(a,t),In(s,n),In(u,i),In(c,o),null!=l&&ss.dispose(l)}}function On(e){
const t=[];e instanceof ss.Tensor&&(e=[e]);for(let n=0;n<e.length;++n){const r=e[n];if(1===r.rank)t.push(se(r,1));else{if(0===r.rank)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");t.push(r)}}return t}function In(e,t){if(null==e)return;const n=[];if(t instanceof ss.Tensor)n.push(t.id);else if(Array.isArray(t))t.forEach(e=>n.push(e.id));else if(null!=t)for(const e in t){const r=t[e];n.push(r.id)}const r=[];if(e instanceof ss.Tensor)-1===n.indexOf(e.id)&&r.push(e);else if(Array.isArray(e))e.forEach(e=>{-1===n.indexOf(e.id)&&r.push(e)});else if(null!=e)for(const t in e){const a=e[t];-1===n.indexOf(a.id)&&r.push(a)}r.forEach(e=>{e.isDisposed||e.dispose()})}function Nn(e){return e instanceof ss.Tensor}function jn(e){return Array.isArray(e)}function Sn(e){return!Nn(e)&&!jn(e)}function Tn(e,t,n,r=!0,a=""){if(null==t||0===t.length){if(null!=e){let t=!1;if(jn(e)&&e.length>0)t=!0;else if(Sn(e)){for(const n in e)if(e.hasOwnProperty(n)){t=!0;break}}else t=!0;if(t)throw new Uc(`Error when checking model ${a} expected no data, `+`but got ${e}`)}return[]}if(null==e)return t.map(e=>null);let s;if(Sn(e)){e=e,s=[];for(const n of t){if(null==e[n])throw new Uc(`No data provided for "${n}". Need data for each key in: `+`${t}`);s.push(e[n])}}else if(jn(e)){if(e=e,e.length!==t.length)throw new Uc(`Error when checking model ${a}: the Array of `+"Tensors that you are passing to your model is not the size the "+`model expected. Expected to see ${t.length} Tensor(s), but `+`instead got the following list of Tensor(s): ${e}`);s=e}else{if(e=e,t.length>1)throw new Uc(`The model ${a} expects ${t.length} Tensor(s), `+`but only received one Tensor. Found: Tensor with shape ${e.shape}`);s=[e]}if(s=On(s),null!=n)for(let e=0;e<t.length;++e){if(null==n[e])continue;const i=s[e];if(i.shape.length!==n[e].length)throw new Uc(`Error when checking ${a}: expected ${t[e]} `+`to have ${n[e].length} dimension(s). but got array with `+`shape ${i.shape}`);for(let s=0;s<n[e].length;++s){if(0===s&&!r)continue;const o=i.shape[s],u=n[e][s];if(null!=u&&u>=0&&o!==u)throw new Uc(`Error when checking ${a}: expected ${t[e]} `+`to have shape [${n[e]}], but got array with shape `+`[${i.shape}].`)}}return s}function Cn(e,t,n){const r=S(e.map(e=>e.shape[0]));r.sort();const a=S(t.map(e=>e.shape[0]));if(a.sort(),r.length>1)throw new Uc("All input Tensors (x) should have the same number of samples. Got array shapes: "+`${JSON.stringify(e.map(e=>e.shape))}`);if(a.length>1)throw new Uc("All target Tensors (y) should have the same number of samples. Got array shapes: "+`${JSON.stringify(t.map(e=>e.shape))}`);if(r.length>0&&a.length>0&&!ss.util.arraysEqual(r,a))throw new Uc("Input Tensors should have the same number of samples as target "+`Tensors. Found ${r[0]} input sample(s) and ${a[0]} target `+"sample(s).")}function En(e,t,n){const r=[pt,It,wt];for(let a=0;a<e.length;++a){const s=e[a],i=t[a],o=n[a];if(null!=i){if(i===wt&&1===s.shape[s.shape.length-1])throw new Uc(`You are passing a target array of shape ${s.shape} while using `+"a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].");if(-1!==r.indexOf(i)){const e=s.shape.slice(1),t=o.slice(1);for(let n=0;n<e.length;++n){const r=e[n],a=t[n];if(null!=a&&r!==a)throw new Uc(`A target Tensor with shape ${s.shape} was passed for an `+`output of shape ${o}, while using a loss function that `+"expects targets to have the same shape as the output.")}}}}}function $n(e,t,n,r=!0,a=""){let s;if(Array.isArray(e)){if(e.length!==t.length)throw new Uc(`Error when checking model ${a}: the Array of `+"Tensors that you are passing to your model is not the size the "+`the model expected. Expected to see ${t.length} Tensor(s),`+` but instead got ${e.length} Tensors(s).`);s=e}else{if(t.length>1)throw new Uc(`The model expects ${t.length} ${a} Tensors, `+"but only received one Tensor. Found: array with shape "+`${JSON.stringify(e.shape)}.`);s=[e]}if(null!=n)for(let e=0;e<t.length;++e){if(null==n[e])continue;const i=s[e];if(i.shape.length!==n[e].length)throw new Uc(`Error when checking ${a}: expected ${t[e]} `+`to have ${n[e].length} dimension(s), but got array with `+`shape ${JSON.stringify(i.shape)}`);for(let s=0;s<n[e].length;++s){if(0===s&&!r)continue;const o=i.shape[s],u=n[e][s];if(null!=u&&u!==o)throw new Uc(`Error when checking ${a}: expected `+`${t[e]} to have shape ${JSON.stringify(n[e])} but `+`got array with shape ${JSON.stringify(i.shape)}.`)}}}function An(e,t){if(null==e||Array.isArray(e)&&0===e.length)return t.map(e=>[]);let n;if("string"==typeof e||"function"==typeof e)n=[e];else{if(!Array.isArray(e)&&"object"!=typeof e)throw new TypeError("Type of metrics argument not understood. Expected an string,"+`function, Array, or Object, found: ${e}`);n=e}if(Array.isArray(n))return t.map(e=>n);{const e=[];for(const r of t){let t=n.hasOwnProperty(r)?n[r]:[];Array.isArray(t)||(t=[t]),e.push(t)}return e}}async function _n(e,t){"modelTopology"in e||(e={modelTopology:e}),e=e;let n=e.modelTopology;null!=n.model_config&&(n=n.model_config);const r=Yt(n),a=dt(r,t);if(null!=e.weightsManifest){const t=await ss.io.loadWeights(e.weightsManifest,e.pathPrefix,a.weights.map(e=>e.originalName)),n={};for(const e of a.weights)n[e.originalName]=t[e.originalName];a.loadWeights(n),Object(ss.dispose)(t)}return a}async function Dn(e,t){if(null==t&&(t={}),"string"==typeof e){const n=ss.io.getLoadHandlers(e,t);if(0===n.length)n.push(ss.io.browserHTTPRequest(e,t));else if(n.length>1)throw new Uc(`Found more than one (${n.length}) load handlers for `+`URL '${e}'`);e=n[0]}return Fn(e,void 0,t)}async function Fn(e,t,n){if(null==n&&(n={}),null==e.load)throw new Uc("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const r=await e.load();let a=r.modelTopology;null!=a.model_config&&(a=a.model_config);const s=null==n.strict||n.strict,i=null!=r.weightData&&null!=r.weightSpecs&&s,o=dt(Yt(a),t,i),u=r.trainingConfig;if(null!=u&&o.loadTrainingConfig(u),null!=r.userDefinedMetadata&&o.setUserDefinedMetadata(r.userDefinedMetadata),null!=r.weightData){if(null==r.weightSpecs)throw new Uc("LayersModel artifacts contains weight data, but not weight specs. Therefore loading of weights cannot proceed.");const{modelWeights:e,optimizerWeights:t}=Rn(r.weightData,r.weightSpecs);o.loadWeights(e,s),null!=o.optimizer&&t.length>0&&await o.optimizer.setWeights(t),Object(ss.dispose)(e),Object(ss.dispose)(t.map(e=>e.tensor))}return o}function Rn(e,t){const n=ss.io.decodeWeights(e,t),r={},a=[];return t.forEach(e=>{"optimizer"===e.group?a.push({name:e.name,tensor:n[e.name]}):r[e.name]=n[e.name]}),{modelWeights:r,optimizerWeights:a}}function Mn(e){return new hd(e)}function zn(e){return new fd(e)}function Ln(e,t){return null==t&&(t={}),Dn(e,t)}function Pn(e){return it(e)}function Bn(e,t){Hl.registerCallbackConstructor(e,t)}function Wn(e){return e.getClassName()}function Vn(e,t={}){return I(e,ss.serialization.SerializationMap.getMap().classNameMap,t,"activation")}function Un(e){if(null==e){const e={className:"linear",config:{}};return Vn(e)}if("string"==typeof e){const t={};return t.className=e,t.config={},Vn(t)}return e instanceof md?e:Vn(e)}function Gn(e){if(null!=e&&"object"!=typeof e)throw new Error("Argument to L1L2 regularizer's constructor is expected to be an "+`object, but received: ${e}`)}function Hn(e){return Gn(e),new $d({l1:null!=e?e.l1:null,l2:0})}function qn(e){return Gn(e),new $d({l2:null!=e?e.l2:null,l1:0})}function Kn(e){return k(e)}function Xn(e,t={}){return I(e,ss.serialization.SerializationMap.getMap().classNameMap,t,"regularizer")}function Yn(e){if(null==e)return null;if("string"==typeof e){const t=e in Ad?Ad[e]:e,n={className:t,config:{}};return Xn(n)}return e instanceof Ed?e:Xn(e)}function Zn(e,t,n){if("number"==typeof e)return m(e,t);if(e.length!==t)throw new Uc(`The ${n} argument must be an integer or tuple of ${t} integers.`+` Received: ${e.length} elements.`);for(let r=0;r<t;++r){const a=e[r];if(!Q(a))throw new Uc(`The ${n} argument must be an integer or tuple of ${t}`+` integers. Received: ${JSON.stringify(e)} including a`+` non-integer number ${a}`)}return e}function Qn(e,t,n,r,a=1){if(null==e)return e;const s=t+(t-1)*(a-1);let i;return i="same"===n?e:e-s+1,Math.floor((i+r-1)/r)}function Jn(e,t,n,r){if(null==e)return null;if("valid"===r)e=e*t+ne([n-t,0]);else{if("same"!==r)throw new Uc(`Unsupport padding mode: ${r}.`);e*=t}return e}function er(e,t){return Object(ss.tidy)(()=>(V(t),"channelsFirst"===t?ss.transpose(e,[0,2,3,1]):e))}function tr(e,t){return Object(ss.tidy)(()=>(V(t),"channelsFirst"===t?ss.transpose(e,[0,2,3,4,1]):e))}function nr(e,t,n,r=1,a="valid",s,i=1){return Object(ss.tidy)(()=>{if(null==s&&(s=f()),V(s),3!==e.shape.length)throw new Uc("The input of a conv1dWithBias operation should be 3, but is "+`${e.shape.length} instead.`);if(3!==t.shape.length)throw new Uc("The kernel for a conv1dWithBias operation should be 3, but is "+`${t.shape.length} instead`);if(null!=n&&1!==n.shape.length)throw new Uc("The bias for a conv1dWithBias operation should be 1, but is "+`${t.shape.length} instead`);if("channelsFirst"===s&&(e=ss.transpose(e,[0,2,1])),"causal"===a)throw new Gc("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let o=ss.conv1d(e,t,r,"same"===a?"same":"valid","NWC",i);return null!=n&&(o=ve(o,n)),o})}function rr(e,t,n,r=[1,1],a="valid",s,i,o=null){return Object(ss.tidy)(()=>{if(null==s&&(s=f()),V(s),3!==e.rank&&4!==e.rank)throw new Uc("conv2dWithBiasActivation expects input to be of rank 3 or 4, "+`but received ${e.rank}.`);if(3!==t.rank&&4!==t.rank)throw new Uc("conv2dWithBiasActivation expects kernel to be of rank 3 or 4, "+`but received ${e.rank}.`);let u=er(e,s);if("causal"===a)throw new Gc("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return u=ss.fused.conv2d({x:u,filter:t,strides:r,pad:"same"===a?"same":"valid",dilations:i,dataFormat:"NHWC",bias:n,activation:o}),"channelsFirst"===s&&(u=ss.transpose(u,[0,3,1,2])),u})}function ar(e,t,n,r=[1,1,1],a="valid",s,i){return Object(ss.tidy)(()=>{if(null==s&&(s=f()),V(s),4!==e.rank&&5!==e.rank)throw new Uc("conv3dWithBias expects input to be of rank 4 or 5, but received "+`${e.rank}.`);if(4!==t.rank&&5!==t.rank)throw new Uc("conv3dWithBias expects kernel to be of rank 4 or 5, but received "+`${e.rank}.`);let o=tr(e,s);if("causal"===a)throw new Gc("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return o=ss.conv3d(o,t,r,"same"===a?"same":"valid","NDHWC",i),null!=n&&(o=ve(o,n)),"channelsFirst"===s&&(o=ss.transpose(o,[0,4,1,2,3])),o})}function sr(e,t,n=[1,1],r="valid",a,s){return Object(ss.tidy)(()=>{null==a&&(a=f()),V(a);let i=er(e,a);if(4!==e.rank)throw new Uc("Input for depthwiseConv2d is required to be 4-D, but is instead "+`${e.rank}-D`);if(4!==t.rank)throw new Uc("depthwiseKernel is required to be 4-D, but is instead "+`${t.rank}-D`);return i=ss.depthwiseConv2d(i,t,n,"same"===r?"same":"valid","NHWC",s),"channelsFirst"===a&&(i=ss.transpose(i,[0,3,1,2])),i})}function ir(e,t,n,r){function a(e){return null==e||Array.isArray(e)?e:[e]}if(Array.isArray(e)){if(null!=t||null!=n)throw new Uc("When inputs is an array, neither initialState or constants should be provided");null!=r&&(n=e.slice(e.length-r,e.length),e=e.slice(0,e.length-r)),e.length>1&&(t=e.slice(1,e.length)),e=e[0]}return t=a(t),n=a(n),{inputs:e,initialState:t,constants:n}}function or(e,t,n,r=!1,a,s,i=!1,o=!1){return ss.tidy(()=>{const u=t.shape.length;if(u<3)throw new Uc(`Input should be at least 3D, but is ${u}D.`);const c=[1,0].concat(re(2,u));if(t=ss.transpose(t,c),null!=s)throw new Gc("The rnn() functoin of the deeplearn.js backend does not support constants yet.");i&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),null!=a&&(a=a.asType("bool").asType("float32"),a.rank===u-1&&(a=ss.expandDims(a,-1)),a=ss.transpose(a,c)),r&&(t=ss.reverse(t,0),null!=a&&(a=ss.reverse(a,0)));const l=[];let d,h=n;const p=t.shape[0],f=ss.unstack(t);let m,b;null!=a&&(m=ss.unstack(a));for(let t=0;t<p;++t){const n=f[t],r=ss.tidy(()=>e(n,h));if(null==a)d=r[0],h=r[1];else{const e=ss.tidy(()=>{const e=m[t],n=ss.onesLike(e).sub(e),a=r[0].mul(e).add(h[0].mul(n)),s=h.map((t,a)=>r[1][a].mul(e).add(t.mul(n)));return{output:a,newStates:s}});d=e.output,h=e.newStates}o&&l.push(d)}if(o){const e=1;b=ss.stack(l,e)}return[d,b,h]})}function ur(e){const{ones:t,rate:n,training:r=!1,count:a=1}=e,s=()=>Oe(t(),n),i=()=>Ne(s,t,r);if(!a||a<=1)return ss.keep(i().clone());const o=Array(a).fill(void 0).map(i);return o.map(e=>ss.keep(e.clone()))}function cr(e,t){for(;e<0;)e+=t;return e}function lr(e,t,n){if(e.shape.length>3||t.shape.length>3)throw new Gc("batchDot is not implemented for tensors of 4D or higher rank yet");if(ss.util.assert(e.shape.length>=2,()=>"batchDot requires the rank of x to be >= 2, "+`but got ${e.shape.length}`),ss.util.assert(e.shape.length>=2,()=>"batchDot requires the rank of y to be >= 2, "+`but got ${t.shape.length}`),"number"==typeof n&&(n=[n,n]),"complex64"===e.dtype||"complex64"===t.dtype)throw new Gc("batchDot is not implemented for complex64-type Tensors yet.");const r=e.shape.length,a=t.shape.length;null==n&&(n=[r-1,a-2]);const s=n;return ss.tidy(()=>{let n,i;if(r>a){n=r-a;const e=[];for(let t=0;t<n;++t)e.push(1);t=t.reshape(t.shape.concat(e))}else if(a>r){n=a-r;const t=[];for(let e=0;e<n;++e)t.push(1);e=e.reshape(e.shape.concat(t))}else n=0;if(2===e.shape.length&&2===t.shape.length)i=s[0]===s[1]?e.mul(t).sum(s[0]):e.transpose([1,0]).mul(t).sum(s[1]);else{const n=s[0]!==e.shape.length-1,r=s[1]===t.shape.length-1;i=e.matMul(t,n,r)}if(n>0){let e;e=r>a?r+a-3:r-1;const t=[];for(let r=e;r<e+n;++r)t.push(r);i=i.squeeze(t)}return 1===i.shape.length&&(i=i.expandDims(1)),i})}function dr(e,t,n,r,a,s=.001){let i;if(2===e.rank)i=ss.batchNorm2d(e,t,n,r,a,s);else if(3===e.rank)i=ss.batchNorm3d(e,t,n,r,a,s);else{if(4!==e.rank)throw new Gc(`batchNormalization is not implemented for array of rank ${e.rank} `+"yet");i=ss.batchNorm4d(e,t,n,r,a,s)}return i}function hr(e,t,n,r,a=.001){return Object(ss.tidy)(()=>{const s=ss.moments(e,r),i=s.mean,o=s.variance,u=dr(e,i,o,n,t,a);return[u,i,o]})}function pr(e,t,n,r,a=.001){return Object(ss.tidy)(()=>{const s=ss.moments(e,r),i=s.mean,o=s.variance,u=[];for(const t of re(0,e.rank))-1!==r.indexOf(t)?u.push(1):u.push(e.shape[t]);const c=i.reshape(u),l=o.reshape(u),d=null==t?null:t.reshape(u),h=null==n?null:n.reshape(u),p=dr(e,c,l,h,d,a);return[p,i,o]})}function fr(e,t,n,r,a=.001){return ss.util.arraysEqual(r.slice().sort(),re(0,e.rank-1))?hr(e,t,n,r,a):pr(e,t,n,r,a)}function mr(e,t,n){return Object(ss.tidy)(()=>{if(4!==e.rank)throw new Uc("temporalPadding expects input tensor to be 4-D, but received a "+`${e.rank}-D tensor.`);if(null==t&&(t=[[1,1],[1,1]]),2!==t.length||2!==t[0].length||2!==t[1].length)throw new Uc("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(null==n&&(n=f()),"channelsLast"!==n&&"channelsFirst"!==n)throw new Uc(`Unknown data format: ${n}. `+"Supported data formats are 'channelsLast' and 'channelsFirst.");let r;return r="channelsFirst"===n?[[0,0],[0,0],t[0],t[1]]:[[0,0],t[0],t[1],[0,0]],ss.pad(e,r)})}function br(e,t,n,r,a,s){return Object(ss.tidy)(()=>{let i;V(a),H(s),G(r),null==n&&(n=[1,1]),null==r&&(r="valid"),null==a&&(a=f()),null==s&&(s="max"),e=er(e,a);const o="same"===r?"same":"valid";return i="max"===s?ss.maxPool(e,t,n,o):ss.avgPool(e,t,n,o),"channelsFirst"===a&&(i=ss.transpose(i,[0,3,1,2])),i})}function gr(e,t,n,r,a,s){return Object(ss.tidy)(()=>{let i;V(a),H(s),G(r),null==n&&(n=[1,1,1]),null==r&&(r="valid"),null==a&&(a=f()),null==s&&(s="max"),e=tr(e,a);const o="same"===r?"same":"valid";return i="max"===s?ss.maxPool3d(e,t,n,o):ss.avgPool3d(e,t,n,o),"channelsFirst"===a&&(i=ss.transpose(i,[0,4,1,2,3])),i})}function yr(e){C(al,"BidirectionalMergeMode",e)}function xr(e){return new zl(e)}function vr(e){return new Rd(e)}function wr(e){return new _d(e)}function kr(e){return new Dd(e)}function Or(e){return new Fd(e)}function Ir(e){return new zd(e)}function Nr(e){return new Md(e)}function jr(e){return new qd(e)}function Sr(e){return new Bd(e)}function Tr(e){return new Vd(e)}function Cr(e){return new Wd(e)}function Er(e){return new Ud(e)}function $r(e){return new Hd(e)}function Ar(e){return new Kd(e)}function _r(e){return new Xd(e)}function Dr(e){return new Yd(e)}function Fr(e){return new fh(e)}function Rr(e){return new hh(e)}function Mr(e){return new lh(e)}function zr(e){return new dh(e)}function Lr(e){return new ph(e)}function Pr(e){return new mh(e)}function Br(e){return new bh(e)}function Wr(e){return new gh(e)}function Vr(e){return new xh(e)}function Ur(e){return new wh(e)}function Gr(e){return new Oh(e)}function Hr(e){return new jh(e)}function qr(e){return new Ih(e)}function Kr(e){return new Nh(e)}function Xr(e){return new kh(e)}function Yr(e){return new Sh(e)}function Zr(e){return new $h(e)}function Qr(e){return new Ah(e)}function Jr(e){return new _h(e)}function ea(e){return new Rh(e)}function ta(e){return ea(e)}function na(e){return ea(e)}function ra(e){return new Lh(e)}function aa(e){return ra(e)}function sa(e){return ra(e)}function ia(e){return new Wh(e)}function oa(e){return ia(e)}function ua(e){return ia(e)}function ca(e){return new Uh(e)}function la(e){return new qh(e)}function da(e){return new Gh(e)}function ha(e){return new Kh(e)}function pa(e){return new Fh(e)}function fa(e){return new zh(e)}function ma(e){return new Bh(e)}function ba(e){return new nh(e)}function ga(e){return new th(e)}function ya(e){return new ah(e)}function xa(e){return new rh(e)}function va(e){return new eh(e)}function wa(e){return new Jd(e)}function ka(e){return new ch(e)}function Oa(e){return new uh(e)}function Ia(e){return new Zd(e)}function Na(e){return new sh(e)}function ja(e){return new Qh(e)}function Sa(e){return new Yh(e)}function Ta(e){return new Th(e)}function Ca(e){return new Ch(e)}function Ea(e){return new Eh(e)}function $a(e){return new yh(e)}function Aa(e,t){return Ct(e,t)}function _a(e,t){return Rt(e,t)}function Da(e,t){return Mt(e,t)}function Fa(e,t){return Et(e,t)}function Ra(e,t){return ed(e,t)}function Ma(e,t){return Dt(e,t)}function za(e,t){return Ft(e,t)}function La(e,t){return St(e,t)}function Pa(e,t){return ft(e,t)}function Ba(e,t){return mt(e,t)}function Wa(e,t){return mt(e,t)}function Va(e,t){return mt(e,t)}function Ua(e,t){return pt(e,t)}function Ga(e,t){return pt(e,t)}function Ha(e,t){return pt(e,t)}function qa(e){return new $d(e)}function Ka(e){return Hn(e)}function Xa(e){return qn(e)}function Ya(e,t){return e<t}function Za(e,t){return e>t}function Qa(e){return new ap(e)}n.r(t),n.d(t,"CallbackList",function(){return Wl}),n.d(t,"CustomCallback",function(){return Gl}),n.d(t,"History",function(){return Ul}),n.d(t,"Callback",function(){return rp}),n.d(t,"callbacks",function(){return sp}),n.d(t,"EarlyStopping",function(){return ap}),n.d(t,"InputSpec",function(){return Al}),n.d(t,"SymbolicTensor",function(){return _l}),n.d(t,"LayersModel",function(){return hd}),n.d(t,"input",function(){return Pn}),n.d(t,"loadLayersModel",function(){return Ln}),n.d(t,"model",function(){return Mn}),n.d(t,"registerCallbackConstructor",function(){return Bn}),n.d(t,"sequential",function(){return zn}),n.d(t,"RNN",function(){return Zd}),n.d(t,"Sequential",function(){return fd}),n.d(t,"LayerVariable",function(){return $l}),n.d(t,"version_layers",function(){return sd}),n.d(t,"constraints",function(){return Ja}),n.d(t,"initializers",function(){return es}),n.d(t,"layers",function(){return ts}),n.d(t,"metrics",function(){return ns}),n.d(t,"models",function(){return rs}),n.d(t,"regularizers",function(){return as});var Ja={};n.r(Ja),n.d(Ja,"maxNorm",function(){return L}),n.d(Ja,"unitNorm",function(){return P}),n.d(Ja,"nonNeg",function(){return B}),n.d(Ja,"minMaxNorm",function(){return W});var es={};n.r(es),n.d(es,"zeros",function(){return Ae}),n.d(es,"ones",function(){return _e}),n.d(es,"constant",function(){return De}),n.d(es,"randomUniform",function(){return Fe}),n.d(es,"randomNormal",function(){return Re}),n.d(es,"truncatedNormal",function(){return Me}),n.d(es,"identity",function(){return ze}),n.d(es,"varianceScaling",function(){return Le}),n.d(es,"glorotUniform",function(){return Pe}),n.d(es,"glorotNormal",function(){return Be}),n.d(es,"heNormal",function(){return We}),n.d(es,"heUniform",function(){return Ve}),n.d(es,"leCunNormal",function(){return Ue}),n.d(es,"leCunUniform",function(){return Ge}),n.d(es,"orthogonal",function(){return He});var ts={};n.r(ts),n.d(ts,"inputLayer",function(){return xr}),n.d(ts,"elu",function(){return vr}),n.d(ts,"reLU",function(){return wr}),n.d(ts,"leakyReLU",function(){return kr}),n.d(ts,"prelu",function(){return Or}),n.d(ts,"softmax",function(){return Ir}),n.d(ts,"thresholdedReLU",function(){return Nr}),n.d(ts,"conv1d",function(){return jr}),n.d(ts,"conv2d",function(){return Sr}),n.d(ts,"conv2dTranspose",function(){return Tr}),n.d(ts,"conv3d",function(){return Cr}),n.d(ts,"conv3dTranspose",function(){return Er}),n.d(ts,"separableConv2d",function(){return $r}),n.d(ts,"cropping2D",function(){return Ar}),n.d(ts,"upSampling2d",function(){return _r}),n.d(ts,"depthwiseConv2d",function(){return Dr}),n.d(ts,"activation",function(){return Fr}),n.d(ts,"dense",function(){return Rr}),n.d(ts,"dropout",function(){return Mr}),n.d(ts,"spatialDropout1d",function(){return zr}),n.d(ts,"flatten",function(){return Lr}),n.d(ts,"repeatVector",function(){return Pr}),n.d(ts,"reshape",function(){return Br}),n.d(ts,"permute",function(){return Wr}),n.d(ts,"embedding",function(){return Vr}),n.d(ts,"add",function(){return Ur}),n.d(ts,"average",function(){return Gr}),n.d(ts,"concatenate",function(){return Hr}),n.d(ts,"maximum",function(){return qr}),n.d(ts,"minimum",function(){return Kr}),n.d(ts,"multiply",function(){return Xr}),n.d(ts,"dot",function(){return Yr}),n.d(ts,"batchNormalization",function(){return Zr}),n.d(ts,"layerNormalization",function(){return Qr}),n.d(ts,"zeroPadding2d",function(){return Jr}),n.d(ts,"averagePooling1d",function(){return ea}),n.d(ts,"avgPool1d",function(){return ta}),n.d(ts,"avgPooling1d",function(){return na}),n.d(ts,"averagePooling2d",function(){return ra}),n.d(ts,"avgPool2d",function(){return aa}),n.d(ts,"avgPooling2d",function(){return sa}),n.d(ts,"averagePooling3d",function(){return ia}),n.d(ts,"avgPool3d",function(){return oa}),n.d(ts,"avgPooling3d",function(){return ua}),n.d(ts,"globalAveragePooling1d",function(){return ca}),n.d(ts,"globalAveragePooling2d",function(){return la}),n.d(ts,"globalMaxPooling1d",function(){return da}),n.d(ts,"globalMaxPooling2d",function(){return ha}),n.d(ts,"maxPooling1d",function(){return pa}),n.d(ts,"maxPooling2d",function(){return fa}),n.d(ts,"maxPooling3d",function(){return ma}),n.d(ts,"gru",function(){return ba}),n.d(ts,"gruCell",function(){return ga}),n.d(ts,"lstm",function(){return ya}),n.d(ts,"lstmCell",function(){return xa}),n.d(ts,"simpleRNN",function(){return va}),n.d(ts,"simpleRNNCell",function(){return wa}),n.d(ts,"convLstm2d",function(){return ka}),n.d(ts,"convLstm2dCell",function(){return Oa}),n.d(ts,"rnn",function(){return Ia}),n.d(ts,"stackedRNNCells",function(){return Na}),n.d(ts,"bidirectional",function(){return ja}),n.d(ts,"timeDistributed",function(){return Sa}),n.d(ts,"globalMaxPool1d",function(){return Jh}),n.d(ts,"globalMaxPool2d",function(){return ep}),n.d(ts,"maxPool1d",function(){return tp}),n.d(ts,"maxPool2d",function(){return np}),n.d(ts,"Layer",function(){return Ml}),n.d(ts,"RNN",function(){return Zd}),n.d(ts,"RNNCell",function(){return Qd}),n.d(ts,"input",function(){return Pn}),n.d(ts,"gaussianNoise",function(){return Ta}),n.d(ts,"gaussianDropout",function(){return Ca}),n.d(ts,"alphaDropout",function(){return Ea}),n.d(ts,"masking",function(){return $a});var ns={};n.r(ns),n.d(ns,"binaryAccuracy",function(){return Aa}),n.d(ns,"binaryCrossentropy",function(){return _a}),n.d(ns,"sparseCategoricalAccuracy",function(){return Da}),n.d(ns,"categoricalAccuracy",function(){return Fa}),n.d(ns,"categoricalCrossentropy",function(){return Ra}),n.d(ns,"precision",function(){return Ma}),n.d(ns,"recall",function(){return za}),n.d(ns,"cosineProximity",function(){return La}),n.d(ns,"meanAbsoluteError",function(){return Pa}),n.d(ns,"meanAbsolutePercentageError",function(){return Ba}),n.d(ns,"MAPE",function(){return Wa}),n.d(ns,"mape",function(){return Va}),n.d(ns,"meanSquaredError",function(){return Ua}),n.d(ns,"MSE",function(){return Ga}),n.d(ns,"mse",function(){return Ha});var rs={};n.r(rs),n.d(rs,"modelFromJSON",function(){return _n});var as={};n.r(as),n.d(as,"l1l2",function(){return qa}),n.d(as,"l1",function(){return Ka}),n.d(as,"l2",function(){return Xa});var ss=n(0),is=n(43),os=n(6);Object(os.d)().prototype.abs=function(){return this.throwIfDisposed(),Object(is.a)(this)};var us=n(216);Object(os.d)().prototype.acos=function(){return this.throwIfDisposed(),Object(us.a)(this)};var cs=n(217);Object(os.d)().prototype.acosh=function(){return this.throwIfDisposed(),Object(cs.a)(this)};var ls=n(13);Object(os.d)().prototype.add=function(e){return this.throwIfDisposed(),Object(ls.a)(this,e)};var ds=n(151);Object(os.d)().prototype.all=function(e,t){return this.throwIfDisposed(),Object(ds.a)(this,e,t)};var hs=n(152);Object(os.d)().prototype.any=function(e,t){return this.throwIfDisposed(),Object(hs.a)(this,e,t)};var ps=n(153);Object(os.d)().prototype.argMax=function(e){return this.throwIfDisposed(),Object(ps.a)(this,e)};var fs=n(154);Object(os.d)().prototype.argMin=function(e){return this.throwIfDisposed(),Object(fs.a)(this,e)};var ms=n(7),bs=n(8);Object(os.d)().prototype.asScalar=function(){return this.throwIfDisposed(),Object(bs.b)(1===this.size,()=>"The array must have only 1 element."),Object(ms.a)(this,[])};var gs=n(12);Object(os.d)().prototype.asType=function(e){return this.throwIfDisposed(),Object(gs.a)(this,e)},Object(os.d)().prototype.as1D=function(){return this.throwIfDisposed(),Object(ms.a)(this,[this.size])},Object(os.d)().prototype.as2D=function(e,t){return this.throwIfDisposed(),Object(ms.a)(this,[e,t])},Object(os.d)().prototype.as3D=function(e,t,n){return this.throwIfDisposed(),Object(ms.a)(this,[e,t,n])},Object(os.d)().prototype.as4D=function(e,t,n,r){return this.throwIfDisposed(),Object(ms.a)(this,[e,t,n,r])},Object(os.d)().prototype.as5D=function(e,t,n,r,a){return this.throwIfDisposed(),Object(ms.a)(this,[e,t,n,r,a])};var ys=n(219);Object(os.d)().prototype.asin=function(){return this.throwIfDisposed(),Object(ys.a)(this)};var xs=n(220);Object(os.d)().prototype.asinh=function(){return this.throwIfDisposed(),Object(xs.a)(this)};var vs=n(221);Object(os.d)().prototype.atan=function(){return this.throwIfDisposed(),Object(vs.a)(this)};var ws=n(155);Object(os.d)().prototype.atan2=function(e){return this.throwIfDisposed(),Object(ws.a)(this,e)};var ks=n(222);Object(os.d)().prototype.atanh=function(){return this.throwIfDisposed(),Object(ks.a)(this)};var Os=n(116);Object(os.d)().prototype.avgPool=function(e,t,n,r){return this.throwIfDisposed(),Object(Os.a)(this,e,t,n,r)};var Is=n(91);Object(os.d)().prototype.batchToSpaceND=function(e,t){return this.throwIfDisposed(),Object(Is.a)(this,e,t)};var Ns=n(84);Object(os.d)().prototype.batchNorm=function(e,t,n,r,a){return this.throwIfDisposed(),Object(Ns.a)(this,e,t,n,r,a)};var js=n(101);Object(os.d)().prototype.broadcastTo=function(e){return this.throwIfDisposed(),Object(js.a)(this,e)},Object(os.d)().prototype.cast=function(e){return this.throwIfDisposed(),Object(gs.a)(this,e)};var Ss=n(225);Object(os.d)().prototype.ceil=function(){return this.throwIfDisposed(),Object(Ss.a)(this)};var Ts=n(226);Object(os.d)().prototype.clipByValue=function(e,t){return this.throwIfDisposed(),Object(Ts.a)(this,e,t)};var Cs=n(32);Object(os.d)().prototype.concat=function(e,t){return this.throwIfDisposed(),e instanceof os.a&&(e=[e]),Object(Cs.a)([this,...e],t)};var Es=n(156);Object(os.d)().prototype.conv1d=function(e,t,n,r,a,s){return this.throwIfDisposed(),Object(Es.a)(this,e,t,n,r,a,s)};var $s=n(157);Object(os.d)().prototype.conv2dTranspose=function(e,t,n,r,a){return this.throwIfDisposed(),Object($s.a)(this,e,t,n,r,a)};var As=n(65);Object(os.d)().prototype.conv2d=function(e,t,n,r,a,s){return this.throwIfDisposed(),Object(As.a)(this,e,t,n,r,a,s)};var _s=n(117);Object(os.d)().prototype.cos=function(){return this.throwIfDisposed(),Object(_s.a)(this)};var Ds=n(158);Object(os.d)().prototype.cosh=function(){return this.throwIfDisposed(),Object(Ds.a)(this)};var Fs=n(118);Object(os.d)().prototype.cumsum=function(e,t,n){return this.throwIfDisposed(),Object(Fs.a)(this,e,t,n)};var Rs=n(159);Object(os.d)().prototype.depthToSpace=function(e,t){return this.throwIfDisposed(),Object(Rs.a)(this,e,t)};var Ms=n(92);Object(os.d)().prototype.depthwiseConv2d=function(e,t,n,r,a,s){return this.throwIfDisposed(),Object(Ms.a)(this,e,t,n,r,a,s)};var zs=n(160);Object(os.d)().prototype.dilation2d=function(e,t,n,r,a){return this.throwIfDisposed(),Object(zs.a)(this,e,t,n,r,a)};var Ls=n(161);Object(os.d)().prototype.divNoNan=function(e){return this.throwIfDisposed(),Object(Ls.a)(this,e)};var Ps=n(15);Object(os.d)().prototype.div=function(e){return this.throwIfDisposed(),Object(Ps.a)(this,e)};var Bs=n(162);Object(os.d)().prototype.dot=function(e){return this.throwIfDisposed(),Object(Bs.a)(this,e)};var Ws=n(119);Object(os.d)().prototype.elu=function(){return this.throwIfDisposed(),Object(Ws.a)(this)};var Vs=n(93);Object(os.d)().prototype.equal=function(e){return this.throwIfDisposed(),Object(Vs.a)(this,e)};var Us=n(230);Object(os.d)().prototype.erf=function(){return this.throwIfDisposed(),Object(Us.a)(this)};var Gs=n(41);Object(os.d)().prototype.exp=function(){return this.throwIfDisposed(),Object(Gs.a)(this)};var Hs=n(63);Object(os.d)().prototype.expandDims=function(e){return this.throwIfDisposed(),Object(Hs.a)(this,e)};var qs=n(231);Object(os.d)().prototype.expm1=function(){return this.throwIfDisposed(),Object(qs.a)(this)};var Ks=n(131);Object(os.d)().prototype.fft=function(){return this.throwIfDisposed(),Object(Ks.a)(this)},Object(os.d)().prototype.flatten=function(){return this.throwIfDisposed(),Object(ms.a)(this,[this.size])};var Xs=n(120);Object(os.d)().prototype.floor=function(){return this.throwIfDisposed(),Object(Xs.a)(this)};var Ys=n(114);Object(os.d)().prototype.floorDiv=function(e){return this.throwIfDisposed(),Object(Ys.a)(this,e)};var Zs=n(94);Object(os.d)().prototype.gather=function(e,t){return this.throwIfDisposed(),Object(Zs.a)(this,e,t)};var Qs=n(66);Object(os.d)().prototype.greaterEqual=function(e){return this.throwIfDisposed(),Object(Qs.a)(this,e)};var Js=n(50);Object(os.d)().prototype.greater=function(e){return this.throwIfDisposed(),Object(Js.a)(this,e)};var ei=n(108);Object(os.d)().prototype.ifft=function(){return this.throwIfDisposed(),Object(ei.a)(this)};var ti=n(177);Object(os.d)().prototype.irfft=function(){return this.throwIfDisposed(),Object(ti.a)(this)};var ni=n(232);Object(os.d)().prototype.isFinite=function(){return this.throwIfDisposed(),Object(ni.a)(this)};var ri=n(233);Object(os.d)().prototype.isInf=function(){return this.throwIfDisposed(),Object(ri.a)(this)};var ai=n(234);Object(os.d)().prototype.isNaN=function(){return this.throwIfDisposed(),Object(ai.a)(this)};var si=n(122);Object(os.d)().prototype.leakyRelu=function(e){return this.throwIfDisposed(),Object(si.a)(this,e)};var ii=n(67);Object(os.d)().prototype.lessEqual=function(e){return this.throwIfDisposed(),Object(ii.a)(this,e)};var oi=n(123);Object(os.d)().prototype.less=function(e){return this.throwIfDisposed(),Object(oi.a)(this,e)};var ui=n(163);Object(os.d)().prototype.localResponseNormalization=function(e,t,n,r){return this.throwIfDisposed(),Object(ui.a)(this,e,t,n,r)};var ci=n(236);Object(os.d)().prototype.logSigmoid=function(){
return this.throwIfDisposed(),Object(ci.a)(this)};var li=n(237);Object(os.d)().prototype.logSoftmax=function(e){return this.throwIfDisposed(),Object(li.a)(this,e)};var di=n(124);Object(os.d)().prototype.logSumExp=function(e,t){return this.throwIfDisposed(),Object(di.a)(this,e,t)};var hi=n(75);Object(os.d)().prototype.log=function(){return this.throwIfDisposed(),Object(hi.a)(this)};var pi=n(164);Object(os.d)().prototype.log1p=function(){return this.throwIfDisposed(),Object(pi.a)(this)};var fi=n(59);Object(os.d)().prototype.logicalAnd=function(e){return this.throwIfDisposed(),Object(fi.a)(this,e)};var mi=n(95);Object(os.d)().prototype.logicalNot=function(){return this.throwIfDisposed(),Object(mi.a)(this)};var bi=n(125);Object(os.d)().prototype.logicalOr=function(e){return this.throwIfDisposed(),Object(bi.a)(this,e)};var gi=n(166);Object(os.d)().prototype.logicalXor=function(e){return this.throwIfDisposed(),Object(gi.a)(this,e)};var yi=n(24);Object(os.d)().prototype.matMul=function(e,t,n){return this.throwIfDisposed(),Object(yi.a)(this,e,t,n)};var xi=n(126);Object(os.d)().prototype.maxPool=function(e,t,n,r){return this.throwIfDisposed(),Object(xi.a)(this,e,t,n,r)};var vi=n(72);Object(os.d)().prototype.max=function(e,t){return this.throwIfDisposed(),Object(vi.a)(this,e,t)};var wi=n(90);Object(os.d)().prototype.maximum=function(e){return this.throwIfDisposed(),Object(wi.a)(this,e)};var ki=n(88);Object(os.d)().prototype.mean=function(e,t){return this.throwIfDisposed(),Object(ki.a)(this,e,t)};var Oi=n(105);Object(os.d)().prototype.min=function(e,t){return this.throwIfDisposed(),Object(Oi.a)(this,e,t)};var Ii=n(127);Object(os.d)().prototype.minimum=function(e){return this.throwIfDisposed(),Object(Ii.a)(this,e)};var Ni=n(167);Object(os.d)().prototype.mirrorPad=function(e,t){return this.throwIfDisposed(),Object(Ni.a)(this,e,t)};var ji=n(168);Object(os.d)().prototype.mod=function(e){return this.throwIfDisposed(),Object(ji.a)(this,e)};var Si=n(9);Object(os.d)().prototype.mul=function(e){return this.throwIfDisposed(),Object(Si.a)(this,e)};var Ti=n(30);Object(os.d)().prototype.neg=function(){return this.throwIfDisposed(),Object(Ti.a)(this)};var Ci=n(135);Object(os.d)().prototype.norm=function(e,t,n){return this.throwIfDisposed(),Object(Ci.a)(this,e,t,n)};var Ei=n(128);Object(os.d)().prototype.notEqual=function(e){return this.throwIfDisposed(),Object(Ei.a)(this,e)};var $i=n(106);Object(os.d)().prototype.oneHot=function(e,t=1,n=0){return this.throwIfDisposed(),Object($i.a)(this,e,t,n)};var Ai=n(241);Object(os.d)().prototype.onesLike=function(){return this.throwIfDisposed(),Object(Ai.a)(this)};var _i=n(56);Object(os.d)().prototype.pad=function(e,t){return this.throwIfDisposed(),Object(_i.a)(this,e,t)};var Di=n(169);Object(os.d)().prototype.pool=function(e,t,n,r,a){return this.throwIfDisposed(),Object(Di.a)(this,e,t,n,r,a)};var Fi=n(53);Object(os.d)().prototype.pow=function(e){return this.throwIfDisposed(),Object(Fi.a)(this,e)};var Ri=n(129);Object(os.d)().prototype.prelu=function(e){return this.throwIfDisposed(),Object(Ri.a)(this,e)};var Mi=n(170);Object(os.d)().prototype.prod=function(e,t){return this.throwIfDisposed(),Object(Mi.a)(this,e,t)};var zi=n(242);Object(os.d)().prototype.reciprocal=function(){return this.throwIfDisposed(),Object(zi.a)(this)};var Li=n(81);Object(os.d)().prototype.relu=function(){return this.throwIfDisposed(),Object(Li.a)(this)};var Pi=n(130);Object(os.d)().prototype.relu6=function(){return this.throwIfDisposed(),Object(Pi.a)(this)},Object(os.d)().prototype.reshapeAs=function(e){return this.throwIfDisposed(),Object(ms.a)(this,e.shape)},Object(os.d)().prototype.reshape=function(e){return this.throwIfDisposed(),Object(ms.a)(this,e)};var Bi=n(211);Object(os.d)().prototype.resizeBilinear=function(e,t,n){return this.throwIfDisposed(),Object(Bi.a)(this,e,t,n)};var Wi=n(210);Object(os.d)().prototype.resizeNearestNeighbor=function(e,t,n){return this.throwIfDisposed(),Object(Wi.a)(this,e,t,n)};var Vi=n(48);Object(os.d)().prototype.reverse=function(e){return this.throwIfDisposed(),Object(Vi.a)(this,e)};var Ui=n(132);Object(os.d)().prototype.rfft=function(){return this.throwIfDisposed(),Object(Ui.a)(this)};var Gi=n(243);Object(os.d)().prototype.round=function(){return this.throwIfDisposed(),Object(Gi.a)(this)};var Hi=n(172);Object(os.d)().prototype.rsqrt=function(){return this.throwIfDisposed(),Object(Hi.a)(this)};var qi=n(173);Object(os.d)().prototype.selu=function(){return this.throwIfDisposed(),Object(qi.a)(this)};var Ki=n(174);Object(os.d)().prototype.separableConv2d=function(e,t,n,r,a,s){return this.throwIfDisposed(),Object(Ki.a)(this,e,t,n,r,a,s)};var Xi=n(71);Object(os.d)().prototype.sigmoid=function(){return this.throwIfDisposed(),Object(Xi.a)(this)};var Yi=n(245);Object(os.d)().prototype.sign=function(){return this.throwIfDisposed(),Object(Yi.a)(this)};var Zi=n(175);Object(os.d)().prototype.sin=function(){return this.throwIfDisposed(),Object(Zi.a)(this)};var Qi=n(176);Object(os.d)().prototype.sinh=function(){return this.throwIfDisposed(),Object(Qi.a)(this)};var Ji=n(28);Object(os.d)().prototype.slice=function(e,t){return this.throwIfDisposed(),Object(Ji.a)(this,e,t)};var eo=n(246);Object(os.d)().prototype.softmax=function(e){return this.throwIfDisposed(),Object(eo.a)(this,e)};var to=n(165);Object(os.d)().prototype.softplus=function(){return this.throwIfDisposed(),Object(to.a)(this)};var no=n(96);Object(os.d)().prototype.spaceToBatchND=function(e,t){return this.throwIfDisposed(),Object(no.a)(this,e,t)};var ro=n(76);Object(os.d)().prototype.split=function(e,t){return this.throwIfDisposed(),Object(ro.a)(this,e,t)};var ao=n(37);Object(os.d)().prototype.sqrt=function(){return this.throwIfDisposed(),Object(ao.a)(this)};var so=n(25);Object(os.d)().prototype.square=function(){return this.throwIfDisposed(),Object(so.a)(this)};var io=n(133);Object(os.d)().prototype.squaredDifference=function(e){return this.throwIfDisposed(),Object(io.a)(this,e)};var oo=n(97);Object(os.d)().prototype.squeeze=function(e){return this.throwIfDisposed(),Object(oo.a)(this,e)};var uo=n(60);Object(os.d)().prototype.stack=function(e,t){this.throwIfDisposed();const n=e instanceof os.a?[this,e]:[this,...e];return Object(uo.a)(n,t)};var co=n(82);Object(os.d)().prototype.step=function(e){return this.throwIfDisposed(),Object(co.a)(this,e)};var lo=n(247);Object(os.d)().prototype.stridedSlice=function(e,t,n,r,a,s,i,o){return this.throwIfDisposed(),Object(lo.a)(this,e,t,n,r,a,s,i,o)};var ho=n(14);Object(os.d)().prototype.sub=function(e){return this.throwIfDisposed(),Object(ho.a)(this,e)};var po=n(19);Object(os.d)().prototype.sum=function(e,t){return this.throwIfDisposed(),Object(po.a)(this,e,t)};var fo=n(248);Object(os.d)().prototype.tan=function(){return this.throwIfDisposed(),Object(fo.a)(this)};var mo=n(145);Object(os.d)().prototype.tanh=function(){return this.throwIfDisposed(),Object(mo.a)(this)};var bo=n(85);Object(os.d)().prototype.tile=function(e){return this.throwIfDisposed(),Object(bo.a)(this,e)},Object(os.d)().prototype.toBool=function(){return this.throwIfDisposed(),Object(gs.a)(this,"bool")},Object(os.d)().prototype.toFloat=function(){return this.throwIfDisposed(),Object(gs.a)(this,"float32")},Object(os.d)().prototype.toInt=function(){return this.throwIfDisposed(),Object(gs.a)(this,"int32")};var go=n(179);Object(os.d)().prototype.topk=function(e,t){return this.throwIfDisposed(),Object(go.a)(this,e,t)};var yo=n(52);Object(os.d)().prototype.transpose=function(e){return this.throwIfDisposed(),Object(yo.a)(this,e)};var xo=n(180);Object(os.d)().prototype.unique=function(e){return this.throwIfDisposed(),Object(xo.a)(this,e)};var vo=n(134);Object(os.d)().prototype.unsortedSegmentSum=function(e,t){return this.throwIfDisposed(),Object(vo.a)(this,e,t)};var wo=n(83);Object(os.d)().prototype.unstack=function(e){return this.throwIfDisposed(),Object(wo.a)(this,e)};var ko=n(36);Object(os.d)().prototype.where=function(e,t){return this.throwIfDisposed(),Object(ko.a)(e,this,t)};var Oo=n(20);Object(os.d)().prototype.zerosLike=function(){return this.throwIfDisposed(),Object(Oo.a)(this)};var Io=n(3);const No={kernelName:Io.a,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(Si.a)(e,Object(co.a)(Object(gs.a)(n,"float32"),-1))}}};var jo=n(16);const So={kernelName:Io.b,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=Object(so.a)(Object(gs.a)(n,"float32")),r=Object(ao.a)(Object(ho.a)(Object(jo.a)(1),t));return Object(Ti.a)(Object(Ps.a)(e,r))}}}},To={kernelName:Io.c,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=Object(ao.a)(Object(ho.a)(Object(so.a)(Object(gs.a)(n,"float32")),1));return Object(Ps.a)(e,t)}}}};var Co=n(17);const Eo={kernelName:Io.d,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=Co.a(n.shape,r.shape),s=()=>{let t=e;const r=Co.c(n.shape,a);return r.length>0&&(t=Object(po.a)(t,r)),Object(ms.a)(t,n.shape)},i=()=>{let t=e;const n=Co.c(r.shape,a);return n.length>0&&(t=Object(po.a)(t,n)),Object(ms.a)(t,r.shape)};return{a:s,b:i}}},$o={kernelName:Io.e,saveAllInputs:!0,gradFunc:(e,t)=>{const n={};return t.forEach((t,r)=>{n[r]=(()=>e.clone())}),n}},Ao={kernelName:Io.h,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(Oo.a)(n)}}},_o={kernelName:Io.i,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(Oo.a)(n)}}},Do={kernelName:Io.j,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(Ps.a)(e,Object(ao.a)(Object(ho.a)(Object(jo.a)(1),Object(so.a)(Object(gs.a)(n,"float32")))))}}},Fo={kernelName:Io.k,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=Object(ao.a)(Object(ls.a)(Object(jo.a)(1),Object(so.a)(Object(gs.a)(n,"float32"))));return Object(Ps.a)(e,t)}}}},Ro={kernelName:Io.m,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=Object(Co.a)(n.shape,r.shape),s=()=>{const t=Object(ls.a)(Object(so.a)(n),Object(so.a)(r));let s=Object(Si.a)(e,Object(Ps.a)(r,t));const i=Object(Co.c)(n.shape,a);return i.length>0&&(s=Object(po.a)(s,i)),Object(ms.a)(s,n.shape)},i=()=>{const t=Object(ls.a)(Object(so.a)(n),Object(so.a)(r));let s=Object(Ti.a)(Object(Si.a)(e,Object(Ps.a)(n,t)));const i=Object(Co.c)(r.shape,a);return i.length>0&&(s=Object(po.a)(s,i)),Object(ms.a)(s,r.shape)};return{a:s,b:i}}},Mo={kernelName:Io.l,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(Ps.a)(e,Object(ls.a)(Object(so.a)(Object(gs.a)(n,"float32")),1))}}},zo={kernelName:Io.n,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(Ps.a)(e,Object(ho.a)(Object(jo.a)(1),Object(so.a)(Object(gs.a)(n,"float32"))))}}};var Lo=n(5),Po=n(2),Bo=n(4);const Wo=Object(Bo.b)({avgPool3dGrad_:r}),Vo={kernelName:Io.p,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{filterSize:a,strides:s,pad:i,dimRoundingMode:o}=n;return{x:()=>Wo(e,r,a,s,i,o)}}},Uo=Object(Bo.b)({avgPoolGrad_:a}),Go={kernelName:Io.o,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{filterSize:a,strides:s,pad:i}=n;return{x:()=>Uo(e,r,a,s,i)}}},Ho={kernelName:Io.s,inputsToSave:["a","b"],gradFunc:(e,t,n)=>{const[r,a]=t,{transposeA:s,transposeB:i}=n;return s||i?!s&&i?{a:()=>Object(yi.a)(e,a,!1,!1),b:()=>Object(yi.a)(e,r,!0,!1)}:s&&!i?{a:()=>Object(yi.a)(a,e,!1,!0),b:()=>Object(yi.a)(r,e,!1,!1)}:{a:()=>Object(yi.a)(a,e,!0,!0),b:()=>Object(yi.a)(e,r,!0,!0)}:{a:()=>Object(yi.a)(e,a,!1,!0),b:()=>Object(yi.a)(r,e,!0,!1)}}},qo={kernelName:Io.t,gradFunc:(e,t,n)=>{const{blockShape:r,crops:a}=n;return{x:()=>Object(no.a)(e,r,a)}}},Ko={kernelName:Io.v,gradFunc:(e,t,n)=>{const r=n,a=r.inputShape,s=r.shape,i=Array.from(s);for(let e=a.length-1;e>=0;e--)if(a[e]===s[e])i[e]=1;else if(1!==a[e])throw new Error(`broadcastTo(): [${a}] cannot be broadcast to [${s}].`);const o=[];for(let e=0;e<i.length;e++)i[e]>1&&o.push(e);return{x:()=>Object(po.a)(e,o,!0)}}},Xo={kernelName:Io.w,gradFunc:e=>({x:()=>e.clone()})},Yo={kernelName:Io.x,gradFunc:e=>({x:()=>Object(Oo.a)(e)})},Zo={kernelName:Io.y,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{clipValueMin:a,clipValueMax:s}=n;return{x:()=>Object(ko.a)(Object(fi.a)(Object(Qs.a)(r,a),Object(ii.a)(r,s)),e,Object(Oo.a)(e))}}},Qo={kernelName:Io.A,inputsToSave:["x"],gradFunc:No.gradFunc},Jo={kernelName:Io.B,saveAllInputs:!0,gradFunc:(e,t,n)=>{const r=t.map(e=>e.shape),{axis:a}=n,s=Object(bs.I)(a,t[0].shape)[0],i=r.map(e=>e[s]),o=Object(ro.a)(e,i,s);return o.map(e=>()=>e)}};var eu=n(140),tu=n(138),nu=n(31);const ru={kernelName:Io.C,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[r,a]=t,{dilations:s,strides:i,pad:o,dataFormat:u}=n;return bs.b(nu.i(s),()=>"Error in gradient of conv2D: dilation rates greater than 1 "+`are not yet supported in gradients. Got dilations '${s}'`),{x:()=>Object(tu.a)(r.shape,e,a,i,o,u),filter:()=>Object(eu.a)(r,e,a.shape,i,o,u)}}},au={kernelName:Io.E,inputsToSave:["dy","filter"],gradFunc:(e,t,n)=>{const[r,a]=t,{strides:s,pad:i,dataFormat:o,dimRoundingMode:u}=n;return{dy:()=>Object(As.a)(e,a,s,i,o,1,u),filter:()=>Object(eu.a)(e,r,a.shape,s,i,o,u)}}},su=Object(Bo.b)({conv3DBackpropFilter_:s});var iu=n(209);const ou={kernelName:Io.F,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:r,strides:a,pad:s}=n;bs.b(Object(nu.i)(r),()=>"Error in gradient of conv3D: dilation rates greater than 1 are "+`not yet supported in gradients. Got dilations '${r}'`);const[i,o]=t;return{x:()=>Object(iu.a)(i.shape,e,o,a,s),filter:()=>su(i,e,o.shape,a,s)}}},uu={kernelName:Io.I,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(Si.a)(Object(Ti.a)(Object(Zi.a)(Object(gs.a)(n,"float32"))),e)}}},cu={kernelName:Io.J,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(Si.a)(Object(Qi.a)(Object(gs.a)(n,"float32")),e)}}};var lu=n(39);const du={kernelName:Io.L,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{axis:a,exclusive:s,reverse:i}=n;return{x:()=>{const t=Object(lu.f)([a],r.rank);let n=Object(Fs.a)(e,a,s,!i);return null!=t&&(n=Object(yo.a)(n,t)),n}}}};var hu=n(213),pu=n(212);const fu={kernelName:Io.O,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:r,strides:a,pad:s,dimRoundingMode:i}=n,o=null==r?[1,1]:r;bs.b(nu.i(o),()=>"Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations "+`'${o}'`);const[u,c]=t;return bs.b(4===u.rank,()=>"Error in gradient of depthwiseConv2dNative: input must be "+`rank 4, but got rank ${u.rank}.`),bs.b(4===c.rank,()=>"Error in gradient of depthwiseConv2dNative: filter must be "+`rank 4, but got rank ${c.rank}.`),bs.b(u.shape[3]===c.shape[2],()=>"Error in gradient of depthwiseConv2d: number of input "+`channels (${u.shape[3]}) must match the inChannels dimension `+`in filter ${c.shape[2]}.`),bs.b(nu.h(a,o),()=>"Error in gradient of depthwiseConv2d: Either strides or "+`dilations must be  1. Got strides ${a} and dilations `+`'${o}'.`),null!=i&&bs.b(bs.v(s),()=>"Error in depthwiseConv2d: pad must be an integer when using, "+`dimRoundingMode ${i} but got pad ${s}.`),{x:()=>Object(pu.a)(u.shape,e,c,a,s,r,i),filter:()=>Object(hu.a)(u,e,c.shape,a,s,r,i)}}},mu={kernelName:Io.S,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[r,a]=t,s={x:r,filter:a,dy:e},i={x:r,filter:a,dy:e};return{x:()=>Lo.a.runKernel(Io.U,s,n),filter:()=>Lo.a.runKernel(Io.T,i,n)}}},bu={kernelName:Io.W,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t,r={dy:e,y:n};return{x:()=>Lo.a.runKernel(Io.X,r)}}},gu={kernelName:Io.Z,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,r=Object(Si.a)(Object(Gs.a)(Object(Ti.a)(Object(so.a)(n))),2/Math.sqrt(Math.PI));return{x:()=>Object(Si.a)(e,r)}}},yu={kernelName:Io.ab,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(Si.a)(e,n)}}},xu={kernelName:Io.bb,inputsToSave:["input"],gradFunc:(e,t)=>{const[n]=t;return{input:()=>Object(ms.a)(e,n.shape)}}},vu={kernelName:Io.cb,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(Si.a)(e,Object(Gs.a)(n))}}},wu={kernelName:Io.gb,gradFunc:e=>({x:()=>Object(Oo.a)(e)})},ku={kernelName:Io.hb,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=Object(Co.a)(n.shape,r.shape),s=()=>{const t=Object(Ps.a)(e,Object(gs.a)(r,"float32")),s=Object(Co.c)(n.shape,a);return s.length>0?Object(ms.a)(Object(po.a)(t,s),n.shape):t},i=()=>{let t=Object(Si.a)(e,Object(gs.a)(n,"float32"));const s=Object(Co.c)(r.shape,a);s.length>0&&(t=Object(ms.a)(Object(po.a)(t,s),r.shape));const i=Object(so.a)(r);return Object(Ti.a)(Object(Ps.a)(t,Object(gs.a)(i,"float32")))};return{a:s,b:i}}},Ou={kernelName:Io.jb,inputsToSave:["x","mean","variance","scale"],gradFunc:(e,t,n)=>{const{varianceEpsilon:r}=n,[a,s,i,o]=t,u=null==o?Object(jo.a)(1):o,c=Object(Co.c)(s.shape,a.shape),l=[];if(1===s.rank){for(let e=0;e<a.shape.length-1;++e)l.push(a.shape[e]);l.push(1)}const d=Object(ho.a)(a,s),h=Object(Si.a)(e,u),p=Object(Hi.a)(Object(ls.a)(i,Object(jo.a)(r))),f=Object(Si.a)(Object(Si.a)(Object(Si.a)(p,p),p),Object(jo.a)(-.5)),m=()=>1===s.rank?Object(ms.a)(Object(Si.a)(Object(Si.a)(e,Object(bo.a)(Object(ms.a)(p,[1,1,1,s.shape[0]]),l)),u),a.shape):Object(ms.a)(Object(Si.a)(Object(Si.a)(e,p),u),a.shape),b=()=>{let e=Object(Si.a)(Object(Si.a)(p,Object(jo.a)(-1)),h);return 1===s.rank&&(e=Object(po.a)(e,c)),Object(ms.a)(e,s.shape)},g=()=>{let e=Object(Si.a)(Object(Si.a)(f,d),h);return 1===s.rank&&(e=Object(po.a)(e,c)),Object(ms.a)(e,s.shape)},y=()=>{const t=Object(Si.a)(d,p);let n=Object(Si.a)(e,t);return 1===s.rank&&(n=Object(po.a)(n,c)),Object(ms.a)(n,s.shape)},x=()=>{let t=e;return 1===s.rank&&(t=Object(po.a)(t,c)),Object(ms.a)(t,s.shape)};return{x:m,mean:b,variance:g,scale:y,offset:x}}},Iu={kernelName:Io.nb,inputsToSave:["x","indices"],gradFunc:(e,t,n)=>{const[r,a]=t,{axis:s}=n,u=Object(bs.I)(s,r.shape)[0],c=()=>{const t=r.shape,n=a.size,c=t.slice(0,u),l=c.length,d=t.slice(s,t.length).slice(1),h=d.length,p=i(0,l),f=i(l+1,l+1+h),m=o([c,[n],d]),b=Object(ms.a)(e,m),g=Object(ms.a)(a,[n]),y=o([[l],p,f]),x=Object(yo.a)(b,y);let v=Object(vo.a)(x,g,r.shape[u]);const w=Object(lu.h)(y);return v=Object(yo.a)(v,w),v};return{x:c,indices:()=>a}}},Nu={kernelName:Io.pb,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>Object(Oo.a)(n),b:()=>Object(Oo.a)(r)}}},ju={kernelName:Io.rb,gradFunc:e=>({x:()=>Object(gs.a)(e,"float32")})},Su={kernelName:Io.tb,gradFunc:e=>({x:()=>Object(Oo.a)(e)})},Tu={kernelName:Io.ub,gradFunc:e=>({x:()=>Object(Oo.a)(e)})},Cu={kernelName:Io.vb,gradFunc:e=>({x:()=>Object(Oo.a)(e)})},Eu={kernelName:Io.yb,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{alpha:a}=n,s=Object(Js.a)(r,0);return{x:()=>Object(ko.a)(s,e,Object(Si.a)(e,a))}}},$u={kernelName:Io.Db,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(Ps.a)(e,Object(ls.a)(n,1))}}},Au={kernelName:Io.Cb,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(Ps.a)(e,Object(gs.a)(n,"float32"))}}},_u={kernelName:Io.Eb,inputsToSave:[],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r]=t,{axis:a}=n;return{logits:()=>{const t=!0,n=Object(Gs.a)(r);return Object(ho.a)(e,Object(Si.a)(Object(po.a)(e,a,t),n))}}}},Du=Object(Bo.b)({localResponseNormalizationBackprop_:u}),Fu={kernelName:Io.wb,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,a]=t,{depthRadius:s,bias:i,alpha:o,beta:u}=n;return{x:()=>Du(r,a,e,s,i,o,u)}}},Ru={kernelName:Io.Ib,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const r=n,{reductionIndices:a}=r,s=t[0],i=t[1],o=bs.I(a,s.shape),u=c(e,i,s,o);return{x:()=>u.x()}}},Mu={kernelName:Io.Ob,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=()=>Object(Si.a)(e,Object(gs.a)(Object(Qs.a)(n,r),"float32")),s=()=>Object(Si.a)(e,Object(gs.a)(Object(oi.a)(n,r),"float32"));return{a:a,b:s}}},zu=Object(Bo.b)({maxPool3dGrad_:l}),Lu={kernelName:Io.Kb,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,a]=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:u}=n;return{x:()=>zu(e,r,a,s,i,o,u)}}},Pu=Object(Bo.b)({maxPoolGrad_:d}),Bu={kernelName:Io.Jb,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,a]=t,{filterSize:s,strides:i,pad:o}=n;return{x:()=>Pu(e,r,a,s,i,o)}}};var Wu=n(55);const Vu={kernelName:Io.Pb,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{axis:a}=n,s=bs.I(a,r.shape),i=Object(lu.d)(r.shape,s),o=i[1],u=bs.O(o),c=()=>{const t=r.shape.slice();s.forEach(e=>{t[e]=1});const n=Object(ms.a)(e,t),a=Object(Ps.a)(Object(Si.a)(n,Object(Wu.a)(r.shape,"float32")),u);return a};return{x:c}}},Uu={kernelName:Io.Qb,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const r=n,{axis:a}=r,[s,i]=t,o=bs.I(a,s.shape),u=c(e,i,s,o);return{x:()=>u.x()}}},Gu={kernelName:Io.Rb,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=()=>Object(Si.a)(e,Object(gs.a)(Object(ii.a)(n,r),"float32")),s=()=>Object(Si.a)(e,Object(gs.a)(Object(Js.a)(n,r),"float32"));return{a:a,b:s}}},Hu={kernelName:Io.Sb,inputsToSave:["x"],gradFunc:(e,t,n)=>{const r=t[0],{paddings:a}=n,s=a.map(e=>e[0]);return{x:()=>Object(Ji.a)(e,s,r.shape)}}},qu={kernelName:Io.Tb,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=Object(Co.a)(n.shape,r.shape),s=()=>{const t=Object(Co.c)(n.shape,a);return t.length>0?Object(ms.a)(Object(po.a)(e,t),n.shape):e},i=()=>{const t=Object(Si.a)(e,Object(Ti.a)(Object(Xs.a)(Object(Ps.a)(n,r)))),s=Object(Co.c)(r.shape,a);return s.length>0?Object(ms.a)(Object(po.a)(t,s),r.shape):t};return{a:s,b:i}}},Ku={kernelName:Io.Vb,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=Object(Co.a)(n.shape,r.shape),s=()=>{const t=Object(Si.a)(e,Object(gs.a)(r,"float32")),s=Object(Co.c)(n.shape,a);return s.length>0?Object(ms.a)(Object(po.a)(t,s),n.shape):t},i=()=>{const t=Object(Si.a)(e,Object(gs.a)(n,"float32")),s=Object(Co.c)(r.shape,a);return s.length>0?Object(ms.a)(Object(po.a)(t,s),r.shape):t};return{a:s,b:i}}},Xu={kernelName:Io.Wb,gradFunc:e=>({x:()=>Object(Ti.a)(e)})};var Yu=n(80);const Zu={kernelName:Io.bc,inputsToSave:["indices"],gradFunc:(e,t)=>{const n=t[0];return{indices:()=>Object(Yu.a)(n.shape,"float32")}}},Qu={kernelName:Io.cc,gradFunc:e=>({x:()=>Object(Oo.a)(e)})},Ju={kernelName:Io.dc,saveAllInputs:!0,gradFunc:(e,t,n)=>{const{axis:r}=n,a=Object(wo.a)(e,r);return a.map(e=>()=>e)}},ec={kernelName:Io.ec,inputsToSave:["x"],gradFunc:(e,t,n)=>{const r=t[0],{paddings:a}=n,s=a.map(e=>e[0]);return{x:()=>Object(Ji.a)(e,s,r.shape)}}},tc={kernelName:Io.gc,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(e,t)=>{const[n,r,a]=t,s=n,i=r,o=Co.a(s.shape,i.shape),u=()=>{const t=Object(gs.a)(i,"float32");let n=Object(Si.a)(e,Object(Si.a)(t,Object(Fi.a)(s,Object(ho.a)(t,Object(jo.a)(1)))));const r=Co.c(s.shape,o);return r.length>0&&(n=Object(po.a)(n,r)),Object(ms.a)(n,s.shape)},c=()=>{const t=Object(Js.a)(s,0),n=Object(ko.a)(t,Object(hi.a)(s),Object(Oo.a)(s));let r=Object(Si.a)(e,Object(Si.a)(a,n));const u=Co.c(i.shape,o);return u.length>0&&(r=Object(po.a)(r,u)),Object(ms.a)(r,i.shape)};return{a:u,b:c}}},nc={kernelName:Io.hc,inputsToSave:["x","alpha"],gradFunc:(e,t)=>{const[n,r]=t,a=Object(Js.a)(n,0);return{x:()=>Object(ko.a)(a,e,Object(Si.a)(e,r)),alpha:()=>{let t=Object(ko.a)(a,Object(Oo.a)(e),Object(Si.a)(e,n));const s=Object(Co.c)(r.shape,e.shape);return s.length>0&&(t=Object(po.a)(t,s)),Object(ms.a)(t,r.shape)}}}},rc={kernelName:Io.lc,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=Co.a(n.shape,r.shape),s=()=>{const t=Object(Ps.a)(e,Object(gs.a)(r,"float32")),s=Co.c(n.shape,a);return s.length>0?Object(ms.a)(Object(po.a)(t,s),n.shape):t},i=()=>{let t=Object(Si.a)(e,Object(gs.a)(n,"float32"));const s=Co.c(r.shape,a);s.length>0&&(t=Object(ms.a)(Object(po.a)(t,s),r.shape));const i=Object(so.a)(r);return Object(Ti.a)(Object(Ps.a)(t,Object(gs.a)(i,"float32")))};return{a:s,b:i}}},ac={kernelName:Io.mc,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(Ps.a)(e,Object(Ti.a)(Object(so.a)(n)))}}},sc={kernelName:Io.oc,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,r=Object(Si.a)(Object(ii.a)(n,6),Object(co.a)(n));return{x:()=>Object(Si.a)(e,Object(gs.a)(r,"float32"))}}},ic={kernelName:Io.nc,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(Si.a)(e,Object(gs.a)(Object(co.a)(n),"float32"))}}},oc={kernelName:Io.pc,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(ms.a)(e,n.shape)}}},uc={kernelName:Io.qc,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[r]=t,a={dy:e,images:r},s=()=>Lo.a.runKernel(Io.rc,a,n);return{images:s}}},cc={kernelName:Io.sc,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[r]=t,a={dy:e,images:r},s=()=>Lo.a.runKernel(Io.tc,a,n);return{images:s}}},lc={kernelName:Io.uc,gradFunc:(e,t,n)=>{const{dims:r}=n,a=Object(bs.I)(r,e.shape);return{x:()=>Object(Vi.a)(e,a)}}},dc={kernelName:Io.wc,gradFunc:e=>({x:()=>Object(Oo.a)(e)})},hc={kernelName:Io.xc,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(Ti.a)(Object(Ps.a)(e,Object(Si.a)(Object(Fi.a)(n,1.5),2)))}}},pc={kernelName:Io.zc,inputsToSave:["condition"],gradFunc:(e,t)=>{const[n]=t;return{condition:()=>Object(gs.a)(Object(Oo.a)(n),"float32"),t:()=>Object(Si.a)(e,Object(gs.a)(n,e.dtype)),e:()=>Object(Si.a)(e,Object(gs.a)(Object(mi.a)(n),e.dtype))}}};var fc=n(147);const mc={kernelName:Io.Ac,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=Object(Js.a)(n,Object(jo.a)(0)),r=Object(jo.a)(fc.b),a=Object(jo.a)(fc.a),s=Object(Si.a)(e,a),i=Object(Si.a)(Object(Si.a)(e,r),Object(Gs.a)(Object(gs.a)(n,"float32")));return Object(ko.a)(t,s,i)}}}},bc={kernelName:Io.Bc,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(Si.a)(e,Object(Si.a)(n,Object(ho.a)(Object(jo.a)(1),n)))}}},gc={kernelName:Io.Cc,gradFunc:e=>({x:()=>Object(Oo.a)(e)})},yc={kernelName:Io.Dc,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(Si.a)(Object(_s.a)(Object(gs.a)(n,"float32")),e)}}},xc={kernelName:Io.Ec,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(Si.a)(Object(Ds.a)(Object(gs.a)(n,"float32")),e)}}};var vc=n(113);const wc={kernelName:Io.Fc,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{begin:a,size:s}=n,i=r.shape,[o,u]=Object(vc.parseSliceParams)(r,a,s),c=[];for(let t=0;t<e.rank;t++)c.push([o[t],i[t]-o[t]-u[t]]);return{x:()=>Object(_i.a)(e,c)}}},kc={kernelName:Io.Gc,outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r]=t,{dim:a}=n,s=!0,i=Object(Si.a)(e,r);return{logits:()=>Object(ho.a)(i,Object(Si.a)(Object(po.a)(i,[a],s),r))}}},Oc={kernelName:Io.Hc,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(Si.a)(e,Object(Xi.a)(n))}}},Ic={kernelName:Io.Ic,gradFunc:(e,t,n)=>{const{blockShape:r,paddings:a}=n;return{x:()=>Object(Is.a)(e,r,a)}}},Nc={kernelName:Io.Lc,gradFunc:(e,t,n)=>{const{axis:r}=n;return{x:()=>Object(Cs.a)(e,r)}}},jc={kernelName:Io.Mc,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(Ps.a)(e,Object(Si.a)(Object(ao.a)(Object(gs.a)(n,"float32")),2))}}},Sc={kernelName:Io.Nc,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(Si.a)(e,Object(Si.a)(Object(gs.a)(n,"float32"),2))}}},Tc={kernelName:Io.Oc,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=Object(jo.a)(2),s=()=>Object(Si.a)(e,Object(Si.a)(a,Object(ho.a)(n,r))),i=()=>Object(Si.a)(e,Object(Si.a)(a,Object(ho.a)(r,n)));return{a:s,b:i}}},Cc={kernelName:Io.Pc,gradFunc:e=>({x:()=>Object(Oo.a)(e)})},Ec={kernelName:Io.Rc,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=Co.a(n.shape,r.shape),s=()=>{let t=e;const r=Co.c(n.shape,a);return r.length>0&&(t=Object(po.a)(t,r)),Object(ms.a)(t,n.shape)},i=()=>{let t=e;const n=Co.c(r.shape,a);return n.length>0&&(t=Object(po.a)(t,n)),Object(ms.a)(Object(Ti.a)(t),r.shape)};return{a:s,b:i}}},$c={kernelName:Io.Sc,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,a=r.shape.slice(),{axis:s}=n,i=Object(bs.I)(s,r.shape);i.forEach(e=>{a[e]=1});const o=Object(ms.a)(e,a),u=Object(Si.a)(o,Object(Wu.a)(r.shape,"float32"));return{x:()=>u}}},Ac={kernelName:Io.Tc,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(Ps.a)(e,Object(so.a)(Object(_s.a)(n)))}}},_c={kernelName:Io.Uc,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(Si.a)(Object(ho.a)(Object(jo.a)(1),Object(so.a)(n)),e)}}},Dc={kernelName:Io.Vc,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{reps:a}=n,s=()=>{let t=Object(Oo.a)(r);if(1===r.rank)for(let n=0;n<a[0];++n)t=Object(ls.a)(t,Object(Ji.a)(e,[n*r.shape[0]],[r.shape[0]]));else if(2===r.rank)for(let n=0;n<a[0];++n)for(let s=0;s<a[1];++s)t=Object(ls.a)(t,Object(Ji.a)(e,[n*r.shape[0],s*r.shape[1]],[r.shape[0],r.shape[1]]));else if(3===r.rank)for(let n=0;n<a[0];++n)for(let s=0;s<a[1];++s)for(let i=0;i<a[2];++i)t=Object(ls.a)(t,Object(Ji.a)(e,[n*r.shape[0],s*r.shape[1],i*r.shape[2]],[r.shape[0],r.shape[1],r.shape[2]]));else{if(4!==r.rank)throw new Error("Gradient for tile operation is not implemented for rank-"+`${r.rank} tensors yet.`);for(let n=0;n<a[0];++n)for(let s=0;s<a[1];++s)for(let i=0;i<a[2];++i)for(let o=0;o<a[3];++o)t=Object(ls.a)(t,Object(Ji.a)(e,[n*r.shape[0],s*r.shape[1],i*r.shape[2],o*r.shape[3]],[r.shape[0],r.shape[1],r.shape[2],r.shape[3]]))}return t};return{x:s}}},Fc={kernelName:Io.Yc,gradFunc:(e,t,n)=>{const r=n,{perm:a}=r,s=lu.h(a);return{x:()=>Object(yo.a)(e,s)}}},Rc={kernelName:Io.ad,gradFunc:(e,t,n)=>{const r=n,{axis:a}=r;return{value:()=>Object(uo.a)(e,a)}}},Mc={kernelName:Io.bd,inputsToSave:["segmentIds"],gradFunc:(e,t)=>{const[n]=t,r=()=>h(e,n);return{x:r}}},zc={kernelName:Io.cd,gradFunc:e=>({x:()=>Object(Oo.a)(e)})};var Lc=n(62);const Pc=[No,So,To,Eo,$o,Ao,_o,Do,Fo,Ro,Mo,zo,Vo,Go,Ho,qo,Ko,Xo,Yo,Zo,Qo,Jo,au,ru,ou,uu,cu,du,fu,mu,rc,bu,gu,yu,xu,vu,ku,wu,Ou,Iu,Nu,ju,Su,Tu,Cu,Eu,$u,Au,_u,Fu,Ru,Ru,Mu,Lu,Bu,Vu,Uu,Gu,Hu,qu,Ku,Xu,Zu,Qu,Ju,ec,ec,tc,nc,ac,sc,ic,oc,uc,cc,lc,dc,hc,pc,mc,bc,gc,yc,xc,wc,kc,Oc,Ic,Ic,Nc,Nc,jc,Tc,Sc,Cc,Ec,$c,Ac,_c,Dc,Fc,Rc,Mc,zc];for(const e of Pc)Object(Lc.e)(e);let Bc;class Wc extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Wc.prototype)}}class Vc extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Vc.prototype)}}class Uc extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Uc.prototype)}}class Gc extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Gc.prototype)}}class Hc extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Hc.prototype)}}let qc={};class Kc extends ss.serialization.Serializable{getConfig(){return{}}}class Xc extends Kc{constructor(e){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return Object(ss.tidy)(()=>{const t=F(e,this.axis),n=ss.clipByValue(t,0,this.maxValue);return ss.mul(e,ss.div(n,ss.add(p(),t)))})}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}Xc.className="MaxNorm",ss.serialization.registerClass(Xc);class Yc extends Kc{constructor(e){super(),this.defaultAxis=0,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return Object(ss.tidy)(()=>ss.div(e,ss.add(p(),F(e,this.axis))))}getConfig(){return{axis:this.axis}}}Yc.className="UnitNorm",ss.serialization.registerClass(Yc);class Zc extends Kc{apply(e){return ss.relu(e)}}Zc.className="NonNeg",ss.serialization.registerClass(Zc);class Qc extends Kc{constructor(e){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=null!=e.minValue?e.minValue:this.defaultMinValue,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.rate=null!=e.rate?e.rate:this.defaultRate,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return Object(ss.tidy)(()=>{const t=F(e,this.axis),n=ss.add(ss.mul(this.rate,ss.clipByValue(t,this.minValue,this.maxValue)),ss.mul(1-this.rate,t));return ss.mul(e,ss.div(n,ss.add(p(),t)))})}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}Qc.className="MinMaxNorm",ss.serialization.registerClass(Qc);const Jc={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"},el=["channelsFirst","channelsLast"],tl=["nearest","bilinear"],nl=["valid","same","causal"],rl=["max","avg"],al=["sum","mul","concat","ave"],sl=new Map,il=[],ol="/",ul=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/)
;const cl=["fanIn","fanOut","fanAvg"],ll=["normal","uniform","truncatedNormal"];class dl extends ss.serialization.Serializable{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class hl extends dl{apply(e,t){return Object(ss.zeros)(e,t)}}hl.className="Zeros",ss.serialization.registerClass(hl);class pl extends dl{apply(e,t){return Object(ss.ones)(e,t)}}pl.className="Ones",ss.serialization.registerClass(pl);class fl extends dl{constructor(e){if(super(),"object"!=typeof e)throw new Uc(`Expected argument of type ConstantConfig but got ${e}`);if(void 0===e.value)throw new Uc(`config must have value set but got ${e}`);this.value=e.value}apply(e,t){return Object(ss.tidy)(()=>Object(ss.mul)(Object(ss.scalar)(this.value),Object(ss.ones)(e,t)))}getConfig(){return{value:this.value}}}fl.className="Constant",ss.serialization.registerClass(fl);class ml extends dl{constructor(e){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,t){return Object(ss.randomUniform)(e,this.minval,this.maxval,t)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}ml.className="RandomUniform",ss.serialization.registerClass(ml);class bl extends dl{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if(t=t||"float32","float32"!==t&&"int32"!==t)throw new Gc(`randomNormal does not support dType ${t}.`);return me(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}bl.className="RandomNormal",ss.serialization.registerClass(bl);class gl extends dl{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if(t=t||"float32","float32"!==t&&"int32"!==t)throw new Gc(`truncatedNormal does not support dType ${t}.`);return Object(ss.truncatedNormal)(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}gl.className="TruncatedNormal",ss.serialization.registerClass(gl);class yl extends dl{constructor(e){super(),this.gain=null!=e.gain?e.gain:1}apply(e,t){return Object(ss.tidy)(()=>{if(2!==e.length||e[0]!==e[1])throw new Uc("Identity matrix initializer can only be used for 2D square matrices.");return Object(ss.mul)(this.gain,Object(ss.eye)(e[0]))})}getConfig(){return{gain:this.gain}}}yl.className="Identity",ss.serialization.registerClass(yl);class xl extends dl{constructor(e){if(super(),e.scale<0)throw new Uc(`scale must be a positive float. Got: ${e.scale}`);this.scale=null==e.scale?1:e.scale,this.mode=null==e.mode?"fanIn":e.mode,je(this.mode),this.distribution=null==e.distribution?"normal":e.distribution,Se(this.distribution),this.seed=e.seed}apply(e,t){const n=Te(e),r=n[0],a=n[1];let s=this.scale;if("fanIn"===this.mode?s/=Math.max(1,r):"fanOut"===this.mode?s/=Math.max(1,a):s/=Math.max(1,(r+a)/2),"normal"===this.distribution){const n=Math.sqrt(s);if(t=t||"float32","float32"!==t&&"int32"!==t)throw new Gc(`${this.getClassName()} does not support dType ${t}.`);return Object(ss.truncatedNormal)(e,0,n,t,this.seed)}{const n=Math.sqrt(3*s);return Object(ss.randomUniform)(e,-n,n,t)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}xl.className="VarianceScaling",ss.serialization.registerClass(xl);class vl extends xl{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return xl.className}}vl.className="GlorotUniform",ss.serialization.registerClass(vl);class wl extends xl{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return xl.className}}wl.className="GlorotNormal",ss.serialization.registerClass(wl);class kl extends xl{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return xl.className}}kl.className="HeNormal",ss.serialization.registerClass(kl);class Ol extends xl{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return xl.className}}Ol.className="HeUniform",ss.serialization.registerClass(Ol);class Il extends xl{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return xl.className}}Il.className="LeCunNormal",ss.serialization.registerClass(Il);class Nl extends xl{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return xl.className}}Nl.className="LeCunNormal",ss.serialization.registerClass(Nl);class jl extends dl{constructor(e){if(super(),this.DEFAULT_GAIN=1,this.gain=null==e.gain?this.DEFAULT_GAIN:e.gain,this.seed=e.seed,null!=this.seed)throw new Gc("Random seed is not implemented for Orthogonal Initializer yet.")}apply(e,t){return Object(ss.tidy)(()=>{if(e.length<2)throw new Gc("Shape must be at least 2D.");e[0]*e[1]>2e3&&console.warn("Orthogonal initializer is being called on a matrix with more "+`than 2000 (${e[0]*e[1]}) elements: `+"Slowness may result.");const t=e[0]>e[1]?[e[1],e[0]]:e,n=me(t,0,1,"float32");let r=ss.linalg.gramSchmidt(n);return e[0]>e[1]&&(r=r.transpose()),Object(ss.mul)(this.gain,r)})}getConfig(){return{gain:this.gain,seed:this.seed}}}jl.className="Orthogonal",ss.serialization.registerClass(jl);const Sl={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};let Tl=0;const Cl={},El="Variable";class $l{constructor(e,t="float32",n=El,r=!0,a=null){this.dtype=null==t?"float32":t,this.shape=e.shape,this.id=qe(),n=null==n?El:n,this.originalName=X(n),this.name=Y(this.originalName),this.trainable_=r,this.constraint=a,this.val=ss.variable(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),et(this.val,e),this.val.id!==e.id&&(this.val.assign(e),null!=this.constraint&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}}class Al{constructor(e){this.dtype=e.dtype,this.shape=e.shape,null!=e.shape?this.ndim=e.shape.length:this.ndim=e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}}class _l{constructor(e,t,n,r,a,s,i){this.dtype=e,this.shape=t,this.sourceLayer=n,this.inputs=r,this.callArgs=a,this.outputTensorIndex=i,this.id=qe(),null!=s&&(this.originalName=X(s),this.name=Y(this.originalName)),this.rank=t.length}}let Dl=0;class Fl{constructor(e,t){this.callArgs=t,this.id=Dl++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(const t of e.inboundLayers)null!=t&&t.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){const e=[];for(const t of this.inboundLayers)null!=t?e.push(t.name):e.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let Rl=0;class Ml extends ss.serialization.Serializable{constructor(e={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=Rl++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let t=e.name;if(!t){const e=this.getClassName();t=v(e)+"_"+Ke(e)}if(this.name=t,this.trainable_=null==e.trainable||e.trainable,null!=e.inputShape||null!=e.batchInputShape){let t;if(null!=e.batchInputShape)t=e.batchInputShape;else if(null!=e.inputShape){let n=null;null!=e.batchSize&&(n=e.batchSize),t=[n].concat(e.inputShape)}this.batchInputShape=t;let n=e.dtype;null==n&&(n=e.inputDType),null==n&&(n="float32"),this.dtype=n}null!=e.weights?this.initialWeights=e.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,t){return e.name+"_ib-"+t.toString()}getNodeAtIndex(e,t){if(0===this.inboundNodes.length)throw new Vc("The layer has never been called "+`and thus has no defined ${t}.`);if(this.inboundNodes.length<=e)throw new Uc(`Asked to get ${t} at node ${e}, `+`but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[e]}getInputAt(e){return y(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return y(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new Wc(`Layer ${this.name}`+' has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use `getInputAt(nodeIndex)` instead.');if(0===this.inboundNodes.length)throw new Wc(`Layer ${this.name}`+" is not connected, no input to return.");return y(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(0===this.inboundNodes.length)throw new Wc(`Layer ${this.name}`+" has no inbound nodes.");if(this.inboundNodes.length>1)throw new Wc(`Layer ${this.name}`+' has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use `getOutputAt(nodeIndex)` instead.');return y(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map(e=>e())}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach(t=>t.trainable=e),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter(e=>e.trainable):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter(e=>!e.trainable).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){if(e=x(e),null==this.inputSpec||0===this.inputSpec.length)return;const t=x(this.inputSpec);if(e.length!==t.length)throw new Uc(`Layer ${this.name} expects ${t.length} inputs, `+`but it received ${e.length} input tensors. `+`Input received: ${e}`);for(let n=0;n<e.length;n++){const r=e[n],a=t[n];if(null==a)continue;const s=r.rank;if(null!=a.ndim&&s!==a.ndim)throw new Uc(`Input ${n} is incompatible with layer ${this.name}: `+`expected ndim=${a.ndim}, found ndim=${s}`);if(null!=a.maxNDim&&s>a.maxNDim)throw new Uc(`Input ${n} is incompatible with layer ${this.name}`+`: expected max_ndim=${a.maxNDim}, found ndim=${s}`);if(null!=a.minNDim&&s<a.minNDim)throw new Uc(`Input ${n} is incompatible with layer ${this.name}`+`: expected min_ndim=${a.minNDim}, found ndim=${s}.`);if(null!=a.dtype&&r.dtype!==a.dtype)throw new Uc(`Input ${n} is incompatible with layer ${this.name} `+`: expected dtype=${a.dtype}, found dtype=${r.dtype}.`);if(a.axes){const e=r.shape;for(const t in a.axes){const r=Number(t),s=a.axes[t],i=r>=0?e[r]:e[e.length+r];if(null!=s&&-1===[s,null].indexOf(i))throw new Uc(`Input ${n} is incompatible with layer `+`${this.name}: expected axis ${r} of input shape to `+`have value ${s} but got shape ${e}.`)}}if(null!=a.shape)for(let e=0;e<a.shape.length;++e){const t=a.shape[e],s=r.shape[e];if(null!=t&&null!=s&&t!==s)throw new Uc(`Input ${n} is incompatible with layer `+`${this.name}: expected shape=${a.shape}, `+`found shape=${r.shape}.`)}}}call(e,t){return e}invokeCallHook(e,t){null!=this._callHook&&this._callHook(e,t)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,t){t=t||{},this.assertNotDisposed();const n=x(e);let r=!0;for(const e of n)if(!(e instanceof _l)){r=!1;break}let a=!0;for(const e of n)if(e instanceof _l){a=!1;break}if(r===a)throw new Uc("Arguments to apply() must be all SymbolicTensors or all Tensors");return q(this.name,()=>{if(!this.built){this.assertInputCompatibility(e);const t=[];for(const n of x(e))t.push(n.shape);this.build(y(t)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),null===this._refCount&&a&&(this._refCount=1)}if(this.assertInputCompatibility(e),a){let r=this.call(e,t);const a=x(r),s=[];for(let e of a)-1!==n.indexOf(e)&&(e=e.clone()),s.push(e);if(r=y(s),null!=this.activityRegularizer)throw new Gc("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return r}{const n=rt(e),r=this.computeOutputShape(n);let a;const s=at(e);if(this.warnOnIncompatibleInputShape(Array.isArray(e)?n[0]:n),a=null!=r&&r.length>0&&Array.isArray(r[0])?r.map((n,r)=>new _l(s,n,this,x(e),t,this.name,r)):new _l(s,r,this,x(e),t,this.name),this.addInboundNode(e,a,null,null,n,r,t),this._refCount++,null!=this.activityRegularizer)throw new Gc("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return a}})}warnOnIncompatibleInputShape(e){if(null!=this.batchInputShape)if(e.length!==this.batchInputShape.length)console.warn("The rank of the input tensor provided (shape: "+`${JSON.stringify(e)}) does not match that of the `+`batchInputShape (${JSON.stringify(this.batchInputShape)}) `+`of the layer ${this.name}`);else{let t=!1;this.batchInputShape.forEach((n,r)=>{null!=n&&null!=e[r]&&e[r]!==n&&(t=!0)}),t&&console.warn("The shape of the input tensor "+`(${JSON.stringify(e)}) does not `+`match the expectation of layer ${this.name}: `+`${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(null==this.inboundNodes||0===this.inboundNodes.length)throw new Wc(`The layer ${this.name} has never been called and thus has no `+"defined output shape.");const e=[];for(const t of this.inboundNodes){const n=JSON.stringify(t.outputShapes);-1===e.indexOf(n)&&e.push(n)}if(1===e.length){const e=this.inboundNodes[0].outputShapes;return Array.isArray(e)&&Array.isArray(e[0])&&1===e.length?e[0]:e}throw new Wc(`The layer ${this.name} has multiple inbound nodes with different `+'output shapes. Hence the notion of "output shape" is ill-defined for the layer.')}countParams(){if(!this.built)throw new Vc(`You tried to call countParams() on ${this.name}, `+"but the layer is not built yet. Build it first by calling build(batchInputShape).");return Je(this.weights)}build(e){this.built=!0}getWeights(e=!1){return tt(e?this.trainableWeights:this.weights)}setWeights(e){Object(ss.tidy)(()=>{const t=this.weights;if(t.length!==e.length)throw new Uc(`You called setWeights(weights) on layer "${this.name}" `+`with a weight list of length ${e.length}, `+`but the layer was expecting ${t.length} weights. `+`Provided weights: ${e}...`);if(0===t.length)return;const n=[],r=tt(t);for(let a=0;a<r.length;++a){const s=r[a],i=t[a],o=e[a];if(!ss.util.arraysEqual(s.shape,o.shape))throw new Uc(`Layer weight shape ${s.shape} `+`not compatible with provided weight shape ${o.shape}`);n.push([i,o])}nt(n)})}addWeight(e,t,n,r,a,s,i){if(-1!==this._addedWeightNames.indexOf(e))throw new Uc(`Duplicate weight name ${e} for layer ${this.name}`);this._addedWeightNames.push(e),null==n&&(n="float32"),this.fastWeightInitDuringBuild&&(r=$e("zeros"));const o=r.apply(t,n),u=new $l(o,n,e,s,i);return o.dispose(),null!=a&&this.addLoss(()=>a.apply(u.read())),null==s&&(s=!0),s?this._trainableWeights.push(u):this._nonTrainableWeights.push(u),u}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){null==e||Array.isArray(e)&&0===e.length||(e=x(e),void 0!==this._losses&&null!==this._losses&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,t){if(!this.supportsMasking){if(null!=t){if(!Array.isArray(t))throw new TypeError(`Layer ${this.name} does not support masking, `+"but was passed an inputMask.");t.forEach(e=>{if(null!=e)throw new TypeError(`Layer ${this.name} does not support masking, `+"but was passed an inputMask.")})}return null}return t}addInboundNode(e,t,n,r,a,s,i=null){const o=x(e);t=x(t),n=x(n),r=x(r),a=Ye(a),s=Ye(s);const u=[],c=[],l=[];for(const e of o)u.push(e.sourceLayer),c.push(e.nodeIndex),l.push(e.tensorIndex);new Fl({outboundLayer:this,inboundLayers:u,nodeIndices:c,tensorIndices:l,inputTensors:o,outputTensors:t,inputMasks:n,outputMasks:r,inputShapes:a,outputShapes:s},i);for(let e=0;e<t.length;e++)t[e].sourceLayer=this,t[e].nodeIndex=this.inboundNodes.length-1,t[e].tensorIndex=e}getConfig(){const e={name:this.name,trainable:this.trainable};return null!=this.batchInputShape&&(e.batchInputShape=this.batchInputShape),null!=this.dtype&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach(e=>e.dispose()),this.weights.length}assertNotDisposed(){if(0===this._refCount)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been `+"built yet.");if(null===this._refCount)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used `+"yet.");this.assertNotDisposed();let e=0;return 0==--this._refCount&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}}class zl extends Ml{constructor(e){if(super({dtype:e.dtype,name:null!=e.name?e.name:Ke("input").toString()}),null==e.batchSize&&(e.batchSize=null),null==e.sparse&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,null!=e.inputShape&&null!=e.batchInputShape)throw new Uc("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let t=e.batchInputShape;if(null==t){if(null==e.inputShape)throw new Uc("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");t=[e.batchSize].concat(e.inputShape)}else if(null!=e.batchSize)throw new Uc("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const n=e.dtype||"float32";this.batchInputShape=t,this.dtype=n,this.inputSpec=[{shape:t}];const r=new _l(this.dtype,this.batchInputShape,this,[],{},this.name);r.nodeIndex=0,r.tensorIndex=0,new Fl({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[r],outputTensors:[r],inputMasks:[null],outputMasks:[null],inputShapes:[t],outputShapes:[t]})}apply(e,t){throw new Uc("Cannot pass any input to an "+`InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}var Ll;zl.className="InputLayer",ss.serialization.registerClass(zl),function(e){e[e.SILENT=0]="SILENT",e[e.VERBOSE=1]="VERBOSE"}(Ll||(Ll={}));const Pl=125;class Bl{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,t){}async onEpochEnd(e,t){}async onBatchBegin(e,t){}async onBatchEnd(e,t){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}}class Wl{constructor(e,t=10){null==e&&(e=[]),this.callbacks=e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(const t of this.callbacks)t.setParams(e)}setModel(e){for(const t of this.callbacks)t.setModel(e)}async onEpochBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochBegin(e,t)}async onEpochEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochEnd(e,t)}async onBatchBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchBegin(e,t)}async onBatchEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchEnd(e,t)}async onTrainBegin(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainBegin(e)}async onTrainEnd(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainEnd(e)}}class Vl extends Bl{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,t){null==t&&(t={});const n=null==t.size?0:t.size;this.seen+=n;for(const e in t){const r=t[e];if("number"==typeof r)this.totals.hasOwnProperty(e)||(this.totals[e]=0),this.totals[e]=this.totals[e]+r*n;else{let t;e in this.totals?t=this.totals[e]:this.totals[e]=0;const a=Object(ss.tidy)(()=>Object(ss.add)(this.totals[e],Object(ss.mul)(r,n)));this.totals[e]=a,null!=t&&t.dispose()}}}async onEpochEnd(e,t){if(null!=t)for(const e of this.params.metrics)null!=this.totals[e]&&("number"==typeof this.totals[e]?t[e]=this.totals[e]/this.seen:Object(ss.tidy)(()=>{const n=Object(ss.mul)(Object(ss.div)(1,this.seen),this.totals[e]);t[e]=n,this.totals[e].dispose(),Object(ss.keep)(t[e])}))}}class Ul extends Bl{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,t){null==t&&(t={}),this.epoch.push(e);for(const e in t)null==this.history[e]&&(this.history[e]=[]),this.history[e].push(t[e])}async syncData(){const e=[],t=[],n=[];for(const r in this.history){const a=this.history[r];for(let s=0;s<a.length;++s)if("number"!=typeof a[s]){const i=a[s];e.push(i.data()),t.push(r),n.push(s)}}const r=await Promise.all(e);for(let e=0;e<r.length;++e){const a=this.history[t[e]][n[e]];a.dispose(),this.history[t[e]][n[e]]=r[e][0]}}}class Gl extends Bl{constructor(e,t){if(super(),this.currentEpoch=0,this.yieldEvery=t||"auto","auto"===this.yieldEvery&&(this.yieldEvery=Pl),"never"===this.yieldEvery&&null!=e.onYield)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");ss.util.isNumber(this.yieldEvery)&&(this.maybeWait=_(this.maybeWait.bind(this),this.yieldEvery)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,t,n){const r=[];null!=this.yield&&(await ot(n),r.push(this.yield(e,t,n))),r.push(Object(ss.nextFrame)()),await Promise.all(r)}async onEpochBegin(e,t){this.currentEpoch=e,null!=this.epochBegin&&(await ot(t),await this.epochBegin(e,t))}async onEpochEnd(e,t){const n=[];null!=this.epochEnd&&(await ot(t),n.push(this.epochEnd(e,t))),"epoch"===this.yieldEvery&&n.push(Object(ss.nextFrame)()),await Promise.all(n)}async onBatchBegin(e,t){null!=this.batchBegin&&(await ot(t),await this.batchBegin(e,t))}async onBatchEnd(e,t){const n=[];null!=this.batchEnd&&(await ot(t),n.push(this.batchEnd(e,t))),"batch"===this.yieldEvery?n.push(Object(ss.nextFrame)()):ss.util.isNumber(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,e,t)),await Promise.all(n)}async onTrainBegin(e){null!=this.trainBegin&&(await ot(e),await this.trainBegin(e))}async onTrainEnd(e){null!=this.trainEnd&&(await ot(e),await this.trainEnd(e))}}class Hl{constructor(){}static registerCallbackConstructor(e,t){ss.util.assert(e>=0&&Number.isInteger(e),()=>"Verbosity level is expected to be an integer >= 0, "+`but got ${e}`),Hl.checkForDuplicate(t),null==Hl.constructors[e]&&(Hl.constructors[e]=[]),Hl.constructors[e].push(t)}static checkForDuplicate(e){for(const t in Hl.constructors){const n=Hl.constructors[+t];n.forEach(t=>{if(t===e)throw new Uc("Duplicate callback constructor.")})}}static clear(){Hl.constructors={}}static createCallbacks(e){const t=[];for(const n in Hl.constructors){const r=+n;e>=r&&t.push(...Hl.constructors[r])}return t.map(e=>new e)}}Hl.constructors={};const ql={meanSquaredError:pt,meanAbsoluteError:ft,meanAbsolutePercentageError:mt,meanSquaredLogarithmicError:bt,squaredHinge:gt,hinge:yt,categoricalHinge:xt,logcosh:vt,categoricalCrossentropy:wt,sparseCategoricalCrossentropy:kt,binaryCrossentropy:It,kullbackLeiblerDivergence:Nt,poisson:jt,cosineProximity:St},Kl=pt,Xl=pt,Yl=ft,Zl=ft,Ql=mt,Jl=mt,ed=wt,td=St,nd=kt,rd={binaryAccuracy:Ct,categoricalAccuracy:Et,precision:Dt,categoricalCrossentropy:ed,sparseCategoricalCrossentropy:nd,mse:Kl,MSE:Xl,mae:Yl,MAE:Zl,mape:Ql,MAPE:Jl,cosine:td},ad=1048576,sd="3.5.0";class id{constructor(e){if(this.id2Value={},this.id2Mask={},this.name2Id={},e instanceof id)for(const t in e.id2Value)this.id2Value[t]=e.id2Value[t],t in e.id2Mask&&(this.id2Mask[t]=e.id2Mask[t]);else{if(null==e)return;for(const t of e)this.add(t.key,t.value)}}add(e,t,n){if(null!=this.id2Value[e.id])throw new Uc(`Duplicate key: name=${e.name}, id=${e.id}`);return this.id2Value[e.id]=Qt(e,t),this.name2Id[e.name]=e.id,null!=n&&(this.id2Mask[e.id]=n),this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return null!=this.id2Value[e.id]}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof _l){if(null==this.id2Value[e.id])throw new Uc(`Nonexistent key: ${e.name}`);return this.id2Value[e.id]}{const t=this.name2Id[e];if(null==t)throw new Uc(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Value[t]}}getMask(e){if(e instanceof _l){if(null==this.id2Value[e.id])throw new Uc(`Nonexistent key: ${e.name}`);return this.id2Mask[e.id]}{const t=this.name2Id[e];if(null==t)throw new Uc(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Mask[t]}}disposeMasks(){null!=this.id2Mask&&Object(ss.dispose)(this.id2Mask)}}const od={},ud={};class cd extends Ml{constructor(e){if(super({}),this.containerNodes=new Set,this.name=e.name,null==this.name){const e=this.getClassName().toLowerCase();this.name=Ke(e)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(e.inputs)?this.inputs=e.inputs.slice():this.inputs=[e.inputs],Array.isArray(e.outputs)?this.outputs=e.outputs.slice():this.outputs=[e.outputs],S(this.inputs).length!==this.inputs.length)throw new Uc("The list of inputs passed to the model is redundant. All inputs should only appear once. Found: "+`${this.inputs.map(e=>e.name)}`);S(this.outputs).length!==this.outputs.length&&console.warn("The list of outputs passed to the model is redundant. All outputs should only appear once. Found: "+`${this.outputs.map(e=>e.name)}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const e of this.outputs){const t=e.sourceLayer,n=e.nodeIndex,r=e.tensorIndex;this.outputLayers.push(t),this.outputLayersNodeIndices.push(n),this.outputLayersTensorIndices.push(r)}for(const e of this.inputs){const t=e.sourceLayer,n=e.nodeIndex,r=e.tensorIndex;b(0===n,"input layer has >1 nodes"),b(0===r,"input layer has >1 tensors"),this.inputLayers.push(t),this.inputLayersNodeIndices.push(n),this.inputLayersTensorIndices.push(r)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let t=0;t<this.inputLayers.length;t++){const n=this.inputLayers[t];if(!(n instanceof zl))throw new TypeError("Input layers to a LayersModel must be InputLayer objects. "+`Received inputs: ${e.inputs}. `+`Input ${t} (0-based) originates `+`from layer type ${n.getClassName()}.`);this.inputNames.push(n.name),this.feedInputShapes.push(n.batchInputShape),this.feedInputNames.push(n.name)}for(const e of this.outputLayers)this.outputNames.push(e.name);this.internalInputShapes=this.inputs.map(e=>e.shape),this.internalOutputShapes=this.outputs.map(e=>e.shape);const t={},n={},r={},a={},s={},i=[],o=(e,t,n,r,a,u)=>{null!=r&&null!=a&&null!=u||(r=e.sourceLayer,a=e.nodeIndex,u=e.tensorIndex);const c=r.inboundNodes[a];if(-1!==n.indexOf(c))throw new Vc(`The tensor ${e.name} at layer "${r.name}" `+"is part of a cycle.");if(-1!==t.indexOf(c))return;this.containerNodes.add(cd.nodeKey(r,a)),r.id in s||(s[r.id]=Object.keys(s).length),-1===n.indexOf(c)&&n.push(c);const l=c.inboundLayers.length;for(let e=0;e<l;e++){const r=c.inputTensors[e],a=c.inboundLayers[e],s=c.nodeIndices[e],i=c.tensorIndices[e];o(r,t,n,a,s,i)}for(t.push(c);n.indexOf(c)>=0;)n.splice(n.indexOf(c),1);i.push(c)},u=[],c=[];for(const e of this.outputs)o(e,u,c);const l=i.slice().reverse();for(const e of l){n[e.id]=e,e.id in t||(t[e.id]=0);let s=t[e.id];const i=null==r[e.outboundLayer.id]?0:r[e.outboundLayer.id];s=Math.max(s,i),r[e.outboundLayer.id]=s,a[e.outboundLayer.id]=e.outboundLayer,t[e.id]=s;for(let r=0;r<e.inboundLayers.length;r++){const a=e.inboundLayers[r],i=e.nodeIndices[r],o=a.inboundNodes[i],u=null==t[o.id]?0:t[o.id];t[o.id]=Math.max(s+1,u),n[o.id]=o}}const d={};for(const e in t){const r=t[e];r in d||(d[r]=[]),d[r].push(n[e])}const h={};for(const e in r){const t=r[e];t in h||(h[t]=[]),h[t].push(a[e])}let p=Object.keys(h).map(e=>parseInt(e,10)).sort(j);this.layers=[];for(const e of p){const t=h[e];t.sort((e,t)=>{const n=s[e.id],r=s[t.id];return n<r?-1:n>r?1:0});for(const e of t)e instanceof cd&&this.internalContainerRefs.push(e),this.layers.push(e)}this.layersByDepth=h,p=Object.keys(d).map(e=>parseInt(e,10)).sort(j);const f=this.inputs.slice(),m=[];for(const e of p)for(const t of d[e]){const e=t.outboundLayer;if(null!=e){for(const n of t.inputTensors)if(-1===f.indexOf(n))throw new Vc(`Graph disconnected: cannot obtain value for tensor ${n}`+` at layer "${e.name}". `+"The following previous layers were accessed without "+`issue: ${m}`);for(const e of t.outputTensors)f.push(e);m.push(e.name)}}this.nodesByDepth=d;const g=this.layers.map(e=>e.name);for(const e of g){const t=g.filter(t=>t===e).length;if(1!==t)throw new Vc(`The name "${e}" is used ${t} times `+"in the model. All layer names should be unique. Layer names: "+JSON.stringify(g))}this.outboundNodes=[],this.inboundNodes=[],new Fl({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map(e=>null),outputMasks:this.outputs.map(e=>null),inputShapes:this.inputs.map(e=>e.shape),outputShapes:this.outputs.map(e=>e.shape)}),this.built=!0,this._refCount=1}assertNotDisposed(){if(0===this._refCount)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();const e={refCountAfterDispose:null,numDisposedVariables:0};if(0==--this._refCount){for(const t of this.layers)e.numDisposedVariables+=t.dispose().numDisposedVariables;for(const t of this.internalContainerRefs)e.numDisposedVariables+=t.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach(t=>{t._trainableWeights.forEach(t=>t.trainable=e)}),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new Uc("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(const t of this.layers)e=e.concat(t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.layers)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.layers)t.push(...e.trainableWeights);return t.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e,t=!0){const n={};let r=0;for(const e of this.layers)for(const t of e.weights){if(null!=n[t.originalName])throw new Uc(`Duplicate weight name: ${t.originalName}`);n[t.originalName]=t,r++}const a=[];for(const r in e){let s=r;if(null==n[r]){const e=r.split("/"),t=e.slice(0,-2).concat([e[e.length-1]]);s=t.join("/")}
if(null!=n[s])a.push([n[s],e[r]]);else if(t)throw new Uc(`Provided weight data has no target variable: ${r}`);delete n[s]}if(t){const e=[];for(const t in n)e.push(t);if(e.length>0)throw new Uc(`${e.length} of ${r} weights are not set: `+`${e}`)}nt(a)}updatedConfig(){const e=this.getConfig(),t={};return t.className=this.getClassName(),t.config=e,t.kerasVersion=`tfjs-layers ${sd}`,t.backend="TensorFlow.js",t}toJSON(e,t=!0){const n=Zt(this.updatedConfig());return t?JSON.stringify(n):n}call(e,t){return Object(ss.tidy)(()=>{e=x(e);const n=new id;for(let t=0;t<this.inputs.length;++t)n.add(this.inputs[t],e[t]);return Jt(this.outputs,n,t)})}computeMask(e,t){return Object(ss.tidy)(()=>{let n;return e=x(e),n=null==t?m(null,e.length):x(t),this.runInternalGraph(e,n)[1]})}computeOutputShape(e){const t=Ye(e);if(t.length!==this.inputLayers.length)throw new Uc(`Invalid inputShape argument ${e}: `+`model has ${this.inputLayers.length} tensor inputs.`);const n={};for(let e=0;e<t.length;e++){const r=this.inputLayers[e],a=t[e],s=r.name+"_0_0";n[s]=a}const r=Object.keys(this.nodesByDepth).map(e=>parseInt(e,10)).sort(j);if(r.length>1)for(const e of r){const t=this.nodesByDepth[e];for(const e of t){const t=e.outboundLayer;if(-1!==this.inputLayers.map(e=>e.id).indexOf(t.id))continue;const r=[];for(let t=0;t<e.inboundLayers.length;t++){const a=e.inboundLayers[t],s=e.nodeIndices[t],i=e.tensorIndices[t],o=`${a.name}_${s}_${i}`,u=n[o];r.push(u)}const a=t.computeOutputShape(y(r)),s=Ye(a),i=t.inboundNodes.indexOf(e);for(let e=0;e<s.length;e++){const r=`${t.name}_${i}_${e}`;n[r]=s[e]}}}const a=[],s=[];for(let e=0;e<this.outputLayers.length;e++){const t=this.outputLayers[e],n=this.outputLayersNodeIndices[e],r=this.outputLayersTensorIndices[e],a=`${t.name}_${n}_${r}`;s.push(a)}for(let e=0;e<s.length;e++){const t=s[e];b(t in n),a.push(n[t])}return y(a)}runInternalGraph(e,t){null==t&&(t=m(null,e.length));const n={};for(let r=0;r<this.inputs.length;++r){const a=this.inputs[r],s=e[r],i=t[r];n[a.id]=[s,i]}const r=Object.keys(this.nodesByDepth).map(e=>parseInt(e,10)).sort(j);for(const e of r){const t=this.nodesByDepth[e];for(const e of t){const t=e.outboundLayer,r=e.inputTensors,a=e.outputTensors,s=new Array;for(const e of r)e.id in n&&s.push(n[e.id]);if(s.length===r.length){let r,i,o,u,c={};if(null!=e.callArgs&&(c=e.callArgs),1===s.length){const[e,n]=s[0];null==c.mask&&(c.mask=n),o=x(t.call(e,c)),u=x(t.computeMask(e,n)),r=[e],i=[n]}else r=s.map(e=>e[0]),i=s.map(e=>e[1]),null==c.mask&&(c.mask=i),o=x(t.call(r,c)),u=x(t.computeMask(r,i));if(t.activityRegularizer)throw new Gc("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let e=0;e<a.length;++e){const t=a[e],r=o[e],s=u[e];n[t.id]=[r,s]}}}}const a=[],s=[],i=[];for(const e of this.outputs){b(e.id in n,`Could not compute output ${e.name} : ${e.id}`);const[t,r]=n[e.id];i.push(t.shape),a.push(t),s.push(r)}return[a,s,i]}buildNodeConversionMap(e){const t={};let n;for(const e of this.layers){n=e instanceof cd?1:0;for(let r=0;r<e.inboundNodes.length;r++){const a=cd.nodeKey(e,r);this.containerNodes.has(a)&&(t[a]=n,n+=1)}}return t}getLayer(e,t){if(null!=t){if(this.layers.length<=t)throw new Uc(`Was asked to retrieve layer at index ${t}, but model only `+`has ${this.layers.length} layer(s).`);return this.layers[t]}if(null==e)throw new Uc("Provide either a layer name or layer index");for(const t of this.layers)if(t.name===e)return t;throw new Uc(`No such layer: ${e}`)}calculateLosses(){return Object(ss.tidy)(()=>{const e=[];for(const t of this.layers)for(let n=0;n<t.inboundNodes.length;++n){const r=cd.nodeKey(t,n);this.containerNodes.has(r)&&e.push(...t.calculateLosses())}return e})}getConfig(){const e={name:this.name},t=this.buildNodeConversionMap(this.layers),n=[];for(const e of this.layers){const r=e.getClassName(),a=e.getConfig(),s=[];for(let n=0;n<e.inboundNodes.length;n++){const r=e.inboundNodes[n],a=cd.nodeKey(e,n);let i={};if(this.containerNodes.has(a)){if(r.callArgs)try{JSON.stringify(r.callArgs),i=r.callArgs}catch(t){console.warn(`Layer ${e.name} was passed `+"non-serializable keyword arguments: "+`${r.callArgs}. They will not be included `+"in the serialized model (and thus will be missing at deserialization time)."),i={}}if(r.inboundLayers.length>0){const e=[];for(let n=0;n<r.inboundLayers.length;n++){const a=r.inboundLayers[n],s=r.nodeIndices[n],o=r.tensorIndices[n],u=cd.nodeKey(a,s);let c=t[u];null==c&&(c=0),e.push([a.name,c,o,i])}s.push(e)}}}const i={};i.name=e.name,i.className=r,i.config=a,i.inboundNodes=s,n.push(i)}e.layers=n;const r=[];for(let e=0;e<this.inputLayers.length;e++){const n=this.inputLayers[e],a=this.inputLayersNodeIndices[e],s=cd.nodeKey(n,a);if(!this.containerNodes.has(s))continue;let i=t[s];null==i&&(i=0);const o=this.inputLayersTensorIndices[e];r.push([n.name,i,o])}e.inputLayers=r;const a=[];for(let e=0;e<this.outputLayers.length;e++){const n=this.outputLayers[e],r=this.outputLayersNodeIndices[e],s=cd.nodeKey(n,r);if(!this.containerNodes.has(s))continue;let i=t[s];null==i&&(i=0);const o=this.outputLayersTensorIndices[e];a.push([n.name,i,o])}return e.outputLayers=a,e}static fromConfig(e,t,n={},r=!1){function a(e,t){e.name in u?u[e.name].push(t):u[e.name]=[t]}function s(e,t){const n=[];let r;for(const s of t){const i=s[0],u=s[1],c=s[2];if(r=null==s[3]?{}:s[3],!(i in o))return void a(e,t);const l=o[i];if(l.inboundNodes.length<=u)return void a(e,t);const d=l.inboundNodes[u];n.push(d.outputTensors[c])}n.length>0&&e.apply(y(n),r)}function i(e){const n=e.name,s=dt(e,null!=t.customObjects?t.customObjects:{});s.setFastWeightInitDuringBuild(r),o[n]=s;const i=e.inboundNodes;i.forEach(e=>{if(!(e instanceof Array))throw new Uc(`Corrupted configuration, expected array for nodeData: ${e}`);a(s,e)})}const o={},u={},c=t.name,l=t.layers;for(const e of l)i(e);for(;!T(u);)for(const e of l){const t=o[e.name];if(t.name in u){const e=u[t.name];delete u[t.name];for(const n of e)s(t,n)}}const d=[],h=[],p=t.inputLayers;for(const e of p){const t=e[0],n=e[1],r=e[2];b(t in o);const a=o[t],s=a.inboundNodes[n].outputTensors;d.push(s[r])}const f=t.outputLayers;for(const e of f){const t=e[0],n=e[1],r=e[2];b(t in o);const a=o[t],s=a.inboundNodes[n].outputTensors;h.push(s[r])}return new e({inputs:d,outputs:h,name:c})}get stateful(){if(this._stateful)throw new Uc("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const e of this.layers)if(e.stateful)return!0;return!1}resetStates(){Object(ss.tidy)(()=>{this.layers.forEach(e=>{e.stateful&&e.resetStates()})})}}const ld=32,dd="layers-model";class hd extends cd{constructor(e){super(e),this.isTraining=!1}summary(e,t,n=console.log){if(!this.built)throw new Uc("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");Vt(this,e,t,n)}compile(e){if(null==e.loss&&(e.loss=[]),this.loss=e.loss,"string"==typeof e.optimizer)this.optimizer_=Pt(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof ss.Optimizer))throw new Uc("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let t=[];if(Array.isArray(e.loss)||"string"==typeof e.loss||"function"==typeof e.loss)if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new Uc("When passing an Array as loss, it should have one entry per "+`model output. The model has ${this.outputs.length} output(s), `+`but you passed loss=${e.loss}.`);const n=e.loss;t=n.map(e=>Tt(e))}else{const n=Tt(e.loss);this.outputs.forEach(e=>{t.push(n)})}else{e.loss=e.loss;for(const t in e.loss)if(-1===this.outputNames.indexOf(t))throw new Uc(`Unknown entry in loss dictionary: "${t}". `+`Only expected the following keys: ${this.outputNames}`);for(const n of this.outputNames)null==e.loss[n]&&console.warn(`Output "${n}" is missing from loss dictionary. We assume `+"this was done on purpose, and we will not be expecting data "+`to be passed to ${n} during training`),t.push(Tt(e.loss[n]))}this.lossFunctions=t,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let e=0;e<this.outputs.length;++e){const t=this.internalOutputShapes[e],n=this.outputNames[e];this.feedOutputNames.push(n),this.feedOutputShapes.push(t),this.feedLossFns.push(this.lossFunctions[e])}const n=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],q("loss",()=>{for(let e=0;e<this.outputs.length;++e){if(-1!==n.indexOf(e))continue;const t=this.lossFunctions[e];this.outputs.length>1&&(this.metricsTensors.push([t,e]),this.metricsNames.push(this.outputNames[e]+"_loss"))}});const r=An(e.metrics,this.outputNames),a=(e,t,n)=>{this.outputNames.length>1&&(t=this.outputNames[e]+"_"+t),this.metricsNames.push(t),this.metricsTensors.push([n,e])};q("metric",()=>{for(let e=0;e<this.outputs.length;++e){if(-1!==n.indexOf(e))continue;const t=r[e],s=t=>{const n="";let r,s,i;for(const o of t){if("string"==typeof o&&-1!==["accuracy","acc","crossentropy","ce"].indexOf(o)){const t=this.internalOutputShapes[e];let a;1===t[t.length-1]||this.lossFunctions[e]===It?-1!==["accuracy","acc"].indexOf(o)?s=Ct:-1!==["crossentropy","ce"].indexOf(o)&&(s=Rt):this.lossFunctions[e]===kt?-1!==["accuracy","acc"].indexOf(o)?s=Mt:-1!==["crossentropy","ce"].indexOf(o)&&(s=nd):-1!==["accuracy","acc"].indexOf(o)?s=Et:-1!==["crossentropy","ce"].indexOf(o)&&(s=ed),-1!==["accuracy","acc"].indexOf(o)?a="acc":-1!==["crossentropy","ce"].indexOf(o)&&(a="ce"),i=s,r=n+a}else{const e=zt(o);i=e,r=n+Lt(o)}let t;q(r,()=>{t=i}),a(e,r,t)}};s(t)}}),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){null!=this.collectedTrainableWeights&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,t,n={}){const r=null==n.batchSize?32:n.batchSize;gn(r);const a=!0,s=this.standardizeUserDataXY(e,t,a,r);try{const a=s[0].concat(s[1]);this.makeTestFunction();const i=this.testFunction,o=this.testLoop(i,a,r,n.verbose,n.steps);return y(o)}finally{In(s[0],e),In(s[1],t)}}async evaluateDataset(e,t){return this.makeTestFunction(),bn(this,e,t)}checkNumSamples(e,t,n,r="steps"){let a;if(null!=n){if(a=null,null!=t)throw new Uc(`If ${r} is set, batchSize must be null or undefined.`+`Got batchSize = ${t}`)}else{if(null==e)throw new Uc("Either the input data should have a defined shape, or "+`${r} shoud be specified.`);a=Array.isArray(e)?e[0].shape[0]:e.shape[0]}return a}execute(e,t){if(Array.isArray(t)&&0===t.length)throw new Uc("`outputs` is an empty Array, which is not allowed.");const n=Array.isArray(t),r=n?t:[t],a=this.retrieveSymbolicTensors(r),s=new id;if(e instanceof ss.Tensor&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new Uc(`The number of inputs provided (${e.length}) `+"does not match the number of inputs of this model "+`(${this.inputs.length}).`);for(let t=0;t<this.inputs.length;++t)s.add(this.inputs[t],e[t])}else for(const t of this.inputs){const n=e[t.name];if(null==n)throw new Uc(`No value is provided for the model's input ${t.name}`);s.add(t,n)}const i=Jt(a,s);return n?i:i[0]}retrieveSymbolicTensors(e){const t=m(null,e.length);let n=e.length;for(const r of this.layers){const a=Array.isArray(r.output)?r.output:[r.output],s=a.map(e=>e.name);for(let r=0;r<e.length;++r){const i=s.indexOf(e[r]);if(-1!==i&&(t[r]=a[i],n--),0===n)break}if(0===n)break}if(n>0){const n=[];throw t.forEach((t,r)=>{null==t&&n.push(e[r])}),new Uc("Cannot find SymbolicTensors for output name(s): "+`${JSON.stringify(n)}`)}return t}predictLoop(e,t=32,n=!1){return ss.tidy(()=>{const r=this.checkNumSamples(e);if(n)throw new Gc("Verbose predictLoop() is not implemented yet.");const a=vn(r,t),s=this.outputs.map(e=>[]);for(let t=0;t<a.length;++t){const n=ss.tidy(()=>{const n=a[t][0],r=a[t][1],s=yn(e,n,r),i=[];if(Array.isArray(s))for(let e=0;e<s.length;++e)i.push({key:this.inputs[e],value:s[e]});else i.push({key:this.inputs[0],value:s});const o=new id(i);return Jt(this.outputs,o)});n.forEach((e,t)=>s[t].push(e))}return y(s.map(e=>ss.concat(e,0)))})}predict(e,t={}){const n=On(e);$n(n,this.inputNames,this.feedInputShapes,!1);try{const r=null==t.batchSize?32:t.batchSize;return gn(r),this.predictLoop(n,r)}finally{In(n,e)}}predictOnBatch(e){$n(e,this.inputNames,this.feedInputShapes,!0);const t=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,t)}standardizeUserDataXY(e,t,n=!0,r){if(null==this.optimizer_)throw new Vc("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const a=[];for(let e=0;e<this.feedOutputShapes.length;++e){const t=this.feedOutputShapes[e],n=this.feedLossFns[e];n===kt?a.push(t.slice(0,t.length-1).concat([1])):a.push(t)}if(e=Tn(e,this.feedInputNames,this.feedInputShapes,!1,"input"),t=Tn(t,this.feedOutputNames,a,!1,"target"),Cn(e,t,null),En(t,this.feedLossFns,this.feedOutputShapes),this.stateful&&null!=r&&r>0&&e[0].shape[0]%r!=0)throw new Uc("In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size "+`${r}. Found: ${e[0].shape[0]} sample(s).`);return[e,t]}async standardizeUserData(e,t,n,r,a=!0,s){const[i,o]=this.standardizeUserDataXY(e,t,a,s);if(null!=n)throw new Error("sample weight is not supported yet.");let u=null;if(null!=r){const e=sn(r,this.outputNames);u=[];for(let t=0;t<e.length;++t)u.push(await on(o[t],null,e[t]))}return[i,o,u]}testLoop(e,t,n,r=0,a){return ss.tidy(()=>{const s=this.checkNumSamples(t,n,a,"steps"),i=[];if(r>0)throw new Gc("Verbose mode is not implemented yet.");if(null!=a)throw new Gc("steps mode in testLoop() is not implemented yet");{const r=vn(s,n),a=Object(ss.tensor1d)(re(0,s));for(let n=0;n<r.length;++n){const s=r[n][0],o=r[n][1],u=ce(a,s,o-s),c=xn(t,u),l=e(c);if(0===n)for(let e=0;e<l.length;++e)i.push(Object(ss.scalar)(0));for(let e=0;e<l.length;++e){const t=l[e];i[e]=ss.add(i[e],ss.mul(o-s,t))}}for(let e=0;e<i.length;++e)i[e]=ss.div(i[e],s)}return i})}getDedupedMetricsNames(){const e=this.metricsNames,t=[];for(let n=0;n<e.length;++n){const r=e[n];let a=r;if(g(e,r)>1){const t=g(e.slice(0,n),r);a+=`_${t}`}t.push(a)}return t}makeTrainFunction(){return e=>{const t=[],n=e.slice(0,this.inputs.length),r=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),a=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+2*this.outputs.length),s=[],i=()=>{const e=[];for(let t=0;t<this.inputs.length;++t)e.push({key:this.inputs[t],value:n[t]});const i=new id(e),o=Jt(this.outputs,i,{training:!0});let u;for(let e=0;e<this.lossFunctions.length;++e){const n=this.lossFunctions[e];let s=n(r[e],o[e]);null!=a[e]&&(s=un(s,a[e]));const i=ss.mean(s);t.push(i),u=0===e?s:ss.add(u,s)}for(let e=0;e<this.metricsTensors.length;++e){let n;if(this.outputs.length>1&&e<this.outputs.length)n=t[e];else{const t=this.metricsTensors[e][0],a=this.metricsTensors[e][1];n=ss.mean(t(r[a],o[a]))}ss.keep(n),s.push(n)}return u=ss.mean(u),this.calculateLosses().forEach(e=>{u=ss.add(u,e)}),u},o=this.collectedTrainableWeights.map(e=>e.read()),u=!0,c=this.optimizer_.minimize(i,u,o);return[c].concat(s)}}makeTestFunction(){this.testFunction=(e=>ss.tidy(()=>{const t=[];let n;const r=e.slice(0,this.inputs.length),a=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),s=[];for(let e=0;e<this.inputs.length;++e)s.push({key:this.inputs[e],value:r[e]});const i=new id(s),o=Jt(this.outputs,i);for(let e=0;e<this.lossFunctions.length;++e){const r=this.lossFunctions[e],s=ss.mean(r(a[e],o[e]));n=0===e?s:ss.add(n,s),t.push(n)}for(let e=0;e<this.metricsTensors.length;++e){const n=this.metricsTensors[e][0],r=this.metricsTensors[e][1],s=ss.mean(n(a[r],o[r]));t.push(s)}return t}))}async fit(e,t,n={}){return kn(this,e,t,n)}async fitDataset(e,t){return hn(this,e,t)}async trainOnBatch(e,t){const n=await this.standardizeUserData(e,t),r=n[0],a=n[1],s=this.makeTrainFunction(),i=s(r.concat(a)),o=[];for(const e of i){const t=await e.data();o.push(t[0])}return ss.dispose(i),y(o)}getNamedWeights(e){const t=[],n=null!=e&&e.trainableOnly,r=n?this.trainableWeights:this.weights,a=this.getWeights(n);for(let e=0;e<r.length;++e)n&&!r[e].trainable||t.push({name:r[e].originalName,tensor:a[e]});return t}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){const e=super.dispose();if(0===e.refCountAfterDispose&&null!=this.optimizer&&this.isOptimizerOwned){const t=ss.memory().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=t-ss.memory().numTensors}return e}getLossIdentifiers(){let e;if("string"==typeof this.loss)e=v(this.loss);else if(Array.isArray(this.loss)){for(const e of this.loss)if("string"!=typeof e)throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map(e=>v(e))}else{const t=Object.keys(this.loss);e={};const n=this.loss;for(const r of t){if("string"!=typeof n[r])throw new Error("Serialization of non-string loss is not supported.");e[r]=v(n[r])}}return e}getMetricIdentifiers(){if("string"==typeof this.metrics||"function"==typeof this.metrics)return[v(Lt(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map(e=>v(Lt(e)));{const e={};for(const t in this.metrics)e[t]=v(Lt(this.metrics[t]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(null!=e.weighted_metrics)throw new Error("Loading weight_metrics is not supported yet.");if(null!=e.loss_weights)throw new Error("Loading loss_weights is not supported yet.");if(null!=e.sample_weight_mode)throw new Error("Loading sample_weight_mode is not supported yet.");const t=Yt(e.optimizer_config),n=dt(t);let r,a;if("string"==typeof e.loss)r=w(e.loss);else if(Array.isArray(e.loss))r=e.loss.map(e=>w(e));else if(null!=e.loss){r={};for(const t in e.loss)r[t]=w(e.loss[t])}if(Array.isArray(e.metrics))a=e.metrics.map(e=>w(e));else if(null!=e.metrics){a={};for(const t in e.metrics)a[t]=w(e.metrics[t])}this.compile({loss:r,metrics:a,optimizer:n})}async save(e,t){if("string"==typeof e){const t=ss.io.getSaveHandlers(e);if(0===t.length)throw new Uc(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw new Uc(`Found more than one (${t.length}) save handlers for `+`URL '${e}'`);e=t[0]}if(null==e.save)throw new Uc("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const n=await ss.io.encodeWeights(this.getNamedWeights(t)),r=!1,a=null,s=this.toJSON(a,r),i={modelTopology:s,format:dd,generatedBy:`TensorFlow.js tfjs-layers v${sd}`,convertedBy:null},o=null!=t&&t.includeOptimizer;if(o&&null!=this.optimizer){i.trainingConfig=this.getTrainingConfig();const e="optimizer",{data:t,specs:r}=await ss.io.encodeWeights(await this.optimizer.getWeights(),e);n.specs.push(...r),n.data=ss.io.concatenateArrayBuffers([n.data,t])}if(null!=this.userDefinedMetadata){const e=!0;Bt(this.userDefinedMetadata,this.name,e),i.userDefinedMetadata=this.userDefinedMetadata}return i.weightData=n.data,i.weightSpecs=n.specs,e.save(i)}setUserDefinedMetadata(e){Bt(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}}hd.className="Model",ss.serialization.registerClass(hd);class pd extends hd{}pd.className="Functional",ss.serialization.registerClass(pd);class fd extends hd{constructor(e){if(super({inputs:[],outputs:[]}),e=e||{},this.trainable=!0,this.built=!1,this.name=null!=e.name?e.name:Ke("sequential_"),null!=e.layers)for(const t of e.layers)this.add(t)}checkShape(e){const t=e.inboundNodes[0].outputTensors[0].shape;if(t.some(e=>e<0))throw new Uc("Negative dimension size caused by adding layer "+`${e.name} with input shape [`+`${e.inboundNodes[0].inputTensors[0].shape}]`)}add(e){const t=e instanceof fd||e instanceof hd;let n;if(t){if(n=e,1!==n.outputs.length)throw new Uc("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(1!==n.inputs.length)throw new Uc("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(0===this.outputs.length){if(0===e.inboundNodes.length){if(null==e.batchInputShape)throw new Uc("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const t=it({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(t)}if(t)this.outputs=n.outputs,this.inputs=n.inputs;else{if(1!==e.inboundNodes.length)throw new Uc("A layer added to a Sequential model must not already be "+`connected somewhere else. LayersModel received layer ${e.name} `+`which has ${e.inboundNodes.length} pre-existing inbound `+"connections.");if(1!==e.inboundNodes[0].outputTensors.length)throw new Uc("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=st(this.outputs[0])}this.inboundNodes=[],new Fl({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:m(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map(e=>e.shape),outputShapes:this.outputs[0].shape})}else{const t=e.apply(this.outputs[0]);if(Array.isArray(t))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[t],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(0===this.layers.length)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),0===this.layers.length)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,t){return null==this.model&&this.build(),this.model.call(e,t)}build(e){if(Qe(e),0===this.inputs.length||0===this.outputs.length)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new hd({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,t,n=console.log){this.built||this.build(),super.summary(e,t,n)}setWeights(e){null==this.model&&this.build(),this.model.setWeights(e)}evaluate(e,t,n={}){if(!this.built)throw new Vc("The model needs to be compiled before being used.");return this.model.evaluate(e,t,n)}async evaluateDataset(e,t){if(!this.built)throw new Vc("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,t)}predict(e,t={}){return null==this.model&&this.build(),this.model.predict(e,t)}predictOnBatch(e){return null==this.model&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return null==this.model?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,t,n={}){if(!this.built)throw new Vc("The model needs to be compiled before being used.");return this.model.fit(e,t,n)}async fitDataset(e,t){if(!this.built)throw new Vc("The model needs to be compiled before being used.");return this.model.fitDataset(e,t)}async trainOnBatch(e,t){return this.model.trainOnBatch(e,t)}static fromConfig(e,t,n={},r=!1){let a,s={};if(t instanceof Array){if(null==t[0].className||"Merge"===t[0].className)throw new Uc("Legacy serialization format not supported yet.");a=t}else ss.util.assert(null!=t.layers,()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field."),a=t.layers,delete t.layers,s=t;const i=new e(s);if(!(i instanceof fd))throw new Gc(`Sequential.fromConfig called on non-Sequential input: ${i}`);for(const e of a){const t=void 0,n=dt(e,t,r);r&&n.setFastWeightInitDuringBuild(!0),i.add(n)}return i}set stopTraining(e){if(null==this.model)throw new Uc("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(null==this.model)throw new Uc("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const e=[];for(const t of this.layers){const n={};n.className=t.getClassName(),n.config=t.getConfig(),e.push(n)}return{name:this.name,layers:e}}}fd.className="Sequential",ss.serialization.registerClass(fd);class md extends ss.serialization.Serializable{getConfig(){return{}}}class bd extends md{apply(e,t=1){return we(e,t)}}bd.className="elu",ss.serialization.registerClass(bd);class gd extends md{apply(e){return ss.selu(e)}}gd.className="selu",ss.serialization.registerClass(gd);class yd extends md{apply(e){return ss.relu(e)}}yd.className="relu",ss.serialization.registerClass(yd);class xd extends md{apply(e){return Object(ss.tidy)(()=>ss.minimum(6,ss.relu(e)))}}xd.className="relu6",ss.serialization.registerClass(xd);class vd extends md{apply(e){return e}}vd.className="linear",ss.serialization.registerClass(vd);class wd extends md{apply(e){return ss.sigmoid(e)}}wd.className="sigmoid",ss.serialization.registerClass(wd);class kd extends md{apply(e){return Ie(e)}}kd.className="hardSigmoid",ss.serialization.registerClass(kd);class Od extends md{apply(e){return ss.softplus(e)}}Od.className="softplus",ss.serialization.registerClass(Od);class Id extends md{apply(e){return ke(e)}}Id.className="softsign",ss.serialization.registerClass(Id);class Nd extends md{apply(e){return ss.tanh(e)}}Nd.className="tanh",ss.serialization.registerClass(Nd);class jd extends md{apply(e,t=-1){return ss.softmax(e,t)}}jd.className="softmax",ss.serialization.registerClass(jd);class Sd extends md{apply(e,t=-1){return ss.logSoftmax(e,t)}}Sd.className="logSoftmax",ss.serialization.registerClass(Sd);class Td extends md{apply(e,t=1){return Object(ss.tidy)(()=>ss.sigmoid(e.mul(t)).mul(e))}}Td.className="swish",ss.serialization.registerClass(Td);class Cd extends md{apply(e){return Object(ss.tidy)(()=>ss.mul(e,ss.tanh(ss.softplus(e))))}}Cd.className="mish",ss.serialization.registerClass(Cd);class Ed extends ss.serialization.Serializable{}class $d extends Ed{constructor(e){super(),Gn(e),this.l1=null==e||null==e.l1?.01:e.l1,this.l2=null==e||null==e.l2?.01:e.l2,this.hasL1=0!==this.l1,this.hasL2=0!==this.l2}apply(e){return Object(ss.tidy)(()=>{let t=Object(ss.zeros)([1]);return this.hasL1&&(t=Object(ss.add)(t,Object(ss.sum)(ss.mul(this.l1,Object(ss.abs)(e))))),this.hasL2&&(t=Object(ss.add)(t,Object(ss.sum)(ss.mul(this.l2,ye(e))))),t.asScalar()})}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,t){return new e({l1:t.l1,l2:t.l2})}}$d.className="L1L2",ss.serialization.registerClass($d);const Ad={l1l2:"L1L2"};class _d extends Ml{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,null!=e&&(this.maxValue=e.maxValue)}call(e,t){e=Ze(e);let n=Object(ss.relu)(e);return null!=this.maxValue&&(n=Object(ss.clipByValue)(n,0,this.maxValue)),n}computeOutputShape(e){return e}getConfig(){const e={maxValue:this.maxValue},t=super.getConfig();return Object.assign(e,t),e}}_d.className="ReLU",ss.serialization.registerClass(_d);class Dd extends Ml{constructor(e){super(null==e?{}:e),this.DEFAULT_ALPHA=.3,null==e&&(e={}),this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=Ze(e);return Object(ss.leakyRelu)(n,this.alpha)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}Dd.className="LeakyReLU",ss.serialization.registerClass(Dd);class Fd extends Ml{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA_INITIALIZER="zeros",null==e&&(e={}),this.supportsMasking=!0,this.alphaInitializer=$e(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=Yn(e.alphaRegularizer),this.alphaConstraint=z(e.alphaConstraint),null==e.sharedAxes)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else{if("number"!=typeof e.sharedAxes)throw new Uc("Expected sharedAxes to be a number or an array of numbers, "+`but got ${e.sharedAxes}`);this.sharedAxes=[e.sharedAxes]}}build(e){e=Qe(e);const t=e.slice(1);if(null!=this.sharedAxes)for(const e of this.sharedAxes)t[e-1]=1;this.alpha=this.addWeight("alpha",t,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const n={};if(null!=this.sharedAxes)for(let t=1;t<e.length;++t)n[t]=e[t];this.inputSpec=[new Al({ndim:e.length,axes:n})],this.built=!0}call(e,t){return e=Ze(e),Object(ss.prelu)(e,this.alpha.read())}getConfig(){const e={alphaInitializer:Ee(this.alphaInitializer),alphaRegularizer:Kn(this.alphaRegularizer),alphaConstraint:R(this.alphaConstraint),sharedAxes:this.sharedAxes},t=super.getConfig();return Object.assign(e,t),e}}Fd.className="PReLU",ss.serialization.registerClass(Fd);class Rd extends Ml{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA=1,null==e&&(e={}),null!=e.alpha&&e.alpha!==this.DEFAULT_ALPHA)throw new Gc(`Non-default alpha value (${e.alpha}) is not supported by the `+"ELU layer yet.");this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=Ze(e);return Object(ss.elu)(n)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}Rd.className="ELU",ss.serialization.registerClass(Rd);class Md extends Ml{constructor(e){super(null==e?{}:e),this.DEFAULT_THETA=1,null==e&&(e={}),this.theta=null==e.theta?this.DEFAULT_THETA:e.theta}call(e,t){const n=Ze(e);return n.mul(ae(n.greater(this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){const e={theta:this.theta},t=super.getConfig();return Object.assign(e,t),e}}Md.className="ThresholdedReLU",ss.serialization.registerClass(Md);class zd extends Ml{constructor(e){super(null==e?{}:e),this.DEFAULT_AXIS=1,null==e&&(e={}),this.softmax=(new jd).apply,this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis}call(e,t){const n=Ze(e);return this.softmax(n,this.axis)}computeOutputShape(e){return e}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}zd.className="Softmax",ss.serialization.registerClass(zd);class Ld extends Ml{constructor(e,t){if(super(t),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",Ld.verifyArgs(t),this.rank=e,$(this.rank,"rank"),
1!==this.rank&&2!==this.rank&&3!==this.rank)throw new Gc(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is `+"not implemented yet.");if(this.kernelSize=Zn(t.kernelSize,e,"kernelSize"),this.strides=Zn(null==t.strides?1:t.strides,e,"strides"),this.padding=null==t.padding?"valid":t.padding,G(this.padding),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,V(this.dataFormat),this.activation=Un(t.activation),this.useBias=null==t.useBias||t.useBias,this.biasInitializer=$e(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=z(t.biasConstraint),this.biasRegularizer=Yn(t.biasRegularizer),this.activityRegularizer=Yn(t.activityRegularizer),this.dilationRate=Zn(null==t.dilationRate?1:t.dilationRate,e,"dilationRate"),1===this.rank&&Array.isArray(this.dilationRate)&&1!==this.dilationRate.length)throw new Uc("dilationRate must be a number or an array of a single number for 1D convolution, but received "+`${JSON.stringify(this.dilationRate)}`);if(2===this.rank){if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate];else if(2!==this.dilationRate.length)throw new Uc("dilationRate must be a number or array of two numbers for 2D "+`convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(3===this.rank)if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(3!==this.dilationRate.length)throw new Uc("dilationRate must be a number or array of three numbers for 3D "+`convolution, but received ${JSON.stringify(this.dilationRate)}`)}static verifyArgs(e){if(b("kernelSize"in e,"required key 'kernelSize' not in config"),"number"!=typeof e.kernelSize&&!E(e.kernelSize,"number",1,3))throw new Uc("BaseConv expects config.kernelSize to be number or number[] with "+`length 1, 2, or 3, but received ${JSON.stringify(e.kernelSize)}.`)}getConfig(){const e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:Wn(this.activation),useBias:this.useBias,biasInitializer:Ee(this.biasInitializer),biasRegularizer:Kn(this.biasRegularizer),activityRegularizer:Kn(this.activityRegularizer),biasConstraint:R(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}class Pd extends Ld{constructor(e,t){super(e,t),this.kernel=null,Pd.verifyArgs(t),this.filters=t.filters,$(this.filters,"filters"),this.kernelInitializer=$e(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=z(t.kernelConstraint),this.kernelRegularizer=Yn(t.kernelRegularizer)}build(e){e=Qe(e);const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new Uc("The channel dimension of the input should be defined. "+`Found ${e[t]}`);const n=e[t],r=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[t]:n}}],this.built=!0}call(e,t){return Object(ss.tidy)(()=>{let t;e=Ze(e);const n=null==this.bias?null:this.bias.read(),r=D(this.activation.getClassName());if(null!=r&&2===this.rank)t=rr(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate,r);else{if(1===this.rank)t=nr(e,this.kernel.read(),n,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(2===this.rank)t=rr(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate);else{if(3!==this.rank)throw new Gc("convolutions greater than 3D are not implemented yet.");t=ar(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate)}null!=this.activation&&(t=this.activation.apply(t))}return t})}computeOutputShape(e){e=Qe(e);const t=[],n="channelsLast"===this.dataFormat?e.slice(1,e.length-1):e.slice(2);for(let e=0;e<n.length;++e){const r=Qn(n[e],this.kernelSize[e],this.padding,this.strides[e],"number"==typeof this.dilationRate?this.dilationRate:this.dilationRate[e]);t.push(r)}let r=[e[0]];return"channelsLast"===this.dataFormat?(r=r.concat(t),r.push(this.filters)):(r.push(this.filters),r=r.concat(t)),r}getConfig(){const e={filters:this.filters,kernelInitializer:Ee(this.kernelInitializer),kernelRegularizer:Kn(this.kernelRegularizer),kernelConstraint:R(this.kernelConstraint)},t=super.getConfig();return Object.assign(e,t),e}static verifyArgs(e){if(!("filters"in e)||"number"!=typeof e.filters||e.filters<1)throw new Uc("Convolution layer expected config.filters to be a 'number' > 0 "+`but got ${JSON.stringify(e.filters)}`)}}class Bd extends Pd{constructor(e){super(2,e),Bd.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!E(e.kernelSize,"number",1,2))throw new Uc("Conv2D expects config.kernelSize to be number or number[] with "+`length 1 or 2, but received ${JSON.stringify(e.kernelSize)}.`)}}Bd.className="Conv2D",ss.serialization.registerClass(Bd);class Wd extends Pd{constructor(e){super(3,e),Wd.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&(!Array.isArray(e.kernelSize)||1!==e.kernelSize.length&&3!==e.kernelSize.length))throw new Uc("Conv3D expects config.kernelSize to be number or"+` [number, number, number], but received ${JSON.stringify(e.kernelSize)}.`)}}Wd.className="Conv3D",ss.serialization.registerClass(Wd);class Vd extends Bd{constructor(e){if(super(e),this.inputSpec=[new Al({ndim:4})],"same"!==this.padding&&"valid"!==this.padding)throw new Uc("Conv2DTranspose currently supports only padding modes 'same' "+`and 'valid', but received padding mode ${this.padding}`)}build(e){if(e=Qe(e),4!==e.length)throw new Uc("Input should have rank 4; Received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new Uc("The channel dimension of the inputs should be defined. Found `None`.");const n=e[t],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Al({ndim:4,axes:{[t]:n}})],this.built=!0}call(e,t){return ss.tidy(()=>{let t=Ze(e);if(4!==t.shape.length)throw new Uc("Conv2DTranspose.call() expects input tensor to be rank-4, but "+`received a tensor of rank-${t.shape.length}`);const n=t.shape,r=n[0];let a,s;"channelsFirst"===this.dataFormat?(a=2,s=3):(a=1,s=2);const i=n[a],o=n[s],u=this.kernelSize[0],c=this.kernelSize[1],l=this.strides[0],d=this.strides[1],h=Jn(i,l,u,this.padding),p=Jn(o,d,c,this.padding),f=[r,h,p,this.filters];"channelsLast"!==this.dataFormat&&(t=ss.transpose(t,[0,2,3,1]));let m=ss.conv2dTranspose(t,this.kernel.read(),f,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(m=ss.transpose(m,[0,3,1,2])),null!=this.bias&&(m=ve(m,this.bias.read(),this.dataFormat)),null!=this.activation&&(m=this.activation.apply(m)),m})}computeOutputShape(e){e=Qe(e);const t=e.slice();let n,r,a;"channelsFirst"===this.dataFormat?(n=1,r=2,a=3):(n=3,r=1,a=2);const s=this.kernelSize[0],i=this.kernelSize[1],o=this.strides[0],u=this.strides[1];return t[n]=this.filters,t[r]=Jn(t[r],o,s,this.padding),t[a]=Jn(t[a],u,i,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}Vd.className="Conv2DTranspose",ss.serialization.registerClass(Vd);class Ud extends Wd{constructor(e){if(super(e),this.inputSpec=[new Al({ndim:5})],"same"!==this.padding&&"valid"!==this.padding)throw new Uc("Conv3DTranspose currently supports only padding modes 'same' "+`and 'valid', but received padding mode ${this.padding}`)}build(e){if(e=Qe(e),5!==e.length)throw new Uc("Input should have rank 5; Received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new Uc("The channel dimension of the inputs should be defined. Found `None`.");const n=e[t],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Al({ndim:5,axes:{[t]:n}})],this.built=!0}call(e,t){return ss.tidy(()=>{let t=Ze(e);if(5!==t.shape.length)throw new Uc("Conv3DTranspose.call() expects input tensor to be rank-4, but "+`received a tensor of rank-${t.shape.length}`);const n=t.shape,r=n[0];let a,s,i;"channelsFirst"===this.dataFormat?(i=2,a=3,s=4):(i=1,a=2,s=3);const o=n[i],u=n[a],c=n[s],l=this.kernelSize[0],d=this.kernelSize[1],h=this.kernelSize[2],p=this.strides[0],f=this.strides[1],m=this.strides[2],b=Jn(o,p,l,this.padding),g=Jn(u,f,d,this.padding),y=Jn(c,m,h,this.padding),x=[r,b,g,y,this.filters];"channelsLast"!==this.dataFormat&&(t=ss.transpose(t,[0,2,3,4,1]));let v=ss.conv3dTranspose(t,this.kernel.read(),x,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(v=ss.transpose(v,[0,4,1,2,3])),null!==this.bias&&(v=ve(v,this.bias.read(),this.dataFormat)),null!==this.activation&&(v=this.activation.apply(v)),v})}computeOutputShape(e){e=Qe(e);const t=e.slice();let n,r,a,s;"channelsFirst"===this.dataFormat?(n=1,r=2,a=3,s=4):(n=4,r=1,a=2,s=3);const i=this.kernelSize[0],o=this.kernelSize[1],u=this.kernelSize[2],c=this.strides[0],l=this.strides[1],d=this.strides[2];return t[n]=this.filters,t[r]=Jn(t[r],c,i,this.padding),t[a]=Jn(t[a],l,o,this.padding),t[s]=Jn(t[s],d,u,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}Ud.className="Conv3DTranspose",ss.serialization.registerClass(Ud);class Gd extends Pd{constructor(e,t){if(super(e,t),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,null==t.filters)throw new Uc("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(null!=t.kernelInitializer||null!=t.kernelRegularizer||null!=t.kernelConstraint)throw new Uc("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(null!=t.padding&&"same"!==t.padding&&"valid"!==t.padding)throw new Uc(`SeparableConv${this.rank}D supports only padding modes: `+`'same' and 'valid', but received ${JSON.stringify(t.padding)}`);this.depthMultiplier=null==t.depthMultiplier?1:t.depthMultiplier,this.depthwiseInitializer=$e(t.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=Yn(t.depthwiseRegularizer),this.depthwiseConstraint=z(t.depthwiseConstraint),this.pointwiseInitializer=$e(t.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=Yn(t.pointwiseRegularizer),this.pointwiseConstraint=z(t.pointwiseConstraint)}build(e){if(e=Qe(e),e.length<this.rank+2)throw new Uc(`Inputs to SeparableConv${this.rank}D should have rank `+`${this.rank+2}, but received input shape: `+`${JSON.stringify(e)}`);const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t]||e[t]<0)throw new Uc("The channel dimension of the inputs should be defined, "+`but found ${JSON.stringify(e[t])}`);const n=e[t],r=this.kernelSize.concat([n,this.depthMultiplier]),a=[];for(let e=0;e<this.rank;++e)a.push(1);a.push(n*this.depthMultiplier,this.filters);const s=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",r,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,s,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",a,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,s,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,s,this.biasConstraint):this.bias=null,this.inputSpec=[new Al({ndim:this.rank+2,axes:{[t]:n}})],this.built=!0}call(e,t){return Object(ss.tidy)(()=>{let t;if(e=Ze(e),1===this.rank)throw new Gc("1D separable convolution is not implemented yet.");return 2===this.rank&&("channelsFirst"===this.dataFormat&&(e=ss.transpose(e,[0,2,3,1])),t=ss.separableConv2d(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(t=ve(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),"channelsFirst"===this.dataFormat&&(t=ss.transpose(t,[0,3,1,2])),t})}getConfig(){const e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=Ee(this.depthwiseInitializer),e.pointwiseInitializer=Ee(this.pointwiseInitializer),e.depthwiseRegularizer=Kn(this.depthwiseRegularizer),e.pointwiseRegularizer=Kn(this.pointwiseRegularizer),e.depthwiseConstraint=R(this.depthwiseConstraint),e.pointwiseConstraint=R(this.pointwiseConstraint),e}}Gd.className="SeparableConv";class Hd extends Gd{constructor(e){super(2,e)}}Hd.className="SeparableConv2D",ss.serialization.registerClass(Hd);class qd extends Pd{constructor(e){super(1,e),qd.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){const e=super.getConfig();return delete e.rank,delete e.dataFormat,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!E(e.kernelSize,"number",1,1))throw new Uc("Conv1D expects config.kernelSize to be number or number[] with "+`length 1, but received ${JSON.stringify(e.kernelSize)}.`)}}qd.className="Conv1D",ss.serialization.registerClass(qd);class Kd extends Ml{constructor(e){super(e),"number"==typeof e.cropping?this.cropping=[[e.cropping,e.cropping],[e.cropping,e.cropping]]:"number"==typeof e.cropping[0]?this.cropping=[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:this.cropping=e.cropping,this.dataFormat=void 0===e.dataFormat?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return"channelsFirst"===this.dataFormat?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,t){return Object(ss.tidy)(()=>{if(e=Ze(e),"channelsLast"===this.dataFormat){const t=de(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return de(t,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}{const t=de(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return de(t,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}})}getConfig(){const e={cropping:this.cropping,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}Kd.className="Cropping2D",ss.serialization.registerClass(Kd);class Xd extends Ml{constructor(e){super(e),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=null==e.size?this.DEFAULT_SIZE:e.size,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,V(this.dataFormat),this.interpolation=null==e.interpolation?"nearest":e.interpolation,U(this.interpolation)}computeOutputShape(e){if("channelsFirst"===this.dataFormat){const t=null==e[2]?null:this.size[0]*e[2],n=null==e[3]?null:this.size[1]*e[3];return[e[0],e[1],t,n]}{const t=null==e[1]?null:this.size[0]*e[1],n=null==e[2]?null:this.size[1]*e[2];return[e[0],t,n,e[3]]}}call(e,t){return ss.tidy(()=>{let t=Ze(e);const n=t.shape;if("channelsFirst"===this.dataFormat){t=ss.transpose(t,[0,2,3,1]);const e=this.size[0]*n[2],r=this.size[1]*n[3],a="nearest"===this.interpolation?t.resizeNearestNeighbor([e,r]):t.resizeBilinear([e,r]);return ss.transpose(a,[0,3,1,2])}{const e=this.size[0]*n[1],r=this.size[1]*n[2];return"nearest"===this.interpolation?t.resizeNearestNeighbor([e,r]):t.resizeBilinear([e,r])}})}getConfig(){const e={size:this.size,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}Xd.className="UpSampling2D",ss.serialization.registerClass(Xd);class Yd extends Ld{constructor(e){super(2,e),this.depthwiseKernel=null,this.depthMultiplier=null==e.depthMultiplier?1:e.depthMultiplier,this.depthwiseInitializer=$e(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=z(e.depthwiseConstraint),this.depthwiseRegularizer=Yn(e.depthwiseRegularizer)}build(e){if(e=Qe(e),e.length<4)throw new Uc("Inputs to DepthwiseConv2D should have rank 4. "+`Received input shape: ${JSON.stringify(e)}.`);const t="channelsFirst"===this.dataFormat?1:3;if(null==e[t]||e[t]<0)throw new Uc("The channel dimension of the inputs to DepthwiseConv2D should "+`be defined, but is not (${e[t]}).`);const n=e[t],r=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",r,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return Object(ss.tidy)(()=>{e=Ze(e);let t=sr(e,this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(t=ve(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),t})}computeOutputShape(e){e=Qe(e);const t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],r="channelsFirst"===this.dataFormat?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,a=Qn(t,this.kernelSize[0],this.padding,this.strides[0]),s=Qn(n,this.kernelSize[1],this.padding,this.strides[1]);return"channelsFirst"===this.dataFormat?[e[0],r,a,s]:[e[0],a,s,r]}getConfig(){const e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=Ee(this.depthwiseInitializer),e.depthwiseRegularizer=Kn(this.depthwiseRegularizer),e.depthwiseConstraint=R(this.depthwiseRegularizer),e}}Yd.className="DepthwiseConv2D",ss.serialization.registerClass(Yd);class Zd extends Ml{constructor(e){let t;if(super(e),null==e.cell)throw new Uc("cell property is missing for the constructor of RNN.");if(t=Array.isArray(e.cell)?new sh({cells:e.cell}):e.cell,null==t.stateSize)throw new Uc("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=t,this.returnSequences=null!=e.returnSequences&&e.returnSequences,this.returnState=null!=e.returnState&&e.returnState,this.goBackwards=null!=e.goBackwards&&e.goBackwards,this._stateful=null!=e.stateful&&e.stateful,this.unroll=null!=e.unroll&&e.unroll,this.supportsMasking=!0,this.inputSpec=[new Al({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){if(null==this.states_){const e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;return re(0,e).map(e=>null)}return this.states_}setStates(e){this.states_=e}computeOutputShape(e){Xe(e)&&(e=e[0]),e=e;let t=this.cell.stateSize;Array.isArray(t)||(t=[t]);const n=t[0];let r;if(r=this.returnSequences?[e[0],e[1],n]:[e[0],n],this.returnState){const n=[];for(const r of t)n.push([e[0],r]);return[r].concat(n)}return r}computeMask(e,t){return ss.tidy(()=>{Array.isArray(t)&&(t=t[0]);const e=this.returnSequences?t:null;if(this.returnState){const t=this.states.map(e=>null);return[e].concat(t)}return e})}get states(){if(null==this.states_){const e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,t=[];for(let n=0;n<e;++n)t.push(null);return t}return this.states_}set states(e){this.states_=e}build(e){const t=null;if(null!=this.numConstants)throw new Gc("Constants support is not implemented in RNN yet.");Xe(e)&&(e=e[0]),e=e;const n=this.stateful?e[0]:null,r=e.slice(2);this.inputSpec[0]=new Al({shape:[n,null,...r]});const a=[e[0]].concat(e.slice(2));if(null!=t)throw new Gc("Constants support is not implemented in RNN yet.");let s;if(this.cell.build(a),s=Array.isArray(this.cell.stateSize)?this.cell.stateSize:[this.cell.stateSize],null!=this.stateSpec){if(!ss.util.arraysEqual(this.stateSpec.map(e=>e.shape[e.shape.length-1]),s))throw new Uc("An initialState was passed that is not compatible with "+`cell.stateSize. Received stateSpec=${this.stateSpec}; `+`However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=s.map(e=>new Al({shape:[null,e]}));this.stateful&&this.resetStates()}resetStates(e,t=!1){Object(ss.tidy)(()=>{if(!this.stateful)throw new Wc("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape[0];if(null==n)throw new Uc("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.states_)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(e=>ss.zeros([n,e])):this.states_=[ss.zeros([n,this.cell.stateSize])];else if(null==e)ss.dispose(this.states_),null!=this.keptStates&&(ss.dispose(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(e=>ss.zeros([n,e])):this.states_[0]=ss.zeros([n,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new Uc(`Layer ${this.name} expects ${this.states_.length} state(s), `+`but it received ${e.length} state value(s). Input `+`received: ${e}`);!0===t?this.keptStates.push(this.states_.slice()):ss.dispose(this.states_);for(let t=0;t<this.states_.length;++t){const r=e[t],a=Array.isArray(this.cell.stateSize)?this.cell.stateSize[t]:this.cell.stateSize,s=[n,a];if(!ss.util.arraysEqual(r.shape,s))throw new Uc(`State ${t} is incompatible with layer ${this.name}: `+`expected shape=${s}, received shape=${r.shape}`);this.states_[t]=r}}this.states_=this.states_.map(e=>ss.keep(e.clone()))})}apply(e,t){let n=null==t?null:t.initialState,r=null==t?null:t.constants;null==t&&(t={});const a=ir(e,n,r,this.numConstants);e=a.inputs,n=a.initialState,r=a.constants;let s=[],i=[];if(null!=n){t.initialState=n,s=s.concat(n),this.stateSpec=[];for(const e of n)this.stateSpec.push(new Al({shape:e.shape}));i=i.concat(this.stateSpec)}null!=r&&(t.constants=r,s=s.concat(r),this.numConstants=r.length);const o=s[0]instanceof _l;if(o){const n=[e].concat(s),r=this.inputSpec.concat(i),a=this.inputSpec;this.inputSpec=r;const o=super.apply(n,t);return this.inputSpec=a,o}return super.apply(e,t)}call(e,t){return Object(ss.tidy)(()=>{const n=null==t?null:t.mask,r=null==t?null:t.training;let a=null==t?null:t.initialState;e=Ze(e),null==a&&(a=this.stateful?this.states_:this.getInitialState(e));const s=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(a.length!==s)throw new Uc(`RNN Layer has ${s} state(s) but was passed `+`${a.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const i={training:r},o=(e,t)=>{const n=this.cell.call([e].concat(t),i);return[n[0],n.slice(1)]},u=or(o,e,a,this.goBackwards,n,null,this.unroll,this.returnSequences),c=u[0],l=u[1],d=u[2];this.stateful&&this.resetStates(d,r);const h=this.returnSequences?l:c;return this.returnState?[h].concat(d):h})}getInitialState(e){return Object(ss.tidy)(()=>{let t=ss.zeros(e.shape);return t=ss.sum(t,[1,2]),t=se(t),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map(e=>e>1?fe(t,[1,e]):t):this.cell.stateSize>1?[fe(t,[1,this.cell.stateSize])]:[t]})}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.cell&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){const e=super.getConfig(),t={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};null!=this.numConstants&&(t.numConstants=this.numConstants);const n=this.cell.getConfig();return this.getClassName()===Zd.className&&(t.cell={className:this.cell.getClassName(),config:n}),Object.assign({},n,e,t)}static fromConfig(e,t,n={}){const r=t.cell,a=dt(r,n);return new e(Object.assign(t,{cell:a}))}}Zd.className="RNN",ss.serialization.registerClass(Zd);class Qd extends Ml{}class Jd extends Qd{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,$(this.units,"units"),this.activation=Un(null==e.activation?this.DEFAULT_ACTIVATION:e.activation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=$e(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=$e(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=$e(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=Yn(e.kernelRegularizer),this.recurrentRegularizer=Yn(e.recurrentRegularizer),this.biasRegularizer=Yn(e.biasRegularizer),this.kernelConstraint=z(e.kernelConstraint),this.recurrentConstraint=z(e.recurrentConstraint),this.biasConstraint=z(e.biasConstraint),this.dropout=te([1,ne([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=te([1,ne([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=Qe(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return Object(ss.tidy)(()=>{if(e=e,2!==e.length)throw new Uc(`SimpleRNNCell expects 2 input Tensors, got ${e.length}.`);let n=e[1];e=e[0];const r=null!=t.training&&t.training;let a;0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=ur({ones:()=>ss.onesLike(e),rate:this.dropout,training:r})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=ur({ones:()=>ss.onesLike(n),rate:this.recurrentDropout,training:r}));const s=this.dropoutMask,i=this.recurrentDropoutMask;a=be(null!=s?ss.mul(e,s):e,this.kernel.read()),null!=this.bias&&(a=ve(a,this.bias.read())),null!=i&&(n=ss.mul(n,i));let o=ss.add(a,be(n,this.recurrentKernel.read()));return null!=this.activation&&(o=this.activation.apply(o)),[o,o]})}getConfig(){const e=super.getConfig(),t={units:this.units,activation:Wn(this.activation),useBias:this.useBias,kernelInitializer:Ee(this.kernelInitializer),recurrentInitializer:Ee(this.recurrentInitializer),biasInitializer:Ee(this.biasInitializer),kernelRegularizer:Kn(this.kernelRegularizer),recurrentRegularizer:Kn(this.recurrentRegularizer),biasRegularizer:Kn(this.biasRegularizer),activityRegularizer:Kn(this.activityRegularizer),kernelConstraint:R(this.kernelConstraint),recurrentConstraint:R(this.recurrentConstraint),biasConstraint:R(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign({},e,t)}}Jd.className="SimpleRNNCell",ss.serialization.registerClass(Jd);class eh extends Zd{constructor(e){e.cell=new Jd(e),super(e)}call(e,t){return Object(ss.tidy)(()=>{null!=this.cell.dropoutMask&&(ss.dispose(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(ss.dispose(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,r=null==t?null:t.training,a=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:a})})}static fromConfig(e,t){return new e(t)}}eh.className="SimpleRNN",ss.serialization.registerClass(eh);class th extends Qd{constructor(e){if(super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.resetAfter)throw new Uc("GRUCell does not support reset_after parameter set to true.");this.units=e.units,$(this.units,"units"),this.activation=Un(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=Un(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=$e(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=$e(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=$e(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=Yn(e.kernelRegularizer),this.recurrentRegularizer=Yn(e.recurrentRegularizer),this.biasRegularizer=Yn(e.biasRegularizer),this.kernelConstraint=z(e.kernelConstraint),this.recurrentConstraint=z(e.recurrentConstraint),this.biasConstraint=z(e.biasConstraint),this.dropout=te([1,ne([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=te([1,ne([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=Qe(e);const t=e[e.length-1];this.kernel=this.addWeight("kernel",[t,3*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,3*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[3*this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return Object(ss.tidy)(()=>{if(e=e,2!==e.length)throw new Uc("GRUCell expects 2 input Tensors (inputs, h, c), got "+`${e.length}.`);const n=null!=t.training&&t.training;let r=e[1];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=ur({ones:()=>ss.onesLike(e),rate:this.dropout,training:n,count:3})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=ur({ones:()=>ss.onesLike(r),rate:this.recurrentDropout,training:n,count:3}));const a=this.dropoutMask,s=this.recurrentDropoutMask;let i,o,u;0<this.dropout&&this.dropout<1&&(e=ss.mul(e,a[0]));let c=be(e,this.kernel.read());this.useBias&&(c=ve(c,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(r=ss.mul(r,s[0]));const l=this.recurrentKernel.read(),[d,h]=ss.split(l,[2*this.units,this.units],l.rank-1),p=be(r,d),[f,m,b]=ss.split(c,3,c.rank-1),[g,y]=ss.split(p,2,p.rank-1);i=this.recurrentActivation.apply(ss.add(f,g)),o=this.recurrentActivation.apply(ss.add(m,y));const x=be(ss.mul(o,r),h);u=this.activation.apply(ss.add(b,x));const v=ss.add(ss.mul(i,r),ss.mul(ss.add(1,ss.neg(i)),u));return[v,v]})}getConfig(){const e=super.getConfig(),t={units:this.units,activation:Wn(this.activation),recurrentActivation:Wn(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Ee(this.kernelInitializer),recurrentInitializer:Ee(this.recurrentInitializer),biasInitializer:Ee(this.biasInitializer),kernelRegularizer:Kn(this.kernelRegularizer),recurrentRegularizer:Kn(this.recurrentRegularizer),biasRegularizer:Kn(this.biasRegularizer),activityRegularizer:Kn(this.activityRegularizer),kernelConstraint:R(this.kernelConstraint),
recurrentConstraint:R(this.recurrentConstraint),biasConstraint:R(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign({},e,t)}}th.className="GRUCell",ss.serialization.registerClass(th);class nh extends Zd{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new th(e),super(e)}call(e,t){return Object(ss.tidy)(()=>{null!=this.cell.dropoutMask&&(ss.dispose(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(ss.dispose(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,r=null==t?null:t.training,a=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:a})})}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}}nh.className="GRU",ss.serialization.registerClass(nh);class rh extends Qd{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,$(this.units,"units"),this.activation=Un(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=Un(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=$e(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=$e(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=$e(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=Yn(e.kernelRegularizer),this.recurrentRegularizer=Yn(e.recurrentRegularizer),this.biasRegularizer=Yn(e.biasRegularizer),this.kernelConstraint=z(e.kernelConstraint),this.recurrentConstraint=z(e.recurrentConstraint),this.biasConstraint=z(e.biasConstraint),this.dropout=te([1,ne([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=te([1,ne([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var t;e=Qe(e);const n=e[e.length-1];let r;if(this.kernel=this.addWeight("kernel",[n,4*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,4*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){if(this.unitForgetBias){const e=this.biasInitializer,n=this.units;r=new(t=class extends dl{apply(t,r){const a=e.apply([n]),s=(new pl).apply([n]),i=e.apply([2*n]);return pe(pe(a,s),i)}},t.className="CustomInit",t)}else r=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.units],null,r,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,t){return Object(ss.tidy)(()=>{const n=null!=t.training&&t.training;if(e=e,3!==e.length)throw new Uc("LSTMCell expects 3 input Tensors (inputs, h, c), got "+`${e.length}.`);let r=e[1];const a=e[2];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=ur({ones:()=>ss.onesLike(e),rate:this.dropout,training:n,count:4})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=ur({ones:()=>ss.onesLike(r),rate:this.recurrentDropout,training:n,count:4}));const s=this.dropoutMask,i=this.recurrentDropoutMask;let o,u,c,l;0<this.dropout&&this.dropout<1&&(e=ss.mul(e,s[0]));let d=be(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(r=ss.mul(r,i[0])),d=ss.add(d,be(r,this.recurrentKernel.read())),this.useBias&&(d=ve(d,this.bias.read()));const[h,p,f,m]=ss.split(d,4,d.rank-1);o=this.recurrentActivation.apply(h),u=this.recurrentActivation.apply(p),c=ss.add(ss.mul(u,a),ss.mul(o,this.activation.apply(f))),l=this.recurrentActivation.apply(m);const b=ss.mul(l,this.activation.apply(c));return[b,b,c]})}getConfig(){const e=super.getConfig(),t={units:this.units,activation:Wn(this.activation),recurrentActivation:Wn(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Ee(this.kernelInitializer),recurrentInitializer:Ee(this.recurrentInitializer),biasInitializer:Ee(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:Kn(this.kernelRegularizer),recurrentRegularizer:Kn(this.recurrentRegularizer),biasRegularizer:Kn(this.biasRegularizer),activityRegularizer:Kn(this.activityRegularizer),kernelConstraint:R(this.kernelConstraint),recurrentConstraint:R(this.recurrentConstraint),biasConstraint:R(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign({},e,t)}}rh.className="LSTMCell",ss.serialization.registerClass(rh);class ah extends Zd{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new rh(e),super(e)}call(e,t){return Object(ss.tidy)(()=>{null!=this.cell.dropoutMask&&(ss.dispose(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(ss.dispose(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,r=null==t?null:t.training,a=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:a})})}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}}ah.className="LSTM",ss.serialization.registerClass(ah);class sh extends Qd{constructor(e){super(e),this.cells=e.cells}get stateSize(){const e=[];for(const t of this.cells.slice().reverse())Array.isArray(t.stateSize)?e.push(...t.stateSize):e.push(t.stateSize);return e}call(e,t){return Object(ss.tidy)(()=>{e=e;let n=e.slice(1);const r=[];for(const e of this.cells.slice().reverse())Array.isArray(e.stateSize)?r.push(n.splice(0,e.stateSize.length)):r.push(n.splice(0,1));r.reverse();const a=[];let s;for(let i=0;i<this.cells.length;++i){const o=this.cells[i];n=r[i],s=0===i?[e[0]].concat(n):[s[0]].concat(n),s=o.call(s,t),a.push(s.slice(1))}n=[];for(const e of a.slice().reverse())n.push(...e);return[s[0]].concat(n)})}build(e){let t;Xe(e)&&(e=e[0]),e=e,this.cells.forEach((n,r)=>{q(`RNNCell_${r}`,()=>{n.build(e),t=Array.isArray(n.stateSize)?n.stateSize[0]:n.stateSize,e=[e[0],t]})}),this.built=!0}getConfig(){const e=super.getConfig(),t=e=>({className:e.getClassName(),config:e.getConfig()}),n=this.cells.map(t),r={cells:n};return Object.assign({},e,r)}static fromConfig(e,t,n={}){const r=[];for(const e of t.cells)r.push(dt(e,n));return new e({cells:r})}get trainableWeights(){if(!this.trainable)return[];const e=[];for(const t of this.cells)e.push(...t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.cells)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.cells)t.push(...e.trainableWeights);return t.concat(e)}return e}getWeights(){const e=[];for(const t of this.cells)e.push(...t.weights);return tt(e)}setWeights(e){const t=[];for(const n of this.cells){const r=n.weights.length,a=e.splice(r);for(let e=0;e<n.weights.length;++e)t.push([n.weights[e],a[e]])}nt(t)}}sh.className="StackedRNNCells",ss.serialization.registerClass(sh);var ih=function(e,t){var n={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var a=0;for(r=Object.getOwnPropertySymbols(e);a<r.length;a++)t.indexOf(r[a])<0&&Object.prototype.propertyIsEnumerable.call(e,r[a])&&(n[r[a]]=e[r[a]])}return n};class oh extends Zd{constructor(e){if(e.unroll)throw new Gc("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new Gc("It is not possible at the moment to stack convolutional cells.");super(e),this.inputSpec=[new Al({ndim:5})]}call(e,t){return ss.tidy(()=>{if(null!=this.cell.dropoutMask&&(ss.dispose(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(ss.dispose(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),t&&t.constants)throw new Uc("ConvRNN2D cell does not support constants");const n=null==t?null:t.mask,r=null==t?null:t.training,a=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:a})})}computeOutputShape(e){let t=this.computeSingleOutputShape(e);return this.returnSequences||(t=[t[0],...t.slice(2)]),this.returnState&&(t=[t,...Array(2).fill([e[0],...t.slice(-3)])]),t}getInitialState(e){return ss.tidy(()=>{const{stateSize:t}=this.cell,n=e.shape,r=this.computeSingleOutputShape(n),a=[r[0],...r.slice(2)],s=ss.zeros(a);return Array.isArray(t)?Array(t.length).fill(s):[s]})}resetStates(e,t=!1){ss.tidy(()=>{if(!this.stateful)throw new Wc("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape,r=this.computeSingleOutputShape(n),a=[r[0],...r.slice(2)],s=n[0];if(null==s)throw new Uc("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.getStates())Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>ss.zeros(a)):this.states_=[ss.zeros(a)];else if(null==e)ss.dispose(this.states_),null!=this.keptStates&&(ss.dispose(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>ss.zeros(a)):this.states_[0]=ss.zeros(a);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new Uc(`Layer ${this.name} expects ${this.states_.length} state(s), `+`but it received ${e.length} state value(s). Input `+`received: ${e}`);t?this.keptStates.push(this.states_.slice()):ss.dispose(this.states_);for(let t=0;t<this.states_.length;++t){const n=e[t],r=a;if(!ss.util.arraysEqual(n.shape,r))throw new Uc(`State ${t} is incompatible with layer ${this.name}: `+`expected shape=${r}, received shape=${n.shape}`);this.states_[t]=n}}this.states_=this.states_.map(e=>ss.keep(e.clone()))})}computeSingleOutputShape(e){const{dataFormat:t,filters:n,kernelSize:r,padding:a,strides:s,dilationRate:i}=this.cell,o="channelsFirst"===t,u=e[o?3:2],c=e[o?4:3],l=Qn(u,r[0],a,s[0],i[0]),d=Qn(c,r[1],a,s[1],i[1]),h=[...e.slice(0,2),...o?[n,l,d]:[l,d,n]];return h}}oh.className="ConvRNN2D";class uh extends rh{constructor(e){const{filters:t,kernelSize:n,strides:r,padding:a,dataFormat:s,dilationRate:i}=e;super(Object.assign({},e,{units:t})),this.filters=t,$(this.filters,"filters"),this.kernelSize=Zn(n,2,"kernelSize"),this.kernelSize.forEach(e=>$(e,"kernelSize")),this.strides=Zn(r||1,2,"strides"),this.strides.forEach(e=>$(e,"strides")),this.padding=a||"valid",G(this.padding),this.dataFormat=s||"channelsLast",V(this.dataFormat),this.dilationRate=Zn(i||1,2,"dilationRate"),this.dilationRate.forEach(e=>$(e,"dilationRate"))}build(e){var t;e=Qe(e);const n="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[n])throw new Uc("The channel dimension of the input should be defined. "+`Found ${e[n]}`);const r=e[n],a=4,s=this.kernelSize.concat([r,this.filters*a]);this.kernel=this.addWeight("kernel",s,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const i=this.kernelSize.concat([this.filters,this.filters*a]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",i,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let e;if(this.unitForgetBias){const n=this.biasInitializer,r=this.filters;e=new(t=class extends dl{apply(e,t){const a=n.apply([r]),s=ss.ones([r]),i=n.apply([2*r]);return he([a,s,i])}},t.className="CustomInit",t)}else e=this.biasInitializer;this.bias=this.addWeight("bias",[this.filters*a],null,e,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,t){return ss.tidy(()=>{if(3!==e.length)throw new Uc("ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got "+`${e.length}.`);const n=t.training||!1,r=e[0],a=e[1],s=e[2],i=4;0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=ur({ones:()=>ss.onesLike(r),rate:this.dropout,training:n,count:i}));const o=this.dropoutMask,u=(e,t,n)=>t&&t[n]?ss.mul(t[n],e):e;let c=u(r,o,0),l=u(r,o,1),d=u(r,o,2),h=u(r,o,3);0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=ur({ones:()=>ss.onesLike(a),rate:this.recurrentDropout,training:n,count:i}));const p=this.recurrentDropoutMask;let f=u(a,p,0),m=u(a,p,1),b=u(a,p,2),g=u(a,p,3);const y=3,[x,v,w,k]=ss.split(this.kernel.read(),i,y),[O,I,N,j]=this.useBias?ss.split(this.bias.read(),i):[null,null,null,null];c=this.inputConv(c,x,O,this.padding),l=this.inputConv(l,v,I,this.padding),d=this.inputConv(d,w,N,this.padding),h=this.inputConv(h,k,j,this.padding);const[S,T,C,E]=ss.split(this.recurrentKernel.read(),i,y);f=this.recurrentConv(f,S),m=this.recurrentConv(m,T),b=this.recurrentConv(b,C),g=this.recurrentConv(g,E);const $=this.recurrentActivation.apply(ss.add(c,f)),A=this.recurrentActivation.apply(ss.add(l,m)),_=ss.add(ss.mul(A,s),ss.mul($,this.activation.apply(ss.add(d,b)))),D=ss.mul(this.recurrentActivation.apply(ss.add(h,g)),this.activation.apply(_));return[D,D,_]})}getConfig(){const e=super.getConfig(),{units:t}=e,n=ih(e,["units"]),r={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign({},n,r)}inputConv(e,t,n,r){const a=ss.conv2d(e,t,this.strides,r||"valid","channelsFirst"===this.dataFormat?"NCHW":"NHWC",this.dilationRate);return n?ve(a,n,this.dataFormat):a}recurrentConv(e,t){const n=1;return ss.conv2d(e,t,n,"same","channelsFirst"===this.dataFormat?"NCHW":"NHWC")}}uh.className="ConvLSTM2DCell",ss.serialization.registerClass(uh);class ch extends oh{constructor(e){const t=new uh(e);super(Object.assign({},e,{cell:t}))}static fromConfig(e,t){return new e(t)}}ch.className="ConvLSTM2D",ss.serialization.registerClass(ch);class lh extends Ml{constructor(e){super(e),this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(null==this.noiseShape)return this.noiseShape;const t=e.shape,n=[];for(let e=0;e<this.noiseShape.length;++e)n.push(null==this.noiseShape[e]?t[e]:this.noiseShape[e]);return n}call(e,t){return Object(ss.tidy)(()=>{this.invokeCallHook(e,t);const n=Ze(e);if(0<this.rate&&this.rate<1){const e=null!=t.training&&t.training,r=this.getNoiseShape(n),a=Ne(()=>Oe(n,this.rate,r,this.seed),()=>n,e);return a}return e})}getConfig(){const e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},t=super.getConfig();return Object.assign(e,t),e}dispose(){return super.dispose()}}lh.className="Dropout",ss.serialization.registerClass(lh);class dh extends lh{constructor(e){super(e),this.inputSpec=[{ndim:3}]}getNoiseShape(e){const t=e.shape;return[t[0],1,t[2]]}}dh.className="SpatialDropout1D",ss.serialization.registerClass(dh);class hh extends Ml{constructor(e){if(super(e),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",null==e.batchInputShape&&null==e.inputShape&&null!=e.inputDim){let t=null;null!=e.batchSize&&(t=e.batchSize),this.batchInputShape=[t,e.inputDim]}this.units=e.units,$(this.units,"units"),this.activation=Un(e.activation),null!=e.useBias&&(this.useBias=e.useBias),this.kernelInitializer=$e(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=$e(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=z(e.kernelConstraint),this.biasConstraint=z(e.biasConstraint),this.kernelRegularizer=Yn(e.kernelRegularizer),this.biasRegularizer=Yn(e.biasRegularizer),this.activityRegularizer=Yn(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){e=Qe(e);const t=e[e.length-1];null==this.kernel&&(this.kernel=this.addWeight("kernel",[t,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:t}}],this.built=!0}computeOutputShape(e){e=Qe(e);const t=e.slice();return t[t.length-1]=this.units,t}call(e,t){return Object(ss.tidy)(()=>{this.invokeCallHook(e,t);const n=Ze(e),r=D(this.activation.getClassName());let a;return null!=r?a=be(n,this.kernel.read(),r,this.bias?this.bias.read():null):(a=be(n,this.kernel.read()),null!=this.bias&&(a=ve(a,this.bias.read())),null!=this.activation&&(a=this.activation.apply(a))),a})}getConfig(){const e={units:this.units,activation:Wn(this.activation),useBias:this.useBias,kernelInitializer:Ee(this.kernelInitializer),biasInitializer:Ee(this.biasInitializer),kernelRegularizer:Kn(this.kernelRegularizer),biasRegularizer:Kn(this.biasRegularizer),activityRegularizer:Kn(this.activityRegularizer),kernelConstraint:R(this.kernelConstraint),biasConstraint:R(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}hh.className="Dense",ss.serialization.registerClass(hh);class ph extends Ml{constructor(e){e=e||{},super(e),this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=Qe(e);for(const t of e.slice(1))if(null==t)throw new Uc('The shape of the input to "Flatten" is not fully defined '+`(got ${e.slice(1)}). Make sure to pass a complete `+'"input_shape" or "batch_input_shape" argument to the first layer in your model.');return[e[0],J(e,1)]}call(e,t){return Object(ss.tidy)(()=>{this.invokeCallHook(e,t);let n=Ze(e);if("channelsFirst"===this.dataFormat&&n.rank>1){const e=[0];for(let t=2;t<n.rank;++t)e.push(t);e.push(1),n=n.transpose(e)}return ue(n)})}getConfig(){const e={};null!=this.dataFormat&&(e.dataFormat=this.dataFormat);const t=super.getConfig();return Object.assign(e,t),e}}ph.className="Flatten",ss.serialization.registerClass(ph);class fh extends Ml{constructor(e){super(e),this.supportsMasking=!0,this.activation=Un(e.activation)}call(e,t){return Object(ss.tidy)(()=>{this.invokeCallHook(e,t);const n=Ze(e);return this.activation.apply(n)})}getConfig(){const e={activation:Wn(this.activation)},t=super.getConfig();return Object.assign(e,t),e}}fh.className="Activation",ss.serialization.registerClass(fh);class mh extends Ml{constructor(e){super(e),this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,t){return Object(ss.tidy)(()=>(e=Ze(e),ie(e,this.n)))}getConfig(){const e={n:this.n},t=super.getConfig();return Object.assign(e,t),e}}mh.className="RepeatVector",ss.serialization.registerClass(mh);class bh extends Ml{constructor(e){super(e),this.targetShape=e.targetShape;for(let e=0;e<this.targetShape.length;++e)this.isUnknown(this.targetShape[e])&&(this.targetShape[e]=null)}isUnknown(e){return e<0||null==e}fixUnknownDimension(e,t){const n="Total size of new array must be unchanged.",r=t.slice();let a=1,s=null;for(let e=0;e<r.length;++e){const t=r[e];if(this.isUnknown(t)){if(null!==s)throw new Uc("Can only specifiy one unknown dimension.");s=e}else a*=t}const i=J(e);if(null!==s){if(0===a||i%a!=0)throw new Uc(n);r[s]=i/a}else if(i!==a)throw new Uc(n);return r}computeOutputShape(e){let t=!1;for(let n=0;n<e.length;++n)if(this.isUnknown(e[n])){t=!0;break}return t?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,t){return Object(ss.tidy)(()=>{this.invokeCallHook(e,t);const n=Ze(e),r=n.shape,a=r.slice(0,1).concat(this.fixUnknownDimension(r.slice(1),this.targetShape));return n.reshape(a)})}getConfig(){const e={targetShape:this.targetShape},t=super.getConfig();return Object.assign(e,t),e}}bh.className="Reshape",ss.serialization.registerClass(bh);class gh extends Ml{constructor(e){if(super(e),null==e.dims)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error("Permute constructor requires `dims` to be an Array, but received "+`${e.dims} instead.`);const t=re(1,e.dims.length+1);if(!ss.util.arraysEqual(e.dims.slice().sort(),t))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new Al({ndim:this.dims.length+1})]}computeOutputShape(e){e=Qe(e);const t=e.slice();return this.dims.forEach((n,r)=>{t[r+1]=e[n]}),t}call(e,t){return Object(ss.transpose)(Ze(e),this.dimsIncludingBatch)}getConfig(){const e={dims:this.dims},t=super.getConfig();return Object.assign(e,t),e}}gh.className="Permute",ss.serialization.registerClass(gh);class yh extends Ml{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,this.maskValue=null!=e?null==e.maskValue?0:e.maskValue:0}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={maskValue:this.maskValue};return Object.assign(t,e),t}computeMask(e,t){const n=Ze(e),r=-1;return Object(ss.any)(Object(ss.notEqual)(n,this.maskValue),r)}call(e,t){return Object(ss.tidy)(()=>{this.invokeCallHook(e,t);const n=Ze(e),r=-1,a=!0,s=Object(ss.any)(Object(ss.notEqual)(n,this.maskValue),r,a),i=n.mul(s.asType(n.dtype));return i})}}yh.className="Masking",ss.serialization.registerClass(yh);class xh extends Ml{constructor(e){if(super(e),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",null==e.batchInputShape&&null==e.inputShape){let t=null;null!=e.batchSize&&(t=e.batchSize),null==e.inputLength?this.batchInputShape=[t,null]:this.batchInputShape=[t].concat(x(e.inputLength))}this.inputDim=e.inputDim,$(this.inputDim,"inputDim"),this.outputDim=e.outputDim,$(this.outputDim,"outputDim"),this.embeddingsInitializer=$e(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=Yn(e.embeddingsRegularizer),this.activityRegularizer=Yn(e.activityRegularizer),this.embeddingsConstraint=z(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,t){return Object(ss.tidy)(()=>this.maskZero?(e=Ze(e),Object(ss.notEqual)(e,Object(ss.zerosLike)(e))):null)}computeOutputShape(e){if(e=Qe(e),null==this.inputLength)return[...e,this.outputDim];const t=x(this.inputLength);if(t.length!==e.length-1)throw new Uc(`"inputLength" is ${this.inputLength}, but received `+`input shape has shape ${e}`);{let n=0;for(let r=0;r<t.length;++r){const a=t[r],s=e[r+1];if(null!=a&&null!=s&&a!==s)throw new Uc(`"inputLength" is ${this.inputLength}, but received `+`input shape has shape ${e}`);null==a&&(t[n]=s),n++}}return[e[0],...t,this.outputDim]}call(e,t){return Object(ss.tidy)(()=>{this.invokeCallHook(e,t);let n=Ze(e);"int32"!==n.dtype&&(n=ae(n,"int32"));const r=ge(this.embeddings.read(),n.as1D());return r.reshape(Qe(this.computeOutputShape(n.shape)))})}getConfig(){const e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:Ee(this.embeddingsInitializer),embeddingsRegularizer:Kn(this.embeddingsRegularizer),activityRegularizer:Kn(this.activityRegularizer),embeddingsConstraint:R(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},t=super.getConfig();return Object.assign(e,t),e}}xh.className="Embedding",ss.serialization.registerClass(xh);class vh extends Ml{constructor(e){super(e||{}),this.supportsMasking=!0}mergeFunction(e){throw new Gc}computeElementwiseOpOutputShape(e,t){if(null==e||null==t)return null;if(e.length<t.length)return this.computeElementwiseOpOutputShape(t,e);if(0===t.length)return e;const n=e.slice(0,e.length-t.length);for(let r=0;r<t.length;++r){const a=e[e.length-t.length+r],s=t[r];if(null==a||null==s||a<0||s<0)n.push(null);else if(1===a)n.push(s);else if(1===s)n.push(a);else{if(a!==s)throw new Uc("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(t));n.push(a)}}return n}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[Qe(e)]),e=e,e.length<2)throw new Uc("A merge layer should be called on an Array of at least 2 inputs."+` Got ${e.length} input(s).`);let t=[];for(const n of e)null!=n&&null!==n[0]&&t.push(n[0]);if(t=S(t),t.length>1)throw new Uc("Can not merge tensors with different batch sizes. "+`Got tensors with shapes: ${JSON.stringify(e)}.`);let n=null==e[0]?null:e[0].slice(1);for(let t=1;t<e.length;++t){const r=null==e[t]?null:e[t].slice(1);n=this.computeElementwiseOpOutputShape(n,r)}const r=e.map(e=>e.length);-1===e.indexOf(null)&&1===S(r).length?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,t){return Object(ss.tidy)(()=>{if(e=e,this.reshapeRequired){const t=[],n=e.map(e=>e.rank);if(-1===n.indexOf(null)){const r=ne(n);for(let n of e){const e=n.rank;for(let t=0;t<r-e;++t)n=se(n,1);t.push(n)}return this.mergeFunction(t)}{let n=!1;for(const r of e){const e=r.rank;if(null==e){const e=r.shape,a=e[0],s=e.slice(1).concat([a]);let i=r.reshape([a].concat(J(e.slice(1))));i=ss.transpose(i,[1,0]),i=i.reshape(s),t.push(i),n=!0}else if(e>1){const a=re(1,e).concat([0]);t.push(ss.transpose(r,a)),n=!0}else t.push(r)}let r=this.mergeFunction(t);const a=r.rank;if(n)if(null==a){const e=r.shape,t=e.length,n=e[t-1],a=[n].concat(e.slice(0,e.length-1));r=ss.transpose(r.reshape([-1,n]),[1,0]).reshape(a)}else if(a>1){const e=[a-1].concat(re(0,a-1));r=ss.transpose(r,e)}return r}}return this.mergeFunction(e)})}computeOutputShape(e){let t;e=e,t=null==e[0]?null:e[0].slice(1);for(let n=1;n<e.length;++n){const r=null==e[n]?null:e[n].slice(1);t=this.computeElementwiseOpOutputShape(t,r)}let n=[];for(const t of e)null!=t&&null!==t[0]&&n.push(t[0]);return n=S(n),t=1===n.length?n.concat(t):[null].concat(t),t}computeMask(e,t){return ss.tidy(()=>{if(null==t)return null;if(!Array.isArray(t))throw new Uc("`mask` should be an Array");if(!Array.isArray(e))throw new Uc("`inputs` should be an Array");if(t.length!==e.length)throw new Uc("The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths "+`(${e.length} vs ${t.length})`);if(t.every(e=>null==e))return null;t=t.map(e=>null==e?e:ss.expandDims(e,0));let n=t[0];for(let e=1;e<t.length-1;++e)n=ss.logicalAnd(n,t[e]);return n})}}class wh extends vh{constructor(e){super(e)}mergeFunction(e){return Object(ss.tidy)(()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=ss.add(t,e[n]);return t})}}wh.className="Add",ss.serialization.registerClass(wh);class kh extends vh{constructor(e){super(e)}mergeFunction(e){return Object(ss.tidy)(()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=ss.mul(t,e[n]);return t})}}kh.className="Multiply",ss.serialization.registerClass(kh);class Oh extends vh{constructor(e){super(e)}mergeFunction(e){return Object(ss.tidy)(()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=ss.add(t,e[n]);return ss.mul(1/e.length,t)})}}Oh.className="Average",ss.serialization.registerClass(Oh);class Ih extends vh{constructor(e){super(e)}mergeFunction(e){return Object(ss.tidy)(()=>{let t=e[0];for(let n=1;n<e.length;++n)t=ss.maximum(t,e[n]);return t})}}Ih.className="Maximum",ss.serialization.registerClass(Ih);class Nh extends vh{constructor(e){super(e)}mergeFunction(e){return Object(ss.tidy)(()=>{let t=e[0];for(let n=1;n<e.length;++n)t=ss.minimum(t,e[n]);return t})}}Nh.className="Minimum",ss.serialization.registerClass(Nh);class jh extends vh{constructor(e){super(e),this.DEFAULT_AXIS=-1,null==e&&(e={}),this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!Array.isArray(e)||!Array.isArray(e[0])||1===e.length)throw new Uc("A `Concatenate` layer should be called on a list of at least 2 inputs");e=e;let t=!0;for(const n of e)if(null!=n){t=!1;break}if(t)return;const n=[];for(let t=0;t<e.length;++t){const r=e[t].slice();r.splice(this.axis,1);let a=!1;for(const e of n)if(ss.util.arraysEqual(e,r)){a=!0;break}a||n.push(r)}if(n.length>1)throw new Uc("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return Object(ss.tidy)(()=>he(e,this.axis))}computeOutputShape(e){if(!Array.isArray(e)||!Array.isArray(e[0]))throw new Uc("A `Concatenate` layer should be called on a list of inputs.");const t=e,n=t[0].slice(),r=this.axis<0?n.length+this.axis:this.axis;for(const e of t.slice(1)){if(null==n[r]||null==e[r]){n[r]=null;break}n[r]+=e[r]}return n}computeMask(e,t){if(null==t)return null;if(!Array.isArray(t))throw new Uc("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new Uc("`inputs` should be an array for Concatenate");if(t.length!==e.length)throw new Uc(`Mismatch in the length of mask (${t.length}) `+`and the legnth of inputs (${e.length})`);return ss.tidy(()=>{let n=!0;if(t.forEach(e=>{null==e||(n=!1)}),n)return null;const r=[];for(let n=0;n<e.length;++n)null==t[n]?r.push(ss.onesLike(e[n]).asType("bool")):t[n].rank<e[n].rank?r.push(ss.expandDims(t[n],-1)):r.push(t[n]);const a=ss.concat(r,this.axis);return ss.all(a,-1,!1)})}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}jh.className="Concatenate",ss.serialization.registerClass(jh);class Sh extends vh{constructor(e){super(e),this.axes=e.axes,this.normalize=null!=e.normalize&&e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){ss.util.assert(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");const t=e[0],n=e[1];if(t.length>3||n.length>3)throw new Gc("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(t,n);if(t[r[0]]!==n[r[1]])throw new Uc("Dimension incompatibility: "+`${t[r[0]]} !== ${n[r[1]]}`)}mergeFunction(e){if(2!==e.length)throw new Uc("A `Dot` layer must be called on exactly 2 inputs, "+`but received ${e.length} input(s).`);let t,n=e[0],r=e[1];return t=Array.isArray(this.axes)?this.axes.map((t,n)=>cr(t,e[n].shape.length)):[cr(this.axes,n.shape.length),cr(this.axes,r.shape.length)],this.normalize&&(n=ht(n,t[0]),r=ht(r,t[1])),lr(n,r,t)}interpretAxes(e,t){let n;return n=Array.isArray(this.axes)?this.axes:[cr(this.axes,e.length),cr(this.axes,t.length)],n}computeOutputShape(e){ss.util.assert(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");const t=e[0].slice(),n=e[1].slice();if(t.length>3||n.length>3)throw new Gc("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(t,n);t.splice(r[0],1),n.splice(r[1],1),n.splice(0,1);const a=t.concat(n);return 1===a.length&&a.push(1),a}computeMask(e,t){return null}getConfig(){const e={axes:this.axes,normalize:this.normalize},t=super.getConfig();return Object.assign(e,t),e}}Sh.className="Dot",ss.serialization.registerClass(Sh);class Th extends Ml{constructor(e){super(e),this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={stddev:this.stddev};return Object.assign(t,e),t}call(e,t){return Object(ss.tidy)(()=>{this.invokeCallHook(e,t);const n=Ze(e),r=()=>me(n.shape,0,this.stddev).add(n),a=Ne(r,()=>n,t.training||!1);return a})}}Th.className="GaussianNoise",ss.serialization.registerClass(Th);class Ch extends Ml{constructor(e){super(e),
this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return Object(ss.tidy)(()=>{this.invokeCallHook(e,t);const n=Ze(e);if(this.rate>0&&this.rate<1){const e=()=>{const e=Math.sqrt(this.rate/(1-this.rate));return n.mul(me(n.shape,1,e))};return Ne(e,()=>n,t.training||!1)}return n})}}Ch.className="GaussianDropout",ss.serialization.registerClass(Ch);class Eh extends Ml{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||Ze(e).shape}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return Object(ss.tidy)(()=>{if(this.rate<1&&this.rate>0){const n=this._getNoiseShape(e),r=()=>{const t=Ze(e),r=1.6732632423543772,a=1.0507009873554805,s=-r*a;let i=Object(ss.greaterEqual)(Object(ss.randomUniform)(n),this.rate);i=ae(i,"float32");const o=((1-this.rate)*(1+this.rate*s**2))**-.5,u=-o*s*this.rate,c=t.mul(i).add(i.add(-1).mul(s));return c.mul(o).add(u)};return Ne(r,()=>Ze(e),t.training||!1)}return e})}}Eh.className="AlphaDropout",ss.serialization.registerClass(Eh);class $h extends Ml{constructor(e){null==e&&(e={}),super(e),this.supportsMasking=!0,this.axis=null==e.axis?-1:e.axis,this.momentum=null==e.momentum?.99:e.momentum,this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=$e(e.betaInitializer||"zeros"),this.gammaInitializer=$e(e.gammaInitializer||"ones"),this.movingMeanInitializer=$e(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=$e(e.movingVarianceInitializer||"ones"),this.betaConstraint=z(e.betaConstraint),this.gammaConstraint=z(e.gammaConstraint),this.betaRegularizer=Yn(e.betaRegularizer),this.gammaRegularizer=Yn(e.gammaRegularizer)}build(e){e=Qe(e);const t=this.axis>=0?this.axis:this.axis+e.length,n=e[t];if(null==n)throw new Uc(`Axis ${t} of input tensor should have a defined dimension but `+"the layer received an input with shape "+`${JSON.stringify(e)}.`);this.inputSpec=[new Al({ndim:e.length,axes:{[t]:n}})];const r=[n];this.scale&&(this.gamma=this.addWeight("gamma",r,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",r,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",r,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",r,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,t){return Object(ss.tidy)(()=>{const n=null!=t.training&&t.training,r=Ze(e),a=r.shape,s=a.length,i=re(0,s),o=this.axis>=0?this.axis:this.axis+s;i.splice(o,1);const u=m(1,s);u[o]=a[o];const c=i.slice();c.sort();const l=!ss.util.arraysEqual(c,re(0,s).slice(0,s-1)),d=()=>{if(l){const e=this.movingMean.read().reshape(u),t=this.movingVariance.read().reshape(u),n=this.center?this.beta.read().reshape(u):null,a=this.scale?this.gamma.read().reshape(u):null;return dr(r,e,t,n,a,this.epsilon)}return dr(r,this.movingMean.read(),this.movingVariance.read(),null==this.beta?null:this.beta.read(),null==this.gamma?null:this.gamma.read(),this.epsilon)};if(!n)return d();const[h,p,f]=fr(r,this.gamma.read(),this.beta.read(),i,this.epsilon),b=(e,t,n)=>{ss.tidy(()=>{const r=1-n,a=e.read(),s=a.sub(t).mul(r);e.write(a.sub(s))})},g=()=>{b(this.movingMean,p,this.momentum),b(this.movingVariance,f,this.momentum)};return g(),h})}getConfig(){const e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Ee(this.betaInitializer),gammaInitializer:Ee(this.gammaInitializer),movingMeanInitializer:Ee(this.movingMeanInitializer),movingVarianceInitializer:Ee(this.movingVarianceInitializer),betaRegularizer:Kn(this.betaRegularizer),gammaRegularizer:Kn(this.gammaRegularizer),betaConstraint:R(this.betaConstraint),gammaConstraint:R(this.gammaConstraint)},t=super.getConfig();return Object.assign(e,t),e}}$h.className="BatchNormalization",ss.serialization.registerClass($h);class Ah extends Ml{constructor(e){if(null==e&&(e={}),super(e),this.axis=null==e.axis?-1:e.axis,"number"==typeof this.axis){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else{if(!Array.isArray(this.axis))throw new Error("Expected axis to be an integer or an array of integers, "+`but received ${JSON.stringify(this.axis)}`);for(const e of this.axis)if(!Number.isInteger(e))throw new Error("Expected axis to be an array of integers, "+`but received ${JSON.stringify(this.axis)}`)}this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=$e(e.betaInitializer||"zeros"),this.gammaInitializer=$e(e.gammaInitializer||"ones"),this.betaRegularizer=Yn(e.betaRegularizer),this.gammaRegularizer=Yn(e.gammaRegularizer),this.supportsMasking=!0}build(e){e=Qe(e);const t=e.length;"number"==typeof this.axis&&(this.axis=[this.axis]);for(let e=0;e<this.axis.length;++e)this.axis[e]<0&&(this.axis[e]+=t);for(const e of this.axis)if(e<0||e>=t)throw new Error(`Invalid axis: ${e}`);if(this.axis.length!==S(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);const n=this.axis.map(t=>e[t]),r=!0;this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,r):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,r):this.beta=null,this.built=!0}call(e,t){const n=Ze(e),r=n.shape,a=r.length;return Object(ss.tidy)(()=>{const e=!0;let{mean:t,variance:s}=Object(ss.moments)(n,this.axis,e);const i=m(1,a);for(const e of this.axis)i[e]=r[e];const o=e=>null!=e&&e.shape.length!==a&&this.axis!==[a-1]?e.reshape(i):e;let u=o(this.gamma.read()),c=o(this.beta.read());const l=[],d=[];for(let e=0;e<a;++e)-1!==this.axis.indexOf(e)?(l.push(r[e]),d.push(1)):(l.push(1),d.push(r[e]));return t=t.tile(l),s=s.tile(l),u=u.tile(d),c=c.tile(d),dr(n,t,s,c,u,this.epsilon)})}getConfig(){const e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Ee(this.betaInitializer),gammaInitializer:Ee(this.gammaInitializer),betaRegularizer:Kn(this.betaRegularizer),gammaRegularizer:Kn(this.gammaRegularizer)},t=super.getConfig();return Object.assign(e,t),e}}Ah.className="LayerNormalization",ss.serialization.registerClass(Ah);class _h extends Ml{constructor(e){if(null==e&&(e={}),super(e),this.dataFormat=null==e.dataFormat?f():e.dataFormat,null==e.padding)this.padding=[[1,1],[1,1]];else if("number"==typeof e.padding)this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,2!==e.padding.length)throw new Uc("ZeroPadding2D expects padding to be a length-2 array, but "+`received a length-${e.padding.length} array.`);let t,n;if("number"==typeof e.padding[0])t=[e.padding[0],e.padding[0]],n=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,2!==e.padding[0].length)throw new Uc("ZeroPadding2D expects height padding to be a length-2 array, "+`but received a length-${e.padding[0].length} array.`);if(t=e.padding[0],2!==e.padding[1].length)throw new Uc("ZeroPadding2D expects width padding to be a length-2 array, "+`but received a length-${e.padding[1].length} array.`);n=e.padding[1]}this.padding=[t,n]}this.inputSpec=[new Al({ndim:4})]}computeOutputShape(e){let t,n;return e=Qe(e),"channelsFirst"===this.dataFormat?(t=null!=e[2]&&e[2]>=0?e[2]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[3]&&e[3]>=0?e[3]+this.padding[1][0]+this.padding[1][1]:null,[e[0],e[1],t,n]):(t=null!=e[1]&&e[1]>=0?e[1]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[2]&&e[2]>=0?e[2]+this.padding[1][0]+this.padding[1][1]:null,[e[0],t,n,e[3]])}call(e,t){return Object(ss.tidy)(()=>mr(Ze(e),this.padding,this.dataFormat))}getConfig(){const e={padding:this.padding,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}_h.className="ZeroPadding2D",ss.serialization.registerClass(_h);class Dh extends Ml{constructor(e){if(null==e.poolSize&&(e.poolSize=2),super(e),"number"==typeof e.poolSize)this.poolSize=[e.poolSize];else{if(!Array.isArray(e.poolSize)||1!==e.poolSize.length||"number"!=typeof e.poolSize[0])throw new Uc("poolSize for 1D convolutional layer must be a number or an Array of a single number, but received "+`${JSON.stringify(e.poolSize)}`);this.poolSize=e.poolSize}if($(this.poolSize,"poolSize"),null==e.strides)this.strides=this.poolSize;else if("number"==typeof e.strides)this.strides=[e.strides];else{if(!Array.isArray(e.strides)||1!==e.strides.length||"number"!=typeof e.strides[0])throw new Uc("strides for 1D convolutional layer must be a number or an Array of a single number, but received "+`${JSON.stringify(e.strides)}`);this.strides=e.strides}$(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,G(this.padding),this.inputSpec=[new Al({ndim:3})]}computeOutputShape(e){e=Qe(e);const t=Qn(e[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(e,t){return Object(ss.tidy)(()=>{this.invokeCallHook(e,t),e=se(Ze(e),2);const n=this.poolingFunction(Ze(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return ss.squeeze(n,[2])})}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},t=super.getConfig();return Object.assign(e,t),e}}class Fh extends Dh{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return V(a),G(r),br(e,t,n,r,a,"max")}}Fh.className="MaxPooling1D",ss.serialization.registerClass(Fh);class Rh extends Dh{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return V(a),G(r),br(e,t,n,r,a,"avg")}}Rh.className="AveragePooling1D",ss.serialization.registerClass(Rh);class Mh extends Ml{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(2!==e.strides.length)throw new Uc("If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length "+`${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides];$(this.poolSize,"poolSize"),$(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,V(this.dataFormat),G(this.padding),this.inputSpec=[new Al({ndim:4})]}computeOutputShape(e){e=Qe(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2];return t=Qn(t,this.poolSize[0],this.padding,this.strides[0]),n=Qn(n,this.poolSize[1],this.padding,this.strides[1]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n]:[e[0],t,n,e[3]]}call(e,t){return Object(ss.tidy)(()=>(this.invokeCallHook(e,t),this.poolingFunction(Ze(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class zh extends Mh{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return V(a),G(r),br(e,t,n,r,a,"max")}}zh.className="MaxPooling2D",ss.serialization.registerClass(zh);class Lh extends Mh{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return V(a),G(r),br(e,t,n,r,a,"avg")}}Lh.className="AveragePooling2D",ss.serialization.registerClass(Lh);class Ph extends Ml{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(3!==e.strides.length)throw new Uc("If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length "+`${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];$(this.poolSize,"poolSize"),$(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,V(this.dataFormat),G(this.padding),this.inputSpec=[new Al({ndim:5})]}computeOutputShape(e){e=Qe(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],r="channelsFirst"===this.dataFormat?e[4]:e[3];return t=Qn(t,this.poolSize[0],this.padding,this.strides[0]),n=Qn(n,this.poolSize[1],this.padding,this.strides[1]),r=Qn(r,this.poolSize[2],this.padding,this.strides[2]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n,r]:[e[0],t,n,r,e[4]]}call(e,t){return Object(ss.tidy)(()=>(this.invokeCallHook(e,t),this.poolingFunction(Ze(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class Bh extends Ph{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return V(a),G(r),gr(e,t,n,r,a,"max")}}Bh.className="MaxPooling3D",ss.serialization.registerClass(Bh);class Wh extends Ph{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return V(a),G(r),gr(e,t,n,r,a,"avg")}}Wh.className="AveragePooling3D",ss.serialization.registerClass(Wh);class Vh extends Ml{constructor(e){super(e),this.inputSpec=[new Al({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new Gc}}class Uh extends Vh{constructor(e){super(e||{})}call(e,t){return Object(ss.tidy)(()=>{const t=Ze(e);return ss.mean(t,1)})}}Uh.className="GlobalAveragePooling1D",ss.serialization.registerClass(Uh);class Gh extends Vh{constructor(e){super(e||{})}call(e,t){return Object(ss.tidy)(()=>{const t=Ze(e);return ss.max(t,1)})}}Gh.className="GlobalMaxPooling1D",ss.serialization.registerClass(Gh);class Hh extends Ml{constructor(e){super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,V(this.dataFormat),this.inputSpec=[new Al({ndim:4})]}computeOutputShape(e){return e=e,"channelsLast"===this.dataFormat?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new Gc}getConfig(){const e={dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class qh extends Hh{call(e,t){return Object(ss.tidy)(()=>{const t=Ze(e);return"channelsLast"===this.dataFormat?ss.mean(t,[1,2]):ss.mean(t,[2,3])})}}qh.className="GlobalAveragePooling2D",ss.serialization.registerClass(qh);class Kh extends Hh{call(e,t){return Object(ss.tidy)(()=>{const t=Ze(e);return"channelsLast"===this.dataFormat?ss.max(t,[1,2]):ss.max(t,[2,3])})}}Kh.className="GlobalMaxPooling2D",ss.serialization.registerClass(Kh);class Xh extends Ml{constructor(e){super(e),this.layer=e.layer}build(e){this.built=!0}get trainable(){return null!=this.layer&&this.layer.trainable}set trainable(e){null!=this.layer&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){const e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},t=super.getConfig();return Object.assign(e,t),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.layer&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t,n={}){const r=t.layer,a=dt(r,n);delete t.layer;const s={layer:a};return Object.assign(s,t),new e(s)}}class Yh extends Xh{constructor(e){super(e),this.supportsMasking=!0}build(e){if(e=Qe(e),e.length<3)throw new Uc("TimeDistributed layer expects an input shape >= 3D, but received "+`input shape ${JSON.stringify(e)}`);this.inputSpec=[{shape:e}];const t=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(t),this.layer.built=!0),super.build(e)}computeOutputShape(e){e=Qe(e);const t=[e[0]].concat(e.slice(2)),n=this.layer.computeOutputShape(t),r=e[1];return[n[0],r].concat(n.slice(1))}call(e,t){return Object(ss.tidy)(()=>{e=Ze(e);const n=(e,n)=>{const r=Ze(this.layer.call(e,t));return[r,[]]},r=or(n,e,[],!1,null,null,!1,!0),a=r[1];return a})}}Yh.className="TimeDistributed",ss.serialization.registerClass(Yh);const Zh="concat";class Qh extends Xh{constructor(e){super(e);const t=e.layer.getConfig(),n={};n.className=e.layer.getClassName(),n.config=t,this.forwardLayer=dt(n),t.goBackwards=!0!==t.goBackwards;const r={};if(r.className=e.layer.getClassName(),r.config=t,this.backwardLayer=dt(r),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=void 0===e.mergeMode?Zh:e.mergeMode,yr(this.mergeMode),e.weights)throw new Gc("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,null!=this.forwardLayer&&(this.forwardLayer.trainable=e),null!=this.backwardLayer&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){const t=e.length,n=Math.floor(t/2);this.forwardLayer.setWeights(e.slice(0,n)),this.backwardLayer.setWeights(e.slice(n))}computeOutputShape(e){let t,n,r,a=this.forwardLayer.computeOutputShape(e);return Array.isArray(a)&&Array.isArray(a[0])||(a=[a]),a=a,this.returnState?(r=a.slice(1),t=a[0]):t=a[0],t=t,"concat"===this.mergeMode?(t[t.length-1]*=2,n=[t]):n=null==this.mergeMode?[t,t.slice()]:[t],this.returnState?null==this.mergeMode?n.concat(r).concat(r.slice()):[t].concat(r).concat(r.slice()):y(n)}apply(e,t){let n=null==t?null:t.initialState,r=null==t?null:t.constants;null==t&&(t={});const a=ir(e,n,r,this.numConstants);if(e=a.inputs,n=a.initialState,r=a.constants,Array.isArray(e)&&(n=e.slice(1),e=e[0]),(null==n||0===n.length)&&null==r)return super.apply(e,t);const s=[],i=[];if(null!=n){const e=n.length;if(e%2>0)throw new Uc("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");t.initialState=n,s.push(...n);const r=n.map(e=>new Al({shape:e.shape}));this.forwardLayer.stateSpec=r.slice(0,e/2),this.backwardLayer.stateSpec=r.slice(e/2),i.push(...r)}if(null!=r)throw new Gc("Support for constants in Bidirectional layers is not implemented yet.");const o=s[0]instanceof _l;for(const e of s)if(e instanceof _l!==o)throw new Uc("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(o){const n=[e].concat(s),r=this.inputSpec.concat(i),a=this.inputSpec;this.inputSpec=r;const o=super.apply(n,t);return this.inputSpec=a,o}return super.apply(e,t)}call(e,t){return Object(ss.tidy)(()=>{const n=t.initialState;let r,a,s,i;if(null==n)r=this.forwardLayer.call(e,t),a=this.backwardLayer.call(e,t);else{const s=n.slice(0,n.length/2),i=n.slice(n.length/2);r=this.forwardLayer.call(e,Object.assign(t,{initialState:s})),a=this.backwardLayer.call(e,Object.assign(t,{initialState:i}))}return this.returnState&&(Array.isArray(r)&&(s=r.slice(1).concat(a.slice(1))),r=r[0],a=a[0]),this.returnSequences&&(a=ss.reverse(a,1)),"concat"===this.mergeMode?i=he([r,a]):"sum"===this.mergeMode?i=ss.add(r,a):"ave"===this.mergeMode?i=ss.mul(.5,ss.add(r,a)):"mul"===this.mergeMode?i=ss.mul(r,a):null==this.mergeMode&&(i=[r,a]),this.returnState?null==this.mergeMode?i.concat(s):[i].concat(s):i})}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){q(this.forwardLayer.name,()=>{this.forwardLayer.build(e)}),q(this.backwardLayer.name,()=>{this.backwardLayer.build(e)}),this.built=!0}computeMask(e,t){let n;if(Array.isArray(t)&&(t=t[0]),n=this.returnSequences?null==this.mergeMode?[t,t]:t:null==this.mergeMode?[null,null]:null,this.returnState){const e=this.forwardLayer.states,t=e.map(e=>null);return Array.isArray(n)?n.concat(t).concat(t):[n].concat(t).concat(t)}return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.forwardLayer&&this.forwardLayer.setFastWeightInitDuringBuild(e),null!=this.backwardLayer&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){const e={mergeMode:this.mergeMode},t=super.getConfig();return Object.assign(e,t),e}static fromConfig(e,t){const n=dt(t.layer);if(delete t.layer,null!=t.numConstants)throw new Gc("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const r=t;return r.layer=n,new e(r)}}Qh.className="Bidirectional",ss.serialization.registerClass(Qh);const Jh=da,ep=ha,tp=pa,np=fa;class rp extends Bl{constructor(){super(...arguments),this.model=null}setModel(e){if(!(e instanceof hd))throw new Error("model must be a LayersModel, not some other Container");this.model=e}}class ap extends rp{constructor(e){if(super(),null==e&&(e={}),e.restoreBestWeights)throw new Gc("restoreBestWeights = True is not implemented in EarlyStopping yet.");this.monitor=e.monitor||"val_loss",this.minDelta=Math.abs(e.minDelta||0),this.patience=e.patience||0,this.verbose=e.verbose||0,this.mode=e.mode||"auto",this.baseline=e.baseline,-1===["auto","min","max"].indexOf(this.mode)&&(console.warn(`EarlyStopping mode '${this.mode}' is invalid. `+"Falling back to mode 'auto'."),this.mode="auto"),"min"===this.mode?this.monitorFunc=Ya:"max"===this.mode?this.monitorFunc=Za:-1!==this.monitor.indexOf("acc")?this.monitorFunc=Za:this.monitorFunc=Ya,this.monitorFunc===Ya&&(this.minDelta*=-1)}async onTrainBegin(e){this.wait=0,this.stoppedEpoch=0,null!=this.baseline?this.best=this.baseline:this.best=this.monitorFunc===Ya?1/0:-1/0}async onEpochEnd(e,t){await ot(t);const n=this.getMonitorValue(t);null!=n&&(this.monitorFunc(n-this.minDelta,this.best)?(this.best=n,this.wait=0):(this.wait++,this.wait>=this.patience&&(this.stoppedEpoch=e,this.model.stopTraining=!0)))}async onTrainEnd(e){this.stoppedEpoch>0&&this.verbose&&console.log(`Epoch ${this.stoppedEpoch}: early stopping.`)}getMonitorValue(e){null==e&&(e={});const t=e[this.monitor];return null==t&&console.warn(`Metric for EarlyStopping ${this.monitor} is not available. `+`Available metrics are: ${Object.keys(e)}`),t}}const sp={earlyStopping:Qa}},function(e,t,n){"use strict";function r(e,t){ta[e]=t}function a(e){if(!(e in ta)){const t=i(e);if(null===t)return console.log("Could not get context for WebGL version",e),null;ta[e]=t}const t=ta[e];return t.isContextLost()?(delete ta[e],a(e)):(t.disable(t.DEPTH_TEST),t.disable(t.STENCIL_TEST),t.disable(t.BLEND),t.disable(t.DITHER),t.disable(t.POLYGON_OFFSET_FILL),t.disable(t.SAMPLE_COVERAGE),t.enable(t.SCISSOR_TEST),t.enable(t.CULL_FACE),t.cullFace(t.BACK),ta[e])}function s(e){if("undefined"!=typeof OffscreenCanvas&&2===e)return new OffscreenCanvas(300,150);if("undefined"!=typeof document)return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}function i(e){if(1!==e&&2!==e)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const t=s(e);return t.addEventListener("webglcontextlost",t=>{t.preventDefault(),delete ta[e]},!1),1===e?t.getContext("webgl",na)||t.getContext("experimental-webgl",na):t.getContext("webgl2",na)}function o(e,t){return[t,e]}function u(e,t){return e*t}function c(e){const t=ea.util.sizeFromShape(e),n=Math.ceil(t/4);return ea.util.sizeToSquarishShape(n)}function l(e,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(e/2))]}function d(e,t){const[n,r]=l(e,t);return n*r*4}function h(e,t){const n=e;let r,a,s,i,o,u,c,l,d,h;return 2===Object(ea.env)().getNumber("WEBGL_VERSION")?(r=n.R32F,a=n.R16F,s=n.RGBA16F,i=n.RGBA32F,o=n.RED,c=4,l=1,d=n.HALF_FLOAT,h=n.FLOAT):(r=e.RGBA,a=e.RGBA,s=e.RGBA,i=n.RGBA,o=e.RGBA,c=4,l=4,d=null!=t?t.HALF_FLOAT_OES:null,h=e.FLOAT),u=e.RGBA,{internalFormatFloat:r,internalFormatHalfFloat:a,internalFormatPackedHalfFloat:s,internalFormatPackedFloat:i,textureFormatFloat:o,downloadTextureFormat:u,downloadUnpackNumChannels:c,defaultNumChannels:l,textureTypeHalfFloat:d,textureTypeFloat:h}}function p(e,t){const n=t();return Object(ea.env)().getBool("DEBUG")&&f(e),n}function f(e){const t=e.getError();if(t!==e.NO_ERROR)throw new Error("WebGL Error: "+b(e,t))}function m(e){return!!(Object(ea.env)().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===e||ia<Math.abs(e)&&Math.abs(e)<oa)}function b(e,t){switch(t){case e.NO_ERROR:return"NO_ERROR";case e.INVALID_ENUM:return"INVALID_ENUM";case e.INVALID_VALUE:return"INVALID_VALUE";case e.INVALID_OPERATION:return"INVALID_OPERATION";case e.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case e.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case e.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${t}`}}function g(e,t){return B(e,()=>e.getExtension(t),'Extension "'+t+'" not supported on this browser.')}function y(e,t){const n=B(e,()=>e.createShader(e.VERTEX_SHADER),"Unable to create vertex WebGLShader.");if(p(e,()=>e.shaderSource(n,t)),p(e,()=>e.compileShader(n)),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw console.log(e.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}function x(e,t){const n=B(e,()=>e.createShader(e.FRAGMENT_SHADER),"Unable to create fragment WebGLShader.");if(p(e,()=>e.shaderSource(n,t)),p(e,()=>e.compileShader(n)),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw v(t,e.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}function v(e,t){const n=ua.exec(t);if(null==n)return console.log(`Couldn't parse line number in error: ${t}`),void console.log(e);const r=+n[1],a=e.split("\n"),s=a.length.toString().length+2,i=a.map((e,t)=>ea.util.rightPad((t+1).toString(),s)+e);let o=0;for(let e=0;e<i.length;e++)o=Math.max(i[e].length,o);const u=i.slice(0,r-1),c=i.slice(r-1,r),l=i.slice(r);console.log(u.join("\n")),console.log(t.split("\n")[0]),console.log(`%c ${ea.util.rightPad(c[0],o)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(l.join("\n"))}function w(e){return B(e,()=>e.createProgram(),"Unable to create WebGLProgram.")}function k(e,t){if(p(e,()=>e.linkProgram(t)),!1===e.getProgramParameter(t,e.LINK_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}function O(e,t){if(p(e,()=>e.validateProgram(t)),!1===e.getProgramParameter(t,e.VALIDATE_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function I(e,t){const n=B(e,()=>e.createBuffer(),"Unable to create WebGLBuffer");return p(e,()=>e.bindBuffer(e.ARRAY_BUFFER,n)),p(e,()=>e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW)),n}function N(e,t){const n=B(e,()=>e.createBuffer(),"Unable to create WebGLBuffer");return p(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,n)),p(e,()=>e.bufferData(e.ELEMENT_ARRAY_BUFFER,t,e.STATIC_DRAW)),n}function j(){return 2===Object(ea.env)().getNumber("WEBGL_VERSION")?1:4}function S(e){return B(e,()=>e.createTexture(),"Unable to create WebGLTexture.")}function T(e,t){const n=Object(ea.env)().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e<=0||t<=0){const n=`[${e}x${t}]`;throw new Error("Requested texture size "+n+" is invalid.")}if(e>n||t>n){const r=`[${e}x${t}]`,a=`[${n}x${n}]`;throw new Error("Requested texture size "+r+" greater than WebGL maximum on this browser / GPU "+a+".")}}function C(e){return B(e,()=>e.createFramebuffer(),"Unable to create WebGLFramebuffer.")}function E(e,t,n,r,a,s,i){const o=e.getAttribLocation(t,n);return-1!==o&&(p(e,()=>e.bindBuffer(e.ARRAY_BUFFER,r)),p(e,()=>e.vertexAttribPointer(o,a,e.FLOAT,!1,s,i)),p(e,()=>e.enableVertexAttribArray(o)),!0)}function $(e,t,n){W(e,n),p(e,()=>e.activeTexture(e.TEXTURE0+n)),p(e,()=>e.bindTexture(e.TEXTURE_2D,t))}function A(e,t){W(e,t),p(e,()=>e.activeTexture(e.TEXTURE0+t)),p(e,()=>e.bindTexture(e.TEXTURE_2D,null))}function _(e,t,n){return B(e,()=>e.getUniformLocation(t,n),'uniform "'+n+'" not present in program.')}function D(e,t,n){return e.getUniformLocation(t,n)}function F(e,t,n,r){p(e,()=>$(e,t,r)),p(e,()=>e.uniform1i(n,r))}function R(e){p(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,null)),p(e,()=>e.viewport(0,0,e.canvas.width,e.canvas.height)),p(e,()=>e.scissor(0,0,e.canvas.width,e.canvas.height))}function M(e,t,n){p(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,n)),p(e,()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0))}function z(e,t){p(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,t)),p(e,()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,null,0))}function L(e){const t=e.checkFramebufferStatus(e.FRAMEBUFFER);if(t!==e.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+P(e,t))}function P(e,t){switch(t){case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case e.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${t}`}}function B(e,t,n){const r=p(e,()=>t());if(null==r)throw new Error(n);return r}function W(e,t){const n=e.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,r=t+e.TEXTURE0;if(r<e.TEXTURE0||r>n){const e=`[gl.TEXTURE0, gl.TEXTURE${n}]`;throw new Error(`textureUnit must be in ${e}.`)}}function V(e,t=2){return ea.util.sizeFromShape(e.slice(0,e.length-t))}function U(e){if(0===e.length)throw Error("Cannot get rows and columns of an empty shape array.");return[e.length>1?e[e.length-2]:1,e[e.length-1]]}function G(e){let t=[1,1,1];const n=0===e.length||1===e.length&&1===e[0];return n||(t=[V(e),...U(e)]),t}function H(e,t=!1){let n=Object(ea.env)().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(t&&(n*=2,e=e.map((t,n)=>n>=e.length-2?ea.util.nearestLargerEven(e[n]):e[n]),1===e.length&&(e=[2,e[0]])),2!==e.length){const t=ea.util.squeezeShape(e);e=t.newShape}let r=ea.util.sizeFromShape(e);if(e.length<=1&&r<=n)return[1,r];if(2===e.length&&e[0]<=n&&e[1]<=n)return e;if(3===e.length&&e[0]*e[1]<=n&&e[2]<=n)return[e[0]*e[1],e[2]];if(3===e.length&&e[0]<=n&&e[1]*e[2]<=n)return[e[0],e[1]*e[2]];if(4===e.length&&e[0]*e[1]*e[2]<=n&&e[3]<=n)return[e[0]*e[1]*e[2],e[3]];if(4===e.length&&e[0]<=n&&e[1]*e[2]*e[3]<=n)return[e[0],e[1]*e[2]*e[3]];if(t){const t=V(e);let n=2,a=2;return e.length&&([n,a]=U(e)),r=t*(n/2)*(a/2),ea.util.sizeToSquarishShape(r).map(e=>2*e)}return ea.util.sizeToSquarishShape(r)}function q(e){return e%2==0}function K(e,t){if(e=e.slice(-2),t=t.slice(-2),ea.util.arraysEqual(e,t))return!0;if(!e.length||!t.length)return!0;if(0===e[0]||0===e[1]||0===t[0]||0===t[1])return!0;if(e.length!==t.length){const n=e.slice(-1)[0],r=t.slice(-1)[0];if(n===r)return!0;if(q(n)&&q(r)&&(1===e[0]||1===t[0]))return!0}return e[1]===t[1]&&q(e[0])&&q(t[0])}function X(e){if(null==ca){const t=a(e);ca=t.getParameter(t.MAX_TEXTURE_SIZE)}return ca}function Y(){ca=null}function Z(){la=null}function Q(e){if(null==la){const t=a(e);la=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,la)}function J(e){if(0===e)return 0;let t;const n=a(e);return t=ee(n,"EXT_disjoint_timer_query_webgl2")&&2===e?2:ee(n,"EXT_disjoint_timer_query")?1:0,t}function ee(e,t){const n=e.getExtension(t);return null!=n}function te(e){try{const t=a(e);if(null!=t)return!0}catch(e){return console.log("Error when getting WebGL context: ",e),!1}return!1}function ne(e){if(0===e)return!1;const t=a(e);if(1===e){if(!ee(t,"OES_texture_float"))return!1}else if(!ee(t,"EXT_color_buffer_float"))return!1;const n=ae(t);return n}function re(e){if(0===e)return!1;const t=a(e);if(1!==e){
if(ee(t,"EXT_color_buffer_float"))return ae(t);const e="EXT_color_buffer_half_float";if(ee(t,e)){const n=t.getExtension(e);return se(t,n)}return!1}if(!ee(t,"OES_texture_float"))return!1;if(!ee(t,"WEBGL_color_buffer_float"))return!1;const n=ae(t);return n}function ae(e){const t=h(e),n=e.createTexture();e.bindTexture(e.TEXTURE_2D,n);const r=1,a=1;e.texImage2D(e.TEXTURE_2D,0,t.internalFormatFloat,r,a,0,t.textureFormatFloat,t.textureTypeFloat,null);const s=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,s),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);const i=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(n),e.deleteFramebuffer(s),i}function se(e,t){const n=h(e,t),r=e.createTexture();e.bindTexture(e.TEXTURE_2D,r);const a=1,s=1;e.texImage2D(e.TEXTURE_2D,0,n.internalFormatHalfFloat,a,s,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);const i=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,i),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,r,0);const o=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(r),e.deleteFramebuffer(i),o}function ie(e){if(2!==e)return!1;const t=a(e),n=null!=t.fenceSync;return n}function oe(e,t){Array.isArray(e)||(e=[e]),e.forEach(e=>{null!=e&&ea.util.assert("complex64"!==e.dtype,()=>`${t} does not support complex64 tensors `+"in the WebGL backend.")})}function ue(){let e,t,n,r,a,s,i,o,u,c;return 2===Object(ea.env)().getNumber("WEBGL_VERSION")?(e="#version 300 es",t="in",n="out",r="in",a="texture",s="outputColor",i="out vec4 outputColor;",o="\n      bool isnan_custom(float val) {\n        return (val > 0.0 || val < 0.0) ? false : val != 0.0;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ",u="",c="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(e="",t="attribute",n="varying",r="varying",a="texture2D",s="gl_FragColor",i="",o="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",u="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",c="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:e,attribute:t,varyingVs:n,varyingFs:r,texture2D:a,output:s,defineOutput:i,defineSpecialNaN:o,defineSpecialInf:u,defineRound:c}}function ce(e,t,n="index"){const r=ea.util.computeStrides(t);return r.map((t,a)=>{const s=`int ${e[a]} = ${n} / ${t}`,i=a===r.length-1?`int ${e[a+1]} = ${n} - ${e[a]} * ${t}`:`index -= ${e[a]} * ${t}`;return`${s}; ${i};`}).join("")}function le(e){const t=ea.util.computeStrides(e).map(e=>e.toString());return`\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;\n  }\n`}function de(e){const t=ue(),n=`${t.version}\n    precision highp float;\n    ${t.attribute} vec3 clipSpacePos;\n    ${t.attribute} vec2 uv;\n    ${t.varyingVs} vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }`;return y(e,n)}function he(e){const t=new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]);return I(e,t)}function pe(e){const t=new Uint16Array([0,1,2,2,1,3]);return N(e,t)}function fe(e,t,n,r,a,s){T(t,n);const i=S(e),o=e.TEXTURE_2D;return p(e,()=>e.bindTexture(o,i)),p(e,()=>e.texParameteri(o,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE)),p(e,()=>e.texParameteri(o,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE)),p(e,()=>e.texParameteri(o,e.TEXTURE_MIN_FILTER,e.NEAREST)),p(e,()=>e.texParameteri(o,e.TEXTURE_MAG_FILTER,e.NEAREST)),p(e,()=>e.texImage2D(o,0,r,t,n,0,a,s,null)),p(e,()=>e.bindTexture(e.TEXTURE_2D,null)),i}function me(e){return e.internalFormatFloat}function be(e,t,n,r){const[a,s]=o(t,n);return fe(e,a,s,me(r),r.textureFormatFloat,e.FLOAT)}function ge(e){return e.internalFormatHalfFloat}function ye(e,t,n,r){const[a,s]=o(t,n);return fe(e,a,s,ge(r),r.textureFormatFloat,r.textureTypeHalfFloat)}function xe(e){return e.downloadTextureFormat}function ve(e,t,n,r){const[a,s]=o(t,n);return fe(e,a,s,xe(r),e.RGBA,e.UNSIGNED_BYTE)}function we(e){return e.internalFormatPackedFloat}function ke(e,t,n,r){const[a,s]=l(t,n);return fe(e,a,s,we(r),e.RGBA,e.FLOAT)}function Oe(e){return e.internalFormatPackedHalfFloat}function Ie(e,t,n,r){const[a,s]=l(t,n);return fe(e,a,s,Oe(r),e.RGBA,r.textureTypeHalfFloat)}function Ne(e,t,n){const r=0,a=12,s=20;p(e,()=>e.bindBuffer(e.ARRAY_BUFFER,n));const i=E(e,t,"clipSpacePos",n,3,s,r);return i&&E(e,t,"uv",n,2,s,a)}function je(e,t,n,r,a,s){let i,o,u;p(e,()=>e.bindTexture(e.TEXTURE_2D,t)),a instanceof Uint8Array?(i=new Uint8Array(n*r*4),o=e.UNSIGNED_BYTE,u=e.RGBA):(i=new Float32Array(n*r*4),o=e.FLOAT,u=s.internalFormatPackedFloat),i.set(a),p(e,()=>e.texImage2D(e.TEXTURE_2D,0,u,n,r,0,e.RGBA,o,i)),p(e,()=>e.bindTexture(e.TEXTURE_2D,null))}function Se(e,t,n){p(e,()=>e.bindTexture(e.TEXTURE_2D,t)),n.data instanceof Uint8Array?p(e,()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,n.width,n.height,0,e.RGBA,e.UNSIGNED_BYTE,n.data)):p(e,()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,n)),p(e,()=>e.bindTexture(e.TEXTURE_2D,null))}function Te(e,t,n,r){const a=e.createBuffer();p(e,()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,a));const s=4,i=4,o=s*i*t*n;return p(e,()=>e.bufferData(e.PIXEL_PACK_BUFFER,o,e.STREAM_READ)),p(e,()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,0)),p(e,()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,null)),a}function Ce(e,t,n){const r=e,a=new Float32Array(n);return r.bindBuffer(r.PIXEL_PACK_BUFFER,t),r.getBufferSubData(r.PIXEL_PACK_BUFFER,0,a),r.bindBuffer(r.PIXEL_PACK_BUFFER,null),a}function Ee(e,t,n,r){const[a,s]=o(t,n),i=4,c=new Uint8Array(u(t*n,i));return p(e,()=>e.readPixels(0,0,a,s,r.downloadTextureFormat,e.UNSIGNED_BYTE,c)),new Float32Array(c.buffer)}function $e(e,t,n,r,a,s,i,o){const u=e,c=new Float32Array(d(s,i));return u.bindBuffer(u.PIXEL_PACK_BUFFER,t),u.getBufferSubData(u.PIXEL_PACK_BUFFER,0,c),u.bindBuffer(u.PIXEL_PACK_BUFFER,null),c}function Ae(e,t,n){const r=new Float32Array(t*n*4);return p(e,()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,r)),r}function _e(e){let t=0;for(;t<e.length;++t){const n=e[t]();if(!n)break}return t-1}function De(e,t,n,r){const a=[];e.forEach(e=>{const t=ea.util.sizeFromShape(e.shapeInfo.logicalShape);e.shapeInfo.isUniform?a.push(`uniform float ${e.name}${t>1?`[${t}]`:""};`):(a.push(`uniform sampler2D ${e.name};`),a.push(`uniform int offset${e.name};`))});const s=a.join("\n"),i=e.map(e=>Me(e,t,r)).join("\n"),o=t.texShape,u=ue(),c=Pe(u);let l,d,h=Ve(u);t.isPacked?(l=ze(t.logicalShape,o),d=We(u)):(l=Le(t.logicalShape,o),d=Be(u)),r&&(h+=Ia);const p=[h,c,d,s,l,i,n].join("\n");return p}function Fe(e){const t=e.shapeInfo.logicalShape;switch(t.length){case 0:return rt(e);case 1:return st(e);case 2:return ot(e);case 3:return ct(e);case 4:return dt(e);case 5:return ht(e);case 6:return pt(e);default:throw new Error(`${t.length}-D input sampling`+" is not yet supported")}}function Re(e){const t=e.shapeInfo.logicalShape;switch(t.length){case 0:return nt(e);case 1:return at(e);case 2:return it(e);case 3:return ut(e);default:return lt(e)}}function Me(e,t,n=!1){let r="";r+=n?Re(e):Fe(e);const a=e.shapeInfo.logicalShape,s=t.logicalShape;return a.length<=s.length&&(r+=n?mt(e,t):bt(e,t)),r}function ze(e,t){switch(e.length){case 0:return Ue();case 1:return Ge(e,t);case 2:return Je(e,t);case 3:return qe(e,t);default:return Xe(e,t)}}function Le(e,t){switch(e.length){case 0:return Ue();case 1:return He(e,t);case 2:return et(e,t);case 3:return Ke(e,t);case 4:return Ye(e,t);case 5:return Ze(e,t);case 6:return Qe(e,t);default:throw new Error(`${e.length}-D output sampling is not yet supported`)}}function Pe(e){return`\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return ${e.texture2D}(textureSampler, uv).r;\n    }\n  `}function Be(e){return`\n    void setOutput(float val) {\n      ${e.output} = vec4(val, 0, 0, 0);\n    }\n  `}function We(e){return`\n    void setOutput(vec4 val) {\n      ${e.output} = val;\n    }\n  `}function Ve(e){const t=`${e.version}\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ${e.varyingFs} vec2 resultUV;\n    ${e.defineOutput}\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    ${e.defineSpecialNaN}\n    ${e.defineSpecialInf}\n    ${e.defineRound}\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ${wa}\n    ${ka}\n    ${Oa}\n  `;return t}function Ue(){return"\n    int getOutputCoords() {\n      return 0;\n    }\n  "}function Ge(e,t){const n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];return 1===n[0]?`\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ${n[1]}.0);\n      }\n    `:1===n[1]?`\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ${n[0]}.0);\n      }\n    `:`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      return 2 * (resTexRC.x * ${n[1]} + resTexRC.y);\n    }\n  `}function He(e,t){return 1===t[0]?`\n      int getOutputCoords() {\n        return int(resultUV.x * ${t[1]}.0);\n      }\n    `:1===t[1]?`\n      int getOutputCoords() {\n        return int(resultUV.y * ${t[0]}.0);\n      }\n    `:`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      return resTexRC.x * ${t[1]} + resTexRC.y;\n    }\n  `}function qe(e,t){const n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],r=Math.ceil(e[2]/2),a=r*Math.ceil(e[1]/2);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      int index = resTexRC.x * ${n[1]} + resTexRC.y;\n\n      int b = index / ${a};\n      index -= b * ${a};\n\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec3(b, r, c);\n    }\n  `}function Ke(e,t){const n=ce(["r","c","d"],e);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${n}\n      return ivec3(r, c, d);\n    }\n  `}function Xe(e,t){const n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],r=Math.ceil(e[e.length-1]/2),a=r*Math.ceil(e[e.length-2]/2);let s=a,i="",o="b, r, c";for(let t=2;t<e.length-1;t++)s*=e[e.length-t-1],i=`\n      int b${t} = index / ${s};\n      index -= b${t} * ${s};\n    `+i,o=`b${t}, `+o;return`\n    ivec${e.length} getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      int index = resTexRC.x * ${n[1]} + resTexRC.y;\n\n      ${i}\n\n      int b = index / ${a};\n      index -= b * ${a};\n\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec${e.length}(${o});\n    }\n  `}function Ye(e,t){const n=ce(["r","c","d","d2"],e);return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${n}\n      return ivec4(r, c, d, d2);\n    }\n  `}function Ze(e,t){const n=ce(["r","c","d","d2","d3"],e);return`\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},\n                             ${t[1]}));\n\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  `}function Qe(e,t){const n=ce(["r","c","d","d2","d3","d4"],e);return`\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  `}function Je(e,t){const n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(ea.util.arraysEqual(e,t))return`\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(${n[0]}, ${n[1]}));\n      }\n    `;const r=Math.ceil(e[1]/2);return`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n\n      int index = resTexRC.x * ${n[1]} + resTexRC.y;\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec2(r, c);\n    }\n  `}function et(e,t){return ea.util.arraysEqual(e,t)?`\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));\n      }\n    `:1===e[1]?`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    `:1===e[0]?`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(0, index);\n      }\n    `:`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      int r = index / ${e[1]};\n      int c = index - r * ${e[1]};\n      return ivec2(r, c);\n    }\n  `}function tt(e){return`offset${e}`}function nt(e){const t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),r=ue();return`\n    vec4 ${n}() {\n      return ${r.texture2D}(${t}, halfCR);\n    }\n  `}function rt(e){const t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1);if(e.shapeInfo.isUniform)return`float ${n}() {return ${t};}`;const[r,a]=e.shapeInfo.texShape;if(1===r&&1===a)return`\n      float ${n}() {\n        return sampleTexture(${t}, halfCR);\n      }\n    `;const[s,i]=e.shapeInfo.texShape,o=tt(t);return`\n    float ${n}() {\n      vec2 uv = uvFromFlat(${s}, ${i}, ${o});\n      return sampleTexture(${t}, uv);\n    }\n  `}function at(e){const t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),r=e.shapeInfo.texShape,a=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)],s=ue();return`\n    vec4 ${n}(int index) {\n      vec2 uv = packedUVfrom1D(\n        ${a[0]}, ${a[1]}, index);\n      return ${s.texture2D}(${t}, uv);\n    }\n  `}function st(e){const t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1);if(e.shapeInfo.isUniform)return`\n      float ${n}(int index) {\n        ${ft(e)}\n      }\n    `;const r=e.shapeInfo.texShape,a=r[0],s=r[1];if(1===s&&1===a)return`\n      float ${n}(int index) {\n        return sampleTexture(${t}, halfCR);\n      }\n    `;const i=tt(t);return 1===s?`\n      float ${n}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${i}) + 0.5) / ${a}.0);\n        return sampleTexture(${t}, uv);\n      }\n    `:1===a?`\n      float ${n}(int index) {\n        vec2 uv = vec2((float(index + ${i}) + 0.5) / ${s}.0, 0.5);\n        return sampleTexture(${t}, uv);\n      }\n    `:`\n    float ${n}(int index) {\n      vec2 uv = uvFromFlat(${a}, ${s}, index + ${i});\n      return sampleTexture(${t}, uv);\n    }\n  `}function it(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=e.shapeInfo.texShape,s=a[0],i=a[1],o=ue();if(null!=a&&ea.util.arraysEqual(t,a))return`\n      vec4 ${r}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${i}.0, ${s}.0);\n\n        return ${o.texture2D}(${n}, uv);\n      }\n    `;const u=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)],c=Math.ceil(t[1]/2);return`\n    vec4 ${r}(int row, int col) {\n      vec2 uv = packedUVfrom2D(${c}, ${u[0]}, ${u[1]}, row, col);\n      return ${o.texture2D}(${n}, uv);\n    }\n  `}function ot(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=e.shapeInfo.texShape;if(null!=a&&ea.util.arraysEqual(t,a)){const e=a[0],t=a[1];return`\n    float ${r}(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(${t}.0, ${e}.0);\n      return sampleTexture(${n}, uv);\n    }\n  `}const{newShape:s,keptDims:i}=ea.util.squeezeShape(t),o=s;if(o.length<t.length){const t=yt(e,o),n=["row","col"];return`\n      ${Fe(t)}\n      float ${r}(int row, int col) {\n        return ${r}(${xt(n,i)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(${t[1]}, 1)));\n        ${ft(e)}\n      }\n    `;const u=a[0],c=a[1],l=tt(n);return 1===c?`\n    float ${r}(int row, int col) {\n      float index = dot(vec3(row, col, ${l}), vec3(${t[1]}, 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / ${u}.0);\n      return sampleTexture(${n}, uv);\n    }\n  `:1===u?`\n    float ${r}(int row, int col) {\n      float index = dot(vec3(row, col, ${l}), vec3(${t[1]}, 1, 1));\n      vec2 uv = vec2((index + 0.5) / ${c}.0, 0.5);\n      return sampleTexture(${n}, uv);\n    }\n  `:`\n  float ${r}(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * ${t[1]} + col + ${l};\n    vec2 uv = uvFromFlat(${u}, ${c}, index);\n    return sampleTexture(${n}, uv);\n  }\n`}function ut(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=e.shapeInfo.texShape,s=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];if(1===t[0]){const n=t.slice(1),a=[1,2],s=yt(e,n),i=["b","row","col"];return`\n        ${Re(s)}\n        vec4 ${r}(int b, int row, int col) {\n          return ${r}(${xt(i,a)});\n        }\n      `}const i=s[0],o=s[1],u=Math.ceil(t[2]/2),c=u*Math.ceil(t[1]/2),l=ue();return`\n    vec4 ${r}(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ${i}, ${o}, ${c}, ${u}, b, row, col);\n      return ${l.texture2D}(${n}, uv);\n    }\n  `}function ct(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=t[1]*t[2],s=t[2],{newShape:i,keptDims:o}=ea.util.squeezeShape(t),u=i;if(u.length<t.length){const t=yt(e,u),n=["row","col","depth"];return`\n        ${Fe(t)}\n        float ${r}(int row, int col, int depth) {\n          return ${r}(${xt(n,o)});\n        }\n      `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(${a}, ${s}, 1)));\n        ${ft(e)}\n      }\n    `;const c=e.shapeInfo.texShape,l=c[0],d=c[1],h=e.shapeInfo.flatOffset;if(d===a&&null==h)return`\n        float ${r}(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(${s}, 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(${d}.0, ${l}.0);\n          return sampleTexture(${n}, uv);\n        }\n      `;if(d===s&&null==h)return`\n    float ${r}(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(${t[1]}, 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${d}.0, ${l}.0);\n      return sampleTexture(${n}, uv);\n    }\n  `;const p=tt(n);return`\n      float ${r}(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${a} + col * ${s} + depth + ${p};\n        vec2 uv = uvFromFlat(${l}, ${d}, index);\n        return sampleTexture(${n}, uv);\n      }\n  `}function lt(e){const t=e.shapeInfo.logicalShape,n=t.length,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),s=e.shapeInfo.texShape,i=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)],o=i[0],u=i[1],c=Math.ceil(t[n-1]/2);let l=c*Math.ceil(t[n-2]/2),d="int b, int row, int col",h=`b * ${l} + (row / 2) * ${c} + (col / 2)`;for(let e=2;e<n-1;e++)d=`int b${e}, `+d,l*=t[n-e-1],h=`b${e} * ${l} + `+h;const p=ue();return`\n    vec4 ${a}(${d}) {\n      int index = ${h};\n      int texR = index / ${u};\n      int texC = index - texR * ${u};\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${u}, ${o});\n      return ${p.texture2D}(${r}, uv);\n    }\n  `}function dt(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=t[3],s=t[2]*a,i=t[1]*s,{newShape:o,keptDims:u}=ea.util.squeezeShape(t);if(o.length<t.length){const t=yt(e,o),n=["row","col","depth","depth2"];return`\n      ${Fe(t)}\n      float ${r}(int row, int col, int depth, int depth2) {\n        return ${r}(${xt(n,u)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(${i}, ${s}, ${a}, 1)));\n        ${ft(e)}\n      }\n    `;const c=e.shapeInfo.flatOffset,l=e.shapeInfo.texShape,d=l[0],h=l[1];if(h===i&&null==c)return`\n      float ${r}(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(${s}, ${a}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${h}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(h===a&&null==c)return`\n      float ${r}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${t[1]*t[2]}, ${t[2]}, 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${h}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;const p=tt(n);return`\n    float ${r}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${i} + col * ${s} +\n          depth * ${a} + depth2;\n      vec2 uv = uvFromFlat(${d}, ${h}, index + ${p});\n      return sampleTexture(${n}, uv);\n    }\n  `}function ht(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=t[4],s=t[3]*a,i=t[2]*s,o=t[1]*i,{newShape:u,keptDims:c}=ea.util.squeezeShape(t);if(u.length<t.length){const t=yt(e,u),n=["row","col","depth","depth2","depth3"];return`\n      ${Fe(t)}\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        return ${r}(${xt(n,c)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${o}, ${i}, ${s}, ${a})) +\n          depth3;\n        ${ft(e)}\n      }\n    `;const l=e.shapeInfo.flatOffset,d=e.shapeInfo.texShape,h=d[0],p=d[1];if(p===o&&null==l)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(${i}, ${s}, ${a}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${p}.0, ${h}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(p===a&&null==l)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]},\n               ${t[2]*t[3]}, ${t[3]}, 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${p}.0, ${h}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;const f=tt(n);return`\n    float ${r}(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${o} + col * ${i} + depth * ${s} +\n          depth2 * ${a} + depth3 + ${f};\n      vec2 uv = uvFromFlat(${h}, ${p}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}function pt(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:a,keptDims:s}=ea.util.squeezeShape(t);if(a.length<t.length){const t=yt(e,a),n=["row","col","depth","depth2","depth3","depth4"];return`\n      ${Fe(t)}\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return ${r}(${xt(n,s)});\n      }\n    `}const i=t[5],o=t[4]*i,u=t[3]*o,c=t[2]*u,l=t[1]*c;if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(${l}, ${c}, ${u}, ${o})) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(${i}, 1)));\n        ${ft(e)}\n      }\n    `;const d=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,p=h[0],f=h[1];if(f===l&&null==d)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(${c}, ${u}, ${o}, ${i})) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${f}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(f===i&&null==d)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]*t[4]},\n               ${t[2]*t[3]*t[4]},\n               ${t[3]*t[4]},\n               ${t[4]})) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${f}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;const m=tt(n);return`\n    float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${l} + col * ${c} + depth * ${u} +\n          depth2 * ${o} + depth3 * ${i} + depth4 + ${m};\n      vec2 uv = uvFromFlat(${p}, ${f}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}function ft(e){const t=e.name,n=ea.util.sizeFromShape(e.shapeInfo.logicalShape);return n<2?`return ${t};`:`\n    for (int i = 0; i < ${n}; i++) {\n      if (i == index) {\n        return ${t}[i];\n      }\n    }\n  `}function mt(e,t){const n=e.name,r=n.charAt(0).toUpperCase()+n.slice(1),a="get"+r+"AtOutCoords",s=e.shapeInfo.logicalShape.length,i=t.logicalShape.length,o=va(e.shapeInfo.logicalShape,t.logicalShape),u=gt(i),c=i-s;let l;const d=["x","y","z","w","u","v"];l=0===s?"":i<2&&o.length>=1?"coords = 0;":o.map(e=>`coords.${d[e+c]} = 0;`).join("\n");let h="";h=i<2&&s>0?"coords":e.shapeInfo.logicalShape.map((e,t)=>`coords.${d[t+c]}`).join(", ");let p="return outputValue;";const f=ea.util.sizeFromShape(e.shapeInfo.logicalShape),m=1===f,b=ea.util.sizeFromShape(t.logicalShape),g=1===b;if(1!==s||m||g){if(m&&!g)p=1===i?"\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      ":"\n        return vec4(outputValue.x);\n      ";else if(o.length){const e=s-2,t=s-1;o.indexOf(e)>-1&&o.indexOf(t)>-1?p="return vec4(outputValue.x);":o.indexOf(e)>-1?p="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":o.indexOf(t)>-1&&(p="return vec4(outputValue.xx, outputValue.zz);")}}else p="\n      return vec4(outputValue.xy, outputValue.xy);\n    ";return`\n    vec4 ${a}() {\n      ${u} coords = getOutputCoords();\n      ${l}\n      vec4 outputValue = get${r}(${h});\n      ${p}\n    }\n  `}function bt(e,t){const n=e.name,r=n.charAt(0).toUpperCase()+n.slice(1),a="get"+r+"AtOutCoords",s=t.texShape,i=e.shapeInfo.texShape,o=e.shapeInfo.logicalShape.length,u=t.logicalShape.length;if(!e.shapeInfo.isUniform&&o===u&&null==e.shapeInfo.flatOffset&&ea.util.arraysEqual(i,s))return`\n      float ${a}() {\n        return sampleTexture(${n}, resultUV);\n      }\n    `;const c=gt(u),l=va(e.shapeInfo.logicalShape,t.logicalShape),d=u-o;let h;const p=["x","y","z","w","u","v"];h=0===o?"":u<2&&l.length>=1?"coords = 0;":l.map(e=>`coords.${p[e+d]} = 0;`).join("\n");let f="";return f=u<2&&o>0?"coords":e.shapeInfo.logicalShape.map((e,t)=>`coords.${p[t+d]}`).join(", "),`\n    float ${a}() {\n      ${c} coords = getOutputCoords();\n      ${h}\n      return get${r}(${f});\n    }\n  `}function gt(e){if(e<=1)return"int";if(2===e)return"ivec2";if(3===e)return"ivec3";if(4===e)return"ivec4";if(5===e)return"ivec5";if(6===e)return"ivec6";throw Error(`GPU for rank ${e} is not yet supported`)}function yt(e,t){const n=JSON.parse(JSON.stringify(e));return n.shapeInfo.logicalShape=t,n}function xt(e,t){return t.map(t=>e[t]).join(", ")}function vt(e,t,n,r){const a=t.userCode,s=n.map((e,n)=>{const r={logicalShape:e.shape,texShape:e.isUniform?null:e.texData.texShape,isUniform:e.isUniform,isPacked:!e.isUniform&&e.texData.isPacked,flatOffset:null};return null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0&&(r.flatOffset=e.texData.slice.flatOffset),{name:t.variableNames[n],shapeInfo:r}}),i=s.map(e=>e.shapeInfo),o={logicalShape:r.shape,texShape:r.texData.texShape,isUniform:!1,isPacked:r.texData.isPacked,flatOffset:null},u=De(s,o,a,t.packedInputs),c=e.createProgram(u);let l=null;const d=e.getUniformLocation(c,"NAN",!1);1===Object(ea.env)().getNumber("WEBGL_VERSION")&&(l=e.getUniformLocation(c,"INFINITY",!1));const h={};for(let n=0;n<t.variableNames.length;n++){const r=t.variableNames[n],a=!1;h[r]=e.getUniformLocation(c,r,a),h[`offset${r}`]=e.getUniformLocation(c,`offset${r}`,a)}return{program:t,source:u,webGLProgram:c,uniformLocations:h,inShapeInfos:i,outShapeInfo:o,infLoc:l,nanLoc:d}}function wt(e,t){if(e.length!==t.length)throw Error(`Binary was compiled with ${e.length} inputs, but `+`was executed with ${t.length} inputs`);e.forEach((e,n)=>{const r=e.logicalShape,a=t[n],s=a.shape;if(!ea.util.arraysEqual(r,s))throw Error("Binary was compiled with different shapes than "+`the current args. Shapes ${r} and ${s} must match`);if(e.isUniform&&a.isUniform)return;const i=e.texShape,o=a.isUniform?null:a.texData.texShape;if(!ea.util.arraysEqual(i,o))throw Error("Binary was compiled with different texture shapes than the"+` current args. Shape ${i} and ${o} must match`)})}function kt(e,t,n,r,a){wt(t.inShapeInfos,n),wt([t.outShapeInfo],[r]);const s=r.texData.texture,i=r.texData.texShape;r.texData.isPacked?e.setOutputPackedMatrixTexture(s,i[0],i[1]):e.setOutputMatrixTexture(s,i[0],i[1]),e.setProgram(t.webGLProgram),
1===Object(ea.env)().getNumber("WEBGL_VERSION")&&null!==t.infLoc&&e.gl.uniform1f(t.infLoc,1/0),null!==t.nanLoc&&e.gl.uniform1f(t.nanLoc,NaN),n.forEach((n,r)=>{const a=t.program.variableNames[r],s=t.uniformLocations[a],i=t.uniformLocations[`offset${a}`];if(null!=s)if(n.isUniform)if(ea.util.sizeFromShape(n.shape)<2)e.gl.uniform1f(s,n.uniformValues[0]);else{let t=n.uniformValues;t instanceof Float32Array||(t=new Float32Array(t)),e.gl.uniform1fv(s,t)}else null!=n.texData.slice&&null!=i&&e.gl.uniform1i(i,n.texData.slice.flatOffset),e.setInputMatrixTexture(n.texData.texture,s,r)}),null!=a&&a(e,t.webGLProgram),e.executeProgram()}function Ot(e,t,n){let r="";t.concat(n).forEach(e=>{const t=null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0,n=e.isUniform?"uniform":e.texData.texShape;r+=`${e.shape}_${n}_${t}`});const a=e.userCode;let s=e.constructor.name;return s+="_"+r+"_"+a,s}function It(e,t){return["x","y","z","w","u","v"].slice(0,t).map(t=>`${e}.${t}`)}function Nt(e,t){return 1===t?[e]:It(e,t)}function jt(e,t){if(1===e)return"rc";let n="";for(let r=0;r<e;r++)n+=t[r],r<e-1&&(n+=",");return n}function St(e,t){const n=[];for(let r=0;r<=1;r++)for(let a=0;a<=1;a++){let s=`${0===r?"r":"rp1"}, ${0===a?"c":"cp1"}`;for(let n=2;n<e;n++)s=`${t[t.length-1-n]},`+s;n.push(s)}return n}function Tt(e,t,n){if(1===e)return`rc > ${t[0]}`;let r="";for(let a=e-2;a<e;a++)r+=`${n[a]} >= ${t[a]}`,a<e-1&&(r+="||");return r}function Ct(e,t,n,r){if(1===e)return"";const a=r.slice(-2);return`\n    int r = ${a[0]};\n    int c = ${a[1]};\n    int rp1 = r + 1;\n    int cp1 = c + 1;\n\n    bool cEdge = cp1 >= ${t};\n    bool rEdge = rp1 >= ${n};\n  `}function Et(e,t){const n=e.length,r=St(n,t);return 1===n?`getA(rc),\n            rc + 1 >= ${e[0]} ? 0. : getA(rc + 1),\n            0, 0`:`getA(${r[0]}),\n          cEdge ? 0. : getA(${r[1]}),\n          rEdge ? 0. : getA(${r[2]}),\n          rEdge || cEdge ? 0. : getA(${r[3]})`}function $t(e){const t=ce(["r","c","d"],e);return`\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ${t}\n      return ivec3(r, c, d);\n    }\n  `}function At(e,t){const n=e;if(t===n.R32F)return 4;if(t===n.R16F)return 2;if(t===n.RGBA32F)return 16;if(t===e.RGBA)return 16;if(t===n.RGBA16F)return 8;throw new Error(`Unknown internal format ${t}`)}function _t(e,t,n,r,a){const s=Dt(t,r);let i;if(a){const[t,n]=l(e[0],e[1]);i=t*n}else{const[t,n]=o(e[0],e[1]);i=t*n}const u=At(n,s);return i*u}function Dt(e,t){switch(e){case sa.PACKED_2X2_FLOAT32:return we(t);case sa.PACKED_2X2_FLOAT16:return Oe(t);case sa.UNPACKED_FLOAT32:return me(t);case sa.UNPACKED_FLOAT16:return ge(t);case sa.PACKED_4X1_UNSIGNED_BYTE:return xe(t);default:throw new Error(`Unknown physical texture type ${e}`)}}function Ft(e){return Object(ea.env)().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?e?sa.PACKED_2X2_FLOAT32:sa.UNPACKED_FLOAT32:e?sa.PACKED_2X2_FLOAT16:sa.UNPACKED_FLOAT16}function Rt(e,t){if(e===aa.UPLOAD)return sa.PACKED_2X2_FLOAT32;if(e===aa.RENDER||null==e)return Ft(t);if(e===aa.DOWNLOAD||e===aa.PIXELS)return sa.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${e}`)}function Mt(e,t,n){return`${e[0]}_${e[1]}_${t}_${n}`}function zt(e){return e in Is?Is[e]:(Is[e]={},Is[e])}function Lt(){return null==Object(ea.env)().global.screen?1024:Object(ea.env)().global.screen.height*Object(ea.env)().global.screen.width*window.devicePixelRatio*js/1024/1024}function Pt(e,t){if("float32"===t||"complex64"===t)return e;if("int32"===t||"bool"===t){const n="int32"===t?new Int32Array(e.length):new Uint8Array(e.length);for(let t=0;t<n.length;++t)n[t]=Math.round(e[t]);return n}throw new Error(`Unknown dtype ${t}`)}function Bt(){Object(ea.env)().set("WEBGL_FORCE_F16_TEXTURES",!0)}function Wt(e){const{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}function Vt(e){const{inputs:t,backend:n}=e,{real:r,imag:a}=t,s=n.makeTensorInfo(r.shape,"complex64"),i=n.texData.get(s.dataId),o=Wt({inputs:{x:r},backend:n}),u=Wt({inputs:{x:a},backend:n});return i.complexTensorInfos={real:o,imag:u},s}function Ut(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{alpha:s}=r,i=n.makeTensorInfo([],"float32",ea.util.createScalarValue(s,"float32")),o=Object(ea.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new _s(Ms,a.shape,i.shape):new $s(Rs,a.shape,i.shape),u=n.runWebGLProgram(o,[a,i],a.dtype);return n.disposeIntermediateTensorInfo(i),u}function Gt(e){const{inputs:t,backend:n}=e,{x:r,alpha:a}=t,s=Object(ea.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new _s(Ps,r.shape,a.shape):new $s(Ls,r.shape,a.shape);return n.runWebGLProgram(s,[r,a],r.dtype)}function Ht({opSnippet:e,packedOpSnippet:t,cpuKernelImpl:n,dtype:r}){return({inputs:a,backend:s})=>{const{x:i}=a,o=s,u=r||i.dtype;if(o.shouldExecuteOnCPU([i])&&null!=n){const e=o.texData.get(i.dataId),t=n(e.values,u);return o.makeTensorInfo(i.shape,u,t)}const c=Object(ea.env)().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&null!=t;let l;return l=c?new xs(i.shape,t):new ss(i.shape,e),o.runWebGLProgram(l,[i],u)}}function qt({opSnippet:e,packedOpSnippet:t,checkOutOfBounds:n=!1,supportsComplex:r=!1,cpuKernelImpl:a,dtype:s}){return({inputs:i,backend:o})=>{const{a:u,b:c}=i,l=o;if(r&&"complex64"===u.dtype){const t=l.texData.get(u.dataId),n=l.texData.get(c.dataId),[r,a]=[[t.complexTensorInfos.real,n.complexTensorInfos.real],[t.complexTensorInfos.imag,n.complexTensorInfos.imag]].map(t=>{const[n,r]=t,a={dataId:n.dataId,dtype:n.dtype,shape:u.shape},s={dataId:r.dataId,dtype:r.dtype,shape:c.shape},i=new $s(e,u.shape,c.shape);return l.runWebGLProgram(i,[a,s],Object(ea.upcastType)(n.dtype,r.dtype))}),s=Vt({inputs:{real:r,imag:a},backend:l});return l.disposeIntermediateTensorInfo(r),l.disposeIntermediateTensorInfo(a),s}const d=s||Object(ea.upcastType)(u.dtype,c.dtype);if(l.shouldExecuteOnCPU([u,c])&&null!=a){const e=l.texData.get(u.dataId),t=l.texData.get(c.dataId),[n,r]=a(u.shape,c.shape,e.values,t.values,d),s=l.makeTensorInfo(r,d),i=l.texData.get(s.dataId);return i.values=n,s}const h=Object(ea.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=t;let p;return p=h?new _s(t,u.shape,c.shape,n):new $s(e,u.shape,c.shape),l.runWebGLProgram(p,[u,c],d)}}function Kt(e,t=!1){if("linear"===e)return t?fs:os;if("relu"===e)return t?bs:ls;if("elu"===e)return t?ms:cs;if("relu6"===e)return t?gs:ds;if("prelu"===e)return t?Ps:Ls;if("leakyrelu"===e)return t?Ms:Rs;if("sigmoid"===e)return t?ys:ps;throw new Error(`Activation ${e} has not been implemented for the WebGL backend.`)}function Xt(e){const{inputs:t,backend:n}=e,{a:r,b:a}=t,s=ea.backend_util.upcastType(r.dtype,a.dtype);if("complex64"===r.dtype){const e=n.texData.get(r.dataId),t=n.texData.get(a.dataId),s=new qs(Hs.REAL,r.shape,a.shape),i=new qs(Hs.IMAG,r.shape,a.shape),o=[{dataId:e.complexTensorInfos.real.dataId,dtype:e.complexTensorInfos.real.dtype,shape:r.shape},{dataId:e.complexTensorInfos.imag.dataId,dtype:e.complexTensorInfos.imag.dtype,shape:r.shape},{dataId:t.complexTensorInfos.real.dataId,dtype:t.complexTensorInfos.real.dtype,shape:a.shape},{dataId:t.complexTensorInfos.imag.dataId,dtype:t.complexTensorInfos.imag.dtype,shape:a.shape}],u=n.runWebGLProgram(s,o,"float32"),c=n.runWebGLProgram(i,o,"float32"),l=Vt({inputs:{real:u,imag:c},backend:n});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(c),l}if(n.shouldExecuteOnCPU([r,a])){const e=n.texData.get(r.dataId),t=n.texData.get(a.dataId),[i,o]=Wa(r.shape,a.shape,e.values,t.values,s),u=n.makeTensorInfo(o,s),c=n.texData.get(u.dataId);return c.values=i,u}let i;return i=Object(ea.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new _s(Ks,r.shape,a.shape):new $s(Ks,r.shape,a.shape),n.runWebGLProgram(i,[r,a],s)}function Yt(e,t,n){const r=[V(e.shape),...U(e.shape)],a={dtype:e.dtype,shape:r,dataId:e.dataId},s=[V(t),...U(t)],i=new rs(s,r),o=!0,u=n.runWebGLProgram(i,[a],e.dtype,null,o);return{dataId:u.dataId,shape:t,dtype:u.dtype}}function Zt(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{shape:s}=r,i=n,o=ea.util.sizeFromShape(a.shape),u=ea.util.inferFromImplicitShape(s,o),c=ea.util.sizeFromShape(u);ea.util.assert(o===c,()=>`The new shape (${u}) has ${c} elements and the old `+`shape (${a.shape}) has ${o} elements. The new shape and old `+"shape must have the same number of elements.");const l=i.texData.get(a.dataId);return!l.isPacked||K(a.shape,u)||null!==l.texture&&K(l.shape,u)?(i.incRef(a.dataId),{dataId:a.dataId,shape:u,dtype:a.dtype}):Yt(a,u,i)}function Qt(e){const t=[];for(;0===t.length||1!==t[t.length-1].outSize;){const n=t.length?t[t.length-1].outSize:e[1],r=ea.backend_util.computeOptimalWindowSize(n);t.push({inSize:n,windowSize:r,outSize:Math.ceil(n/r)})}return t}function Jt(e,t,n,r){const a=Qt(e.shape);let s=e;for(let i=0;i<a.length;i++){const{inSize:o,windowSize:u,outSize:c}=a[i];let l,d;l="mean"===n?0===i?new Zs({windowSize:u,inSize:o,batchSize:e.shape[0],outSize:c},o):new Zs({windowSize:u,inSize:o,batchSize:e.shape[0],outSize:c}):new Qs({windowSize:u,inSize:o,batchSize:e.shape[0],outSize:c},n),d=s,s=r.runWebGLProgram(l,[s],t),d.dataId!==e.dataId&&r.disposeIntermediateTensorInfo(d)}return s}function en(e){const t=e.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],r=new Array(t);for(let t=0;t<e.length;t++)r[e[t]]=n[t];return r.join()}function tn(e,t,n){const r=Object(ea.env)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new ei(e.shape,t):new Js(e.shape,t);return n.runWebGLProgram(r,[e],e.dtype)}function nn(e,t,n,r){const a=t,s=e.shape.length,i=ea.util.parseAxisParam(a,e.shape);let o=i;const u=ea.backend_util.getAxesPermutation(o,s),c=null!=u;let l=e;c&&(l=tn(e,u,r),o=ea.backend_util.getInnerMostAxes(o.length,s)),ea.backend_util.assertAxesAreInnerMostDims("sum",o,s);const[d,h]=ea.backend_util.computeOutAndReduceShapes(l.shape,o);let p=d;n&&(p=ea.backend_util.expandShapeToKeepDim(d,i));const f=ea.util.sizeFromShape(h),m=ea.util.sizeFromShape(e.shape),b=m/f,g=Zt({inputs:{x:l},attrs:{shape:[b,f]},backend:r}),y=Object(ea.sumOutType)(e.dtype),x=Jt(g,y,"sum",r),v=Zt({inputs:{x:x},attrs:{shape:p},backend:r});return r.disposeIntermediateTensorInfo(g),r.disposeIntermediateTensorInfo(x),c&&r.disposeIntermediateTensorInfo(l),v}function rn(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;return nn(a,s,i,n)}function an(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{perm:s}=r,i=n,o=a.shape.length,u=new Array(o);for(let e=0;e<u.length;e++)u[e]=a.shape[s[e]];let c;if(i.shouldExecuteOnCPU([a])){const e=i.texData.get(a.dataId),t=e.values,n=es(t,a.shape,a.dtype,s,u);c=i.makeTensorInfo(u,a.dtype);const r=i.texData.get(c.dataId);r.values=n}else c=tn(a,s,i);return c}function sn({a:e,b:t,transposeA:n,transposeB:r,backend:a,bias:s=null,preluActivationWeights:i=null,leakyreluAlpha:o=0,activation:u=null}){const c=e.shape.length,l=t.shape.length,d=n?e.shape[c-2]:e.shape[c-1],h=r?t.shape[l-1]:t.shape[l-2],p=n?e.shape[c-1]:e.shape[c-2],f=r?t.shape[l-2]:t.shape[l-1],m=e.shape.slice(0,-2),b=t.shape.slice(0,-2),g=ea.util.sizeFromShape(m),y=ea.util.sizeFromShape(b),x=g===y||1===g||1===y;ea.util.assert(c>=2&&l>=2&&x,()=>"Error in matMul: the input batch dimensions must either be the same or at least one input batch dimension must be 1. Got input "+`batch dimensions of (${m}) and (${b}).`);const v=g>y?e.shape.slice(0,-2):t.shape.slice(0,-2),w=v.concat([p,f]);ea.util.assert(d===h,()=>`Error in matMul: inner shapes (${d}) and (`+`${h}) of Tensors with shapes ${e.shape} and `+`${t.shape} and transposeA=${n}`+` and transposeB=${r} must match.`);const k=n?[g,d,p]:[g,p,d],O=r?[y,f,h]:[y,h,f],I=Zt({inputs:{x:e},backend:a,attrs:{shape:k}}),N=Zt({inputs:{x:t},backend:a,attrs:{shape:O}}),j=[I,N],S=Math.max(g,y),T=n?I.shape[1]:I.shape[2],C=null!=s,E=null!=i,$="leakyrelu"===u,A=null!=u?Kt(u,!0):null,_=C||E||$||null!=A;let D;if((1===p||1===f)&&T>ri&&!1===_){let e=I,t=N;n&&(e=an({inputs:{x:I},backend:a,attrs:{perm:[0,2,1]}}),j.push(e)),r&&(t=an({inputs:{x:N},backend:a,attrs:{perm:[0,2,1]}}),j.push(t));const s=1!==f,i=1===f;let o=e;s&&(o=Zt({inputs:{x:e},backend:a,attrs:{shape:[S,T,1]}}),j.push(o));const u=1===f?2:1;let c=t;i&&(c=Zt({inputs:{x:t},backend:a,attrs:{shape:[S,1,T]}}),j.push(c));const l=Xt({inputs:{a:o,b:c},backend:a});D=rn({inputs:{x:l},backend:a,attrs:{axis:u,keepDims:!0}}),j.push(l)}else{const u=Object(ea.upcastType)(e.dtype,t.dtype),c=new Gs(k,O,[S,p,f],n,r,C,A,E,$),l=[I,N];if(null!=s&&l.push(s),E&&l.push(i),$){const e=a.makeTensorInfo([],"float32",ea.util.createScalarValue(o,"float32"));l.push(e),j.push(e)}D=a.runWebGLProgram(c,l,u)}const F=Zt({inputs:{x:D},backend:a,attrs:{shape:w}});j.push(D);for(const e of j)a.disposeIntermediateTensorInfo(e);return F}function on(e){const{inputs:t,backend:n,attrs:r}=e,{a:a,b:s,bias:i,preluActivationWeights:o}=t,{transposeA:u,transposeB:c,activation:l,leakyreluAlpha:d}=r;return sn({a:a,b:s,transposeA:u,transposeB:c,backend:n,bias:i,preluActivationWeights:o,leakyreluAlpha:d,activation:l})}function un(e){const{inputs:t,backend:n}=e,{x:r}=t;if(n.shouldExecuteOnCPU([r])&&"complex64"!==r.dtype){const e=n.texData.get(r.dataId),t=qa(e.values);return n.makeTensorInfo(r.shape,r.dtype,t)}let a;return a=Object(ea.env)().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new xs(r.shape,si):new ss(r.shape,si),n.runWebGLProgram(a,[r],r.dtype)}function cn(e){const{inputs:t,backend:n}=e,r=t;if(1===r.length)return Wt({inputs:{x:r[0]},backend:n});if(r.length>Object(ea.env)().get("WEBGL_MAX_TEXTURES_IN_SHADER")){const e=Math.floor(r.length/2),t=cn({inputs:r.slice(0,e),backend:n}),a=cn({inputs:r.slice(e),backend:n});return cn({inputs:[t,a],backend:n})}const a=r.map(e=>e.dtype).reduce((e,t)=>Object(ea.upcastType)(e,t)),s=r.map(e=>e.shape),i=Object(ea.env)().getBool("WEBGL_PACK"),o=i?new gi(r[0].shape,s):new bi(r[0].shape,s);return n.runWebGLProgram(o,r,a)}function ln(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r,o=a.shape.length,u=ea.util.parseAxisParam(s,a.shape);let c=u;const l=ea.backend_util.getAxesPermutation(c,o);let d=a;null!=l&&(d=an({inputs:{x:a},backend:n,attrs:{perm:l}}),c=ea.backend_util.getInnerMostAxes(c.length,o)),ea.backend_util.assertAxesAreInnerMostDims("all",c,o);const[h,p]=ea.backend_util.computeOutAndReduceShapes(d.shape,c),f=ea.util.sizeFromShape(p),m=Zt({inputs:{x:d},backend:n,attrs:{shape:[-1,f]}}),b=Jt(m,m.dtype,"all",n);let g;if(i){const e=ea.backend_util.expandShapeToKeepDim(h,u);g=Zt({inputs:{x:b},backend:n,attrs:{shape:e}})}else g=Zt({inputs:{x:b},backend:n,attrs:{shape:h}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(b),null!=l&&n.disposeIntermediateTensorInfo(d),g}function dn(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r,o=a.shape.length,u=ea.util.parseAxisParam(s,a.shape);let c=u;const l=ea.backend_util.getAxesPermutation(c,o);let d=a;null!=l&&(d=an({inputs:{x:a},backend:n,attrs:{perm:l}}),c=ea.backend_util.getInnerMostAxes(c.length,o)),ea.backend_util.assertAxesAreInnerMostDims("any",c,o);const[h,p]=ea.backend_util.computeOutAndReduceShapes(d.shape,c),f=ea.util.sizeFromShape(p),m=Zt({inputs:{x:d},backend:n,attrs:{shape:[-1,f]}}),b=Jt(m,m.dtype,"any",n);let g;if(i){const e=ea.backend_util.expandShapeToKeepDim(h,u);g=Zt({inputs:{x:b},backend:n,attrs:{shape:e}})}else g=Zt({inputs:{x:b},backend:n,attrs:{shape:h}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(b),null!=l&&n.disposeIntermediateTensorInfo(d),g}function hn(e,t,n,r=null){let a=t.shape[0],s=t.shape[1];null!=r&&(a=r.shape[0],s=r.shape[1]);const i=ea.backend_util.computeOptimalWindowSize(s),o={windowSize:i,inSize:s,batchSize:a,outSize:Math.ceil(s/i)},u=new wi(o,n,null==r),c=[t];null!=r&&c.push(r);const l=e.runWebGLProgram(u,c,"int32");if(1===l.shape[1])return l;const d=hn(e,t,n,l);return e.disposeIntermediateTensorInfo(l),d}function pn(e,t,n,r=null){const a=null!=r?r.shape:t.shape,s=a[a.length-1],i=ea.backend_util.computeOptimalWindowSize(s),o=new ki(a,i,n,null==r),u=null==r?[t]:[t,r],c=e.runWebGLProgram(o,u,"int32");if(c.shape.length===t.shape.length){const r=pn(e,t,n,c);return e.disposeIntermediateTensorInfo(c),r}return c}function fn(e,t,n,r){const a=[n];if(ea.backend_util.assertAxesAreInnerMostDims("arg"+r.charAt(0).toUpperCase()+r.slice(1),a,t.shape.length),!Object(ea.env)().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){const n=[],[s,i]=ea.backend_util.computeOutAndReduceShapes(t.shape,a),o=ea.util.sizeFromShape(i),u=Zt({inputs:{x:t},backend:e,attrs:{shape:[-1,o]}});n.push(u);const c=hn(e,u,r);n.push(c);const l=Zt({inputs:{x:c},backend:e,attrs:{shape:s}});return n.forEach(t=>e.disposeIntermediateTensorInfo(t)),l}return pn(e,t,r)}function mn(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s}=r;let i=ea.util.parseAxisParam(s,a.shape);const o=ea.backend_util.getAxesPermutation(i,a.shape.length);let u=a;const c=[];null!=o&&(u=an({inputs:{x:a},backend:n,attrs:{perm:o}}),c.push(u),i=ea.backend_util.getInnerMostAxes(i.length,u.shape.length)),ea.backend_util.assertAxesAreInnerMostDims("argMax",[i[0]],u.shape.length);const l=fn(n,u,i[0],"max");return c.forEach(e=>n.disposeIntermediateTensorInfo(e)),l}function bn(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s}=r;let i=ea.util.parseAxisParam(s,a.shape);const o=ea.backend_util.getAxesPermutation(i,a.shape.length);let u=a;const c=[];null!=o&&(u=an({inputs:{x:a},backend:n,attrs:{perm:o}}),c.push(u),i=ea.backend_util.getInnerMostAxes(i.length,u.shape.length)),ea.backend_util.assertAxesAreInnerMostDims("argMin",[i[0]],u.shape.length);const l=fn(n,u,i[0],"min");return c.forEach(e=>n.disposeIntermediateTensorInfo(e)),l}function gn(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t;oe(a,"avgPool");const{filterSize:s,strides:i,pad:o,dimRoundingMode:u}=r,c=1;ea.util.assert(ea.backend_util.eitherStridesOrDilationsAreOne(i,c),()=>"Error in avgPool: Either strides or dilations must be 1. "+`Got strides ${i} and dilations '${c}'`);const l=ea.backend_util.computePool2DInfo(a.shape,s,i,c,o,u);if(1===l.filterWidth&&1===l.filterHeight&&ea.util.arraysEqual(l.inShape,l.outShape))return Wt({inputs:{x:a},backend:n});const d=new Bi(l,"avg",!1);return n.runWebGLProgram(d,[a],"float32")}function yn(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:u,dataFormat:c}=r,l=[1,1,1],d=ea.backend_util.computePool3DInfo(a.shape,s,i,l,o,u,c),h=new Wi(d,"avg",!1);return n.runWebGLProgram(h,[a],"float32")}function xn(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,i=s,{filterSize:o,strides:u,pad:c,dimRoundingMode:l}=r,d=[1,1,1],h=ea.backend_util.computePool3DInfo(i.shape,o,u,d,c,l),p=new Hi(h);return n.runWebGLProgram(p,[a],i.dtype)}function vn(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,i=s;oe([a,s],"avgPoolGrad");const{filterSize:o,strides:u,pad:c}=r,l=ea.backend_util.computePool2DInfo(i.shape,o,u,1,c),d=new Gi(l);return n.runWebGLProgram(d,[a],i.dtype)}function wn(e){const{inputs:t,backend:n,attrs:r}=e,{a:a,b:s}=t,{transposeA:i,transposeB:o}=r;return sn({a:a,b:s,transposeA:i,transposeB:o,backend:n})}function kn(e){if(1===e)return"sourceLoc";if(e<=6)return to.slice(0,e).map(e=>"sourceLoc."+e).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}function On(e,t,n,r){const a=r.texData.get(e.dataId),s=r.makeTensorInfo(n,e.dtype),i=r.texData.get(s.dataId);Object.assign(i,a),i.refCount=1,i.shape=n,i.dtype=e.dtype;let o=ea.slice_util.computeFlatOffset(t,ea.util.computeStrides(e.shape));a.slice&&(o+=a.slice.flatOffset),i.slice={flatOffset:o,origDataId:a.slice&&a.slice.origDataId||e.dataId};const u=r.dataRefCount.get(i.slice.origDataId)||1;return r.dataRefCount.set(i.slice.origDataId,u+1),s}function In(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{begin:s,size:i}=r,[o,u]=ea.slice_util.parseSliceParams(a,s,i);if(ea.slice_util.assertParamsValid(a,o,u),0===ea.util.sizeFromShape(u))return n.makeTensorInfo(u,a.dtype,[]);if(n.shouldExecuteOnCPU([a])||"string"===a.dtype){const e=n.texData.get(a.dataId),t=Ka(e.values,o,u,a.shape,a.dtype);return n.makeTensorInfo(u,a.dtype,t)}const{isPacked:c}=n.texData.get(a.dataId),l=ea.slice_util.isSliceContinous(a.shape,o,u);if(c||!l){const e=Object(ea.env)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new no(u):new eo(u),t=e.getCustomSetupFunc(o);return n.runWebGLProgram(e,[a],a.dtype,t)}return n.uploadToGPU(a.dataId),On(a,o,u,n)}function Nn(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:i}=r,o=n.readSync(a.dataId),u=n.readSync(s.dataId),c=Sa(o,u,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,c)}function jn(e){const{inputs:t,backend:n}=e,{input:r}=t,a=n.texData.get(r.dataId);return Wt({inputs:{x:a.complexTensorInfos.real},backend:n})}function Sn(e,t){const n=new ss(e.shape,ho),r=t.runWebGLProgram(n,[e],"int32");return{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}function Tn(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{dtype:s}=r;if("complex64"===s){if("complex64"===a.dtype)return Wt({inputs:{x:a},backend:n});const e=ea.zeros(a.shape),t=Tn({inputs:{x:a},backend:n,attrs:{dtype:"float32"}}),r=Vt({inputs:{real:t,imag:e},backend:n});return e.dispose(),n.disposeIntermediateTensorInfo(t),r}if("complex64"===a.dtype){const e=jn({inputs:{input:a},backend:n}),t=Tn({inputs:{x:e},backend:n,attrs:{dtype:s}});return n.disposeIntermediateTensorInfo(e),t}if(!ea.util.hasEncodingLoss(a.dtype,s)){const e=Wt({inputs:{x:a},backend:n});return{dataId:e.dataId,shape:e.shape,dtype:s}}if("int32"===s)return Sn(a,n);if("bool"===s){const e=n.makeTensorInfo([],"bool",ea.util.getTypedArrayFromDType("bool",1)),t={a:a,b:e},r=uo({inputs:t,backend:n});return n.disposeIntermediateTensorInfo(e),r}throw new Error(`Error in Cast: failed to cast ${a.dtype} to ${s}`)}function Cn(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{clipValueMin:s,clipValueMax:i}=r;let o;o=Object(ea.env)().getBool("WEBGL_PACK_CLIP")?new yo(a.shape):new go(a.shape);const u=o.getCustomSetupFunc(s,i);return n.runWebGLProgram(o,[a],a.dtype,u)}function En(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}}function $n(e){const{inputs:t,backend:n}=e,{x:r}=t,a=n.texData.get(r.dataId),s=new vo(r.shape),i=[En(r,a.complexTensorInfos.real),En(r,a.complexTensorInfos.imag)];return n.runWebGLProgram(s,i,i[0].dtype)}function An(e,t,n){const r=e.indexOf(t),a=e.map((e,t)=>t===r?`${e} - ${n}`:e);return a.join()}function _n(e){const{inputs:t,backend:n}=e,{input:r}=t,a=n.texData.get(r.dataId);return Wt({inputs:{x:a.complexTensorInfos.imag},backend:n})}function Dn(e,t,n){const r=e[0].dtype;if("complex64"===r){const r=e.map(e=>jn({inputs:{input:e},backend:n})),a=e.map(e=>_n({inputs:{input:e},backend:n})),s=Dn(r,t,n),i=Dn(a,t,n),o=Vt({inputs:{real:s,imag:i},backend:n});return r.forEach(e=>n.disposeIntermediateTensorInfo(e)),a.forEach(e=>n.disposeIntermediateTensorInfo(e)),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i),o}let a=n.shouldExecuteOnCPU(e);if("string"===r&&(a=!0),a){const a=e.map(e=>{const r=ea.util.sizeFromShape(e.shape.slice(t)),a=[-1,r];return Zt({inputs:{x:e},backend:n,attrs:{shape:a}})}),s=a.map(e=>({vals:n.readSync(e.dataId),shape:e.shape})),i=ea.backend_util.computeOutShape(a.map(e=>e.shape),1),o=1===a[0].shape[0],u=Ea(s,i,r,o),c=ea.backend_util.computeOutShape(e.map(e=>e.shape),t),l=n.makeTensorInfo(c,r,u);return a.forEach(e=>n.disposeIntermediateTensorInfo(e)),l}if(e.length>Object(ea.env)().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const r=Math.floor(e.length/2),a=Dn(e.slice(0,r),t,n),s=Dn(e.slice(r),t,n),i=Dn([a,s],t,n);return n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(s),i}if(Object(ea.env)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&e[0].shape.length>1){const a=new Oo(e.map(e=>e.shape),t);return n.runWebGLProgram(a,e,r)}const{tensors2D:s,outShape:i}=Fn(e,t,n),o=new ko(s.map(e=>e.shape)),u=n.runWebGLProgram(o,s,r);s.forEach(e=>n.disposeIntermediateTensorInfo(e));const c=Zt({inputs:{x:u},attrs:{shape:i},backend:n});return n.disposeIntermediateTensorInfo(u),c}function Fn(e,t,n){const r=ea.backend_util.computeOutShape(e.map(e=>e.shape),t),a=e.map(e=>Zt({inputs:{x:e},attrs:{shape:[-1,ea.util.sizeFromShape(e.shape.slice(t))]},backend:n}));return{tensors2D:a,outShape:r}}function Rn(e){const{inputs:t,backend:n,attrs:r}=e,{axis:a}=r,s=ea.util.parseAxisParam(a,t[0].shape)[0],i=ea.backend_util.computeOutShape(t.map(e=>e.shape),s);if(0===ea.util.sizeFromShape(i))return n.makeTensorInfo(i,t[0].dtype,[]);const o=t.filter(e=>ea.util.sizeFromShape(e.shape)>0);if(1===o.length)return Wt({inputs:{x:o[0]},backend:n});const u=o.map(e=>e.shape);return ea.backend_util.assertParamsConsistent(u,s),Dn(o,s,n)}function Mn({x:e,filter:t,convInfo:n,backend:r,bias:a=null,preluActivationWeights:s=null,leakyreluAlpha:i=0,activation:o=null}){const u=e.shape,c=r.texData.get(e.dataId),l=n.inChannels,d=u[0]*u[1]*u[2],h=n.outChannels,p="channelsLast"===n.dataFormat,f=!1,m=!1;let b;const g=[],y=(1===d||1===h)&&l>ri,x=u[2]%2!=0&&!!c.isPacked;if(!y&&Object(ea.env)().getBool("WEBGL_LAZILY_UNPACK")&&Object(ea.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&x){const l=p?u[0]*u[1]*(u[2]+1):u[0]*u[2]*(u[3]+1),d={dataId:e.dataId,shape:[1,l,n.inChannels],dtype:e.dtype},h=c.shape;c.shape=c.shape.slice(),c.shape[c.shape.length-2]++,ea.util.assert(K(c.shape,d.shape),()=>`packed reshape ${c.shape} to ${d.shape} isn't free`);const y=Zt({inputs:{x:t},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}});g.push(y);const x=sn({a:d,b:y,backend:r,transposeA:f,transposeB:m,bias:a,activation:o,preluActivationWeights:s,leakyreluAlpha:i}),v=r.texData.get(x.dataId);ea.util.assert(v.isPacked,()=>"batchMatMul result is expected to be packed"),c.shape=h,v.shape=n.outShape,b=Wt({inputs:{x:x},backend:r}),b.shape=n.outShape,g.push(x)}else{const c=p?u[0]*u[1]*u[2]:u[0]*u[2]*u[3],l=Zt({inputs:{x:e},backend:r,attrs:{shape:[1,c,n.inChannels]}}),d=Zt({inputs:{x:t},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}}),h=sn({a:l,b:d,transposeA:f,transposeB:m,backend:r,bias:a,activation:o,preluActivationWeights:s,leakyreluAlpha:i});b=Zt({inputs:{x:h},backend:r,attrs:{shape:n.outShape}}),g.push(l),g.push(d),g.push(h)}for(const e of g)r.disposeIntermediateTensorInfo(e);return b}function zn({x:e,filter:t,convInfo:n,backend:r,bias:a=null,preluActivationWeights:s=null,leakyreluAlpha:i=0,activation:o=null}){const{filterWidth:u,filterHeight:c,inChannels:l,outWidth:d,outHeight:h,dataFormat:p}=n,f="channelsLast"===p,m=u*c*l,b=h*d,g=[m,b],y=!0,x=!1,v=[],w=Zt({inputs:{x:e},backend:r,attrs:{shape:e.shape.slice(1)}}),k=Zt({inputs:{x:t},backend:r,attrs:{shape:[1,m,ea.util.sizeFromShape(t.shape)/m]}});v.push(w),v.push(k);const O=new To(g,w.shape,n),I=r.runWebGLProgram(O,[w],"float32"),N=Zt({inputs:{x:I},backend:r,attrs:{shape:[1,g[0],g[1]]}});v.push(I),v.push(N);const j=null!=a,S=null!=s,T="leakyrelu"===o,C=o?Kt(o,!0):null,E=new Gs(N.shape,k.shape,[1,b,n.outChannels],y,x,j,C,S,T),$=[N,k];if(a&&$.push(a),S&&$.push(s),T){const e=r.makeTensorInfo([],"float32",ea.util.createScalarValue(i,"float32"));$.push(e),v.push(e)}const A=r.runWebGLProgram(E,$,"float32"),_=f?[1,h,d,n.outChannels]:[1,n.outChannels,h,d],D=Zt({inputs:{x:A},backend:r,attrs:{shape:_}});v.push(A);for(const e of v)r.disposeIntermediateTensorInfo(e);return D}function Ln(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dataFormat:u,dilations:c,dimRoundingMode:l}=r,d=ea.backend_util.convertConv2DDataFormat(u),h=ea.backend_util.computeConv2DInfo(a.shape,s.shape,i,c,o,l,!1,d);let p;if(1!==h.filterHeight||1!==h.filterWidth||1!==h.dilationHeight||1!==h.dilationWidth||1!==h.strideHeight||1!==h.strideWidth||"SAME"!==h.padInfo.type&&"VALID"!==h.padInfo.type)if(Object(ea.env)().getBool("WEBGL_CONV_IM2COL")&&1===a.shape[0])p=zn({x:a,filter:s,convInfo:h,backend:n});else{const e=new jo(h);p=n.runWebGLProgram(e,[a,s],"float32")}else p=Mn({x:a,filter:s,convInfo:h,backend:n});const f=Zt({inputs:{x:p},backend:n,attrs:{shape:h.outShape}});return n.disposeIntermediateTensorInfo(p),f}function Pn(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,pad:o,dataFormat:u,dimRoundingMode:c,filterShape:l}=r,d=ea.backend_util.convertConv2DDataFormat(u),h=ea.backend_util.computeConv2DInfo(a.shape,l,i,1,o,c,!1,d),p=new Eo(h);return n.runWebGLProgram(p,[a,s],"float32")}function Bn(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{inputShape:i,strides:o,pad:u,dataFormat:c,dimRoundingMode:l}=r,d=ea.backend_util.convertConv2DDataFormat(c),h=ea.backend_util.computeConv2DInfo(i,s.shape,o,1,u,l,!1,d),p=new $o(h);return n.runWebGLProgram(p,[a,s],"float32")}function Wn(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:u}=r,c=ea.backend_util.computeConv3DInfo(a.shape,s.shape,i,u,o),l=new So(c);return n.runWebGLProgram(l,[a,s],"float32")}function Vn(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,pad:o,filterShape:u}=r,c=ea.backend_util.computeConv3DInfo(a.shape,u,i,1,o),l=new Ao(c);return n.runWebGLProgram(l,[a,s],"float32")}function Un(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{pad:i,strides:o,inputShape:u}=r,c=ea.backend_util.computeConv3DInfo(u,s.shape,o,1,i),l=new _o(c);return n.runWebGLProgram(l,[a,s],"float32")}function Gn(e,t){if(1===e)return`${t}`;if(2===e)return`${t}.x, ${t}.y`;if(3===e)return`${t}.x, ${t}.y, ${t}.z`;if(4===e)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw Error(`Cumulative sum for rank ${e} is not yet supported`)}function Hn(e,t){if(1===e)return`${t}`;if(2===e)return`${t}.y`;if(3===e)return`${t}.z`;if(4===e)return`${t}.w`;throw Error(`Cumulative sum for rank ${e} is not yet supported`)}function qn(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,exclusive:i,reverse:o}=r,u=a.shape.length,c=ea.backend_util.getAxesPermutation([s],u);let l=a;null!=c&&(l=an({inputs:{x:a},backend:n,attrs:{perm:c}}));const d=ea.backend_util.getInnerMostAxes(1,u)[0];if(d!==u-1)throw new Error(`WebGL cumsum shader expects an inner-most axis=${a.shape.length-1} `+`but got axis=${s}`);const h=l.shape[d];let p=Wt({inputs:{x:l},backend:n});for(let e=0;e<=Math.ceil(Math.log2(h))-1;e++){const t=new Ko(l.shape,!1,o),r=t.getCustomSetupFunc(e),a=p;p=n.runWebGLProgram(t,[p],p.dtype,r),n.disposeIntermediateTensorInfo(a)}if(i){const e=new Ko(l.shape,i,o),t=p;p=n.runWebGLProgram(e,[p],p.dtype),n.disposeIntermediateTensorInfo(t)}if(null!=c){const e=ea.backend_util.getUndoAxesPermutation(c),t=an({inputs:{x:p},backend:n,attrs:{perm:e}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(l),t}return p}function Kn(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:i,binaryOutput:o}=r;if(1===a.shape.length){const e=n.readSync(a.dataId),t=n.readSync(s.dataId),r=Sa(e,t,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,r)}if(2===a.shape.length){const e=n.bufferSync(a),t=n.bufferSync(s),r=Ta(e,t,i,o);return n.makeTensorInfo(r.shape,s.dtype,r.values)}throw new Error("Error in denseBincount: input must be at most rank 2, but got rank"+`${a.shape.length}.`)}function Xn(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockSize:s,dataFormat:i}=r;ea.util.assert(s>1,()=>`blockSize should be > 1 for depthToSpace, but was: ${s}`);const o=a.shape[0],u="NHWC"===i?a.shape[1]:a.shape[2],c="NHWC"===i?a.shape[2]:a.shape[3],l="NHWC"===i?a.shape[3]:a.shape[1],d=u*s,h=c*s,p=l/(s*s),f="NHWC"===i?[o,d,h,p]:[o,p,d,h],m=new Zo(f,s,i);return n.runWebGLProgram(m,[a],a.dtype)}function Yn(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:u,dimRoundingMode:c}=r;let l=u;null==l&&(l=[1,1]),ea.util.assert(ea.backend_util.eitherStridesOrDilationsAreOne(i,l),()=>"Error in depthwiseConv2d: Either strides or dilations must be "+`1. Got strides ${i} and dilations '${l}'`);const d=ea.backend_util.computeConv2DInfo(a.shape,s.shape,i,l,o,c,!0);let h;return h=Object(ea.env)().getBool("WEBGL_PACK_DEPTHWISECONV")&&d.strideWidth<=2&&d.outChannels/d.inChannels==1?new eu(d):new Jo(d),n.runWebGLProgram(h,[a,s],"float32")}function Zn(e){
const{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,dilations:o,pad:u,dimRoundingMode:c,filterShape:l}=r,d=ea.backend_util.computeConv2DInfo(a.shape,l,i,o,u,c,!0),h=new nu(d);return n.runWebGLProgram(h,[a,s],"float32")}function Qn(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{strides:i,dilations:o,pad:u,dimRoundingMode:c,inputShape:l}=r,d=ea.backend_util.computeConv2DInfo(l,s.shape,i,o,u,c,!0),h=new ru(d);return n.runWebGLProgram(h,[a,s],"float32")}function Jn(e){const{inputs:t,backend:n}=e,{x:r}=t,a=[...r.shape,...r.shape],s=ea.util.sizeFromShape(r.shape),i=Zt({inputs:{x:r},backend:n,attrs:{shape:[s]}}),o=new iu(s),u=n.runWebGLProgram(o,[i],i.dtype),c=Zt({inputs:{x:u},backend:n,attrs:{shape:a}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(u),c}function er(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:u}=r,c=ea.backend_util.computeDilation2DInfo(a.shape,s.shape,i,o,"NHWC",u);let l;const d=new uu(c);l=n.runWebGLProgram(d,[a,s],"float32");const h=Zt({inputs:{x:l},backend:n,attrs:{shape:c.outShape}});return n.disposeIntermediateTensorInfo(l),h}function tr(e){const{inputs:t,backend:n,attrs:r}=e,{equation:a}=r,s=t,{allDims:i,summedDims:o,idDims:u}=ea.backend_util.decodeEinsumEquation(a,s.length);ea.backend_util.checkEinsumDimSizes(i.length,u,s);const{path:c,steps:l}=ea.backend_util.getEinsumComputePath(o,u),d=l.length;let h=null,p=i.length;const f=[];for(let e=0;e<d;++e){for(const t of l[e]){const{permutationIndices:e,expandDims:r}=ea.backend_util.getEinsumPermutation(p,u[t]);let a;ea.backend_util.isIdentityPermutation(e)?a=s[t]:(a=an({inputs:{x:s[t]},backend:n,attrs:{perm:e}}),f.push(a));const i=a.shape.slice();for(let e=0;e<r.length;++e)i.splice(r[e],0,1);ea.util.arraysEqual(a.shape,i)||(a=Zt({inputs:{x:a},backend:n,attrs:{shape:i}}),f.push(a)),null===h?h=a:(h=Xt({inputs:{a:a,b:h},backend:n}),f.push(h))}e<d-1&&(c[e]>=0&&(h=rn({inputs:{x:h},backend:n,attrs:{axis:c[e]-(i.length-p),keepDims:!1}}),f.push(h)),p--)}for(const e of f)e!==h&&n.disposeIntermediateTensorInfo(e);return h}function nr(e){const{inputs:t,attrs:n,backend:r}=e,{dim:a}=n,{input:s}=t,i=s.shape.length,o=s.shape.slice();let u=a;return a<0&&(ea.util.assert(-(i+1)<=a,()=>`Axis must be in the interval [${-(i+1)}, ${i}]`),u=i+a+1),o.splice(u,0,1),Zt({inputs:{x:s},backend:r,attrs:{shape:o}})}function rr(e,t,n){const r=n.texData.get(e.dataId),a=ea.util.sizeFromShape(e.shape),s=e.shape[e.shape.length-1],i=a/s,o=Zt({inputs:{x:e},backend:n,attrs:{shape:[i,s]}}),u=o.shape,c=new _u("real",u,t),l=new _u("imag",u,t),d=[{dataId:r.complexTensorInfos.real.dataId,dtype:r.complexTensorInfos.real.dtype,shape:u},{dataId:r.complexTensorInfos.imag.dataId,dtype:r.complexTensorInfos.imag.dtype,shape:u}],h=n.runWebGLProgram(c,d,"float32"),p=n.runWebGLProgram(l,d,"float32"),f=Vt({inputs:{real:h,imag:p},backend:n});n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p);const m=Zt({inputs:{x:f},backend:n,attrs:{shape:e.shape}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(f),m}function ar(e){const{inputs:t,backend:n}=e,{input:r}=t;return rr(r,!1,n)}function sr(e){const{backend:t,attrs:n}=e,{shape:r,value:a}=n;let{dtype:s}=n;if(s=s||ea.util.inferDtype(a),"string"===s){const e=ea.util.getArrayFromDType(s,ea.util.sizeFromShape(r));return e.fill(a),t.makeTensorInfo(r,s,e)}{const e=new Fu(r,a),n=e.getCustomSetupFunc(a);return t.runWebGLProgram(e,[],s,n)}}function ir(e){const{inputs:t,backend:n,attrs:r}=e;let{pixels:a}=t;const{numChannels:s}=r,i="undefined"!=typeof HTMLVideoElement&&a instanceof HTMLVideoElement,o="undefined"!=typeof HTMLImageElement&&a instanceof HTMLImageElement,[u,c]=i?[a.videoWidth,a.videoHeight]:[a.width,a.height],l=[c,u],d=[c,u,s];(o||i)&&(null==Xu&&(Xu=document.createElement("canvas").getContext("2d")),Xu.canvas.width=u,Xu.canvas.height=c,Xu.drawImage(a,0,0,u,c),a=Xu.canvas);const h=n.makeTensorInfo(l,"int32");n.texData.get(h.dataId).usage=aa.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(h.dataId),a);const p=Object(ea.env)().getBool("WEBGL_PACK")?new qu(d):new Hu(d),f=n.runWebGLProgram(p,[h],"int32");return n.disposeData(h.dataId),f}function or(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:u,pad:c,dataFormat:l,dilations:d,dimRoundingMode:h,activation:p,leakyreluAlpha:f}=r,m=ea.backend_util.convertConv2DDataFormat(l),b=ea.backend_util.computeConv2DInfo(a.shape,s.shape,u,d,c,h,!1,m);let g;const y=[];if(1!==b.filterHeight||1!==b.filterWidth||1!==b.dilationHeight||1!==b.dilationWidth||1!==b.strideHeight||1!==b.strideWidth||"SAME"!==b.padInfo.type&&"VALID"!==b.padInfo.type)if(Object(ea.env)().getBool("WEBGL_CONV_IM2COL")&&1===a.shape[0])g=zn({x:a,filter:s,convInfo:b,backend:n,bias:i,activation:p,preluActivationWeights:o,leakyreluAlpha:f});else{const e=null!=i,t=null!=o,r="leakyrelu"===p,u=p?Kt(p,!1):null,c=new jo(b,e,u,t,r),l=[a,s];if(i&&l.push(i),o&&l.push(o),r){const e=n.makeTensorInfo([],"float32",ea.util.createScalarValue(f,"float32"));l.push(e),y.push(e)}g=n.runWebGLProgram(c,l,"float32")}else g=Mn({x:a,filter:s,convInfo:b,backend:n,bias:i,activation:p,preluActivationWeights:o,leakyreluAlpha:f});const x=Zt({inputs:{x:g},backend:n,attrs:{shape:b.outShape}});return y.push(g),y.forEach(e=>n.disposeIntermediateTensorInfo(e)),x}function ur(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:u,pad:c,dilations:l,dimRoundingMode:d,activation:h,leakyreluAlpha:p}=r,f=[];let m=l;null==m&&(m=[1,1]),ea.util.assert(ea.backend_util.eitherStridesOrDilationsAreOne(u,m),()=>"Error in depthwiseConv2d: Either strides or dilations must be "+`1. Got strides ${u} and dilations '${m}'`);const b=ea.backend_util.computeConv2DInfo(a.shape,s.shape,u,m,c,d,!0),g=Object(ea.env)().getBool("WEBGL_PACK_DEPTHWISECONV")&&b.strideWidth<=2&&b.outChannels/b.inChannels==1,y=h?Kt(h,g):null,x=[a,s],v=null!=i,w=null!=o,k="leakyrelu"===h;if(v&&x.push(i),w&&x.push(o),k){const e=n.makeTensorInfo([],"float32",ea.util.createScalarValue(p,"float32"));x.push(e),f.push(e)}let O;O=g?new eu(b,v,y,w,k):new Jo(b,v,y,w,k);const I=n.runWebGLProgram(O,x,"float32");return f.forEach(e=>n.disposeIntermediateTensorInfo(e)),I}function cr(e){const{inputs:t,backend:n}=e,{params:r,indices:a}=t,s=a.shape,i=s[s.length-1],[o,u,c,l]=ea.backend_util.prepareAndValidate(r,a),d=Zt({inputs:{x:a},backend:n,attrs:{shape:[u,i]}}),h=Zt({inputs:{x:r},backend:n,attrs:{shape:[ea.util.sizeFromShape(r.shape)/c,c]}}),p=new Qu(i,l,[u,c]),f=n.runWebGLProgram(p,[h,d],h.dtype),m=Zt({inputs:{x:f},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(f),m}function lr(e,t){const n=["resRC.x","resRC.y","resRC.z","resRC.w"],r=[];for(let t=0;t<e.length;t++)2===t?r.push("int(getIndices(resRC.x, resRC.z))"):r.push(`${n[t]}`);return r.join()}function dr(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,indices:s}=t,{axis:i,batchDims:o}=r,u=ea.util.parseAxisParam(i,a.shape)[0],c=ea.backend_util.segment_util.collectGatherOpShapeInfo(a,s,u,o),l=ea.util.sizeFromShape(s.shape),d=[],h=Zt({inputs:{x:a},backend:n,attrs:{shape:[c.batchSize,c.outerSize,c.dimSize,c.sliceSize]}}),p=Zt({inputs:{x:s},backend:n,attrs:{shape:[c.batchSize,l/c.batchSize]}});d.push(h),d.push(p);const f=[c.batchSize,c.outerSize,l/c.batchSize,c.sliceSize];if(n.shouldExecuteOnCPU([a,s])||"string"===a.dtype){const e=n.bufferSync(p),t=n.bufferSync(h),r=Da(t,e,f);return d.forEach(e=>n.disposeIntermediateTensorInfo(e)),n.makeTensorInfo(c.outputShape,r.dtype,r.values)}const m=new ec(h.shape,f),b=n.runWebGLProgram(m,[h,p],h.dtype);d.push(b);const g=Zt({inputs:{x:b},backend:n,attrs:{shape:c.outputShape}});return d.forEach(e=>n.disposeIntermediateTensorInfo(e)),g}function hr(e){const{inputs:t,backend:n}=e,{input:r}=t;return rr(r,!0,n)}function pr(e){const{backend:t,attrs:n}=e,{start:r,stop:a,num:s}=n,i=Ma(r,a,s);return t.makeTensorInfo([i.length],"float32",i)}function fr(e,t,n,r){const a=ea.util.sizeFromShape(t),s=ea.util.sizeFromShape(e.shape),i=s/a,o=Zt({inputs:{x:e},attrs:{shape:[i,a]},backend:r}),u=Jt(o,e.dtype,"max",r),c=Zt({inputs:{x:u},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(o),r.disposeIntermediateTensorInfo(u),c}function mr(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reductionIndices:s,keepDims:i}=r,o=a.shape.length,u=ea.util.parseAxisParam(s,a.shape);let c=u;const l=ea.backend_util.getAxesPermutation(c,o),d=null!=l,h=n.shouldExecuteOnCPU([a]);let p=a;if(d){if(h){const e=n.texData.get(p.dataId),t=e.values,r=new Array(o);for(let e=0;e<r.length;e++)r[e]=a.shape[l[e]];const s=es(t,a.shape,a.dtype,l,r);p=n.makeTensorInfo(r,a.dtype);const i=n.texData.get(p.dataId);i.values=s}else p=tn(a,l,n);c=ea.backend_util.getInnerMostAxes(c.length,o)}ea.backend_util.assertAxesAreInnerMostDims("max",c,o);const[f,m]=ea.backend_util.computeOutAndReduceShapes(p.shape,c);let b,g=f;if(i&&(g=ea.backend_util.expandShapeToKeepDim(f,u)),h){const e=n.texData.get(p.dataId),t=e.values,r=La(t,ea.util.sizeFromShape(m),g,a.dtype);b=n.makeTensorInfo(g,a.dtype);const s=n.texData.get(b.dataId);s.values=r}else b=fr(p,m,g,n);return d&&n.disposeIntermediateTensorInfo(p),b}function br(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t;oe(a,"maxPool");const{filterSize:s,strides:i,pad:o,dimRoundingMode:u}=r,c=1;ea.util.assert(ea.backend_util.eitherStridesOrDilationsAreOne(i,c),()=>"Error in maxPool: Either strides or dilations must be 1. "+`Got strides ${i} and dilations '${c}'`);const l=ea.backend_util.computePool2DInfo(a.shape,s,i,c,o,u);if(1===l.filterWidth&&1===l.filterHeight&&ea.util.arraysEqual(l.inShape,l.outShape))return Wt({inputs:{x:a},backend:n});const d=new Bi(l,"max",!1);return n.runWebGLProgram(d,[a],a.dtype)}function gr(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,dataFormat:u,dimRoundingMode:c}=r,l=[1,1,1],d=ea.backend_util.computePool3DInfo(a.shape,s,i,l,o,c,u),h=new Wi(d,"max",!1);return n.runWebGLProgram(h,[a],a.dtype)}function yr(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,i=s,{filterSize:o,strides:u,pad:c,dimRoundingMode:l}=r,d=[1,1,1],h=ea.backend_util.computePool3DInfo(i.shape,o,u,d,c,l),p=new Wi(h,"max",!0),f=n.runWebGLProgram(p,[i],i.dtype),m=new ul(h),b=n.runWebGLProgram(m,[a,f],i.dtype);return n.disposeIntermediateTensorInfo(f),b}function xr(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s,output:i}=t,o=s;oe([s,i],"maxPoolGrad");const{filterSize:u,strides:c,pad:l,dimRoundingMode:d}=r,h=ea.backend_util.computePool2DInfo(o.shape,u,c,1,l,d),p=!0,f=new Bi(h,"max",p),m=n.runWebGLProgram(f,[o],o.dtype),b=new ol(h),g=n.runWebGLProgram(b,[a,m],o.dtype);return n.disposeIntermediateTensorInfo(m),g}function vr(e,t,n,r){let a=new Bi(n,"max",!1);const s=r.runWebGLProgram(a,[e],"float32");a=new Bi(n,"max",!0,!0,t);const i=r.runWebGLProgram(a,[e],"float32");return[s,i]}function wr(e,t,n,r){const a=ea.util.sizeFromShape(t),s=ea.util.sizeFromShape(e.shape),i=s/a,o=Zt({inputs:{x:e},attrs:{shape:[i,a]},backend:r}),u=Jt(o,"float32","mean",r),c=Zt({inputs:{x:u},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(o),r.disposeIntermediateTensorInfo(u),c}function kr(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r,o=a.shape.length,u=ea.util.parseAxisParam(s,a.shape);let c=u;const l=ea.backend_util.getAxesPermutation(c,o);let d=a;null!=l&&(d=an({inputs:{x:a},backend:n,attrs:{perm:l}}),c=ea.backend_util.getInnerMostAxes(c.length,a.shape.length)),ea.backend_util.assertAxesAreInnerMostDims("min",c,o);const[h,p]=ea.backend_util.computeOutAndReduceShapes(d.shape,c),f=ea.util.sizeFromShape(p),m=Zt({inputs:{x:d},backend:n,attrs:{shape:[-1,f]}}),b=Jt(m,m.dtype,"min",n);let g;if(i){const e=ea.backend_util.expandShapeToKeepDim(h,u);g=Zt({inputs:{x:b},backend:n,attrs:{shape:e}})}else g=Zt({inputs:{x:b},backend:n,attrs:{shape:h}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(b),null!=l&&n.disposeIntermediateTensorInfo(d),g}function Or(e){const{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{dim:s}=r,i=ea.util.parseAxisParam([s],a.shape),o=mr({inputs:{x:a},backend:n,attrs:{reductionIndices:i,keepDims:!1}}),u=ea.backend_util.expandShapeToKeepDim(o.shape,i),c=Zt({inputs:{x:o},backend:n,attrs:{shape:u}}),l=Al({inputs:{a:a,b:c},backend:n}),d=Su({inputs:{x:l},backend:n}),h=rn({inputs:{x:d},backend:n,attrs:{axis:i,keepDims:!1}}),p=Zt({inputs:{x:h},backend:n,attrs:{shape:u}}),f=Cl({inputs:{a:d,b:p},backend:n});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p),f}function Ir(e){const{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{numSamples:s,seed:i,normalized:o}=r,u=o?a:Or({inputs:{logits:a},backend:n,attrs:{dim:a.shape.length-1}}),c=u.shape[0],l=u.shape[1],d=new jl(c,l,s),h=d.getCustomSetupFunc(i),p=n.runWebGLProgram(d,[u],"int32",h);return o||n.disposeIntermediateTensorInfo(u),p}function Nr(e){const{inputs:t,backend:n}=e,{x:r}=t;if(n.shouldExecuteOnCPU([r])){const e=n.texData.get(r.dataId),[t,a]=Va(e.values,r.shape,r.dtype);return n.makeTensorInfo(a,r.dtype,t)}let a;return a=Object(ea.env)().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new xs(r.shape,Rl):new ss(r.shape,Rl),n.runWebGLProgram(a,[r],r.dtype)}function jr(e){ea.backend_util.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u}=r,c=n.readSync(a.dataId),l=n.readSync(s.dataId),{selectedIndices:d}=zl(c,l,i,o,u);return n.makeTensorInfo([d.length],"int32",new Int32Array(d))}function Sr(e){ea.backend_util.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u,padToMaxOutputSize:c}=r,l=n.readSync(a.dataId),d=n.readSync(s.dataId),{selectedIndices:h,validOutputs:p}=Pl(l,d,i,o,u,c);return[n.makeTensorInfo([h.length],"int32",new Int32Array(h)),n.makeTensorInfo([],"int32",new Int32Array([p]))]}function Tr(e){ea.backend_util.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u,softNmsSigma:c}=r,l=n.readSync(a.dataId),d=n.readSync(s.dataId),h=i,p=o,f=u,m=c,{selectedIndices:b,selectedScores:g}=Wl(l,d,h,p,f,m);return[n.makeTensorInfo([b.length],"int32",new Int32Array(b)),n.makeTensorInfo([g.length],"float32",new Float32Array(g))]}function Cr(e){const{inputs:t,backend:n}=e,{x:r}=t;if("complex64"===r.dtype){const e=jn({inputs:{input:r},backend:n}),t=Cr({inputs:{x:e},backend:n}),a=_n({inputs:{input:r},backend:n}),s=Cr({inputs:{x:a},backend:n}),i=Vt({inputs:{real:t,imag:s},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(s),i}return sr({attrs:{shape:r.shape,dtype:r.dtype,value:"string"===r.dtype?"":0},backend:n})}function Er(e){const{inputs:t,backend:n}=e,{x:r}=t;if("string"===r.dtype)throw new Error("onesLike is not supported under string dtype");if("complex64"===r.dtype){const e=jn({inputs:{input:r},backend:n}),t=Er({inputs:{x:e},backend:n}),a=_n({inputs:{input:r},backend:n}),s=Cr({inputs:{x:a},backend:n}),i=Vt({inputs:{real:t,imag:s},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(s),i}return sr({attrs:{shape:r.shape,dtype:r.dtype,value:1},backend:n})}function $r(e){const{inputs:t,backend:n,attrs:r}=e,{axis:a}=r;if(1===t.length)return nr({inputs:{input:t[0]},backend:n,attrs:{dim:a}});const s=t[0].shape,i=t[0].dtype;t.forEach(e=>{ea.util.assertShapesMatch(s,e.shape,"All tensors passed to stack must have matching shapes"),ea.util.assert(i===e.dtype,()=>"All tensors passed to stack must have matching dtypes")});const o=[],u=t.map(e=>{const t=nr({inputs:{input:e},backend:n,attrs:{dim:a}});return o.push(t),t}),c=Rn({inputs:u,backend:n,attrs:{axis:a}});return o.forEach(e=>n.disposeIntermediateTensorInfo(e)),c}function Ar(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r,o=a.shape.length,u=[],c=ea.util.parseAxisParam(s,a.shape);let l=c;const d=ea.backend_util.getAxesPermutation(l,o);let h,p=a;if(null!=d&&(p=an({inputs:{x:a},backend:n,attrs:{perm:d}}),l=ea.backend_util.getInnerMostAxes(l.length,o),u.push(p)),ea.backend_util.assertAxesAreInnerMostDims("prod",l,o),n.shouldExecuteOnCPU([p])){const e=n.texData.get(p.dataId).values,{outVals:t,outShape:r,outDtype:a}=Ua(p.shape,p.dtype,e,l);h=n.makeTensorInfo(r,a,t)}else{const[e,t]=ea.backend_util.computeOutAndReduceShapes(p.shape,l),r=ea.util.sizeFromShape(t),s=Zt({inputs:{x:p},backend:n,attrs:{shape:[-1,r]}}),i=Object(ea.sumOutType)(a.dtype),o=Jt(s,i,"prod",n);h=Zt({inputs:{x:o},backend:n,attrs:{shape:e}}),u.push(s),u.push(o)}if(i){u.push(h);const e=ea.backend_util.expandShapeToKeepDim(h.shape,c);h=Zt({inputs:{x:h},backend:n,attrs:{shape:e}})}return u.forEach(e=>n.disposeIntermediateTensorInfo(e)),h}function _r(e){const{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:s,halfPixelCenters:i,size:o}=r,[u,c]=o,l=Object(ea.env)().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new xd(a.shape,u,c,s,i):new yd(a.shape,u,c,s,i);return n.runWebGLProgram(l,[a],"float32")}function Dr(e){const{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:i}=r,o=new wd(s.shape,a.shape,i);return n.runWebGLProgram(o,[s],s.dtype)}function Fr(e){const{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:s,halfPixelCenters:i,size:o}=r,[u,c]=o,l=new Od(a.shape,u,c,s,i);return n.runWebGLProgram(l,[a],a.dtype)}function Rr(e){const{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:i}=r,o=new Nd(s.shape,a.shape,i);return n.runWebGLProgram(o,[s],s.dtype)}function Mr(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{dims:s}=r,i=a.shape.length,o=ea.util.parseAxisParam(s,a.shape);if(0===i)return Wt({inputs:{x:a},backend:n});const u=Object(ea.env)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Td(a.shape,o):new Sd(a.shape,o);return n.runWebGLProgram(u,[a],a.dtype)}function zr(e){const{inputs:t,backend:n,attrs:r}=e,{indices:a,updates:s}=t,{shape:i}=r,{sliceRank:o,numUpdates:u,sliceSize:c,strides:l,outputSize:d}=ea.backend_util.calculateShapes(s,a,i),h=[d/c,c];if(0===d)return n.makeTensorInfo(i,a.dtype);const p=Zt({inputs:{x:a},backend:n,attrs:{shape:[u,o]}}),f=Zt({inputs:{x:s},backend:n,attrs:{shape:[u,c]}}),m=n.makeTensorInfo([],"float32",new Float32Array([0])),b=new zd(u,o,p.shape.length,f.shape.length,l,h),g=n.runWebGLProgram(b,[f,p,m],f.dtype),y=Zt({inputs:{x:g},backend:n,attrs:{shape:i}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(m),y}function Lr(e){const{inputs:t,backend:n}=e,{condition:r,t:a,e:s}=t,i=new Pd(r.shape.length,a.shape,a.shape.length);return n.runWebGLProgram(i,[r,a,s],Object(ea.upcastType)(a.dtype,s.dtype))}function Pr(e){const{inputs:t,backend:n}=e,{inputIndices:r,inputShape:a,newShape:s}=t;if(2!==r.shape.length)throw new Error(`Input indices should be a matrix but received shape ${r.shape}`);if(1!==a.shape.length)throw new Error(`Input shape should be a vector but received shape ${a.shape}`);if(1!==s.shape.length)throw new Error(`Target shape should be a vector but received shape ${s.shape}`);const i=Array.from(n.readSync(a.dataId)),o=n.readSync(r.dataId),u=Array.from(n.readSync(s.dataId)),[c,l,d]=Xa(o,r.shape,r.dtype,i,u);return[n.makeTensorInfo(l,r.dtype,c),n.makeTensorInfo([d.length],s.dtype,new Int32Array(d))]}function Br(e){const{inputs:t,backend:n,attrs:r}=e,{sparseIndices:a,sparseValues:s,defaultValue:i}=t,{outputShape:o}=r,{sliceRank:u,numUpdates:c,strides:l,outputSize:d}=ea.backend_util.calculateShapes(s,a,o),h=!1,p=new zd(c,u,a.shape.length,s.shape.length,l,[d,1],h),f=n.runWebGLProgram(p,[s,a,i],s.dtype),m=Zt({inputs:{x:f},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(f),m}function Wr(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{numOrSizeSplits:s,axis:i}=r,o=ea.util.parseAxisParam(i,a.shape)[0],u=ea.backend_util.prepareSplitSize(a,s,o),c=a.shape.length,l=new Array(c).fill(0),d=a.shape.slice();return u.map(e=>{const t=[...d];t[o]=e;const r=In({inputs:{x:a},backend:n,attrs:{begin:l,size:t}});return l[o]+=e,r})}function Vr({inputs:e,attrs:t,backend:n}){const{x:r}=e,a=is+`\n    return x > 0.0 ? 1.0 : float(${t.alpha});\n  `,s=new ss(r.shape,a);return n.runWebGLProgram(s,[r],r.dtype)}function Ur(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{begin:s,end:i,strides:o,beginMask:u,endMask:c,ellipsisMask:l,newAxisMask:d,shrinkAxisMask:h}=r,{nonStrided:p,$begin:f,$strides:m,size:b,newShape:g,outShape:y}=ea.slice_util.sliceInfo(a.shape,s,i,o,u,c,l,d,h),x=Zt({inputs:{x:a},backend:n,attrs:{shape:g}});let v;if(p){const e=In({inputs:{x:x},backend:n,attrs:{begin:f,size:b}});v=Zt({inputs:{x:e},backend:n,attrs:{shape:y}}),n.disposeIntermediateTensorInfo(e)}else if(y.some(e=>0===e))v=n.makeTensorInfo(y,a.dtype,[]);else{const e=n.shouldExecuteOnCPU([x]);if(e){const e=n.texData.get(x.dataId),t=e.values,r=Object(ea.buffer)(x.shape,x.dtype,t),a=Ya(y,r,m,f);v=n.makeTensorInfo(y,x.dtype,a.values)}else{const e=new wh(f,m,y);v=n.runWebGLProgram(e,[x],x.dtype)}}const w=Zt({inputs:{x:v},backend:n,attrs:{shape:y}});return n.disposeIntermediateTensorInfo(x),n.disposeIntermediateTensorInfo(v),w}function Gr(e){const t=e.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(1===t)return`imod(resRC, ${e[0]})`;const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],r=[];for(let t=0;t<e.length;t++)r.push(`imod(${n[t]}, ${e[t]})`);return r.join()}function Hr(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reps:s}=r;if("string"===a.dtype||a.shape.length>5){const e=n.readSync(a.dataId),t=e.map(e=>ea.util.decodeString(e)),r=Object(ea.buffer)(a.shape,a.dtype,t),i=Qa(r,s);return n.makeTensorInfo(i.shape,i.dtype,i.values)}const i=new Ch(a.shape,s),o=n.runWebGLProgram(i,[a],a.dtype);return o}function qr(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{k:s,sorted:i}=r,o=n.readSync(a.dataId),[u,c]=Ja(o,a.shape,a.dtype,s,i);return[n.makeTensorInfo(u.shape,u.dtype,u.values),n.makeTensorInfo(c.shape,c.dtype,c.values)]}function Kr(e){const{inputs:t,backend:n,attrs:r}=e,{image:a,transforms:s}=t,{interpolation:i,fillMode:o,fillValue:u,outputShape:c}=r,[l,d,h,p]=a.shape,[f,m]=null!=c?c:[d,h],b=[l,f,m,p],g=new Ah(d,h,i,o,u,b);return n.runWebGLProgram(g,[a,s],"float32")}function Xr(e){const{inputs:t,attrs:n,backend:r}=e,{axis:a}=n,{x:s}=t;oe(s,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const i=r.readSync(s.dataId),{outputValues:o,outputShape:u,indices:c}=ts(i,a,s.shape,s.dtype);return[r.makeTensorInfo(u,s.dtype,o),r.makeTensorInfo([c.length],"int32",c)]}function Yr(e){const{inputs:t,backend:n,attrs:r}=e,{value:a}=t;let{axis:s}=r;s<0&&(s+=a.shape.length);const i=a,o=i.shape.length,u=a.shape[s],c=new Array(o-1);let l=0;for(let e=0;e<o;e++)e!==s&&(c[l++]=i.shape[e]);const d=[],h=new Array(o).fill(0),p=i.shape.slice();p[s]=1;const f=new Array(u);for(let e=0;e<f.length;e++){h[s]=e;const t=In({inputs:{x:i},backend:n,attrs:{begin:h,size:p}}),r=Zt({inputs:{x:t},backend:n,attrs:{shape:c}});f[e]=r,d.push(t)}return d.forEach(e=>n.disposeIntermediateTensorInfo(e)),f}function Zr(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,segmentIds:s}=t,{numSegments:i}=r,o=a.shape.length,u=[];let c=0;const l=ea.backend_util.getAxesPermutation([c],o);let d=a;null!=l&&(d=an({inputs:{x:a},backend:n,attrs:{perm:l}}),u.push(d),c=ea.backend_util.getInnerMostAxes(1,o)[0]);const h=ea.backend_util.segment_util.computeOutShape(d.shape,c,i),p=ea.util.sizeFromShape([d.shape[c]]),f=Zt({inputs:{x:d},backend:n,attrs:{shape:[-1,p]}});u.push(f);const m=Object(ea.sumOutType)(a.dtype),b=(e,t,r,a,s)=>{const i=e.shape[0],o=e.shape[1],c=ea.backend_util.segment_util.segOpComputeOptimalWindowSize(o,s),l={windowSize:c,inSize:o,batchSize:i,numSegments:s},d=new Rh(l,t),h=n.compileAndRun(d,[e,r],a);if(u.push(h),h.shape[1]===s)return h;const p=sd({backend:n,attrs:{start:0,stop:s,step:1,dtype:"float32"}}),f=Hr({inputs:{x:p},backend:n,attrs:{reps:[o/c]}});u.push(p),u.push(f);const m=b(h,t,f,a,s);return m},g=b(f,"unsortedSegmentSum",s,m,i),y=Zt({inputs:{x:g},backend:n,attrs:{shape:h}});let x=y;if(null!=l){u.push(y);const e=ea.backend_util.getUndoAxesPermutation(l);x=an({inputs:{x:x},backend:n,attrs:{perm:e}})}return u.forEach(e=>n.disposeIntermediateTensorInfo(e)),x}n.r(t),n.d(t,"version_webgl",function(){return Ts}),n.d(t,"MathBackendWebGL",function(){return Ss}),n.d(t,"setWebGLContext",function(){return r}),n.d(t,"GPGPUContext",function(){return xa}),n.d(t,"gpgpu_util",function(){return Jr}),n.d(t,"webgl_util",function(){return Qr}),n.d(t,"forceHalfFloat",function(){return Bt}),n.d(t,"webgl",function(){return Cs});var Qr={};n.r(Qr),n.d(Qr,"callAndCheck",function(){return p}),n.d(Qr,"canBeRepresented",function(){return m}),n.d(Qr,"getWebGLErrorMessage",function(){return b}),n.d(Qr,"getExtensionOrThrow",function(){return g}),n.d(Qr,"createVertexShader",function(){return y}),n.d(Qr,"createFragmentShader",function(){return x}),n.d(Qr,"createProgram",function(){return w}),n.d(Qr,"linkProgram",function(){return k}),n.d(Qr,"validateProgram",function(){return O}),n.d(Qr,"createStaticVertexBuffer",function(){return I}),n.d(Qr,"createStaticIndexBuffer",function(){return N}),n.d(Qr,"getNumChannels",function(){return j}),n.d(Qr,"createTexture",function(){return S}),n.d(Qr,"validateTextureSize",function(){return T}),n.d(Qr,"createFramebuffer",function(){return C}),n.d(Qr,"bindVertexBufferToProgramAttribute",function(){return E}),n.d(Qr,"bindTextureUnit",function(){return $}),n.d(Qr,"unbindTextureUnit",function(){return A}),n.d(Qr,"getProgramUniformLocationOrThrow",function(){return _}),n.d(Qr,"getProgramUniformLocation",function(){return D}),n.d(Qr,"bindTextureToProgramUniformSampler",function(){return F}),n.d(Qr,"bindCanvasToFramebuffer",function(){return R}),n.d(Qr,"bindColorTextureToFramebuffer",function(){return M}),n.d(Qr,"unbindColorTextureFromFramebuffer",function(){return z}),n.d(Qr,"validateFramebuffer",function(){return L}),n.d(Qr,"getFramebufferErrorMessage",function(){return P}),n.d(Qr,"getBatchDim",function(){return V}),n.d(Qr,"getRowsCols",function(){return U}),n.d(Qr,"getShapeAs3D",function(){return G}),n.d(Qr,"getTextureShapeFromLogicalShape",function(){return H}),n.d(Qr,"isReshapeFree",function(){return K}),n.d(Qr,"getWebGLMaxTextureSize",function(){return X}),n.d(Qr,"resetMaxTextureSize",function(){return Y}),n.d(Qr,"resetMaxTexturesInShader",function(){return Z}),n.d(Qr,"getMaxTexturesInShader",function(){return Q}),n.d(Qr,"getWebGLDisjointQueryTimerVersion",function(){return J}),n.d(Qr,"hasExtension",function(){return ee}),n.d(Qr,"isWebGLVersionEnabled",function(){return te}),n.d(Qr,"isCapableOfRenderingToFloatTexture",function(){return ne}),n.d(Qr,"isDownloadFloatTextureEnabled",function(){return re}),n.d(Qr,"isWebGLFenceEnabled",function(){return ie}),n.d(Qr,"assertNotComplex",function(){return oe});var Jr={};n.r(Jr),n.d(Jr,"createVertexShader",function(){return de}),n.d(Jr,"createVertexBuffer",function(){return he}),n.d(Jr,"createIndexBuffer",function(){return pe}),n.d(Jr,"getInternalFormatForFloat32MatrixTexture",function(){return me}),n.d(Jr,"createFloat32MatrixTexture",function(){return be}),n.d(Jr,"getInternalFormatForFloat16MatrixTexture",function(){return ge}),n.d(Jr,"createFloat16MatrixTexture",function(){return ye}),n.d(Jr,"getInternalFormatForUnsignedBytesMatrixTexture",function(){return xe}),n.d(Jr,"createUnsignedBytesMatrixTexture",function(){return ve}),n.d(Jr,"getInternalFormatForPackedMatrixTexture",function(){return we}),n.d(Jr,"createPackedMatrixTexture",function(){return ke}),n.d(Jr,"getInternalFormatForFloat16PackedMatrixTexture",function(){return Oe}),n.d(Jr,"createFloat16PackedMatrixTexture",function(){return Ie}),n.d(Jr,"bindVertexProgramAttributeStreams",function(){return Ne}),n.d(Jr,"uploadDenseMatrixToTexture",function(){return je}),n.d(Jr,"uploadPixelDataToTexture",function(){return Se}),n.d(Jr,"createBufferFromOutputTexture",function(){return Te}),n.d(Jr,"downloadFloat32MatrixFromBuffer",function(){return Ce}),n.d(Jr,"downloadByteEncodedFloatMatrixFromOutputTexture",function(){return Ee}),n.d(Jr,"downloadPackedMatrixFromBuffer",function(){return $e}),n.d(Jr,"downloadMatrixFromPackedOutputTexture",function(){return Ae});var ea=n(0);const ta={},na={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};var ra,aa,sa;(function(e){e[e.DENSE=0]="DENSE",e[e.SHARED_BATCH=1]="SHARED_BATCH"})(ra||(ra={})),function(e){e[e.RENDER=0]="RENDER",e[e.UPLOAD=1]="UPLOAD",e[e.PIXELS=2]="PIXELS",e[e.DOWNLOAD=3]="DOWNLOAD"}(aa||(aa={})),function(e){e[e.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",e[e.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",e[e.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",e[e.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",e[e.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"}(sa||(sa={}));const ia=5.96e-8,oa=65504,ua=/ERROR: [0-9]+:([0-9]+):/g;let ca,la;const da=Object(ea.env)();da.registerFlag("HAS_WEBGL",()=>da.getNumber("WEBGL_VERSION")>0),da.registerFlag("WEBGL_VERSION",()=>te(2)?2:te(1)?1:0),da.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",()=>!1),da.registerFlag("WEBGL_BUFFER_SUPPORTED",()=>2===da.get("WEBGL_VERSION")),da.registerFlag("WEBGL_CPU_FORWARD",()=>!0),da.registerFlag("WEBGL_FORCE_F16_TEXTURES",()=>!1),da.registerFlag("WEBGL_PACK",()=>da.getBool("HAS_WEBGL")),da.registerFlag("WEBGL_PACK_NORMALIZATION",()=>da.getBool("WEBGL_PACK")),da.registerFlag("WEBGL_PACK_CLIP",()=>da.getBool("WEBGL_PACK")),da.registerFlag("WEBGL_PACK_DEPTHWISECONV",()=>da.getBool("WEBGL_PACK")),da.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",()=>da.getBool("WEBGL_PACK")),da.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",()=>da.getBool("WEBGL_PACK")),da.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",()=>da.getBool("WEBGL_PACK")),da.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",()=>da.getBool("WEBGL_PACK")),da.registerFlag("WEBGL_PACK_REDUCE",()=>da.getBool("WEBGL_PACK")),da.registerFlag("WEBGL_LAZILY_UNPACK",()=>da.getBool("WEBGL_PACK")),da.registerFlag("WEBGL_CONV_IM2COL",()=>da.getBool("WEBGL_PACK")),da.registerFlag("WEBGL_MAX_TEXTURE_SIZE",()=>X(da.getNumber("WEBGL_VERSION"))),da.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",()=>Q(da.getNumber("WEBGL_VERSION"))),da.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",()=>{const e=da.getNumber("WEBGL_VERSION");return 0===e?0:J(e)}),da.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",()=>da.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!ea.device_util.isMobile()),da.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",()=>ne(da.getNumber("WEBGL_VERSION"))),da.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",()=>!da.getBool("WEBGL_FORCE_F16_TEXTURES")&&da.getBool("WEBGL_RENDER_FLOAT32_CAPABLE")),da.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",()=>re(da.getNumber("WEBGL_VERSION"))),da.registerFlag("WEBGL_FENCE_API_ENABLED",()=>ie(da.getNumber("WEBGL_VERSION"))),da.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",()=>{const e=da.getBool("WEBGL_RENDER_FLOAT32_ENABLED");return e?4:0}),da.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",()=>-1,e=>{if(e<0&&-1!==e)throw new Error("WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never "+`delete) or at least 0, but got ${e}.`)}),da.registerFlag("WEBGL_FLUSH_THRESHOLD",()=>ea.device_util.isMobile()&&da.getBool("IS_CHROME")?1:-1,e=>{
if(e<0&&-1!==e)throw new Error("WEBGL_FLUSH_THRESHOLD must be -1 (indicating never "+`manual flush) or at least 0, but got ${e}.`)});const ha="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n";class pa{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=ra.DENSE;const t=c(e),n=ue();this.outputShape=e,this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${ce(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n          vec2(${t[0]}, ${t[1]}));\n        int index = 4 * (resTexRC.x * ${t[1]} + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ${n.output} = result;\n      }\n    `}}class fa{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=ra.DENSE;const t=c(e),n=ue();this.outputShape=e,this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${ce(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n          vec2(${t[0]}, ${t[1]}));\n        int index = 4 * (resTexRC.x * ${t[1]} + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ${n.output} = result;\n      }\n    `}}class ma{constructor(e){this.variableNames=["A"],this.outTexUsage=aa.DOWNLOAD;const t=ue();this.outputShape=e,this.userCode=`\n      ${ha}\n\n      void main() {\n        float x = getAAtOutCoords();\n        ${t.output} = encode_float(x);\n      }\n    `}}class ba{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=aa.DOWNLOAD;const t=ue();this.outputShape=e,this.userCode=`\n      ${ha}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ${t.output} = encode_float(x);\n      }\n    `}}class ga{constructor(e,t,n=!1){this.variableNames=["A"];const r=ue(),[a,s]=t;this.outputShape=e;let i="result";n&&(i="floor(result * 255. + 0.5)"),this.userCode=`\n      ${le(e)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        int flatIndex = getFlatIndex(coords);\n        int offset = imod(flatIndex, 4);\n\n        flatIndex = idiv(flatIndex, 4, 1.);\n\n        int r = flatIndex / ${s};\n        int c = imod(flatIndex, ${s});\n        vec2 uv = (vec2(c, r) + halfCR) / vec2(${s}.0, ${a}.0);\n        vec4 values = ${r.texture2D}(A, uv);\n\n        float result;\n\n        if(offset == 0) {\n          result = values[0];\n        } else if(offset == 1) {\n          result = values[1];\n        } else if(offset == 2) {\n          result = values[2];\n        } else {\n          result = values[3];\n        }\n\n        ${r.output} = vec4(${i}, 0., 0., 0.);\n      }\n    `}}class ya{constructor(e,t,n=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const r=ue(),[a,s]=t;this.outputShape=e;let i="",o="result";n&&(o="floor(result * 255. + 0.5)");for(let t=0;t<=1;t++)for(let n=0;n<=1;n++){const o=2*t+n;i+=`\n          localCoords = coords;\n          if(localCoords[2] + ${n} < ${e[2]}) {\n            localCoords[2] += ${n};\n            if(localCoords[1] + ${t} < ${e[1]}) {\n              localCoords[1] += ${t};\n\n              flatIndex = getFlatIndex(localCoords);\n              offset = imod(flatIndex, 4);\n\n              flatIndex = idiv(flatIndex, 4, 1.);\n\n              r = flatIndex / ${s};\n              c = imod(flatIndex, ${s});\n              uv = (vec2(c, r) + halfCR) / vec2(${s}.0, ${a}.0);\n              values = ${r.texture2D}(A, uv);\n\n              if(offset == 0) {\n                result[${o}] = values[0];\n              } else if(offset == 1) {\n                result[${o}] = values[1];\n              } else if(offset == 2) {\n                result[${o}] = values[2];\n              } else {\n                result[${o}] = values[3];\n              }\n            }\n          }\n        `}this.userCode=`\n      ${le(e)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        vec4 result = vec4(0.);\n        int flatIndex, r, c, offset;\n        ivec3 localCoords;\n        vec2 uv;\n        vec4 values;\n\n        ${i}\n\n        ${r.output} = ${o};\n      }\n    `}}class xa{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.vertexAttrsAreBound=!1,this.itemsToPoll=[];const t=Object(ea.env)().getNumber("WEBGL_VERSION");null!=e?(this.gl=e,r(t,e)):this.gl=a(t);let n="WEBGL_color_buffer_float";const s="EXT_color_buffer_half_float";if(1===Object(ea.env)().getNumber("WEBGL_VERSION")){const e="OES_texture_float",t="OES_texture_half_float";if(this.textureFloatExtension=g(this.gl,e),ee(this.gl,t))this.textureHalfFloatExtension=g(this.gl,t);else if(Object(ea.env)().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),ee(this.gl,s))this.colorBufferHalfFloatExtension=g(this.gl,s);else if(Object(ea.env)().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",ee(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else{if(!ee(this.gl,s))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension(s)}this.vertexBuffer=he(this.gl),this.indexBuffer=pe(this.gl),this.framebuffer=C(this.gl),this.textureConfig=h(this.gl,this.textureHalfFloatExtension)}get debug(){return Object(ea.env)().getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const e=this.gl;p(e,()=>e.finish()),p(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,null)),p(e,()=>e.deleteFramebuffer(this.framebuffer)),p(e,()=>e.bindBuffer(e.ARRAY_BUFFER,null)),p(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null)),p(e,()=>e.deleteBuffer(this.indexBuffer)),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),be(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),ye(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),ve(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),Se(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,n,r){this.throwIfDisposed(),je(this.gl,e,t,n,r,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),Ie(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),ke(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(z(this.gl,this.framebuffer),this.outputTexture=null),p(this.gl,()=>this.gl.deleteTexture(e))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,n){return this.downloadMatrixDriver(e,()=>Ee(this.gl,t,n,this.textureConfig))}downloadPackedMatrixFromBuffer(e,t,n,r,a,s){return $e(this.gl,e,t,n,r,a,s,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return Ce(this.gl,e,t)}createBufferFromTexture(e,t,n){this.bindTextureToFrameBuffer(e);const r=Te(this.gl,t,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),r}createAndWaitForFence(){const e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,n;if(Object(ea.env)().getBool("WEBGL_FENCE_API_ENABLED")){const r=e,a=r.fenceSync(r.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),n=(()=>{const e=r.clientWaitSync(a,0,0);return e===r.ALREADY_SIGNALED||e===r.CONDITION_SATISFIED}),t=a}else Object(ea.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),n=(()=>this.isQueryAvailable(t,Object(ea.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")))):n=(()=>!0);return{query:t,isFencePassed:n}}downloadMatrixFromPackedTexture(e,t,n){return this.downloadMatrixDriver(e,()=>Ae(this.gl,t,n))}createProgram(e){this.throwIfDisposed();const t=this.gl,n=x(t,e),r=de(t),a=w(t);return p(t,()=>t.attachShader(a,r)),p(t,()=>t.attachShader(a,n)),k(t,a),this.debug&&O(t,a),this.vertexAttrsAreBound||(this.setProgram(a),this.vertexAttrsAreBound=Ne(t,this.program,this.vertexBuffer)),a}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),null!=e&&p(this.gl,()=>this.gl.deleteProgram(e))}setProgram(e){this.throwIfDisposed(),this.program=e,null!=this.program&&this.debug&&O(this.gl,this.program),p(this.gl,()=>this.gl.useProgram(e))}getUniformLocation(e,t,n=!0){return this.throwIfDisposed(),n?_(this.gl,e,t):D(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),p(this.gl,()=>this.gl.getAttribLocation(e,t))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,n){this.throwIfDisposed(),this.throwIfNoProgram(),F(this.gl,e,t,n)}setOutputMatrixTexture(e,t,n){this.setOutputMatrixTextureDriver(e,n,t)}setOutputPackedMatrixTexture(e,t,n){this.throwIfDisposed();const[r,a]=l(t,n);this.setOutputMatrixTextureDriver(e,r,a)}setOutputMatrixWriteRegion(e,t,n,r){this.setOutputMatrixWriteRegionDriver(n,e,r,t)}setOutputPackedMatrixWriteRegion(e,t,n,r){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&O(this.gl,this.program),L(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const e=this.gl;this.debug&&this.debugValidate(),p(e,()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),p(this.gl,()=>this.gl.finish())}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=g(this.gl,2===Object(ea.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===Object(ea.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2(),n=e.createQuery();return e.beginQuery(t.TIME_ELAPSED_EXT,n),n}const e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(2===Object(ea.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2();return void e.endQuery(t.TIME_ELAPSED_EXT)}const e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await ea.util.repeatedTry(()=>this.disposed||this.isQueryAvailable(e,Object(ea.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))),this.getQueryTime(e,Object(ea.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(0===t)return null;if(2===t){const t=this.gl,n=t.getQueryParameter(e,t.QUERY_RESULT);return n/1e6}{const t=this.getQueryTimerExtensionWebGL1(),n=t.getQueryObjectEXT(e,t.QUERY_RESULT_EXT);return n/1e6}}isQueryAvailable(e,t){if(0===t)return!0;if(2===t){const t=this.gl,n=this.getQueryTimerExtensionWebGL2(),r=t.getQueryParameter(e,t.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),r&&!this.disjoint}{const t=this.getQueryTimerExtensionWebGL1(),n=t.getQueryObjectEXT(e,t.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(t.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(e){return new Promise(t=>{this.addItemToPoll(()=>e.isFencePassed(),()=>t())})}pollItems(){const e=_e(this.itemsToPoll.map(e=>e.isDoneFn));for(let t=0;t<=e;++t){const{resolveFn:e}=this.itemsToPoll[t];e()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length>1||ea.util.repeatedTry(()=>(this.pollItems(),0===this.itemsToPoll.length))}bindTextureToFrameBuffer(e){this.throwIfDisposed(),M(this.gl,e,this.framebuffer),this.debug&&L(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(M(this.gl,this.outputTexture,this.framebuffer),this.debug&&L(this.gl)):z(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);const n=t();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(e,t,n){this.throwIfDisposed();const r=this.gl;M(r,e,this.framebuffer),this.debug&&L(r),this.outputTexture=e,p(r,()=>r.viewport(0,0,t,n)),p(r,()=>r.scissor(0,0,t,n))}setOutputMatrixWriteRegionDriver(e,t,n,r){this.throwIfDisposed(),p(this.gl,()=>this.gl.scissor(e,t,n,r))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}}const{getBroadcastDims:va}=ea.backend_util,wa="\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",ka="\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",Oa="\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",Ia="\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";var Na=n(183);const{addImpl:ja,bincountImpl:Sa,bincountReduceImpl:Ta,ceilImpl:Ca,concatImpl:Ea,expImpl:$a,expm1Impl:Aa,floorImpl:_a,gatherV2Impl:Da,greaterImpl:Fa,lessImpl:Ra,linSpaceImpl:Ma,logImpl:za,maxImpl:La,maximumImpl:Pa,minimumImpl:Ba,multiplyImpl:Wa,negImpl:Va,prodImpl:Ua,rangeImpl:Ga,rsqrtImpl:Ha,simpleAbsImpl:qa,sliceImpl:Ka,sparseReshapeImpl:Xa,stridedSliceImpl:Ya,subImpl:Za,tileImpl:Qa,topKImpl:Ja,transposeImpl:es,uniqueImpl:ts}=Na;class ns{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e;const t=e.length;if(0===t)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{const n=Nt("rc",t),r=gt(t),a=Tt(t,e,n),s=Ct(t,e[e.length-1],e[e.length-2],n),i=Et(e,n);this.userCode=`\n        void main() {\n          ${r} rc = getOutputCoords();\n\n          if(${a}) {\n            setOutput(vec4(0));\n          } else {\n            ${s}\n\n            setOutput(vec4(${i}));\n          }\n        }\n      `}}}class rs{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e;let n="";for(let e=0;e<4;e++){let t="thisRC = rc;";e%2==1&&(t+="thisRC.z += 1;"),e>1&&(t+="thisRC.y += 1;"),n+=`\n        ${t}\n        ${e>0?"if(thisRC.y < rows && thisRC.z < cols){":""}\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[${e}] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ${e>0?"}":""}\n      `}this.userCode=`\n      ${$t(t)}\n      ${le(e)}\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ${e[1]};\n        int cols = ${e[2]};\n\n        ${n}\n\n        setOutput(result);\n      }\n    `}}class as{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}acquireTexture(e,t,n){const r=Rt(t,n),a=Mt(e,r,n);a in this.freeTextures||(this.freeTextures[a]=[]),a in this.usedTextures||(this.usedTextures[a]=[]);const s=_t(e,r,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[a].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=s,this.log();const e=this.freeTextures[a].shift();return this.usedTextures[a].push(e),e}let i;return r===sa.PACKED_2X2_FLOAT32?i=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):r===sa.PACKED_2X2_FLOAT16?i=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):r===sa.UNPACKED_FLOAT32?i=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):r===sa.UNPACKED_FLOAT16?i=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):r===sa.PACKED_4X1_UNSIGNED_BYTE&&(i=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[a].push(i),this.numUsedTextures++,this._numBytesAllocated+=s,this.log(),i}releaseTexture(e,t,n,r){if(null==this.freeTextures)return;const a=Rt(n,r),s=Mt(t,a,r);s in this.freeTextures||(this.freeTextures[s]=[]);const i=_t(t,a,this.gpgpu.gl,this.gpgpu.textureConfig,r),o=Object(ea.env)().get("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==o&&this._numBytesAllocated>o?(this.gpgpu.deleteMatrixTexture(e),this._numBytesAllocated-=i):(this.freeTextures[s].push(e),this.numFreeTextures++,this._numBytesFree+=i),this.numUsedTextures--;const u=this.usedTextures[s],c=u.indexOf(e);if(c<0)throw new Error("Cannot release a texture that was never provided by this texture manager");u.splice(c,1),this.log()}log(){if(!this.logEnabled)return;const e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);const t=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(const e in this.freeTextures)this.freeTextures[e].forEach(e=>{this.gpgpu.deleteMatrixTexture(e)});for(const e in this.usedTextures)this.usedTextures[e].forEach(e=>{this.gpgpu.deleteMatrixTexture(e)});this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}class ss{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.userCode=`\n      float unaryOperation(float x) {\n        ${t}\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}const is="if (isnan(x)) return x;",os="return x;",us="return abs(x);",cs="return (x >= 0.0) ? x : (exp(x) - 1.0);",ls=is+"\n  return (x < 0.0) ? 0.0 : x;\n",ds=is+"\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",hs="return x;",ps="return 1.0 / (1.0 + exp(-1.0 * x));",fs="return x;",ms="\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n",bs="\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",gs="\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",ys="return 1.0 / (1.0 + exp(-1.0 * x));";class xs{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.userCode=`\n      vec4 unaryOperation(vec4 x) {\n        ${t}\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}class vs{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e;const t=e.length,n=Nt("rc",t),r=gt(t),a=jt(t,n),s=n.slice(-2),i=t<=1?"rc":`vec2(${s.join(",")})`;this.userCode=`\n      void main() {\n        ${r} rc = getOutputCoords();\n        vec4 packedInput = getA(${a});\n\n        setOutput(getChannel(packedInput, ${i}));\n      }\n    `}}const ws=ea.kernel_impls.whereImpl,ks=1e-7,Os=1e-4,Is={},Ns=128,js=600;class Ss extends ea.KernelBackend{constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!Object(ea.env)().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");if(null==e){const e=a(Object(ea.env)().getNumber("WEBGL_VERSION"));this.binaryCache=zt(Object(ea.env)().getNumber("WEBGL_VERSION")),this.gpgpu=new xa(e),this.canvas=e.canvas,this.gpgpuCreatedLocally=!0}else this.gpgpu=e,this.binaryCache={},this.gpgpuCreatedLocally=!1,this.canvas=e.gl.canvas;this.textureManager=new as(this.gpgpu),this.numMBBeforeWarning=Lt(),this.texData=new ea.DataStorage(this,Object(ea.engine)())}nextDataId(){return Ss.nextDataId++}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}write(e,t,n){if((Object(ea.env)().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||Object(ea.env)().getBool("DEBUG"))&&this.checkNumericalProblems(e),"complex64"===n&&null!=e)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const r={id:this.nextDataId()};return this.texData.set(r,{shape:t,dtype:n,values:e,usage:aa.UPLOAD,refCount:1}),r}refCount(e){if(this.texData.has(e)){const t=this.texData.get(e);return t.refCount}return 0}incRef(e){const t=this.texData.get(e);t.refCount++}decRef(e){if(this.texData.has(e)){const t=this.texData.get(e);t.refCount--}}move(e,t,n,r,a){if(Object(ea.env)().getBool("DEBUG")&&this.checkNumericalProblems(t),"complex64"===r)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:n,dtype:r,values:t,usage:aa.UPLOAD,refCount:a})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){const t=this.texData.get(e),{values:n,dtype:r,complexTensorInfos:a,slice:s,shape:i,isPacked:o}=t;if(null!=s){let t;t=o?new xs(i,hs):new ss(i,hs);const n=this.runWebGLProgram(t,[{dataId:e,shape:i,dtype:r}],r),a=this.readSync(n.dataId);return this.disposeIntermediateTensorInfo(n),a}if(null!=n)return this.convertAndCacheOnCPU(e);if("string"===r)return n;const u=null!=this.activeTimers;let c,l;if(u&&(c=ea.util.now()),"complex64"===r){const e=this.readSync(a.real.dataId),t=this.readSync(a.imag.dataId);l=ea.backend_util.mergeRealAndImagArrays(e,t)}else l=this.getValuesFromTexture(e);return u&&(this.downloadWaitMs+=ea.util.now()-c),this.convertAndCacheOnCPU(e,l)}async read(e){if(this.pendingRead.has(e)){const t=this.pendingRead.get(e);return new Promise(e=>t.push(e))}const t=this.texData.get(e),{values:n,shape:r,slice:a,dtype:s,complexTensorInfos:i,isPacked:o}=t;if(null!=a){let t;t=o?new xs(r,hs):new ss(r,hs);const n=this.runWebGLProgram(t,[{dataId:e,shape:r,dtype:s}],s),a=this.read(n.dataId);return this.disposeIntermediateTensorInfo(n),a}if(null!=n)return this.convertAndCacheOnCPU(e);if(!Object(ea.env)().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===Object(ea.env)().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let u,l,d=null;if("complex64"!==s&&Object(ea.env)().get("WEBGL_BUFFER_SUPPORTED")){u=this.decode(e);const t=this.texData.get(u.dataId);d=this.gpgpu.createBufferFromTexture(t.texture,...c(r))}if(this.pendingRead.set(e,[]),"complex64"!==s&&await this.gpgpu.createAndWaitForFence(),"complex64"===s){const e=await Promise.all([this.read(i.real.dataId),this.read(i.imag.dataId)]),t=e[0],n=e[1];l=ea.backend_util.mergeRealAndImagArrays(t,n)}else if(null==d)l=this.getValuesFromTexture(e);else{const e=ea.util.sizeFromShape(r);l=this.gpgpu.downloadFloat32MatrixFromBuffer(d,e)}null!=u&&this.disposeIntermediateTensorInfo(u);const h=this.convertAndCacheOnCPU(e,l),p=this.pendingRead.get(e);return this.pendingRead.delete(e),p.forEach(e=>e(h)),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&Object(ea.engine)().removeDataId(e,this),this.pendingDeletes--),h}bufferSync(e){const t=this.readSync(e.dataId);let n=t;if("string"===e.dtype)try{n=t.map(e=>ea.util.decodeString(e))}catch(e){throw new Error("Failed to decode encoded string bytes into utf-8")}return Object(ea.buffer)(e.shape,e.dtype,n)}checkNumericalProblems(e){if(null!=e)for(let t=0;t<e.length;t++){const n=e[t];if(!m(n)){if(Object(ea.env)().getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))throw Error(`The value ${n} cannot be represented with your `+"current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'");throw Error(`The value ${n} cannot be represented on this device.`)}}}getValuesFromTexture(e){const{shape:t,dtype:n,isPacked:r}=this.texData.get(e),a=ea.util.sizeFromShape(t);if(Object(ea.env)().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const n=this.decode(e),r=this.texData.get(n.dataId),s=this.gpgpu.downloadMatrixFromPackedTexture(r.texture,...c(t)).subarray(0,a);return this.disposeIntermediateTensorInfo(n),s}const s=Object(ea.env)().getBool("WEBGL_PACK")&&!0===r,i=s?G(t):t,o=s?new ba(i):new ma(i),u=this.runWebGLProgram(o,[{shape:i,dtype:n,dataId:e}],"float32"),l=this.texData.get(u.dataId),d=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(l.texture,l.texShape[0],l.texShape[1]).subarray(0,a);return this.disposeIntermediateTensorInfo(u),d}timerAvailable(){return Object(ea.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}async time(e){const t=this.activeTimers,n=[];let r=!1;null==this.programTimersStack?(this.programTimersStack=n,r=!0):this.activeTimers.push(n),this.activeTimers=n,e();const a=ea.util.flatten(this.activeTimers.map(e=>e.query)).filter(e=>null!=e),s=ea.util.flatten(this.activeTimers.map(e=>e.name)).filter(e=>null!=e);this.activeTimers=t,r&&(this.programTimersStack=null);const i={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};if(Object(ea.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const e=await Promise.all(a);i.kernelMs=ea.util.sum(e),i.getExtraProfileInfo=(()=>e.map((e,t)=>({name:s[t],ms:e})).map(e=>`${e.name}: ${e.ms}`).join(", "))}else i.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,i}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return Object(ea.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:ea.util.now(),endMs:null}}endTimer(e){return Object(ea.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=ea.util.now(),e)}async getQueryTime(e){if(Object(ea.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);const t=e;return t.endMs-t.startMs}disposeData(e,t=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);const{complexTensorInfos:n}=this.texData.get(e);return null!=n&&(this.disposeData(n.real.dataId,t),this.disposeData(n.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){const{texture:t,dtype:n,texShape:r,usage:a,isPacked:s,slice:i}=this.texData.get(e),o=i&&i.origDataId||e,u=this.dataRefCount.get(o);u>1?this.dataRefCount.set(o,u-1):(this.dataRefCount.delete(o),null!=t&&(this.numBytesInGPU-=this.computeBytes(r,n),this.textureManager.releaseTexture(t,r,a,s)));const c=this.texData.get(e);c.texture=null,c.texShape=null,c.isPacked=!1,c.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e,t=Ns){return Object(ea.env)().getBool("WEBGL_CPU_FORWARD")&&e.every(e=>null==this.texData.get(e.dataId).texture&&ea.util.sizeFromShape(e.shape)<t)}getGPGPUContext(){return this.gpgpu}where(e){ea.backend_util.warn("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const t=e.dataSync();return ws(e.shape,t)}packedUnaryOp(e,t,n){const r=new xs(e.shape,t),a=this.compileAndRun(r,[e],n);return Object(ea.engine)().makeTensorFromDataId(a.dataId,a.shape,a.dtype)}abs(e){if(this.shouldExecuteOnCPU([e])&&"complex64"!==e.dtype){const t=qa(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,t)}if(Object(ea.env)().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,us,e.dtype);const t=new ss(e.shape,us),n=this.compileAndRun(t,[e]);return Object(ea.engine)().makeTensorFromDataId(n.dataId,n.shape,n.dtype)}makeTensorInfo(e,t,n){let r;if("string"===t&&null!=n&&n.length>0&&ea.util.isString(n[0])){
const a=n.map(e=>ea.util.encodeString(e));r=this.write(a,e,t)}else r=this.write(n,e,t);return this.texData.get(r).usage=null,{dataId:r,shape:e,dtype:t}}makeOutput(e,t,n){const{dataId:r}=this.makeTensorInfo(e,t,n);return Object(ea.engine)().makeTensorFromDataId(r,e,t,this)}unpackTensor(e){const t=new vs(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){const t=new ns(e.shape),n=!0;return this.runWebGLProgram(t,[e],e.dtype,null,n)}packedReshape(e,t){const n=[V(e.shape),...U(e.shape)],r={dtype:e.dtype,shape:n,dataId:e.dataId},a=[V(t),...U(t)],s=new rs(a,n),i=!0,o=this.runWebGLProgram(s,[r],e.dtype,null,i);return{dataId:o.dataId,shape:t,dtype:o.dtype}}decode(e){const t=this.texData.get(e),{isPacked:n,shape:r,dtype:a}=t,s=G(r);let i;i=n?new fa(s):new pa(s);const o=!0,u=this.runWebGLProgram(i,[{shape:s,dtype:a,dataId:e}],a,null,o);return{dtype:a,shape:r,dataId:u.dataId}}runWebGLProgram(e,t,n,r,a=!1){const s=this.makeTensorInfo(e.outputShape,n),i=this.texData.get(s.dataId);if(e.packedOutput&&(i.isPacked=!0),e.outPackingScheme===ra.DENSE){const t=c(e.outputShape);i.texShape=t.map(e=>2*e)}if(null!=e.outTexUsage&&(i.usage=e.outTexUsage),0===ea.util.sizeFromShape(s.shape))return i.values=ea.util.getTypedArrayFromDType(s.dtype,0),s;const o=[],u=t.map(t=>{if("complex64"===t.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let n=this.texData.get(t.dataId);if(null==n.texture){if(!e.packedInputs&&ea.util.sizeFromShape(t.shape)<=Object(ea.env)().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:t.shape,texData:null,isUniform:!0,uniformValues:n.values};e.packedInputs&&(n.isPacked=!0,n.shape=t.shape)}else if(!!n.isPacked!=!!e.packedInputs)t=n.isPacked?this.unpackTensor(t):this.packTensor(t),o.push(t),n=this.texData.get(t.dataId);else if(n.isPacked&&!K(n.shape,t.shape)){const e=t,r=t.shape;t.shape=n.shape,t=this.packedReshape(t,r),o.push(t),n=this.texData.get(t.dataId),e.shape=r}return this.uploadToGPU(t.dataId),{shape:t.shape,texData:n,isUniform:!1}});this.uploadToGPU(s.dataId);const l={shape:s.shape,texData:i,isUniform:!1},d=Ot(e,u,l),h=this.getAndSaveBinary(d,()=>vt(this.gpgpu,e,u,l)),p=null!=this.activeTimers;let f;p&&(f=this.startTimer()),kt(this.gpgpu,h,u,l,r),o.forEach(e=>this.disposeIntermediateTensorInfo(e)),p&&(f=this.endTimer(f),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(f)}));const m=Object(ea.env)().get("WEBGL_FLUSH_THRESHOLD");if(m>0){const e=ea.util.now();e-this.lastGlFlushTime>m&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=e)}if(!Object(ea.env)().getBool("WEBGL_LAZILY_UNPACK")&&i.isPacked&&!1===a){const e=this.unpackTensor(s);return this.disposeIntermediateTensorInfo(s),e}return s}compileAndRun(e,t,n,r,a=!1){n=n||t[0].dtype;const s=this.runWebGLProgram(e,t,n,r,a);return s}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){if(!this.disposed){if(!Object(ea.env)().getBool("IS_TEST")){const e=Object.keys(this.binaryCache);e.forEach(e=>{this.gpgpu.deleteProgram(this.binaryCache[e].webGLProgram),delete this.binaryCache[e]})}this.textureManager.dispose(),null!=this.canvas&&"undefined"!=typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0}}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=Object(ea.tidy)(()=>{if(!Object(ea.env)().get("WEBGL_RENDER_FLOAT32_ENABLED")){const e=Object(ea.env)().getBool("DEBUG");Object(ea.env)().set("DEBUG",!1);const t=this.abs(Object(ea.scalar)(1e-8)).dataSync()[0];if(Object(ea.env)().set("DEBUG",e),t>0)return 32}return 16})),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?ks:Os}uploadToGPU(e){const t=this.texData.get(e),{shape:n,dtype:r,values:a,texture:s,usage:i,isPacked:o}=t;if(null!=s)return;const u=null!=this.activeTimers;let c;u&&(c=ea.util.now());let d=t.texShape;if(null==d&&(d=H(n,o),t.texShape=d),null!=a){const e=G(n);let s,i=d[1],h=d[0];const p=a instanceof Uint8Array;o?([i,h]=l(d[0],d[1]),s=new ya(e,[h,i],p)):s=new ga(e,[h,i],p);const f=this.makeTensorInfo([h,i],r);this.texData.get(f.dataId).usage=p?aa.PIXELS:aa.UPLOAD,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(f.dataId),i,h,a);const m=!0,b=this.runWebGLProgram(s,[f],r,null,m),g=this.texData.get(b.dataId);t.texture=g.texture,t.texShape=g.texShape,t.isPacked=g.isPacked,t.usage=g.usage,this.disposeIntermediateTensorInfo(f),this.texData.delete(b.dataId),t.values=null,u&&(this.uploadWaitMs+=ea.util.now()-c)}else{const e=this.acquireTexture(d,i,r,o);t.texture=e}}convertAndCacheOnCPU(e,t){const n=this.texData.get(e),{dtype:r}=n;return this.releaseGPUData(e),null!=t&&(n.values=Pt(t,r)),n.values}acquireTexture(e,t,n,r){if(this.numBytesInGPU+=this.computeBytes(e,n),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){const e=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${e} MB, `+"most likely due to a memory leak")}return this.textureManager.acquireTexture(e,t,r)}computeBytes(e,t){return e[0]*e[1]*ea.util.bytesPerElement(t)}}Ss.nextDataId=0;const Ts="3.5.0";ea.device_util.isBrowser()&&Object(ea.registerBackend)("webgl",()=>new Ss,2);const Cs={forceHalfFloat:Bt},Es="\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n";class $s{constructor(e,t,n){this.variableNames=["A","B"],this.outputShape=ea.backend_util.assertAndGetBroadcastShape(t,n),this.userCode=`\n      float binaryOperation(float a, float b) {\n        ${e}\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    `}}const As="\n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n";class _s{constructor(e,t,n,r=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=ea.backend_util.assertAndGetBroadcastShape(t,n);const a=this.outputShape.length;let s="";if(r)if(0===a||1===ea.util.sizeFromShape(this.outputShape))s="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else{const e=gt(a);if(s=`\n          ${e} coords = getOutputCoords();\n        `,1===a)s+=`\n            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          `;else{const e=Nt("coords",a);s+=`\n            bool nextRowOutOfBounds =\n              (${e[a-2]} + 1) >= ${this.outputShape[a-2]};\n            bool nextColOutOfBounds =\n              (${e[a-1]} + 1) >= ${this.outputShape[a-1]};\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `}}this.userCode=`\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ${e}\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ${s}\n\n        setOutput(result);\n      }\n    `}}const Ds={kernelName:ea.Identity,backendName:"webgl",kernelFunc:Wt},Fs={kernelName:ea.Complex,backendName:"webgl",kernelFunc:Vt},Rs="return (a < 0.) ? b * a : a;",Ms="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n",zs={kernelName:ea.LeakyRelu,backendName:"webgl",kernelFunc:Ut},Ls="return (a < 0.) ? b * a : a;",Ps="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n",Bs={kernelName:ea.Prelu,backendName:"webgl",kernelFunc:Gt},Ws="if (isnan(x)) return x;",Vs="\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n",Us="\n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n";class Gs{constructor(e,t,n,r=!1,a=!1,s=!1,i=null,o=!1,u=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n;const c=r?e[1]:e[2],l=Math.ceil(c/2),d=r?"i * 2, rc.y":"rc.y, i * 2",h=a?"rc.z, i * 2":"i * 2, rc.z",p=r?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],f=a?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let m="",b="";i&&(m=o?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${i}\n        }`:u?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${i}\n        }`:`vec4 activation(vec4 x) {\n          ${i}\n        }`,b="result = activation(result);");const g=s?"result += getBiasAtOutCoords();":"";s&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),u&&this.variableNames.push("leakyreluAlpha");let y="rc.x",x="rc.x";e[0]<t[0]?y=`int(min(float(rc.x), ${e[0]-1}.))`:t[0]<e[0]&&(x=`int(min(float(rc.x), ${t[0]-1}.))`),this.userCode=`\n      ${m}\n\n      const float sharedDimension = ${l}.0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        for (int i = 0; i < ${l}; i++) {\n          int batchA = ${y};\n          int batchB = ${x};\n          vec4 a = getMatrixA(batchA, ${d});\n          vec4 b = getMatrixB(batchB, ${h});\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (${p[0]} * ${f[0]});\n          result += (${p[1]} * ${f[1]});\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ${g}\n\n        ${b}\n\n        setOutput(result);\n      }\n    `}}const Hs={REAL:"return areal * breal - aimag * bimag;",IMAG:"return areal * bimag + aimag * breal;"};class qs{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=ea.backend_util.assertAndGetBroadcastShape(t,n),this.userCode=`\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ${e}\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    `}}const Ks="return a * b;",Xs={kernelName:ea.Multiply,backendName:"webgl",kernelFunc:Xt},Ys={kernelName:ea.Reshape,backendName:"webgl",kernelFunc:Zt};class Zs{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:a,outSize:s}=e;this.outputShape=[r,s];const i=4*Math.floor(n/4),o=n%4;let u="sumValue += dot(values, ones);";if(null!=t){const e=1/t;u=`sumValue += dot(values * ${ea.util.isInt(e)?e.toPrecision(2):e}, ones);`}let c="";a%n>0&&(c=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return 0.0;\n        }\n      `),this.userCode=`\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${c}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${i}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${u}\n        }\n\n        int inIdx = inOffset + ${i};\n        if (${1===o}) {\n          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);\n\n          ${u}\n        } else if (${2===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1), 0.0, 0.0);\n\n          ${u}\n        } else if (${3===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2), 0.0);\n\n          ${u}\n        }\n        setOutput(sumValue);\n      }\n    `}}class Qs{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:a,outSize:s}=e;this.outputShape=[r,s];let i="0.0",o="";"prod"===t?i="1.0":"min"===t?(i="1.0 / 1e-20",o="min"):"max"===t&&(i="-1.0 / 1e-20",o="max");let u=`${t}(${t}(${t}(`+"minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])";"sum"===t?u="sumValue":"prod"===t?u="prodValue":"all"===t?u="allValue":"any"===t&&(u="anyValue");const c=4*Math.floor(n/4),l=n%4;let d=`\n      if (${"sum"===t}) {\n        sumValue += dot(values, ones);\n      } else if (${"prod"===t}) {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ${o}(values, minMaxValue);\n      }\n    `,h="vec4";"all"===t?(i="1.0",d="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",h="bvec4"):"any"===t&&(i="0.0",d="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",h="bvec4");let p="";a%n>0&&(p=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return initializationValue;\n        }\n      `),this.userCode=`\n      const float initializationValue = ${i};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${p}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        vec4 minMaxValue = vec4(${i});\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ${c}; i += 4) {\n          int inIdx = inOffset + i;\n          ${h} values = ${h}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${d}\n        }\n\n        int inIdx = inOffset + ${c};\n        if (${1===l}) {\n          ${h} values = ${h}(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ${d}\n        } else if (${2===l}) {\n          ${h} values = ${h}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ${d}\n        } else if (${3===l}) {\n          ${h} values = ${h}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ${d}\n        }\n        setOutput(${u});\n      }\n    `}}class Js{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];this.outputShape=n,this.rank=n.length;const r=gt(this.rank),a=en(t);this.userCode=`\n    void main() {\n      ${r} resRC = getOutputCoords();\n      setOutput(getA(${a}));\n    }\n    `}}class ei{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const r=gt(this.rank),a=It("rc",this.rank),s=new Array(this.rank);for(let e=0;e<t.length;e++)s[t[e]]=a[e];const i=`vec2(${s.slice(-2).join()})`,o=`++${a[this.rank-1]} < ${n[this.rank-1]}`,u=`getChannel(getA(${s.join()}), ${i})`;this.userCode=`\n    void main() {\n      ${r} rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ${u};\n      if(${o}) {\n        result[1] = ${u};\n      }\n      --${a[this.rank-1]};\n      if(++${a[this.rank-2]} < ${n[this.rank-2]}) {\n        result[2] = ${u};\n        if(${o}) {\n          result[3] = ${u};\n        }\n      }\n      setOutput(result);\n    }\n    `}}const ti={kernelName:ea.Sum,backendName:"webgl",kernelFunc:rn},ni={kernelName:ea.Transpose,backendName:"webgl",kernelFunc:an},ri=1e3,ai={kernelName:ea._FusedMatMul,backendName:"webgl",kernelFunc:on},si="return abs(x);",ii={kernelName:ea.Abs,backendName:"webgl",kernelFunc:un},oi=is+"\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n",ui=Ht({opSnippet:oi}),ci={kernelName:ea.Acos,backendName:"webgl",kernelFunc:ui},li=is+"\n  if (x < 1.0) return NAN;\nreturn log(x + sqrt(x * x - 1.0));",di=Ht({opSnippet:li}),hi={kernelName:ea.Acosh,backendName:"webgl",kernelFunc:di},pi="return a + b;",fi=qt({opSnippet:pi,packedOpSnippet:pi,supportsComplex:!0,cpuKernelImpl:ja}),mi={kernelName:ea.Add,backendName:"webgl",kernelFunc:fi};class bi{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map((e,t)=>`T${t}`);const n=[];this.variableNames.forEach(e=>{n.push(`float v${e} = get${e}AtOutCoords();`)});const r=this.variableNames.map(e=>`v${e}`).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        float result = ${r};\n        setOutput(result);\n      }\n    `}}class gi{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map((e,t)=>`T${t}`);const n=[];this.variableNames.forEach(e=>{n.push(`vec4 v${e} = get${e}AtOutCoords();`)});const r=this.variableNames.map(e=>`v${e}`).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        vec4 result = ${r};\n        setOutput(result);\n      }\n    `}}const yi={kernelName:ea.AddN,backendName:"webgl",kernelFunc:cn},xi={kernelName:ea.All,backendName:"webgl",kernelFunc:ln},vi={kernelName:ea.Any,backendName:"webgl",kernelFunc:dn};class wi{constructor(e,t,n){this.variableNames=["A"];const{windowSize:r,batchSize:a,outSize:s}=e;n||this.variableNames.push("bestIndicesA"),this.outputShape=[a,s];const i="max"===t?">":"<",o=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${r};\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ${r}; i++) {\n          int inIdx = ${o};\n          float candidate = getA(batch, inIdx);\n          if (candidate ${i} bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    `}}class ki{constructor(e,t,n,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,ea.util.assert(e.length>2,()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`);const a=e[e.length-1],s=Math.ceil(a/t);this.outputShape=e.slice(0,-1),s>1&&this.outputShape.push(s),r||this.variableNames.push("bestIndicesA");const i=this.outputShape,o=i.length,u=gt(o),c=Nt("coords",o);let l,d;if(1===s){d=o+1;const e=gt(d);l=`\n        ${e} sourceLocR = ${e}(${c.join()}, 0);\n        ++${c[o-1]};\n        ${e} sourceLocG = ${e}(${c.join()}, 0);\n        ++${c[o-2]};\n        ${e} sourceLocA = ${e}(${c.join()}, 0);\n        --${c[o-1]};\n        ${e} sourceLocB = ${e}(${c.join()}, 0);\n        --${c[o-2]};`}else d=o,l=`\n        ${u} sourceLocR = coords;\n        ++${c[o-1]};\n        ${u} sourceLocG = coords;\n        ++${c[o-2]};\n        ${u} sourceLocA = coords;\n        --${c[o-1]};\n        ${u} sourceLocB = coords;\n        --${c[o-2]};`;const h=["x","y","z","w","u","v"].slice(0,d),p="."+h[d-1],f=h.map(e=>"int "+e),m=Nt("sourceLocR",d-1).concat("inIdx.r"),b=Nt("sourceLocG",d-1).concat("inIdx.g"),g=Nt("sourceLocB",d-1).concat("inIdx.b"),y=Nt("sourceLocA",d-1).concat("inIdx.a"),x="max"===n?"greaterThan":"lessThan",v=r?"":`\n          inIdx = round(vec4(getBestIndicesAChannel(${m.join()}),\n                             getBestIndicesAChannel(${b.join()}),\n                             getBestIndicesAChannel(${g.join()}),\n                             getBestIndicesAChannel(${y.join()})));`,w=`vec4(\n            getAChannel(${m.join()}),\n            hasNextCol ? getAChannel(${b.join()}) : 0.,\n            hasNextRow ? getAChannel(${g.join()}) : 0.,\n            hasNextRow && hasNextCol ? getAChannel(${y.join()}) : 0.)`,k=r?"":`\n      float getBestIndicesAChannel(${f.join()}) {\n        return getChannel(getBestIndicesA(${h.join()}),\n                                          vec2(${h.slice(-2).join()}));\n      }`;this.userCode=`\n      float getAChannel(${f.join()}) {\n        return getChannel(getA(${h.join()}),\n                               vec2(${h.slice(-2).join()}));\n      }\n      ${k}\n      void main() {\n        ${u} coords = getOutputCoords();\n        bool hasNextCol = ${c[o-1]} < ${i[o-1]-1};\n        bool hasNextRow = ${c[o-2]} < ${i[o-2]-1};\n        ${l}\n        ivec4 srcIdx = ivec4(sourceLocR${p}, sourceLocG${p},\n          sourceLocB${p}, sourceLocA${p}) * ${t};\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ${w};\n\n        for (int i = 0; i < ${t}; i++) {\n          inIdx = srcIdx;\n          ${v}\n          vec4 candidate = ${w};\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(${x}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    `}}const Oi={kernelName:ea.ArgMax,backendName:"webgl",kernelFunc:mn},Ii={kernelName:ea.ArgMin,backendName:"webgl",kernelFunc:bn},Ni=is+"\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n",ji=Ht({opSnippet:Ni}),Si={kernelName:ea.Asin,backendName:"webgl",kernelFunc:ji},Ti=is+"return log(x + sqrt(x * x + 1.0));",Ci=Ht({opSnippet:Ti}),Ei={kernelName:ea.Asinh,backendName:"webgl",kernelFunc:Ci},$i=is+"\n  return atan(x);\n",Ai=Ht({opSnippet:$i}),_i={kernelName:ea.Atan,backendName:"webgl",kernelFunc:Ai},Di=Vs+"\n  return atan(a, b);\n",Fi="\n  vec4 result = atan(a, b);\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  "+Us+"\n  return result;\n",Ri=qt({opSnippet:Di,packedOpSnippet:Fi}),Mi={kernelName:ea.Atan2,backendName:"webgl",kernelFunc:Ri},zi=is+"\n  if ((x < -1.0) || (x > 1.0)) return NAN;\nreturn (log(1.0 + x) - log(1.0 - x)) / 2.0;",Li=Ht({opSnippet:zi}),Pi={kernelName:ea.Atanh,backendName:"webgl",kernelFunc:Li};class Bi{constructor(e,t,n,r=!1,a=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const s=e.filterWidth,i=e.strideHeight,o=e.strideWidth,u=e.dilationHeight,c=e.dilationWidth,l=e.effectiveFilterHeight,d=e.effectiveFilterWidth,h=e.padInfo.top,p=e.padInfo.left;this.outputShape=e.outShape;const f="avg"===t,m=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,b=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`;let g="0.0";if(f||(g="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec2 strides = ivec2(${i}, ${o});\n        const ivec2 pads = ivec2(${h}, ${p});\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ${l};\n              wR += ${u}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${d};\n                wC += ${c}) {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value ${t} currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ${r?a?m:b:`wR * ${d} + wC`};\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}const y="max";let x=`${t}(${t}(${t}(`+"minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])";"avg"===t&&(x="avgValue / count");const v=4*Math.floor(s/4),w=s%4,k=`\n      if (${f}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = ${y}(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec2 strides = ivec2(${i}, ${o});\n      const ivec2 pads = ivec2(${h}, ${p});\n      const float initializationValue = ${g};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${g});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ${l};\n            wR += ${u}) {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${v}; wC += 4) {\n            int xC = xCCorner + wC * ${c};\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${c}, d),\n              getValue(batch, xR, xC + 2 * ${c}, d),\n              getValue(batch, xR, xC + 3 * ${c}, d)\n            );\n\n            ${k}\n          }\n\n          int xC = xCCorner + ${v};\n          if (${1===w}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ${k}\n          } else if (${2===w}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${c}, d),\n              initializationValue,\n              initializationValue\n            );\n\n            ${k}\n          } else if (${3===w}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${c}, d),\n              getValue(batch, xR, xC + 2 * ${c}, d),\n              initializationValue\n            );\n\n            ${k}\n          }\n        }\n        setOutput(${x});\n      }\n    `}}class Wi{constructor(e,t,n,r=!1,a=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const s=e.filterWidth,i=e.strideDepth,o=e.strideHeight,u=e.strideWidth,c=e.dilationDepth,l=e.dilationHeight,d=e.dilationWidth,h=e.effectiveFilterDepth,p=e.effectiveFilterHeight,f=e.effectiveFilterWidth,m=e.padInfo.front,b=e.padInfo.top,g=e.padInfo.left;this.outputShape=e.outShape;const y="avg"===t;let x="0.0";if(y||(x="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec3 strides =\n            ivec3(${i}, ${o}, ${u});\n        const ivec3 pads = ivec3(${m}, ${b}, ${g});\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ${h};\n              wD += ${c}) {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int wR = 0; wR < ${p};\n                wR += ${l}) {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int wC = 0; wC < ${f};\n                  wC += ${d}) {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value ${t} currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ${r?a?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${p} * ${f} +\n                      wR * ${f} + wC`};\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}const v="max";let w=`${t}(${t}(${t}(`+"minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])";"avg"===t&&(w="avgValue / count");const k=4*Math.floor(s/4),O=s%4,I=`\n      if (${y}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = ${v}(values, minMaxValue);\n      }\n    `
;this.userCode=`\n      const ivec3 strides =\n        ivec3(${i}, ${o}, ${u});\n      const ivec3 pads = ivec3(${m}, ${b}, ${g});\n      const float initializationValue = ${x};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${x});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ${h};\n            wD += ${c}) {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${p};\n            wR += ${l}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${k}; wC += 4) {\n              int xC = xCCorner + wC * ${d};\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${d}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${d}, ch),\n                getValue(batch, xD, xR, xC + 3 * ${d}, ch)\n              );\n\n              ${I}\n            }\n\n            int xC = xCCorner + ${k};\n            if (${1===O}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ${I}\n            } else if (${2===O}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${d}, ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ${I}\n            } else if (${3===O}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${d}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${d}, ch),\n                initializationValue\n              );\n\n              ${I}\n            }\n          }\n          setOutput(${w});\n        }\n      }\n    `}}const Vi={kernelName:ea.AvgPool,backendName:"webgl",kernelFunc:gn},Ui={kernelName:ea.AvgPool3D,backendName:"webgl",kernelFunc:yn};class Gi{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,a=e.strideWidth,s=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterHeight,u=e.effectiveFilterWidth,c=o-1-e.padInfo.top,l=u-1-e.padInfo.left,d=1/(t*n);this.userCode=`\n      const ivec2 pads = ivec2(${c}, ${l});\n      const float avgMultiplier = float(${d});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${o};\n            wR += ${s}) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${u};\n            wC+= ${i}) {\n            float dyC = float(dyCCorner + wC) / ${a}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Hi{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,a=e.strideDepth,s=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,u=e.dilationHeight,c=e.dilationWidth,l=e.effectiveFilterDepth,d=e.effectiveFilterHeight,h=e.effectiveFilterWidth,p=l-1-e.padInfo.front,f=d-1-e.padInfo.top,m=h-1-e.padInfo.left,b=1/(t*n*r);this.userCode=`\n      const ivec3 pads = ivec3(${p}, ${f}, ${m});\n      const float avgMultiplier = float(${b});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${l};\n            wD += ${o}) {\n          float dyD = float(dyDCorner + wD) / ${a}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${d};\n              wR += ${u}) {\n            float dyR = float(dyRCorner + wR) / ${s}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${h};\n                wC += ${c}) {\n              float dyC = float(dyCCorner + wC) / ${i}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const qi={kernelName:ea.AvgPool3DGrad,backendName:"webgl",kernelFunc:xn},Ki={kernelName:ea.AvgPoolGrad,backendName:"webgl",kernelFunc:vn},Xi={kernelName:ea.BatchMatMul,backendName:"webgl",kernelFunc:wn};class Yi{constructor(e,t,n,r,a,s){this.outputShape=[],this.variableNames=["x","mean","variance"],ea.backend_util.assertAndGetBroadcastShape(e,t),ea.backend_util.assertAndGetBroadcastShape(e,n);let i="0.0";null!=r&&(ea.backend_util.assertAndGetBroadcastShape(e,r),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="1.0";null!=a&&(ea.backend_util.assertAndGetBroadcastShape(e,a),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ${i};\n        float scale = ${o};\n        float inv = scale * inversesqrt(variance + float(${s}));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    `}}class Zi{constructor(e,t,n,r,a,s){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],ea.backend_util.assertAndGetBroadcastShape(e,t),ea.backend_util.assertAndGetBroadcastShape(e,n);let i="vec4(0.0)";null!=r&&(ea.backend_util.assertAndGetBroadcastShape(e,r),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="vec4(1.0)";null!=a&&(ea.backend_util.assertAndGetBroadcastShape(e,a),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        vec4 offset = ${i};\n        vec4 scale = ${o};\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(${s}));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    `}}const Qi=({inputs:e,backend:t,attrs:n})=>{const{x:r,mean:a,variance:s,offset:i,scale:o}=e;ea.util.assert(a.shape.length===s.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),ea.util.assert(null==i||a.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),ea.util.assert(null==o||a.shape.length===o.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let{varianceEpsilon:u}=n;null==u&&(u=.001);const c=[r,a,s];let l=null;null!=i&&(l=i.shape,c.push(i));let d=null;null!=o&&(d=o.shape,c.push(o));const h=Object(ea.env)().getBool("WEBGL_PACK_NORMALIZATION")?new Zi(r.shape,a.shape,s.shape,l,d,u):new Yi(r.shape,a.shape,s.shape,l,d,u),p=t.runWebGLProgram(h,c,c[0].dtype);return p},Ji={kernelName:ea.FusedBatchNorm,backendName:"webgl",kernelFunc:Qi};class eo{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;const t=gt(this.rank),n=`uniform int start[${this.rank}];`,r=kn(this.rank);let a;const s=e.map((e,t)=>`sourceLoc.${to[t]} = start[${t}] + coords.${to[t]};`);a=`\n        ${t} sourceLoc;\n        ${t} coords = getOutputCoords();\n        ${s.join("\n")}\n      `,this.userCode=`\n      ${n}\n      void main() {\n        ${a}\n        setOutput(getSource(${r}));\n      }\n    `}getCustomSetupFunc(e){if(e.length!==this.rank)throw Error(`The rank (${this.rank}) of the program must match the `+`length of start (${e.length})`);return(t,n)=>{null==this.startLoc&&(this.startLoc=t.getUniformLocationNoThrow(n,"start"),null==this.startLoc)||t.gl.uniform1iv(this.startLoc,e)}}}const to=["x","y","z","w","u","v"];class no{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length;const t=gt(this.rank),n=Nt("coords",this.rank),r=Nt("sourceLoc",this.rank),a=1===this.rank?"sourceLoc":`vec2(${r.slice(-2).join()})`,s=`getChannel(getSource(${r.join()}), ${a})`,i=`\n      result.x = ${s};\n      if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n        ++${r[this.rank-1]};\n        result.y = ${s};\n        --${r[this.rank-1]};\n      }\n    `,o=1===this.rank?"":`\n      --${n[this.rank-1]};\n      if (++${n[this.rank-2]} < ${e[this.rank-2]}) {\n        ++${r[this.rank-2]};\n        result.z = ${s};\n        if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n          ++${r[this.rank-1]};\n          result.w = ${s};\n        }\n      }\n    `,u=this.rank<=4?`sourceLoc = coords +\n            ${t}(${e.map((e,t)=>`start[${t}]`).join()});`:e.map((e,t)=>`${r[t]} = ${n[t]} + start[${t}];`).join("\n");this.userCode=`\n      uniform int start[${this.rank}];\n      void main() {\n        ${t} coords = getOutputCoords();\n        ${t} sourceLoc;\n        ${u}\n        vec4 result = vec4(0.);\n        ${i}\n        ${o}\n        setOutput(result);\n      }\n    `}getCustomSetupFunc(e){if(e.length!==this.rank)throw Error(`The rank (${this.rank}) of the program must match the `+`length of start (${e.length})`);return(t,n)=>{null==this.startLoc&&(this.startLoc=t.getUniformLocationNoThrow(n,"start"),null==this.startLoc)||t.gl.uniform1iv(this.startLoc,e)}}}const ro={kernelName:ea.Slice,backendName:"webgl",kernelFunc:In},ao=e=>{const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,crops:i}=r;ea.util.assert(a.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet");const o=s.reduce((e,t)=>e*t),u=ea.backend_util.getReshaped(a.shape,s,o),c=ea.backend_util.getPermuted(u.length,s.length),l=ea.backend_util.getReshapedPermuted(a.shape,s,o),d=ea.backend_util.getSliceBeginCoords(i,s.length),h=ea.backend_util.getSliceSize(l,i,s.length),p=[],f=Zt({inputs:{x:a},backend:n,attrs:{shape:u}}),m=an({inputs:{x:f},backend:n,attrs:{perm:c}}),b=Zt({inputs:{x:m},backend:n,attrs:{shape:l}}),g=In({inputs:{x:b},backend:n,attrs:{begin:d,size:h}});return p.push(f),p.push(m),p.push(b),p.forEach(e=>n.disposeIntermediateTensorInfo(e)),g},so={kernelName:ea.BatchToSpaceND,backendName:"webgl",kernelFunc:ao},io={kernelName:ea.Bincount,backendName:"webgl",kernelFunc:Nn},oo="return float(a != b);",uo=qt({opSnippet:oo,dtype:"bool"}),co={kernelName:ea.NotEqual,backendName:"webgl",kernelFunc:uo},lo={kernelName:ea.Real,backendName:"webgl",kernelFunc:jn},ho="return float(int(x));",po={kernelName:ea.Cast,backendName:"webgl",kernelFunc:Tn},fo="return ceil(x);",mo=Ht({opSnippet:fo,packedOpSnippet:fo,cpuKernelImpl:Ca}),bo={kernelName:ea.Ceil,backendName:"webgl",kernelFunc:mo};class go{constructor(e){this.variableNames=["A"],this.outputShape=e,this.userCode="\n      uniform float minVal;\n      uniform float maxVal;\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}getCustomSetupFunc(e,t){return(n,r)=>{null==this.minLoc&&(this.minLoc=n.getUniformLocationNoThrow(r,"minVal"),this.maxLoc=n.getUniformLocationNoThrow(r,"maxVal")),n.gl.uniform1f(this.minLoc,e),n.gl.uniform1f(this.maxLoc,t)}}}class yo{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.userCode="\n      uniform float minVal;\n      uniform float maxVal;\n\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}getCustomSetupFunc(e,t){return(n,r)=>{null==this.minLoc&&(this.minLoc=n.getUniformLocationNoThrow(r,"minVal"),this.maxLoc=n.getUniformLocationNoThrow(r,"maxVal")),n.gl.uniform1f(this.minLoc,e),n.gl.uniform1f(this.maxLoc,t)}}}const xo={kernelName:ea.ClipByValue,backendName:"webgl",kernelFunc:Cn};class vo{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "}}const wo={kernelName:ea.ComplexAbs,backendName:"webgl",kernelFunc:$n};class ko{constructor(e){this.outputShape=[],this.outputShape=ea.backend_util.computeOutShape(e,1),this.variableNames=e.map((e,t)=>`T${t}`);const t=new Array(e.length-1);t[0]=e[0][1];for(let n=1;n<t.length;n++)t[n]=t[n-1]+e[n][1];const n=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let e=1;e<t.length;e++){const r=t[e-1];n.push(`else if (yC < ${t[e]}) `+`setOutput(getT${e}(yR, yC-${r}));`)}const r=t.length,a=t[t.length-1];n.push(`else setOutput(getT${r}(yR, yC-${a}));`),this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ${n.join("\n        ")}\n      }\n    `}}class Oo{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=ea.backend_util.computeOutShape(e,t);const n=this.outputShape,r=n.length,a=gt(r),s=Nt("coords",r),i=["x","y","z","w","u","v"].slice(0,r);this.variableNames=e.map((e,t)=>`T${t}`);const o=new Array(e.length-1);o[0]=e[0][t];for(let n=1;n<o.length;n++)o[n]=o[n-1]+e[n][t];const u=i[t],c=i.slice(-2),l=i.join();let d=`if (${u} < ${o[0]}) {\n        return getChannel(\n            getT0(${l}), vec2(${c.join()}));\n        }`;for(let e=1;e<o.length;e++){const t=o[e-1];d+=`\n        if (${u} < ${o[e]}  && ${u} >= ${o[e-1]}) {\n          return getChannel(\n            getT${e}(${An(i,u,t)}),\n            vec2(${An(c,u,t)}));\n        }`}const h=o.length,p=o[o.length-1];d+=`\n        return getChannel(\n          getT${h}(${An(i,u,p)}),\n          vec2(${An(c,u,p)}));`,this.userCode=`\n      float getValue(${i.map(e=>"int "+e)}) {\n        ${d}\n      }\n\n      void main() {\n        ${a} coords = getOutputCoords();\n        vec4 result = vec4(getValue(${s}), 0., 0., 0.);\n\n        ${s[r-1]} = ${s[r-1]} + 1;\n        if (${s[r-1]} < ${n[r-1]}) {\n          result.g = getValue(${s});\n        }\n\n        ${s[r-2]} = ${s[r-2]} + 1;\n        if (${s[r-2]} < ${n[r-2]}) {\n          result.a = getValue(${s});\n        }\n\n        ${s[r-1]} = ${s[r-1]} - 1;\n        if (${s[r-2]} < ${n[r-2]} &&\n            ${s[r-1]} < ${n[r-1]}) {\n          result.b = getValue(${s});\n        }\n        setOutput(result);\n      }\n    `}}const Io={kernelName:ea.Imag,backendName:"webgl",kernelFunc:_n},No={kernelName:ea.Concat,backendName:"webgl",kernelFunc:Rn};class jo{constructor(e,t=!1,n=null,r=!1,a=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;const s=e.padInfo.top,i=e.padInfo.left,o=e.strideHeight,u=e.strideWidth,c=e.dilationHeight,l=e.dilationWidth,d=e.filterHeight,h=e.filterWidth,p=4*Math.floor(e.inChannels/4),f=e.inChannels%4,m="channelsLast"===e.dataFormat,b=m?1:2,g=m?2:3,y=m?3:1;let x="",v="";n&&(x=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:a?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,v="result = activation(result);");const w=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${x}\n\n      const ivec2 strides = ivec2(${o}, ${u});\n      const ivec2 pads = ivec2(${s}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[${y}];\n\n        ivec2 xRCCorner =\n            ivec2(coords[${b}], coords[${g}]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${d}; wR++) {\n          int xR = xRCorner + wR * ${c};\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${h}; wC++) {\n            int xC = xCCorner + wC * ${l};\n\n            if (xC < 0 || xC >= ${e.inWidth}) {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ${p}; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (${m}) {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (${1===f}) {\n\n              if (${m}) {\n                dotProd +=\n                    getX(batch, xR, xC, ${p}) *\n                    getW(wR, wC, ${p}, d2);\n              } else {\n                dotProd +=\n                    getX(batch, ${p}, xR, xC) *\n                    getW(wR, wC, ${p}, d2);\n              }\n\n            } else if (${2===f}) {\n              vec2 wValues = vec2(\n                getW(wR, wC, ${p}, d2),\n                getW(wR, wC, ${p} + 1, d2)\n              );\n\n              if (${m}) {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, ${p}),\n                  getX(batch, xR, xC, ${p} + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, ${p}, xR, xC),\n                  getX(batch, ${p} + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (${3===f}) {\n              vec3 wValues = vec3(\n                getW(wR, wC, ${p}, d2),\n                getW(wR, wC, ${p} + 1, d2),\n                getW(wR, wC, ${p} + 2, d2)\n              );\n\n              if (${m}) {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, ${p}),\n                  getX(batch, xR, xC, ${p} + 1),\n                  getX(batch, xR, xC, ${p} + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, ${p}, xR, xC),\n                  getX(batch, ${p} + 1, xR, xC),\n                  getX(batch, ${p} + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        ${w}\n        ${v}\n        setOutput(result);\n      }\n    `}}class So{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const t=e.padInfo.front,n=e.padInfo.top,r=e.padInfo.left,a=e.strideDepth,s=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,u=e.dilationHeight,c=e.dilationWidth,l=e.filterDepth,d=e.filterHeight,h=e.filterWidth,p=4*Math.floor(e.inChannels/4),f=e.inChannels%4;this.userCode=`\n      const ivec3 strides = ivec3(${a}, ${s}, ${i});\n      const ivec3 pads = ivec3(${t}, ${n}, ${r});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${l}; wF++) {\n          int xF = xFCorner + wF * ${o};\n\n          if (xF < 0 || xF >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${d}; wR++) {\n            int xR = xRCorner + wR * ${u};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${h}; wC++) {\n              int xC = xCCorner + wC * ${c};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ${p}; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (${1===f}) {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ${p}) *\n                  getW(wF, wR, wC, ${p}, d2);\n              } else if (${2===f}) {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ${p}),\n                  getX(batch, xF, xR, xC, ${p} + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ${p}, d2),\n                  getW(wF, wR, wC, ${p} + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (${3===f}) {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ${p}),\n                  getX(batch, xF, xR, xC, ${p} + 1),\n                  getX(batch, xF, xR, xC, ${p} + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ${p}, d2),\n                  getW(wF, wR, wC, ${p} + 1, d2),\n                  getW(wF, wR, wC, ${p} + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class To{constructor(e,t,n){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e;const{filterWidth:r,inChannels:a,strideWidth:s,strideHeight:i,padInfo:o,outWidth:u,dilationWidth:c,dilationHeight:l,dataFormat:d}=n,{left:h,top:p}=o,f=a*r,m=ue(),b="channelsLast"===d,g=b?0:1,y=b?1:2;let x="";for(let n=0;n<=1;n++)for(let r=0;r<=1;r++)x+=`\n          blockIndex = rc.y + ${r};\n          pos = rc.x + ${n};\n\n          if(blockIndex < ${e[1]} && pos < ${e[0]}) {\n            offsetY = int(blockIndex / (${u})) * ${i} - ${p};\n            d0 = offsetY + ${l} * (pos / ${f});\n\n            if(d0 < ${t[g]} && d0 >= 0) {\n\n              offsetX = int(mod(float(blockIndex), ${u}.) * ${s}. - ${h}.);\n              d1 = offsetX + ${c} * (int(mod(float(pos), ${f}.) / ${a}.));\n\n              if(d1 < ${t[y]} && d1 >= 0) {\n\n                ch = int(mod(float(pos), ${a}.));\n\n                if (${b}) {\n                  innerDims = vec2(d1, ch);\n                  result[${2*n+r}] = getChannel(\n                    getA(d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[${2*n+r}] = getChannel(\n                    getA(ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        `;this.userCode=`\n      void main() {\n        ivec2 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        ${x}\n\n        ${m.output} = result;\n      }\n    `}}const Co={kernelName:ea.Conv2D,backendName:"webgl",kernelFunc:Ln};class Eo{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,a=e.padInfo.left,s="channelsLast"===e.dataFormat;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${r};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${a};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              if (${s}) {\n                float dyValue = getDy(b, yR, yC, d2);\n                float xValue = getX(b, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              } else {\n                float dyValue = getDy(b, d2, yR, yC);\n                float xValue = getX(b, d1, xR, xC);\n                dotProd += (xValue * dyValue);\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class $o{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,a=e.strideWidth,s="channelsLast"===e.dataFormat,i=t-1-e.padInfo.top,o=n-1-e.padInfo.left,u=s?1:2,c=s?2:3,l=s?3:1;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[${l}];\n\n        ivec2 dyCorner = ivec2(coords[${u}], coords[${c}]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${a}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n\n              if (${s}) {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Ao{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,a=e.padInfo.front,s=e.padInfo.top,i=e.padInfo.left;this.userCode=`\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yF = 0; yF < ${e.outDepth}; yF++) {\n            int xF = wF + yF * ${t} - ${a};\n\n            if (xF < 0 || xF >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int yR = 0; yR < ${e.outHeight}; yR++) {\n              int xR = wR + yR * ${n} - ${s};\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int yC = 0; yC < ${e.outWidth}; yC++) {\n                int xC = wC + yC * ${r} - ${i};\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class _o{constructor(e){
this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,a=e.strideDepth,s=e.strideHeight,i=e.strideWidth,o=t-1-e.padInfo.front,u=n-1-e.padInfo.top,c=r-1-e.padInfo.left;this.userCode=`\n      const ivec3 pads = ivec3(${o}, ${u}, ${c});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${t}; wF++) {\n          float dyF = float(dyFCorner + wF) / ${a}.0;\n\n          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ${t} - 1 - wF;\n\n          for (int wR = 0; wR < ${n}; wR++) {\n            float dyR = float(dyRCorner + wR) / ${s}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ${n} - 1 - wR;\n\n            for (int wC = 0; wC < ${r}; wC++) {\n              float dyC = float(dyCCorner + wC) / ${i}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ${r} - 1 - wC;\n\n              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const Do={kernelName:ea.Conv2DBackpropFilter,backendName:"webgl",kernelFunc:Pn},Fo={kernelName:ea.Conv2DBackpropInput,backendName:"webgl",kernelFunc:Bn},Ro={kernelName:ea.Conv3D,backendName:"webgl",kernelFunc:Wn},Mo={kernelName:ea.Conv3DBackpropFilterV2,backendName:"webgl",kernelFunc:Vn},zo={kernelName:ea.Conv3DBackpropInputV2,backendName:"webgl",kernelFunc:Un},Lo=Ws+"\n  return cos(x);\n",Po=Ht({opSnippet:Lo}),Bo={kernelName:ea.Cos,backendName:"webgl",kernelFunc:Po},Wo="\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n",Vo=Ht({opSnippet:Wo}),Uo={kernelName:ea.Cosh,backendName:"webgl",kernelFunc:Vo};class Go{constructor(e,t,n,r,a){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[s,i,o,u]=e,[c]=t,[l,d]=n;this.outputShape=[c,l,d,u];const h="bilinear"===r?1:0,[p,f]=[`${i-1}.0`,`${o-1}.0`],[m,b,g]=l>1?[`${(i-1)/(l-1)}`,"(y2-y1) * height_ratio",`y1*${p} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${p}`],[y,x,v]=d>1?[`${(o-1)/(d-1)}`,"(x2-x1) * width_ratio",`x1*${f} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${f}`];this.userCode=`\n      const float height_ratio = float(${m});\n      const float width_ratio = float(${y});\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ${s}) {\n          return;\n        }\n\n        float height_scale = ${b};\n        float width_scale = ${x};\n\n        float in_y = ${g};\n        if( in_y < 0.0 || in_y > ${p} ) {\n          setOutput(float(${a}));\n          return;\n        }\n        float in_x = ${v};\n        if( in_x < 0.0 || in_x > ${f} ) {\n          setOutput(float(${a}));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(${h} == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    `}}const Ho=e=>{const{inputs:t,backend:n,attrs:r}=e,{image:a,boxes:s,boxInd:i}=t,{cropSize:o,method:u,extrapolationValue:c}=r,l=new Go(a.shape,s.shape,o,u,c);return n.runWebGLProgram(l,[a,s,i],"float32")},qo={kernelName:ea.CropAndResize,backendName:"webgl",kernelFunc:Ho};class Ko{constructor(e,t,n){this.variableNames=["x"],this.outputShape=e;const r=e.length,a=t?"0.0":`getX(${Gn(r,"coords")})`,s=e[e.length-1];let i="",o="";t?(i=n?`end != ${s-1}`:"end != 0",o=n?"end + 1":"end - 1"):(i=n?`end + pow2 < ${s}`:"end >= pow2",o=n?"end + pow2":"end - pow2"),this.userCode=`\n      uniform float index;\n      void main() {\n        ${gt(r)} coords = getOutputCoords();\n        int end = ${Hn(r,"coords")};\n        float val = ${a};\n        int pow2 = int(pow(2.0, index));\n        if (${i}) {\n          int idx = ${o};\n          ${Hn(r,"coords")} = idx;\n          val += getX(${Gn(r,"coords")});\n        }\n        setOutput(val);\n      }\n    `}getCustomSetupFunc(e){return(t,n)=>{null==this.index&&(this.index=t.getUniformLocation(n,"index")),t.gl.uniform1f(this.index,e)}}}const Xo={kernelName:ea.Cumsum,backendName:"webgl",kernelFunc:qn},Yo={kernelName:ea.DenseBincount,backendName:"webgl",kernelFunc:Kn};class Zo{constructor(e,t,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=n,this.userCode=`\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ${this.getHeightCoordString()};\n      int w = ${this.getWidthCoordString()};\n      int d = ${this.getDepthCoordString()};\n\n      int in_h = h / ${t};\n      int offset_h = imod(h, ${t});\n      int in_w = w / ${t};\n      int offset_w = imod(w, ${t});\n      int offset_d = (offset_h * ${t} + offset_w) *\n        ${this.getOutputDepthSize()};\n      int in_d = d + offset_d;\n\n      float result = ${this.getInputSamplingString()};\n      setOutput(result);\n    }\n  `}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}const Qo={kernelName:ea.DepthToSpace,backendName:"webgl",kernelFunc:Xn};class Jo{constructor(e,t=!1,n=null,r=!1,a=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;const s=e.inHeight,i=e.inWidth,o=e.padInfo.top,u=e.padInfo.left,c=e.strideHeight,l=e.strideWidth,d=e.dilationHeight,h=e.dilationWidth,p=e.filterHeight,f=e.filterWidth,m=e.outChannels/e.inChannels;let b="",g="";n&&(b=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:a?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,g="result = activation(result);");const y=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${b}\n\n      const ivec2 strides = ivec2(${c}, ${l});\n      const ivec2 pads = ivec2(${o}, ${u});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${m};\n        int q = d2 - d1 * ${m};\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ${p}; wR++) {\n          int xR = xRCorner + wR * ${d};\n\n          if (xR < 0 || xR >= ${s}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${f}; wC++) {\n            int xC = xCCorner + wC * ${h};\n\n            if (xC < 0 || xC >= ${i}) {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ${y}\n        ${g}\n        setOutput(result);\n      }\n    `}}class eu{constructor(e,t=!1,n=null,r=!1,a=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e.outShape;const s=e.outChannels/e.inChannels,i=e.inHeight,o=e.inWidth,u=e.padInfo.top,c=e.padInfo.left,l=e.strideHeight,d=e.strideWidth,h=e.dilationHeight,p=e.dilationWidth,f=e.filterHeight,m=e.filterWidth,b=m;let g="\n      int xR; int xC; int xCOffset;\n      vec4 wTexel; vec4 previous; vec4 final;";for(let e=0;e<m;e++)g+=`\n          vec4 xTexelC${2*e};\n          vec4 xC${e};`;for(let e=0;e<f;e++){for(let e=0;e<m;e++)g+=`\n          xTexelC${2*e} = vec4(0.0);\n          xC${e} = vec4(0.0);`;g+=`\n        xR = xRCorner + ${e*h};\n        if (xR >=0 && xR < ${i}) {\n      `;for(let t=0;t<b/2+1;t++){const n=2*t;if(g+=`\n          xC = xCCorner + ${n*p};\n          `,1===d){if(n<m&&(c%2==1?(g+=`\n                xCOffset = xC + 1;\n                if (xCOffset >= 0 && xCOffset < ${o}) {\n                  xTexelC${n} = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= ${o}) {\n                    xTexelC${n}.zw = vec2(0.0);\n                  }\n                }\n              `,g+=1===p&&n>0?`\n                xC${n} = vec4(xTexelC${n-2}.zw, xTexelC${n}.xy);\n                `:`\n                  xCOffset = xC + 1 - 2;\n\n                  if (xCOffset >= 0 && xCOffset < ${o}) {\n                    previous = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= ${o}) {\n                      previous.zw = vec2(0.0);\n                    }\n\n                    xC${n} = vec4(previous.zw, xTexelC${n}.xy);\n                  } else {\n                    xC${n} = vec4(0.0, 0.0, xTexelC${n}.xy);\n                  }\n                  `):g+=`\n                if (xC >= 0 && xC < ${o}) {\n                  xTexelC${n} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= ${o}) {\n                    xTexelC${n}.zw = vec2(0.0);\n                  }\n                }\n\n                xC${n} = xTexelC${n};\n                `,n+1<m)){const e=c%2==0?ea.util.nearestLargerEven(p):p;p%2==0&&c%2==1||p%2!=0&&c%2!=1?(g+=`\n                  xCOffset = xC + ${c%2} + ${e};\n\n                  if (xCOffset >= 0 && xCOffset < ${o}) {\n                    xTexelC${n+2} = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= ${o}) {\n                      xTexelC${n+2}.zw = vec2(0.0);\n                    }\n                  }\n                  `,p>1&&(g+=`\n                    xCOffset -= 2;\n                    if (xCOffset >= 0 && xCOffset < ${o}) {\n                      xTexelC${n} = getX(batch, xR, xCOffset, d1);\n                    }\n                    `),g+=`\n                  xC${n+1} = vec4(xTexelC${n}.zw, xTexelC${n+2}.xy);\n                  `):g+=1===e?`\n                    xC${n+1} = xTexelC${n};\n                    `:`\n                    xCOffset = xC + ${e};\n\n                    if (xCOffset >= 0 && xCOffset < ${o}) {\n                      xTexelC${n+2} = getX(batch, xR, xCOffset, d1);\n                      if (xCOffset + 1 >= ${o}) {\n                        xTexelC${n+2}.zw = vec2(0.0);\n                      }\n                    }\n\n                    xC${n+1} = xTexelC${n+2};\n                    `}}else n<m&&(c%2==1?(g+=`\n                xCOffset = xC + 1 - ${d};\n                if(xCOffset >= 0 && xCOffset < ${o}) {\n                  xTexelC${n} = getX(batch, xR, xCOffset, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= ${o}) {\n                    xTexelC${n}.zw = vec2(0.0);\n                  }\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < ${o}) {\n                  xTexelC${n+2} = getX(batch, xR, xC + 1, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xC + 2 >= ${o}) {\n                    xTexelC${n+2}.zw = vec2(0.0);\n                  }\n                }\n\n                xC${n} = vec4(xTexelC${n}.zw, xTexelC${n+2}.zw);\n              `,n+1<m&&(g+=`\n                  final = vec4(0.0);\n                  xCOffset = xC + 1 + ${d};\n                  if(xCOffset >= 0 && xCOffset < ${o}) {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xC${n+1} = vec4(xTexelC${n+2}.xy, final.xy);\n                `)):(g+=`\n                if(xC >= 0 && xC < ${o}) {\n                  xTexelC${n} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= ${o}) {\n                    xTexelC${n}.zw = vec2(0.0);\n                  }\n                }\n\n                xCOffset = xC + ${d};\n                if(xCOffset >= 0 && xCOffset < ${o}) {\n                  xTexelC${n+2} = getX(batch, xR, xCOffset, d1);\n                  if (xCOffset + 1 >= ${o}) {\n                    xTexelC${n+2}.zw = vec2(0.);\n                  }\n                }\n\n                xC${n} = vec4(\n                  xTexelC${n}.xy, xTexelC${n+2}.xy);\n              `,n+1<m&&(g+=`\n                  xC${n+1} = vec4(xTexelC${n}.zw, xTexelC${n+2}.zw);\n                `)));n<m&&(g+=`\n            wTexel = getW(${e}, ${n}, d1, q);\n            dotProd += xC${n} * vec4(wTexel.xz, wTexel.xz);\n          `,n+1<m&&(g+=`\n              wTexel = getW(${e}, ${n+1}, d1, q);\n              dotProd += xC${n+1} * vec4(wTexel.xz, wTexel.xz);\n            `))}g+="\n        }\n      "}let y="",x="";n&&(y=r?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:a?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`vec4 activation(vec4 x) {\n          ${n}\n        }`,x="result = activation(result);");const v=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${y}\n\n      const ivec2 strides = ivec2(${l}, ${d});\n      const ivec2 pads = ivec2(${u}, ${c});\n\n      void main() {\n\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${s};\n        int q = d2 - d1 * ${s};\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n        vec4 dotProd = vec4(0.000000000000001);\n\n        ${g}\n\n        vec4 result = dotProd - vec4(0.000000000000001);\n        ${v}\n        ${x}\n        setOutput(result);\n      }\n    `}}const tu={kernelName:ea.DepthwiseConv2dNative,backendName:"webgl",kernelFunc:Yn};class nu{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,a=e.padInfo.left,s=e.outChannels/e.inChannels;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ${s} + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${r};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${a};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class ru{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,a=e.strideWidth,s=t-1-e.padInfo.top,i=n-1-e.padInfo.left,o=e.outChannels/e.inChannels;this.userCode=`\n      const ivec2 pads = ivec2(${s}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${a}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ${o}; dm++) {\n              int d2 = d1 * ${o} + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const au={kernelName:ea.DepthwiseConv2dNativeBackpropFilter,backendName:"webgl",kernelFunc:Zn},su={kernelName:ea.DepthwiseConv2dNativeBackpropInput,backendName:"webgl",kernelFunc:Qn};class iu{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "}}const ou={kernelName:ea.Diag,backendName:"webgl",kernelFunc:Jn};class uu{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const{inHeight:t,inWidth:n,padInfo:r,strideHeight:a,strideWidth:s,filterHeight:i,filterWidth:o,dilationHeight:u,dilationWidth:c}=e,{top:l,left:d}=r;this.userCode=`\n      const ivec2 strides = ivec2(${a}, ${s});\n      const ivec2 pads = ivec2(${l}, ${d});\n      const float neg_infinity = -3.4e38;\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.w;\n        ivec2 outTopLeftCorner =\n            coords.yz * strides - pads;\n        int hBeg = outTopLeftCorner.x;\n        int wBeg = outTopLeftCorner.y;\n\n        float curVal = neg_infinity;\n        for (int h = 0; h < ${i}; h++) {\n          int hIn = hBeg + h * ${u};\n\n          if (hIn >= 0 && hIn < ${t}) {\n            for (int w = 0; w < ${o}; w++) {\n              int wIn = wBeg + w * ${c};\n\n              if (wIn >= 0 && wIn < ${n}) {\n                float xVal = getX(batch, hIn, wIn, d1);\n                float wVal = getW(h, w, d1);\n\n                float val = xVal + wVal;\n                if (val > curVal) {\n                  curVal = val;\n                }\n              }\n            }\n          }\n        }\n\n        float result = curVal;\n        setOutput(result);\n      }\n    `}}const cu={kernelName:ea.Dilation2D,backendName:"webgl",kernelFunc:er},lu={kernelName:ea.Einsum,backendName:"webgl",kernelFunc:tr},du="return (x >= 0.0) ? x : (exp(x) - 1.0);",hu="\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n",pu=Ht({opSnippet:du,packedOpSnippet:hu}),fu={kernelName:ea.Elu,backendName:"webgl",kernelFunc:pu},mu="return (b >= 1.0) ? a : a * (b + 1.0);",bu="\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",gu=e=>{const{inputs:t,backend:n}=e,{dy:r,y:a}=t,s=Object(ea.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new _s(bu,r.shape,a.shape):new $s(mu,r.shape,a.shape);return n.runWebGLProgram(s,[r,a],r.dtype)},yu={kernelName:ea.EluGrad,backendName:"webgl",kernelFunc:gu},xu="\n  return vec4(equal(a, b));\n",vu="return float(a == b);",wu=qt({opSnippet:vu,packedOpSnippet:xu,dtype:"bool"}),ku={kernelName:ea.Equal,backendName:"webgl",kernelFunc:wu},Ou=`\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = ${ea.backend_util.ERF_P};\n  float a1 = ${ea.backend_util.ERF_A1};\n  float a2 = ${ea.backend_util.ERF_A2};\n  float a3 = ${ea.backend_util.ERF_A3};\n  float a4 = ${ea.backend_util.ERF_A4};\n  float a5 = ${ea.backend_util.ERF_A5};\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n`,Iu=Ht({opSnippet:Ou}),Nu={kernelName:ea.Erf,backendName:"webgl",kernelFunc:Iu},ju="return exp(x);",Su=Ht({opSnippet:ju,packedOpSnippet:ju,cpuKernelImpl:$a}),Tu={kernelName:ea.Exp,backendName:"webgl",kernelFunc:Su},Cu={kernelName:ea.ExpandDims,backendName:"webgl",kernelFunc:nr},Eu="return exp(x) - 1.0;",$u=Ht({opSnippet:Eu,packedOpSnippet:Eu,cpuKernelImpl:Aa}),Au={kernelName:ea.Expm1,backendName:"webgl",kernelFunc:$u};class _u{constructor(e,t,n){this.variableNames=["real","imag"];const r=t[1];this.outputShape=t;const a=n?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,s=n?`${r}.0`:"1.0";let i;if("real"===e)i="return real * expR - imag * expI;";else{if("imag"!==e)throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);i="return real * expI + imag * expR;"}this.userCode=`\n      const float exponentMultiplier = ${a};\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ${i}\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(${r});\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ${r}; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ${s};\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    `}}const Du={kernelName:ea.FFT,backendName:"webgl",kernelFunc:ar};class Fu{constructor(e,t){this.outputShape=[],this.variableNames=["x"],this.outputShape=e,this.userCode="\n      uniform float value;\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}getCustomSetupFunc(e){return(t,n)=>{null==this.valueLoc&&(this.valueLoc=t.getUniformLocationNoThrow(n,"value")),t.gl.uniform1f(this.valueLoc,e)}}}const Ru={kernelName:ea.Fill,backendName:"webgl",kernelFunc:sr};class Mu{constructor(e){this.variableNames=["Image"],this.outputShape=[];const t=e[2];this.outputShape=e,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n\n          int coordX = ${t} - x;\n          float outputValue;\n          if(coordX >= 0 && coordX < ${t}) {\n            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);\n          } else {\n            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const zu={kernelName:ea.FlipLeftRight,backendName:"webgl",kernelFunc:({inputs:e,backend:t})=>{const{image:n}=e,r=t,a=new Mu(n.shape),s=r.runWebGLProgram(a,[n],n.dtype);return s}},Lu="return floor(x);",Pu=Ht({opSnippet:Lu,packedOpSnippet:Lu,cpuKernelImpl:_a}),Bu={kernelName:ea.Floor,backendName:"webgl",kernelFunc:Pu},Wu="\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",Vu="\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n",Uu=qt({opSnippet:Wu,packedOpSnippet:Vu,dtype:"int32"}),Gu={kernelName:ea.FloorDiv,backendName:"webgl",kernelFunc:Uu};class Hu{constructor(e){this.variableNames=["A"];const t=ue(),[n,r]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}.0, ${n}.0);\n\n        vec4 values = ${t.texture2D}(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    `}}class qu{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const t=ue(),[n,r]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(${r}.0, ${n}.0);\n            vec4 values = ${t.texture2D}(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ${t.output} = result;\n      }\n    `}}const Ku={kernelName:ea.FromPixels,backendName:"webgl",kernelFunc:ir};let Xu;const Yu={kernelName:ea.FusedConv2D,backendName:"webgl",kernelFunc:or},Zu={kernelName:ea.FusedDepthwiseConv2D,backendName:"webgl",kernelFunc:ur};class Qu{constructor(e,t,n){this.sliceDim=e,this.strides=t,this.variableNames=["x","indices"],this.outputShape=n;const r=gt(t.length),a=gt(n.length),s=this.sliceDim>1?"strides[j]":"strides";this.userCode=`\n        ${r} strides = ${r}(${this.strides});\n         void main() {\n          ${a} coords = getOutputCoords();\n          int flattenIndex = 0;\n          for (int j = 0; j < ${this.sliceDim}; j++) {\n            int index = round(getIndices(coords[0], j));\n            flattenIndex += index * ${s};\n          }\n          setOutput(getX(flattenIndex, coords[1]));\n        }\n      `}}const Ju={kernelName:ea.GatherNd,backendName:"webgl",kernelFunc:cr};class ec{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;const n=gt(this.rank),r=lr(e,2);this.userCode=`\n      void main() {\n        ${n} resRC = getOutputCoords();\n        setOutput(getA(${r}));\n      }\n    `}}const tc={kernelName:ea.GatherV2,backendName:"webgl",kernelFunc:dr},nc="return float(a > b);",rc="\n  return vec4(greaterThan(a, b));\n",ac=qt({opSnippet:nc,packedOpSnippet:rc,cpuKernelImpl:Fa,dtype:"bool"}),sc={kernelName:ea.Greater,backendName:"webgl",kernelFunc:ac},ic="return float(a >= b);",oc="\n  return vec4(greaterThanEqual(a, b));\n",uc=qt({opSnippet:ic,packedOpSnippet:oc,dtype:"bool"}),cc={kernelName:ea.GreaterEqual,backendName:"webgl",kernelFunc:uc},lc={kernelName:ea.IFFT,backendName:"webgl",kernelFunc:hr},dc="return float(!isnan(x) && !isinf(x));",hc=Ht({opSnippet:dc,dtype:"bool"}),pc={kernelName:ea.IsFinite,backendName:"webgl",kernelFunc:hc},fc="return float(isinf(x));",mc=Ht({opSnippet:fc,dtype:"bool"}),bc={kernelName:ea.IsInf,backendName:"webgl",kernelFunc:mc},gc="return float(isnan(x));",yc=Ht({opSnippet:gc,dtype:"bool"}),xc={kernelName:ea.IsNan,backendName:"webgl",kernelFunc:yc},vc="return float(a < b);",wc="\n  return vec4(lessThan(a, b));\n",kc=qt({opSnippet:vc,packedOpSnippet:wc,cpuKernelImpl:Ra,dtype:"bool"}),Oc={kernelName:ea.Less,backendName:"webgl",kernelFunc:kc},Ic="return float(a <= b);",Nc="\n  return vec4(lessThanEqual(a, b));\n",jc=qt({opSnippet:Ic,packedOpSnippet:Nc,dtype:"bool"}),Sc={kernelName:ea.LessEqual,backendName:"webgl",kernelFunc:jc},Tc={kernelName:ea.LinSpace,backendName:"webgl",kernelFunc:pr
},Cc="if (x < 0.0) return NAN;\n  return log(x);",Ec="\n  vec4 result = log(x);\n  vec4 isNaN = vec4(lessThan(x, vec4(0.0)));\n  result.r = isNaN.r == 1.0 ? NAN : result.r;\n  result.g = isNaN.g == 1.0 ? NAN : result.g;\n  result.b = isNaN.b == 1.0 ? NAN : result.b;\n  result.a = isNaN.a == 1.0 ? NAN : result.a;\n\n  return result;\n",$c=Ht({opSnippet:Cc,packedOpSnippet:Ec,cpuKernelImpl:za}),Ac={kernelName:ea.Log,backendName:"webgl",kernelFunc:$c},_c="return log(1.0 + x);",Dc=Ht({opSnippet:_c}),Fc={kernelName:ea.Log1p,backendName:"webgl",kernelFunc:Dc},Rc="return float(a >= 1.0 && b >= 1.0);",Mc="\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n",zc=qt({opSnippet:Rc,packedOpSnippet:Mc,dtype:"bool"}),Lc={kernelName:ea.LogicalAnd,backendName:"webgl",kernelFunc:zc},Pc="return float(!(x >= 1.0));",Bc=Ht({opSnippet:Pc}),Wc={kernelName:ea.LogicalNot,backendName:"webgl",kernelFunc:Bc},Vc="return float(a >= 1.0 || b >= 1.0);",Uc="\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n",Gc=qt({opSnippet:Vc,packedOpSnippet:Uc,dtype:"bool"}),Hc={kernelName:ea.LogicalOr,backendName:"webgl",kernelFunc:Gc};class qc{constructor(e,t,n,r,a){this.variableNames=["x"],this.outputShape=[];const s=t,i=e[3]-1;let o;this.outputShape=e;const u=`float(${n}) + float(${r}) * sum`;o=.5===a?`inversesqrt(${u})`:1===a?`1.0/(${u})`:`exp(log(${u}) * float(-${a}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -${s}; j <= ${s}; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ${i}) {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ${o};\n        setOutput(val);\n      }\n    `}}class Kc{constructor(e,t,n,r,a){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const s=t,i=e[3]-1;let o;this.outputShape=e;const u=`float(${n}) + float(${r}) * sum`;o=.5===a?`inversesqrt(${u})`:1===a?`1.0/(${u})`:`exp(log(${u}) * float(-${a}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ${this.outputShape[3]};\n        bool hasNextRow = c < ${this.outputShape[2]};\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ${s};\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ${s}; j <= ${s}; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${i}));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ${o};\n        setOutput(result);\n      }\n    `}}const Xc=e=>{const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{depthRadius:s,bias:i,alpha:o,beta:u}=r,c=Object(ea.env)().getBool("WEBGL_PACK_NORMALIZATION")?new Kc(a.shape,s,i,o,u):new qc(a.shape,s,i,o,u);return n.runWebGLProgram(c,[a],a.dtype)},Yc={kernelName:ea.LRN,backendName:"webgl",kernelFunc:Xc};class Zc{constructor(e,t,n,r,a){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=n,this.alpha=r,this.beta=a,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ${this.depth}; ++d) {\n          int depthBegin = int(max(0.0, float(d - ${t})));\n          int depthEnd = int(min(float(${this.depth}),\n              float(d + ${t} + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ${this.depth};\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(${r}) * norm + float(${n});\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(${r})\n                * float(${a})\n                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ${a});\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    `}}const Qc=e=>{const{inputs:t,backend:n,attrs:r}=e,{x:a,y:s,dy:i}=t,{depthRadius:o,bias:u,alpha:c,beta:l}=r,d=new Zc(a.shape,o,u,c,l);return n.runWebGLProgram(d,[a,s,i],a.dtype)},Jc={kernelName:ea.LRNGrad,backendName:"webgl",kernelFunc:Qc},el={kernelName:ea.Max,backendName:"webgl",kernelFunc:mr},tl=Es+"\n  return max(a, b);\n",nl="\n  vec4 result = vec4(max(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  "+As+"\n  return result;\n",rl=qt({opSnippet:tl,packedOpSnippet:nl,cpuKernelImpl:Pa}),al={kernelName:ea.Maximum,backendName:"webgl",kernelFunc:rl},sl={kernelName:ea.MaxPool,backendName:"webgl",kernelFunc:br},il={kernelName:ea.MaxPool3D,backendName:"webgl",kernelFunc:gr};class ol{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideHeight,n=e.strideWidth,r=e.dilationHeight,a=e.effectiveFilterHeight,s=e.effectiveFilterWidth,i=a-1-e.padInfo.top,o=s-1-e.padInfo.left,u=a*s-1;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${a};\n          wR += ${r}) {\n          float dyR = float(dyRCorner + wR) / ${t}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${s}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${n}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ${u} - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ${s} + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class ul{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,a=e.dilationDepth,s=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterDepth,u=e.effectiveFilterHeight,c=e.effectiveFilterWidth,l=o-1-e.padInfo.front,d=u-1-e.padInfo.top,h=c-1-e.padInfo.left,p=o*u*c-1;this.userCode=`\n      const ivec3 pads = ivec3(${l}, ${d}, ${h});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${o};\n           wD += ${a}) {\n          float dyD = float(dyDCorner + wD) / ${t}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${u};\n              wR += ${s}) {\n            float dyR = float(dyRCorner + wR) / ${n}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${c};\n                wC += ${i}) {\n              float dyC = float(dyCCorner + wC) / ${r}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = ${p} -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * ${u} * ${c} +\n                  wR * ${c} + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const cl={kernelName:ea.MaxPool3DGrad,backendName:"webgl",kernelFunc:yr},ll={kernelName:ea.MaxPoolGrad,backendName:"webgl",kernelFunc:xr},dl={kernelName:ea.MaxPoolWithArgmax,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{filterSize:a,strides:s,pad:i,includeBatchInIndex:o}=t,u=n;ea.util.assert(4===r.shape.length,()=>`Error in maxPool: input must be rank 4 but got rank ${r.shape.length}.`);const c=[1,1];ea.util.assert(ea.backend_util.eitherStridesOrDilationsAreOne(s,c),()=>"Error in maxPool: Either strides or dilations must be 1. "+`Got strides ${s} and dilations '${c}'`);const l=ea.backend_util.computePool2DInfo(r.shape,a,s,c,i),[d,h]=vr(r,o,l,u);return[d,h]}},hl={kernelName:ea.Mean,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{keepDims:a,axis:s}=t,i=n,o=r.shape.length,u=ea.util.parseAxisParam(s,r.shape);let c=u;const l=ea.backend_util.getAxesPermutation(c,o),d=null!=l,h=i.shouldExecuteOnCPU([r]),p=[];let f=r;if(d){if(h){const e=i.texData.get(f.dataId),t=e.values,n=new Array(o);for(let e=0;e<n.length;e++)n[e]=r.shape[l[e]];const a=es(t,r.shape,r.dtype,l,n);f=i.makeTensorInfo(n,r.dtype);const s=i.texData.get(f.dataId);s.values=a}else f=tn(r,l,i);p.push(f),c=ea.backend_util.getInnerMostAxes(c.length,o)}ea.backend_util.assertAxesAreInnerMostDims("sum",c,o);const[m,b]=ea.backend_util.computeOutAndReduceShapes(f.shape,c);let g=m;a&&(g=ea.backend_util.expandShapeToKeepDim(m,u));const y=wr(f,b,g,i);for(const e of p)i.disposeIntermediateTensorInfo(e);return y}},pl={kernelName:ea.Min,backendName:"webgl",kernelFunc:kr},fl=Es+"\n  return min(a, b);\n",ml="\n  vec4 result = vec4(min(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  "+As+"\n  return result;\n",bl=qt({opSnippet:fl,packedOpSnippet:ml,cpuKernelImpl:Ba}),gl={kernelName:ea.Minimum,backendName:"webgl",kernelFunc:bl};class yl{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map((t,n)=>t[0]+e[n]+t[1]);const r=e.length,a=gt(r),s=t.map(e=>e[0]).join(","),i=t.map((t,n)=>t[0]+e[n]).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r),u="reflect"===n?0:1;this.userCode=1!==r?`\n      ${a} start = ${a}(${s});\n      ${a} end = ${a}(${i});\n\n      void main() {\n        ${a} outC = getOutputCoords();\n        for (int i = 0; i < ${r}; i++) {\n          if (outC[i] < start[i]) {\n            outC[i] = start[i] * 2 - outC[i] - ${u};\n          } else if(outC[i] >= end[i]) {\n            outC[i] = (end[i] - 1) * 2 - outC[i] + ${u};\n          }\n        }\n        ${a} coords = outC - start;\n        setOutput(getX(${o}));\n      }\n    `:`\n        int start = ${s};\n        int end = ${i};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start) {\n            outC = start * 2 - outC - ${u};\n          } else if(outC >= end) {\n            outC = (end - 1) * 2 - outC + ${u};\n          }\n          setOutput(getX(outC - start));\n        }\n      `}}class xl{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map((t,n)=>t[0]+e[n]+t[1]);const r=e.length,a=gt(r),s=t.map(e=>e[0]).join(","),i=t.map((t,n)=>t[0]+e[n]).join(","),o=Nt("rc",r),u=Nt("source",r),c=`${o[r-1]} < ${this.outputShape[r-1]}`,l=1===r?"source":`vec2(${u.slice(-2).join()})`,d="reflect"===n?0:1;let h="";if(1===r){const e=`\n        ${a} source = rc;\n        if (source < start) {\n          source = start * 2 - source - ${d};\n        } else if (source >= end) {\n          source = (end - 1) * 2 - source + ${d};\n        }\n        source -= start;\n      `;h=`\n        ${a} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${u.join()}), ${l});\n        ${o[r-1]} += 1;\n        if(${c}) {\n          ${e}\n          result[1] = getChannel(getX(${u.join()}), ${l});\n        }\n      `}else{const e=`\n        ${a} source = rc;\n        ${a} lt = ${a}(lessThan(source, start));\n        ${a} gte = ${a}(greaterThanEqual(source, end));\n        ${a} orig = 1 - (lt + gte);\n        source = orig * source +\n                lt * (start * 2 - source - ${d}) +\n                gte * ((end - 1) * 2 - source + ${d});\n        source -= start;\n      `;h=`\n        ${a} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${u.join()}), ${l});\n        ${o[r-1]} += 1;\n        if(${c}) {\n          ${e}\n          result[1] = getChannel(getX(${u.join()}), ${l});\n        }\n        rc = outputLoc;\n        ${o[r-2]} += 1;\n        if(${o[r-2]} < ${this.outputShape[r-2]}) {\n          ${e}\n          result[2] = getChannel(getX(${u.join()}), ${l});\n          ${o[r-1]} += 1;\n          if(${c}) {\n            ${e}\n            result[3] = getChannel(getX(${u.join()}), ${l});\n          }\n        }\n      `}this.userCode=`\n      const ${a} start = ${a}(${s});\n      const ${a} end = ${a}(${i});\n\n      void main() {\n        ${a} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${h}\n        setOutput(result);\n      }\n    `}}const vl=({inputs:e,backend:t,attrs:n})=>{const{x:r}=e,{paddings:a,mode:s}=n,i=Object(ea.env)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new xl(r.shape,a,s):new yl(r.shape,a,s),o=t.runWebGLProgram(i,[r],r.dtype);return o},wl={kernelName:ea.MirrorPad,backendName:"webgl",kernelFunc:vl},kl="if (b == 0.0) return NAN;\n  return mod(a, b);",Ol="\n  vec4 result = mod(a, b);\n  vec4 isNaN = vec4(equal(b, vec4(0.0)));\n  "+As+"\n  return result;\n",Il=qt({opSnippet:kl,packedOpSnippet:Ol}),Nl={kernelName:ea.Mod,backendName:"webgl",kernelFunc:Il};class jl{constructor(e,t,n){this.variableNames=["probs"],this.outputShape=[e,n],this.userCode=`\n      uniform float seed;\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ${t-1}; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(${t-1}));\n      }\n    `}getCustomSetupFunc(e){return(t,n)=>{null==this.seedLoc&&(this.seedLoc=t.getUniformLocation(n,"seed")),t.gl.uniform1f(this.seedLoc,e)}}}const Sl="\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",Tl="\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",Cl=qt({opSnippet:Sl,packedOpSnippet:Tl,checkOutOfBounds:!0}),El={kernelName:ea.RealDiv,backendName:"webgl",kernelFunc:Cl},$l="return a - b;",Al=qt({opSnippet:$l,packedOpSnippet:$l,supportsComplex:!0,cpuKernelImpl:Za}),_l={kernelName:ea.Sub,backendName:"webgl",kernelFunc:Al},Dl={kernelName:ea.Softmax,backendName:"webgl",kernelFunc:Or},Fl={kernelName:ea.Multinomial,backendName:"webgl",kernelFunc:Ir},Rl="return -x;",Ml={kernelName:ea.Neg,backendName:"webgl",kernelFunc:Nr},zl=ea.kernel_impls.nonMaxSuppressionV3Impl,Ll={kernelName:ea.NonMaxSuppressionV3,backendName:"webgl",kernelFunc:jr},Pl=ea.kernel_impls.nonMaxSuppressionV4Impl,Bl={kernelName:ea.NonMaxSuppressionV4,backendName:"webgl",kernelFunc:Sr},Wl=ea.kernel_impls.nonMaxSuppressionV5Impl,Vl={kernelName:ea.NonMaxSuppressionV5,backendName:"webgl",kernelFunc:Tr};class Ul{constructor(e,t,n,r){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(${r}), float(${n}),\n                      float(index == coords.y)));\n      }\n    `}}const Gl=e=>{const{inputs:t,backend:n,attrs:r}=e,{indices:a}=t,{depth:s,onValue:i,offValue:o}=r,u=ea.util.sizeFromShape(a.shape),c=new Ul(u,s,i,o),l=Zt({inputs:{x:a},backend:n,attrs:{shape:[u]}}),d=n.runWebGLProgram(c,[l],a.dtype);n.disposeIntermediateTensorInfo(l);const h=[...a.shape,s],p=Zt({inputs:{x:d},backend:n,attrs:{shape:h}});return n.disposeIntermediateTensorInfo(d),p},Hl={kernelName:ea.OneHot,backendName:"webgl",kernelFunc:Gl},ql={kernelName:ea.ZerosLike,backendName:"webgl",kernelFunc:Cr},Kl={kernelName:ea.OnesLike,backendName:"webgl",kernelFunc:Er},Xl={kernelName:ea.Pack,backendName:"webgl",kernelFunc:$r};class Yl{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map((t,n)=>t[0]+e[n]+t[1]);const r=e.length,a=gt(r),s=t.map(e=>e[0]).join(","),i=t.map((t,n)=>t[0]+e[n]).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r);this.userCode=1!==r?`\n      ${a} start = ${a}(${s});\n      ${a} end = ${a}(${i});\n      uniform float value;\n\n      void main() {\n        ${a} outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(value);\n        } else {\n          ${a} coords = outC - start;\n          setOutput(getX(${o}));\n        }\n      }\n    `:`\n        int start = ${s};\n        int end = ${i};\n        uniform float value;\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(value);\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      `}getCustomSetupFunc(e){return(t,n)=>{null==this.valueLoc&&(this.valueLoc=t.getUniformLocationNoThrow(n,"value")),t.gl.uniform1f(this.valueLoc,e)}}}class Zl{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map((t,n)=>t[0]+e[n]+t[1]);const r=e.length,a=gt(r),s=t.map(e=>e[0]).join(","),i=t.map((t,n)=>t[0]+e[n]).join(","),o=Nt("rc",r),u=Nt("source",r),c=`${o[r-1]} < ${this.outputShape[r-1]}`,l=1===r?"source":`vec2(${u.slice(-2).join()})`,d=[`${a} rc = outputLoc;`,`${o[r-1]} += 1;\n       if(${c}) {\n      `,1===r?"":`}\n       rc = outputLoc;\n       ${o[r-2]} += 1;\n       if(${o[r-2]} < ${this.outputShape[r-2]}) {`,1===r?"":`  ${o[r-1]} += 1;\n         if(${c}) {`],h=1===r?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let p="";for(let e=0,t=1===r?2:4;e<t;e++)p+=`\n        ${d[e]}\n        if (${h}) {\n          result[${e}] = float(value);\n        } else {\n          ${a} source = rc - start;\n          result[${e}] = getChannel(getX(${u.join()}), ${l});\n        }\n      `;p+=1===r?"} ":"}}",this.userCode=`\n      const ${a} start = ${a}(${s});\n      const ${a} end = ${a}(${i});\n      uniform float value;\n\n      void main() {\n        ${a} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${p}\n        setOutput(result);\n      }\n    `}getCustomSetupFunc(e){return(t,n)=>{null==this.valueLoc&&(this.valueLoc=t.getUniformLocationNoThrow(n,"value")),t.gl.uniform1f(this.valueLoc,e)}}}const Ql=e=>{const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{paddings:s,constantValue:i}=r,o=Object(ea.env)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Zl(a.shape,s,i):new Yl(a.shape,s,i),u=o.getCustomSetupFunc(i);return n.runWebGLProgram(o,[a],a.dtype,u)},Jl={kernelName:ea.PadV2,backendName:"webgl",kernelFunc:Ql},ed="\n  if(a < 0.0 && floor(b) < b){\n    return NAN;\n  }\n  if (b == 0.0) {\n    return 1.0;\n  }\n  return (round(mod(b, 2.0)) != 1) ?\n      pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",td="\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  vec4 isNaN = vec4(lessThan(a, vec4(0.0))) * vec4(lessThan(floor(b), b));\n  "+As+"\n  return result;\n",nd=qt({opSnippet:ed,packedOpSnippet:td}),rd={kernelName:ea.Pow,backendName:"webgl",kernelFunc:nd},ad={kernelName:ea.Prod,backendName:"webgl",kernelFunc:Ar},sd=e=>{const{backend:t,attrs:n}=e,{start:r,stop:a,step:s,dtype:i}=n,o=Ga(r,a,s,i);return t.makeTensorInfo([o.length],i,o)},id={kernelName:ea.Range,backendName:"webgl",kernelFunc:sd},od="return 1.0 / x;",ud=Ht({opSnippet:od}),cd={kernelName:ea.Reciprocal,backendName:"webgl",kernelFunc:ud},ld=is+"\n  return (x < 0.0) ? 0.0 : x;\n",dd="\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",hd=Ht({opSnippet:ld,packedOpSnippet:dd}),pd={kernelName:ea.Relu,backendName:"webgl",kernelFunc:hd},fd=is+"\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",md="\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",bd=Ht({opSnippet:fd,packedOpSnippet:md}),gd={kernelName:ea.Relu6,backendName:"webgl",kernelFunc:bd};class yd{constructor(e,t,n,r,a){this.variableNames=["A"],this.outputShape=[];const[s,i,o,u]=e;this.outputShape=[s,t,n,u];const c=[r&&t>1?i-1:i,r&&n>1?o-1:o],l=[r&&t>1?t-1:t,r&&n>1?n-1:n];let d;d=a?"(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${c[0]/l[0]},\n          ${c[1]/l[1]});\n      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${d};\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    `}}class xd{constructor(e,t,n,r,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[s,i,o,u]=e;this.outputShape=[s,t,n,u];const c=[r&&t>1?i-1:i,r&&n>1?o-1:o],l=[r&&t>1?t-1:t,r&&n>1?n-1:n];let d;d=a?"(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${c[0]/l[0]},\n          ${c[1]/l[1]},\n          ${c[1]/l[1]});\n      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${d};\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${u-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    `}}const vd={kernelName:ea.ResizeBilinear,backendName:"webgl",kernelFunc:_r};class wd{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,a]=t,[,s,i]=e,o=[n&&s>1?r-1:r,n&&i>1?a-1:a],u=[n&&s>1?s-1:s,n&&i>1?i-1:i],c=o[0]/u[0],l=o[1]/u[1],d=1/c,h=1/l,p=2*Math.ceil(d)+2,f=2*Math.ceil(h)+2
;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${c});\n        const float widthScale = float(${l});\n\n        const float invHeightScale = float(${d});\n        const float invWidthScale = float(${h});\n\n        const int winHeight = int(${p});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${s}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ${r-1}.0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ${a-1}.0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const kd={kernelName:ea.ResizeBilinearGrad,backendName:"webgl",kernelFunc:Dr};class Od{constructor(e,t,n,r,a){this.variableNames=["A"],this.outputShape=[];const[s,i,o,u]=e;this.outputShape=[s,t,n,u];const c=[r&&t>1?i-1:i,r&&n>1?o-1:o],l=[r&&t>1?t-1:t,r&&n>1?n-1:n],d=r?"0.5":"0.0";let h;h=a?"max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${c[0]/l[0]},\n          ${c[1]/l[1]});\n      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${h};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${d})));\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    `}}const Id={kernelName:ea.ResizeNearestNeighbor,backendName:"webgl",kernelFunc:Fr};class Nd{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,a]=t,[,s,i]=e,o=[n&&s>1?r-1:r,n&&i>1?a-1:a],u=[n&&s>1?s-1:s,n&&i>1?i-1:i],c=o[0]/u[0],l=o[1]/u[1],d=1/c,h=1/l,p=2*Math.ceil(d)+2,f=2*Math.ceil(h)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${c});\n        const float widthScale = float(${l});\n\n        const float invHeightScale = float(${d});\n        const float invWidthScale = float(${h});\n\n        const int winHeight = int(${p});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${s}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(${o[0]}) *\n                (float(dyR) / float(${u[0]}));\n\n            float sourceFracCol =\n                float(${o[1]}) *\n                  (float(dyC) / float(${u[1]}));\n\n            int sourceNearestRow = int(min(\n                float(int(${r}) - 1),\n                ${n} ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(${a}) - 1),\n                ${n} ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const jd={kernelName:ea.ResizeNearestNeighborGrad,backendName:"webgl",kernelFunc:Rr};class Sd{constructor(e,t){this.variableNames=["x"];const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=e,1===n)return void(this.userCode=`\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(${e[0]} - coord - 1));\n        }\n      `);const r=n=>-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - coords[${n}] - 1`:`coords[${n}]`,a=e.map((e,t)=>r(t)).join(","),s=gt(n);this.userCode=`\n      void main() {\n        ${s} coords = getOutputCoords();\n        setOutput(getX(${a}));\n      }\n    `}}class Td{constructor(e,t){function n(e){return i(e)}function r(e){return e[u-1]="("+e[u-1]+" + 1)",i(e)}function a(e){return e[u-2]="("+e[u-2]+" + 1)",i(e)}function s(e){return e[u-1]="("+e[u-1]+" + 1)",e[u-2]="("+e[u-2]+" + 1)",i(e)}function i(t){const n=e.map((e,n)=>o(n,t)),r=n.join(","),a=n.slice(-2).join(",");return`getChannel(getX(${r}), vec2(${a}))`}function o(n,r){return-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - ${r[n]} - 1`:`${r[n]}`}this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const u=e.length;if(u>4)throw new Error(`WebGL backend: Reverse of rank-${u} tensor is not yet supported`);this.outputShape=e;const c=Nt("rc",u),l=`${c[u-1]} + 1 < ${this.outputShape[u-1]}`,d=`${c[u-2]} + 1 < ${this.outputShape[u-2]}`,h=gt(u);this.userCode=1===u?`\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(${e[0]} - rc - 1),\n            ${e[0]} - rc - 1);\n          if(${l}){\n              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),\n                ${e[0]} - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      `:`\n        void main() {\n          ${h} rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ${n(c.slice())};\n          if(${l}){\n            result.g = ${r(c.slice())};\n          }\n          if(${d}) {\n            result.b = ${a(c.slice())};\n            if(${l}) {\n              result.a = ${s(c.slice())};\n            }\n          }\n          setOutput(result);\n        }\n    `}}const Cd={kernelName:ea.Reverse,backendName:"webgl",kernelFunc:Mr};class Ed{constructor(e,t){this.variableNames=["Image"],this.outputShape=[];const n=e[1],r=e[2];this.outputShape=e;let a="";a="number"==typeof t?`float outputValue = ${t.toFixed(2)};`:`\n        vec3 fill = vec3(${t.join(",")});\n        float outputValue = fill[coords[3]];`,this.userCode=`\n        uniform vec4 params;\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n          int y = coords[1];\n          float coordXFloat = (float(x) - params[0]) * params[3] -\n            (float(y) - params[1]) * params[2];\n          float coordYFloat = (float(x) - params[0]) * params[2] +\n            (float(y) - params[1]) * params[3];\n          int coordX = int(round(coordXFloat + params[0]));\n          int coordY = int(round(coordYFloat + params[1]));\n          ${a}\n          if(coordX >= 0 && coordX < ${r} && coordY >= 0 && coordY < ${n}) {\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}getCustomSetupFunc(e,t,n,r){return(a,s)=>{null==this.paramsLoc&&(this.paramsLoc=a.getUniformLocationNoThrow(s,"params")),a.gl.uniform4f(this.paramsLoc,e,t,n,r)}}}const $d={kernelName:ea.RotateWithOffset,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:r}=e,{radians:a,fillValue:s,center:i}=t,o=n,u=new Ed(r.shape,s),[c,l]=ea.backend_util.getImageCenter(i,r.shape[1],r.shape[2]),d=u.getCustomSetupFunc(c,l,Math.sin(a),Math.cos(a)),h=o.runWebGLProgram(u,[r],r.dtype,d);return h}},Ad="\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n",_d=Ht({opSnippet:Ad}),Dd={kernelName:ea.Round,backendName:"webgl",kernelFunc:_d},Fd="return inversesqrt(x);",Rd=Ht({opSnippet:Fd,cpuKernelImpl:Ha}),Md={kernelName:ea.Rsqrt,backendName:"webgl",kernelFunc:Rd};class zd{constructor(e,t,n,r,a,s,i=!0){this.variableNames=["updates","indices","defaultValue"],this.outputShape=s;const o=gt(a.length),u=gt(s.length);let c="";1===n?c="i":2===n&&(c="i, j");const l=`getIndices(${c})`;let d="";1===r?d="i":2===r&&(d="i, coords[1]");const h=`getUpdates(${d})`,p=t>1?"strides[j]":"strides";this.userCode=`\n        ${o} strides = ${o}(${a});\n\n        void main() {\n          ${u} coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ${e}; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ${t}; j++) {\n              int index = round(${l});\n              flattenedIndex += index * ${p};\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += ${h};\n              found = true;\n            }\n          }\n          setOutput(mix(getDefaultValue(), sum, float(found)));\n        }\n      `}}const Ld={kernelName:ea.ScatterNd,backendName:"webgl",kernelFunc:zr};class Pd{constructor(e,t,n){let r,a;if(this.variableNames=["c","a","b"],this.outputShape=t,n>4)throw Error(`Where for rank ${n} is not yet supported`);if(1===n)a="resRC",r="resRC";else{const n=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[],i=[];for(let r=0;r<t.length;r++)i.push(`${n[r]}`),r<e&&s.push(`${n[r]}`);r=s.join(),a=i.join()}const s=gt(n);this.userCode=`\n      void main() {\n        ${s} resRC = getOutputCoords();\n        float cVal = getC(${r});\n        if (cVal >= 1.0) {\n          setOutput(getA(${a}));\n        } else {\n          setOutput(getB(${a}));\n        }\n      }\n    `}}const Bd={kernelName:ea.Select,backendName:"webgl",kernelFunc:Lr},Wd=`\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = ${ea.backend_util.SELU_SCALEALPHA};\n  float scale = ${ea.backend_util.SELU_SCALE};\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n`,Vd=Ht({opSnippet:Wd}),Ud={kernelName:ea.Selu,backendName:"webgl",kernelFunc:Vd},Gd="return 1.0 / (1.0 + exp(-1.0 * x));",Hd=Ht({opSnippet:Gd}),qd={kernelName:ea.Sigmoid,backendName:"webgl",kernelFunc:Hd},Kd="\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n",Xd=Ht({opSnippet:Kd}),Yd={kernelName:ea.Sign,backendName:"webgl",kernelFunc:Xd},Zd=Ws+"\n  return sin(x);\n",Qd=Ht({opSnippet:Zd}),Jd={kernelName:ea.Sin,backendName:"webgl",kernelFunc:Qd},eh="\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n",th=Ht({opSnippet:eh}),nh={kernelName:ea.Sinh,backendName:"webgl",kernelFunc:th},rh="\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n",ah=Ht({opSnippet:rh}),sh={kernelName:ea.Softplus,backendName:"webgl",kernelFunc:ah},ih=e=>{const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,paddings:i}=r;ea.util.assert(a.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet");const o=s.reduce((e,t)=>e*t),u=[[0,0]];u.push(...i);for(let e=1+s.length;e<a.shape.length;++e)u.push([0,0]);const c=[],l=Ql({inputs:{x:a},backend:n,attrs:{paddings:u,constantValue:0}}),d=ea.backend_util.getReshaped(l.shape,s,o,!1),h=ea.backend_util.getPermuted(d.length,s.length,!1),p=ea.backend_util.getReshapedPermuted(l.shape,s,o,!1),f=Zt({inputs:{x:l},backend:n,attrs:{shape:d}}),m=an({inputs:{x:f},backend:n,attrs:{perm:h}}),b=Zt({inputs:{x:m},backend:n,attrs:{shape:p}});return c.push(l),c.push(f),c.push(m),c.forEach(e=>n.disposeIntermediateTensorInfo(e)),b},oh={kernelName:ea.SpaceToBatchND,backendName:"webgl",kernelFunc:ih},uh={kernelName:ea.SparseReshape,backendName:"webgl",kernelFunc:Pr},ch={kernelName:ea.SparseToDense,backendName:"webgl",kernelFunc:Br},lh={kernelName:ea.SplitV,backendName:"webgl",kernelFunc:Wr},dh="return sqrt(x);",hh=Ht({opSnippet:dh}),ph={kernelName:ea.Sqrt,backendName:"webgl",kernelFunc:hh},fh="return x * x;",mh=Ht({opSnippet:fh}),bh={kernelName:ea.Square,backendName:"webgl",kernelFunc:mh},gh="return (a - b) * (a - b);",yh=qt({opSnippet:gh,packedOpSnippet:gh}),xh={kernelName:ea.SquaredDifference,backendName:"webgl",kernelFunc:yh},vh={kernelName:ea.Step,backendName:"webgl",kernelFunc:Vr};class wh{constructor(e,t,n){this.variableNames=["x"],this.outputShape=n;const r=n.length,a=gt(n.length),s=gt(n.length);let i="";if(1===r)i="coords * strides + begin";else{let e=0;i=n.map((t,r)=>(e++,1===n.length?`coords * strides[${r}] + begin[${r}]`:`coords[${e-1}] * strides[${r}] + begin[${r}]`)).join(",")}this.userCode=`\n      ${a} begin = ${a}(${e});\n      ${a} strides = ${a}(${t});\n\n      void main() {\n        ${s} coords = getOutputCoords();\n        setOutput(getX(${i}));\n      }\n    `}}const kh={kernelName:ea.StridedSlice,backendName:"webgl",kernelFunc:Ur},Oh="return tan(x);",Ih=Ht({opSnippet:Oh}),Nh={kernelName:ea.Tan,backendName:"webgl",kernelFunc:Ih},jh="\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n",Sh=Ht({opSnippet:jh}),Th={kernelName:ea.Tanh,backendName:"webgl",kernelFunc:Sh};class Ch{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[r]*t[r];this.outputShape=n,this.rank=n.length;const r=gt(this.rank),a=Gr(e);this.userCode=`\n      void main() {\n        ${r} resRC = getOutputCoords();\n        setOutput(getA(${a}));\n      }\n    `}}const Eh={kernelName:ea.Tile,backendName:"webgl",kernelFunc:Hr},$h={kernelName:ea.TopK,backendName:"webgl",kernelFunc:qr};class Ah{constructor(e,t,n,r,a,s){this.variableNames=["Image","Transforms"],this.outputShape=s;const i="nearest"===n?1:2;let o;switch(r){case"constant":o=1;break;case"reflect":o=2;break;case"wrap":o=3;break;case"nearest":o=4;break;default:o=1}this.userCode=`\n            float mapCoord(float outCoord, float len) {\n              float inCoord = outCoord;\n              if(${o} == 2) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    if (inCoord < sz2) {\n                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +\n                      inCoord;\n                    }\n                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    inCoord -= sz2 * float(int(float(inCoord / sz2)));\n                    if (inCoord >= len) {\n                      inCoord = sz2 - inCoord - 1.0;\n                    }\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${o} == 3) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord -= len * float(int(float(inCoord / sz)));\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${o} == 4) {\n                return clamp(outCoord, 0.0, len - 1.0);\n              } else {\n                return outCoord;\n              }\n            }\n\n            float readWithFillValue(int batch, int coordY, int coordX,\n              int channel) {\n              float outputValue;\n              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {\n                  outputValue = getImage(batch, coordY, coordX, channel);\n              } else {\n                outputValue = float(${a});\n              }\n              return outputValue;\n            }\n\n            void main() {\n              ivec4 coords = getOutputCoords();\n              float outputValue;\n              int batch = coords[0];\n              int x = coords[2];\n              int y = coords[1];\n              int channel = coords[3];\n              float xf = float(x);\n              float yf = float(y);\n              float a1 = getTransforms(batch, 0);\n              float a2 = getTransforms(batch, 1);\n              float a3 = getTransforms(batch, 2);\n              float b1 = getTransforms(batch, 3);\n              float b2 = getTransforms(batch, 4);\n              float b3 = getTransforms(batch, 5);\n              float c1 = getTransforms(batch, 6);\n              float c2 = getTransforms(batch, 7);\n              float projection = c1 * xf + c2 * yf + 1.0;\n              if (projection == 0.0) {\n                outputValue = float(${a});\n              } else {\n                float inX = (a1 * xf + a2 * yf + a3) / projection;\n                float inY = (b1 * xf + b2 * yf + b3) / projection;\n                float mapX = mapCoord(inX, float(${t}));\n                float mapY = mapCoord(inY, float(${e}));\n\n                if (${i} == 1) {\n                  int coordY = int(round(mapY));\n                  int coordX = int(round(mapX));\n                  outputValue = readWithFillValue(batch, coordY, coordX,\n                    channel);\n                } else {\n                  float yFloor = floor(mapY);\n                  float xFloor = floor(mapX);\n                  float yCeil = yFloor + 1.0;\n                  float xCeil = xFloor + 1.0;\n                  float valueYFloor = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);\n                  float valueYCeil = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);\n                  outputValue = (yCeil - mapY) * valueYFloor +\n                  (mapY - yFloor) * valueYCeil;\n                }\n              }\n              setOutput(outputValue);\n            }\n        `}}const _h={kernelName:ea.Transform,backendName:"webgl",kernelFunc:Kr},Dh={kernelName:ea.Unique,backendName:"webgl",kernelFunc:Xr},Fh={kernelName:ea.Unpack,backendName:"webgl",kernelFunc:Yr};class Rh{constructor(e,t){this.variableNames=["x","segmentIds"];const n=e.windowSize,r=e.batchSize,a=e.inSize,s=e.numSegments,i=s*Math.ceil(a/n);this.outputShape=[r,i];const o="0.0",u="sumValue",c=4*Math.floor(n/4),l=n%4,d="\n        sumValue += dot(values, segFilter);\n    ";let h="";a%n>0&&(h=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return initializationValue;\n        }\n      `);let p="";a%n>0&&(p=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return -1.0;\n        }\n      `),this.userCode=`\n      const float initializationValue = ${o};\n\n      float getValue(int batch, int inIdx) {\n        ${h}\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ${p}\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ${s})) * float(${n}));\n        int currentSeg = int(mod(float(outIdx), float(${s})));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${c}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ${d}\n        }\n\n        int inIdx = inOffset + ${c};\n        if (${1===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ${d}\n        } else if (${2===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ${d}\n        } else if (${3===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ${d}\n        }\n        setOutput(${u});\n      }\n    `}}const Mh={kernelName:ea.UnsortedSegmentSum,backendName:"webgl",kernelFunc:Zr},zh=[Yc,Jc,ai,ii,ci,hi,mi,yi,xi,vi,Oi,Ii,Si,Ei,Mi,_i,Pi,Ui,Vi,qi,Ki,Xi,Ji,so,io,po,bo,xo,wo,Fs,No,Do,Fo,Co,Mo,zo,Ro,Bo,Uo,qo,Xo,Yo,Qo,au,su,tu,ou,cu,lu,fu,yu,ku,Nu,Tu,Cu,Au,Du,Ru,zu,Bu,Gu,Ku,Yu,Zu,Ju,tc,sc,cc,Ds,lc,Io,pc,bc,xc,zs,Oc,Sc,Tc,Fc,Ac,Lc,Wc,Hc,el,il,sl,cl,ll,dl,al,hl,pl,gl,wl,Nl,Fl,Xs,Ml,Ll,Bl,Vl,co,Hl,Kl,Xl,Jl,rd,Bs,ad,id,lo,El,cd,gd,pd,Ys,vd,kd,Id,jd,Cd,$d,Dd,Md,Ld,Bd,Ud,qd,Yd,Jd,nh,ro,Dl,sh,oh,uh,ch,lh,ph,bh,xh,vh,kh,_l,ti,Nh,Th,Eh,$h,_h,ni,Dh,Fh,Mh,ql];for(const e of zh)Object(ea.registerKernel)(e)},function(e,t,n){"use strict";function r(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{alpha:s}=r;Object(tt.a)([a],"leakyRelu");const i=et.util.sizeFromShape(a.shape),o=n.data.get(a.dataId).values,u=et.util.getTypedArrayFromDType("float32",i);for(let e=0;e<o.length;e++)u[e]=o[e]<0?s*o[e]:o[e];return n.makeTensorInfo(a.shape,"float32",u)}function a(e){const{inputs:t,backend:n}=e,{x:r,alpha:a}=t;Object(tt.a)([r,a],"prelu");const s=n.data.get(r.dataId).values,i=n.data.get(a.dataId).values,[o,u]=ht(r.shape,a.shape,s,i,r.dtype);return n.makeTensorInfo(u,r.dtype,o)}function s(e,t,n,s,i){if("linear"===n)return Object(ct.a)({inputs:{x:t},backend:e});if("relu"===n)return ft({inputs:{x:t},backend:e});if("elu"===n)return ot({inputs:{x:t},backend:e});if("relu6"===n)return bt({inputs:{x:t},backend:e});if("prelu"===n)return a({inputs:{x:t,alpha:s},backend:e});if("leakyrelu"===n)return r({inputs:{x:t},backend:e,attrs:{alpha:i}});if("sigmoid"===n)return yt({inputs:{x:t},backend:e});throw new Error(`Activation ${n} has not been implemented for the CPU backend.`)}function i(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{shape:s}=r,i=et.util.sizeFromShape(a.shape),o=et.util.inferFromImplicitShape(s,i),u=et.util.sizeFromShape(o);et.util.assert(i===u,()=>`The new shape (${o}) has ${u} elements and the old `+`shape (${a.shape}) has ${i} elements. The new shape and old `+"shape must have the same number of elements."),n.incRef(a.dataId);const c=n.data.get(a.dataId);if(null!=c.complexTensorInfos){const e=c.complexTensorInfos.real,t=c.complexTensorInfos.imag;e.shape=o,t.shape=o}return{dataId:a.dataId,shape:o,dtype:a.dtype}}function o(e){const{inputs:t,backend:n,attrs:r}=e,{a:a,b:s}=t,{transposeA:o,transposeB:u}=r;Object(tt.a)([a,s],"matMul");const c=a.shape.length,l=s.shape.length,d=o?a.shape[c-2]:a.shape[c-1],h=u?s.shape[l-1]:s.shape[l-2],p=o?a.shape[c-1]:a.shape[c-2],f=u?s.shape[l-2]:s.shape[l-1],m=a.shape.slice(0,-2),b=s.shape.slice(0,-2),g=et.util.sizeFromShape(m),y=et.util.sizeFromShape(b),x=g===y||1===g||1===y;et.util.assert(c>=2&&l>=2&&x,()=>"Error in matMul: the input batch dimensions must either be the same or at least one input batch dimension must be 1. Got input "+`batch dimensions of (${m}) and (${b}).`);const v=g>y?a.shape.slice(0,-2):s.shape.slice(0,-2),w=v.concat([p,f]);et.util.assert(d===h,()=>`Error in matMul: inner shapes (${d}) and (`+`${h}) of Tensors with shapes ${a.shape} and `+`${s.shape} and transposeA=${o}`+` and transposeB=${u} must match.`);const k=o?[g,d,p]:[g,p,d],O=u?[y,f,h]:[y,h,f],I=i({inputs:{x:a},backend:n,attrs:{shape:k}}),N=i({inputs:{x:s},backend:n,attrs:{shape:O}}),j=o?I.shape[1]:I.shape[2],S=o?I.shape[2]:I.shape[1],T=u?N.shape[1]:N.shape[2],C=Math.max(g,y),E=n.data.get(I.dataId).values,$=n.data.get(N.dataId).values,A=et.util.computeStrides(I.shape),_=et.util.computeStrides(N.shape),[D,F,R]=o?[A[0],1,A[1]]:[A[0],A[1],1],[M,z,L]=u?[1,_[1],_[0]]:[_[1],1,_[0]],P=S*T,B=Object(et.buffer)([C,S,T],I.dtype),W=B.values,V=n.blockSize;for(let e=0;e<C;e++)for(let t=0;t<S;t+=V)for(let n=0;n<T;n+=V)for(let r=0;r<j;r+=V){const a=Math.min(t+V,S),s=Math.min(n+V,T),i=Math.min(r+V,j);for(let o=t;o<a;o++)for(let t=n;t<s;t++){let n=0;for(let a=r;a<i;a++){const r=Math.min(e,g-1)*D,s=Math.min(e,y-1)*L,i=E[r+o*F+a*R],u=$[a*M+t*z+s];n+=i*u}W[e*P+(o*T+t)]+=n}}return n.disposeIntermediateTensorInfo(I),n.disposeIntermediateTensorInfo(N),n.makeTensorInfo(w,B.dtype,B.values)}function u(e){const{inputs:t,backend:n,attrs:r}=e,{a:a,b:i,bias:u,preluActivationWeights:c}=t,{transposeA:l,transposeB:d,activation:h,leakyreluAlpha:p}=r;let f,m,b;const g=[],y=o({inputs:{a:a,b:i},attrs:{transposeA:l,transposeB:d},backend:n});f=y,u&&(m=Object(vt.a)({inputs:{a:f,b:u},backend:n}),g.push(f),f=m),h&&(b=s(n,f,h,c,p),g.push(f),f=b);for(const e of g)n.disposeIntermediateTensorInfo(e);return f}function c(e){const{inputs:t,backend:n}=e,r=t;Object(tt.a)(t,"addN");const a=r.map(e=>n.data.get(e.dataId).values),s=Object(et.buffer)(r[0].shape,r[0].dtype),i=s.values;for(let e=0;e<r.length;e++){const t=a[e];for(let e=0;e<i.length;e++)i[e]+=t[e]}return n.makeTensorInfo(s.shape,s.dtype,s.values)}function l(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:o}=r;Object(tt.a)(a,"all");const u=et.util.parseAxisParam(s,a.shape);let c=u;const l=et.backend_util.getAxesPermutation(c,a.shape.length);let d=a;null!=l&&(d=Object(Et.a)({inputs:{x:a},backend:n,attrs:{perm:l}}),c=et.backend_util.getInnerMostAxes(c.length,a.shape.length)),et.backend_util.assertAxesAreInnerMostDims("all",c,d.shape.length);const[h,p]=et.backend_util.computeOutAndReduceShapes(d.shape,c),f=et.util.sizeFromShape(p),m=et.util.makeZerosTypedArray(et.util.sizeFromShape(h),d.dtype),b=n.data.get(d.dataId).values;for(let e=0;e<m.length;++e){const t=e*f;let n=b[t];for(let e=0;e<f;++e){const r=b[t+e];n=n&&r}m[e]=n}null!=l&&n.disposeIntermediateTensorInfo(d);const g=n.makeTensorInfo(h,d.dtype,m);if(o){const e=et.backend_util.expandShapeToKeepDim(h,u),t=i({inputs:{x:g},backend:n,attrs:{shape:e}});return n.disposeIntermediateTensorInfo(g),t}return g}function d(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:o}=r;Object(tt.a)(a,"any");const u=et.util.parseAxisParam(s,a.shape);let c=u;const l=et.backend_util.getAxesPermutation(c,a.shape.length);let d=a;null!=l&&(d=Object(Et.a)({inputs:{x:a},backend:n,attrs:{perm:l}}),c=et.backend_util.getInnerMostAxes(c.length,a.shape.length)),et.backend_util.assertAxesAreInnerMostDims("any",c,d.shape.length);const[h,p]=et.backend_util.computeOutAndReduceShapes(d.shape,c),f=et.util.sizeFromShape(p),m=et.util.makeZerosTypedArray(et.util.sizeFromShape(h),d.dtype),b=n.data.get(d.dataId).values;for(let e=0;e<m.length;++e){const t=e*f;let n=b[t];for(let e=0;e<f;++e){const r=b[t+e];n=n||r}m[e]=n}null!=l&&n.disposeIntermediateTensorInfo(d);const g=n.makeTensorInfo(h,d.dtype,m);if(o){const e=et.backend_util.expandShapeToKeepDim(h,u),t=i({inputs:{x:g},backend:n,attrs:{shape:e}});return n.disposeIntermediateTensorInfo(g),t}return g}function h(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s}=r;Object(tt.a)(a,"argMax");let i=et.util.parseAxisParam(s,a.shape);const o=et.backend_util.getAxesPermutation(i,a.shape.length);let u=a;const c=[];null!=o&&(u=Object(Et.a)({inputs:{x:a},backend:n,
attrs:{perm:o}}),c.push(u),i=et.backend_util.getInnerMostAxes(i.length,u.shape.length)),i=[i[0]],et.backend_util.assertAxesAreInnerMostDims("argMax",i,u.shape.length);const[l,d]=et.backend_util.computeOutAndReduceShapes(u.shape,i),h=et.util.sizeFromShape(l),p=et.util.makeZerosTypedArray(h,"int32"),f=et.util.sizeFromShape(d),m=n.data.get(u.dataId).values;for(let e=0;e<p.length;++e){const t=e*f;let n=m[t],r=0;for(let e=0;e<f;++e){const a=m[t+e];a>n&&(n=a,r=e)}p[e]=r}return c.forEach(e=>n.disposeIntermediateTensorInfo(e)),n.makeTensorInfo(l,"int32",p)}function p(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s}=r;Object(tt.a)(a,"argMin");let i=et.util.parseAxisParam(s,a.shape);const o=et.backend_util.getAxesPermutation(i,a.shape.length);let u=a;const c=[];null!=o&&(u=Object(Et.a)({inputs:{x:a},backend:n,attrs:{perm:o}}),c.push(u),i=et.backend_util.getInnerMostAxes(i.length,u.shape.length)),i=[i[0]],et.backend_util.assertAxesAreInnerMostDims("argMin",i,u.shape.length);const[l,d]=et.backend_util.computeOutAndReduceShapes(u.shape,i),h=et.util.sizeFromShape(l),p=et.util.makeZerosTypedArray(h,"int32"),f=et.util.sizeFromShape(d),m=n.data.get(u.dataId).values;for(let e=0;e<p.length;++e){const t=e*f;let n=m[t],r=0;for(let e=0;e<f;++e){const a=m[t+e];a<n&&(n=a,r=e)}p[e]=r}return c.forEach(e=>n.disposeIntermediateTensorInfo(e)),n.makeTensorInfo(l,"int32",p)}function f(e,t,n,r,a,s){const i=a.strideHeight,o=a.strideWidth,u=a.dilationHeight,c=a.dilationWidth,l=a.effectiveFilterHeight,d=a.effectiveFilterWidth,h=a.padInfo.top,p=a.padInfo.left,f="max"===s?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,m=Object(et.buffer)(a.outShape,n),b=m.values,g=a.outShape[1]*a.outShape[2]*a.outShape[3],y=a.outShape[2]*a.outShape[3],x=a.outShape[3];for(let t=0;t<a.batchSize;++t){const n=t*g,m=t*r[0];for(let t=0;t<a.inChannels;++t)for(let g=0;g<a.outHeight;++g){const v=g*i-h,w=Math.max(0,v),k=Math.min(a.inHeight,l+v),O=n+g*y;for(let n=0;n<a.outWidth;++n){const i=n*o-p,l=Math.max(0,i),h=Math.min(a.inWidth,d+i);let g=f,y=0,v=0;for(let n=w;n<k;n+=u){const a=m+n*r[1];for(let n=l;n<h;n+=c){const i=a+n*r[2],o=e[i+t];"max"===s&&o>g?g=o:"avg"===s&&(y+=o,v++)}if(isNaN(g))break}const I=O+n*x+t;b[I]="avg"===s?y/v:g}}}return m}function m(e,t,n,r,a=!1,s=!1){const i=Object(et.buffer)(r.outShape,"int32"),o=r.strideHeight,u=r.strideWidth,c=r.dilationHeight,l=r.dilationWidth,d=r.effectiveFilterHeight,h=r.effectiveFilterWidth,p=r.padInfo.top,f=r.padInfo.left,m=Object(et.buffer)(t,n,e);for(let e=0;e<r.batchSize;++e)for(let t=0;t<r.inChannels;++t)for(let n=0;n<r.outHeight;++n){const b=n*o-p;let g=b;for(;g<0;)g+=c;const y=Math.min(r.inHeight,d+b);for(let o=0;o<r.outWidth;++o){const d=o*u-f;let p=d;for(;p<0;)p+=l;const x=Math.min(r.inWidth,h+d);let v=Number.NEGATIVE_INFINITY,w=-1;for(let n=g;n<y;n+=c){const i=n-b;for(let o=p;o<x;o+=l){const u=o-d,c=m.get(e,n,o,t);c>v&&(v=c,w=a?s?((e*r.inHeight+n)*r.inWidth+o)*r.inChannels+t:(n*r.inWidth+o)*r.inChannels+t:i*h+u)}}i.set(w,e,n,o,t)}}return i}function b(e,t,n,r,a,s){const i=a.strideDepth,o=a.strideHeight,u=a.strideWidth,c=a.dilationDepth,l=a.dilationHeight,d=a.dilationWidth,h=a.effectiveFilterDepth,p=a.effectiveFilterHeight,f=a.effectiveFilterWidth,m=a.padInfo.front,b=a.padInfo.top,g=a.padInfo.left,y="max"===s?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,x=Object(et.buffer)(a.outShape,n),v=x.values,w=a.outShape[1]*a.outShape[2]*a.outShape[3]*a.outShape[4],k=a.outShape[2]*a.outShape[3]*a.outShape[4],O=a.outShape[3]*a.outShape[4],I=a.outShape[4];for(let t=0;t<a.batchSize;++t){const n=t*w,x=t*r[0];for(let t=0;t<a.inChannels;++t)for(let w=0;w<a.outDepth;++w){const N=w*i-m;let j=N;for(;j<0;)j+=c;const S=Math.min(a.inDepth,h+N),T=n+w*k;for(let n=0;n<a.outHeight;++n){const i=n*o-b;let h=i;for(;h<0;)h+=l;const m=Math.min(a.inHeight,p+i),w=T+n*O;for(let n=0;n<a.outWidth;++n){const i=n*u-g;let o=i;for(;o<0;)o+=d;const p=Math.min(a.inWidth,f+i),b=w+n*I;let k=y,O=0,N=0;for(let n=j;n<S;n+=c){const a=x+n*r[1];for(let n=h;n<m;n+=l){const i=a+n*r[2];for(let n=o;n<p;n+=d){const a=i+n*r[3],o=e[a+t];if("max"===s&&o>k?k=o:"avg"===s&&(O+=o,N++),isNaN(k))break}if(isNaN(k))break}if(isNaN(k))break}const T=b+t;v[T]="avg"===s?O/N:k}}}}return x}function g(e,t){const n=Object(et.buffer)(t.outShape,"int32"),r=t.strideDepth,a=t.strideHeight,s=t.strideWidth,i=t.dilationDepth,o=t.dilationHeight,u=t.dilationWidth,c=t.effectiveFilterDepth,l=t.effectiveFilterHeight,d=t.effectiveFilterWidth,h=t.padInfo.front,p=t.padInfo.top,f=t.padInfo.left;for(let m=0;m<t.batchSize;++m)for(let b=0;b<t.inChannels;++b)for(let g=0;g<t.outDepth;++g){const y=g*r-h;let x=y;for(;x<0;)x+=i;const v=Math.min(t.inDepth,c+y);for(let r=0;r<t.outHeight;++r){const c=r*a-p;let h=c;for(;h<0;)h+=o;const w=Math.min(t.inHeight,l+c);for(let a=0;a<t.outWidth;++a){const p=a*s-f;let k=p;for(;k<0;)k+=u;const O=Math.min(t.inWidth,d+p);let I=Number.NEGATIVE_INFINITY,N=-1;for(let t=x;t<v;t+=i){const n=t-y;for(let r=h;r<w;r+=o){const a=r-c;for(let s=k;s<O;s+=u){const i=s-p,o=e.get(m,t,r,s,b);o>=I&&(I=o,N=n*l*d+a*l+i)}}}n.set(N,m,g,r,a,b)}}}return n}function y(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t;Object(tt.a)(a,"avgPool");const{filterSize:s,strides:i,pad:o,dimRoundingMode:u}=r,c=1;et.util.assert(et.backend_util.eitherStridesOrDilationsAreOne(i,c),()=>"Error in avgPool: Either strides or dilations must be 1. "+`Got strides ${i} and dilations '${c}'`);const l=et.backend_util.computePool2DInfo(a.shape,s,i,c,o,u);let d;if(1===l.filterWidth&&1===l.filterHeight&&et.util.arraysEqual(l.inShape,l.outShape))d=Object(ct.a)({inputs:{x:a},backend:n});else{const e=n.data.get(a.dataId).values,t=et.util.computeStrides(a.shape),r=f(e,a.shape,a.dtype,t,l,"avg");d=n.makeTensorInfo(l.outShape,a.dtype,r.values)}return d}function x(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:u,dataFormat:c}=r;Object(tt.a)(a,"avgPool3d");const l=et.backend_util.computePool3DInfo(a.shape,s,i,1,o,u,c),d=n.data.get(a.dataId).values,h=b(d,a.shape,a.dtype,et.util.computeStrides(a.shape),l,"avg");return n.makeTensorInfo(h.shape,"float32",h.values)}function v(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,{filterSize:i,strides:o,pad:u,dimRoundingMode:c}=r;Object(tt.a)([a,s],"avgPool3DGrad");const l=et.backend_util.computePool3DInfo(s.shape,i,o,1,u,c),d=l.strideDepth,h=l.strideHeight,p=l.strideWidth,f=l.filterDepth,m=l.filterHeight,b=l.filterWidth,g=l.dilationDepth,y=l.dilationHeight,x=l.dilationWidth,v=l.effectiveFilterDepth,w=l.effectiveFilterHeight,k=l.effectiveFilterWidth,O=v-1-l.padInfo.front,I=k-1-l.padInfo.left,N=w-1-l.padInfo.top,j=Object(et.buffer)(s.shape,"float32"),S=1/(f*m*b),T=n.bufferSync(a);for(let e=0;e<l.batchSize;++e)for(let t=0;t<l.inChannels;++t)for(let n=0;n<l.inDepth;++n)for(let r=0;r<l.inHeight;++r)for(let a=0;a<l.inWidth;++a){const s=n-O,i=r-N,o=a-I;let u=0;for(let n=0;n<v;n+=g){const r=(s+n)/d;if(!(r<0||r>=l.outDepth||Math.floor(r)!==r))for(let n=0;n<w;n+=y){const a=(i+n)/h;if(!(a<0||a>=l.outHeight||Math.floor(a)!==a))for(let n=0;n<k;n+=x){const s=(o+n)/p;if(s<0||s>=l.outWidth||Math.floor(s)!==s)continue;const i=T.get(e,r,a,s,t);u+=i}}}j.set(u*S,e,n,r,a,t)}return n.makeTensorInfo(j.shape,j.dtype,j.values)}function w(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,i=s;Object(tt.a)([a,s],"avgPoolGrad");const{filterSize:o,strides:u,pad:c}=r,l=et.backend_util.computePool2DInfo(i.shape,o,u,1,c),d=l.strideHeight,h=l.strideWidth,p=l.filterHeight,f=l.filterWidth,m=l.dilationHeight,b=l.dilationWidth,g=l.effectiveFilterHeight,y=l.effectiveFilterWidth,x=y-1-l.padInfo.left,v=g-1-l.padInfo.top,w=Object(et.buffer)(i.shape,"float32"),k=1/(p*f),O=n.data.get(a.dataId).values,I=Object(et.buffer)(a.shape,"float32",O);for(let e=0;e<l.batchSize;++e)for(let t=0;t<l.inChannels;++t)for(let n=0;n<l.inHeight;++n)for(let r=0;r<l.inWidth;++r){const a=n-v,s=r-x;let i=0;for(let n=0;n<g;n+=m){const r=(a+n)/d;if(!(r<0||r>=l.outHeight||Math.floor(r)!==r))for(let n=0;n<y;n+=b){const a=(s+n)/h;if(a<0||a>=l.outWidth||Math.floor(a)!==a)continue;const o=I.get(e,r,a,t);i+=o}}w.set(i*k,e,n,r,t)}return n.makeTensorInfo(w.shape,w.dtype,w.values)}function k(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,scale:s,offset:i,mean:o,variance:u}=t;et.util.assert(o.shape.length===u.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),et.util.assert(null==i||o.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),et.util.assert(null==s||o.shape.length===s.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks."),Object(tt.a)([a,o,u,s,i],"batchNorm");let{varianceEpsilon:c}=r;null==c&&(c=.001);const l=n.data.get(a.dataId).values,d=n.data.get(o.dataId).values,h=n.data.get(u.dataId).values,p=s?n.data.get(s.dataId).values:new Float32Array([1]),f=i?n.data.get(i.dataId).values:new Float32Array([0]),m=new Float32Array(l.length),b=f.length,g=p.length,y=h.length,x=d.length;let v=0,w=0,k=0,O=0;for(let e=0;e<l.length;++e)m[e]=f[v++]+(l[e]-d[w++])*p[k++]/Math.sqrt(h[O++]+c),v>=b&&(v=0),w>=x&&(w=0),k>=g&&(k=0),O>=y&&(O=0);return n.makeTensorInfo(a.shape,a.dtype,m)}function O(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,crops:o}=r;Object(tt.a)([a],"batchToSpaceND");const u=s.reduce((e,t)=>e*t),c=et.backend_util.getReshaped(a.shape,s,u),l=et.backend_util.getPermuted(c.length,s.length),d=et.backend_util.getReshapedPermuted(a.shape,s,u),h=et.backend_util.getSliceBeginCoords(o,s.length),p=et.backend_util.getSliceSize(d,o,s.length),f=i({inputs:{x:a},backend:n,attrs:{shape:c}}),m=Object(Et.a)({inputs:{x:f},backend:n,attrs:{perm:l}}),b=i({inputs:{x:m},backend:n,attrs:{shape:d}}),g=Object(Qt.a)({inputs:{x:b},backend:n,attrs:{begin:h,size:p}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(b),g}function I(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:i}=r,o=n.data.get(a.dataId).values,u=n.data.get(s.dataId).values,c=Object(en.a)(o,u,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,c)}function N(e){const{inputs:t,backend:n}=e,{input:r}=t,a=n.data.get(r.dataId).complexTensorInfos.imag,s=n.data.get(a.dataId).values;return n.makeTensorInfo(a.shape,a.dtype,s)}function j(e){const{inputs:t,backend:n,attrs:r}=e,{axis:a}=r,s=et.util.parseAxisParam(a,t[0].shape)[0];let o=et.backend_util.computeOutShape(t.map(e=>e.shape),s);if(0===et.util.sizeFromShape(o))return n.makeTensorInfo(o,t[0].dtype,[]);const u=t.filter(e=>et.util.sizeFromShape(e.shape)>0);if(1===u.length)return Object(ct.a)({inputs:{x:u[0]},backend:n});const c=u.map(e=>e.shape);if(et.backend_util.assertParamsConsistent(c,s),"complex64"===u[0].dtype){const e=u.map(e=>Object(hn.a)({inputs:{input:e},backend:n})),t=u.map(e=>N({inputs:{input:e},backend:n})),r=j({inputs:e,backend:n,attrs:{axis:s}}),a=j({inputs:t,backend:n,attrs:{axis:s}}),i=Object(on.a)({inputs:{real:r,imag:a},backend:n});return e.forEach(e=>n.disposeIntermediateTensorInfo(e)),t.forEach(e=>n.disposeIntermediateTensorInfo(e)),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a),i}const l=u.map(e=>{const t=et.util.sizeFromShape(e.shape.slice(s)),r=[-1,t];return i({inputs:{x:e},backend:n,attrs:{shape:r}})}),d=l.map(e=>({vals:n.data.get(e.dataId).values,shape:e.shape}));o=et.backend_util.computeOutShape(l.map(e=>e.shape),1);const h=1===l[0].shape[0],p=Object(ln.a)(d,o,t[0].dtype,h),f=et.backend_util.computeOutShape(u.map(e=>e.shape),s),m=n.makeTensorInfo(f,t[0].dtype,p);return l.forEach(e=>n.disposeIntermediateTensorInfo(e)),m}function S(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dataFormat:u,dilations:c,dimRoundingMode:l}=r;Object(tt.a)([a,s],"conv2d");const d=et.backend_util.convertConv2DDataFormat(u),h=et.backend_util.computeConv2DInfo(a.shape,s.shape,i,c,o,l,!1,d),p=h.filterHeight,f=h.filterWidth,m=h.dilationHeight,b=h.dilationWidth,g=h.padInfo.left,y=h.padInfo.top,x="channelsLast"===h.dataFormat,v=new et.TensorBuffer(h.outShape,a.dtype),w=et.util.computeStrides(a.shape),k=et.util.computeStrides(s.shape),O=w[0],I=x?w[1]:w[2],N=x?w[2]:1,j=x?1:w[1],S=v.strides[0],T=x?v.strides[1]:v.strides[2],C=x?v.strides[2]:1,E=x?1:v.strides[1],$=n.data.get(a.dataId).values,A=n.data.get(s.dataId).values,_=v.values;for(let e=0;e<h.batchSize;++e){const t=e*O,n=e*S;for(let e=0;e<h.outHeight;++e){const r=n+e*T,a=e*h.strideHeight-y;for(let e=0;e<p;++e){const n=a+e*m;if(n<0||n>=h.inHeight)continue;const s=e*k[0],i=t+n*I;for(let e=0;e<h.outWidth;++e){const t=r+e*C,n=e*h.strideWidth-g;for(let e=0;e<f;++e){const r=n+e*b;if(r<0||r>=h.inWidth)continue;const a=s+e*k[1],o=i+r*N;let u=a;for(let e=0;e<h.inChannels;++e){const n=$[o+e*j];for(let e=0;e<h.outChannels;++e)_[t+e*E]+=n*A[u+e];u+=h.outChannels}}}}}}return n.makeTensorInfo(v.shape,v.dtype,_)}function T(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,pad:o,dataFormat:u,dimRoundingMode:c,filterShape:l}=r;Object(tt.a)([a,s],"conv2dBackpropFilter");const d=et.backend_util.convertConv2DDataFormat(u),h=et.backend_util.computeConv2DInfo(a.shape,l,i,1,o,c,!1,d),{strideHeight:p,strideWidth:f,filterHeight:m,filterWidth:b}=h,g="channelsLast"===h.dataFormat,y=new et.TensorBuffer(h.filterShape,"float32"),x=h.padInfo.left,v=h.padInfo.top,w=n.data.get(a.dataId).values,k=n.data.get(s.dataId).values,O=new et.TensorBuffer(a.shape,a.dtype,w),I=new et.TensorBuffer(s.shape,s.dtype,k);for(let e=0;e<m;++e){const t=Math.max(0,Math.ceil((v-e)/p)),n=Math.min(h.outHeight,(h.inHeight+v-e)/p);for(let r=0;r<b;++r){const a=Math.max(0,Math.ceil((x-r)/f)),s=Math.min(h.outWidth,(h.inWidth+x-r)/f);for(let i=0;i<h.inChannels;++i)for(let o=0;o<h.outChannels;++o){let u=0;for(let c=0;c<h.batchSize;++c)for(let l=t;l<n;++l){const t=e+l*p-v;for(let e=a;e<s;++e){const n=r+e*f-x;u+=g?O.get(c,t,n,i)*I.get(c,l,e,o):O.get(c,i,t,n)*I.get(c,o,l,e)}}y.set(u,e,r,i,o)}}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}function C(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{inputShape:i,strides:o,pad:u,dataFormat:c,dimRoundingMode:l}=r;Object(tt.a)([a,s],"conv2dBackpropInput");const d=et.util.computeStrides(s.shape),h=et.util.computeStrides(a.shape);let p=et.backend_util.convertConv2DDataFormat(c);const f=et.backend_util.computeConv2DInfo(i,s.shape,o,1,u,l,!1,p),m=new et.TensorBuffer(f.inShape,"float32"),b=m.values,g=n.data.get(a.dataId).values,y=n.data.get(s.dataId).values,[x,v,w]=d,{batchSize:k,filterHeight:O,filterWidth:I,inChannels:N,inHeight:j,inWidth:S,outChannels:T,outHeight:C,outWidth:E,strideHeight:$,strideWidth:A}=f;p=f.dataFormat;const _=O-1-f.padInfo.top,D=I-1-f.padInfo.left,F="channelsLast"===p,R=m.strides[0],M=F?m.strides[1]:m.strides[2],z=F?m.strides[2]:1,L=F?1:m.strides[1],P=h[0],B=F?h[1]:h[2],W=F?h[2]:1,V=F?1:h[1];for(let e=0;e<k;++e)for(let t=0;t<N;++t)for(let n=0;n<j;++n){const r=n-_,a=Math.max(0,Math.ceil(r/$)),s=Math.min(C,(O+r)/$);for(let i=0;i<S;++i){const o=i-D,u=Math.max(0,Math.ceil(o/A)),c=Math.min(E,(I+o)/A);let l=0;for(let n=a;n<s;++n){const a=n*$-r;for(let r=u;r<c;++r){const s=r*A-o,i=P*e+B*n+W*r,u=x*(O-1-a)+v*(I-1-s)+w*t;for(let e=0;e<T;++e){const t=g[i+V*e],n=y[u+e];l+=t*n}}}const d=R*e+M*n+z*i+L*t;b[d]=l}}return n.makeTensorInfo(m.shape,m.dtype,m.values)}function E(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:u}=r;Object(tt.a)([a,s],"conv3d");const c=et.backend_util.computeConv3DInfo(a.shape,s.shape,i,u,o),{filterDepth:l,filterHeight:d,filterWidth:h,dilationDepth:p,dilationHeight:f,dilationWidth:m,padInfo:b}=c,g=b.front,y=b.left,x=b.top,v=new et.TensorBuffer(c.outShape,a.dtype),w=n.data.get(a.dataId).values,k=n.data.get(s.dataId).values,O=v.values,I=et.util.computeStrides(a.shape),N=et.util.computeStrides(s.shape);for(let e=0;e<c.batchSize;++e){const t=e*I[0],n=e*v.strides[0];for(let e=0;e<c.outDepth;++e){const r=n+e*v.strides[1],a=e*c.strideDepth-g;for(let e=0;e<l;++e){const n=a+e*p;if(n<0||n>=c.inDepth)continue;const s=e*N[0],i=t+n*I[1];for(let e=0;e<c.outHeight;++e){const t=r+e*v.strides[2],n=e*c.strideHeight-x;for(let e=0;e<d;++e){const r=n+e*f;if(r<0||r>=c.inHeight)continue;const a=s+e*N[1],o=i+r*I[2];for(let e=0;e<c.outWidth;++e){const n=t+e*c.outChannels,r=e*c.strideWidth-y;for(let e=0;e<h;++e){const t=r+e*m;if(t<0||t>=c.inWidth)continue;const s=a+e*N[2],i=o+t*c.inChannels;let u=s;for(let e=0;e<c.inChannels;++e){const t=w[i+e];for(let e=0;e<c.outChannels;++e)O[n+e]+=t*k[u+e];u+=c.outChannels}}}}}}}}return n.makeTensorInfo(v.shape,v.dtype,v.values)}function $(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,pad:o,filterShape:u}=r;Object(tt.a)([a,s],"conv3dBackpropFilterV2");const c=et.util.computeStrides(a.shape),l=et.util.computeStrides(s.shape),d=et.backend_util.computeConv3DInfo(a.shape,u,i,1,o),h=d.strideDepth,p=d.strideHeight,f=d.strideWidth,m=d.filterDepth,b=d.filterHeight,g=d.filterWidth,y=new et.TensorBuffer(d.filterShape,"float32"),x=y.values,[v,w,k,O]=y.strides,I=n.data.get(s.dataId).values,[N,j,S,T]=l,C=n.data.get(a.dataId).values,[E,$,A,_]=c,D=d.padInfo.front,F=d.padInfo.left,R=d.padInfo.top;for(let e=0;e<m;++e){const t=Math.max(0,Math.ceil((D-e)/h)),n=Math.min(d.outDepth,(d.inDepth+D-e)/h),r=e*v;for(let a=0;a<b;++a){const s=Math.max(0,Math.ceil((R-a)/p)),i=Math.min(d.outHeight,(d.inHeight+R-a)/p),o=a*w+r;for(let r=0;r<g;++r){const u=Math.max(0,Math.ceil((F-r)/f)),c=Math.min(d.outWidth,(d.inWidth+F-r)/f),l=r*k+o;for(let o=0;o<d.inChannels;++o){const m=o*O+l;for(let l=0;l<d.outChannels;++l){let b=0;for(let m=0;m<d.batchSize;++m){const d=m*E,g=m*N;for(let m=t;m<n;++m){const t=e+m*h-D,n=t*$+d,y=m*j+g;for(let e=s;e<i;++e){const t=a+e*p-R,s=t*A+n,i=e*S+y;for(let e=u;e<c;++e){const t=r+e*f-F,n=t*_+s,a=e*T+i;b+=C[n+o]*I[a+l]}}}}x[m+l]=b}}}}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}function A(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{pad:i,strides:o,inputShape:u}=r;Object(tt.a)([a],"conv3dBackpropInputV2");const c=et.util.computeStrides(a.shape),l=et.util.computeStrides(s.shape),d=et.backend_util.computeConv3DInfo(u,s.shape,o,1,i),h=new et.TensorBuffer(d.inShape,"float32"),p=h.values,[f,m,b,g]=h.strides,y=n.data.get(a.dataId).values,[x,v,w,k]=c,O=n.data.get(s.dataId).values,[I,N,j,S]=l,{batchSize:T,filterDepth:C,filterHeight:E,filterWidth:$,inChannels:A,inDepth:_,inHeight:D,inWidth:F,outChannels:R,outDepth:M,outHeight:z,outWidth:L,strideDepth:P,strideHeight:B,strideWidth:W}=d,V=C-1-d.padInfo.front,U=E-1-d.padInfo.top,G=$-1-d.padInfo.left;for(let e=0;e<T;++e)for(let t=0;t<A;++t)for(let n=0;n<_;++n){const r=n-V,a=Math.max(0,Math.ceil(r/P)),s=Math.min(M,(C+r)/P);for(let i=0;i<D;++i){const o=i-U,u=Math.max(0,Math.ceil(o/B)),c=Math.min(z,(E+o)/B);for(let l=0;l<F;++l){const d=l-G,h=Math.max(0,Math.ceil(d/W)),T=Math.min(L,($+d)/W);let A=0;for(let n=a;n<s;++n){const a=n*P-r;for(let r=u;r<c;++r){const s=r*B-o;for(let i=h;i<T;++i){const o=i*W-d,u=x*e+v*n+w*r+k*i,c=I*(C-1-a)+N*(E-1-s)+j*($-1-o)+S*t;for(let e=0;e<R;++e){const t=y[u+e],n=O[c+e];A+=t*n}}}}p[f*e+m*n+b*i+g*l+t]=A}}}return n.makeTensorInfo(h.shape,h.dtype,h.values)}function _(e){const{inputs:t,backend:n,attrs:r}=e,{image:a,boxes:s,boxInd:i}=t,{cropSize:o,method:u,extrapolationValue:c}=r,[l,d,h,p]=a.shape,f=s.shape[0],[m,b]=o,g=Object(et.buffer)([f,m,b,p],"float32"),y=n.data.get(s.dataId).values,x=n.data.get(i.dataId).values,v=n.data.get(a.dataId).values,w=et.util.computeStrides(a.shape),k=et.util.computeStrides(g.shape);for(let e=0;e<f;e++){const t=4*e,n=y[t],r=y[t+1],a=y[t+2],s=y[t+3],i=x[e];if(i>=l)continue;const o=m>1?(a-n)*(d-1)/(m-1):0,f=b>1?(s-r)*(h-1)/(b-1):0;for(let t=0;t<m;t++){const l=m>1?n*(d-1)+t*o:.5*(n+a)*(d-1);if(l<0||l>d-1)for(let n=0;n<b;n++)for(let r=0;r<p;r++){const a=r+n*k[2]+t*k[1]+e*k[0];g.values[a]=c}else if("bilinear"===u){const n=Math.floor(l),a=Math.ceil(l),o=l-n;for(let u=0;u<b;u++){const l=b>1?r*(h-1)+u*f:.5*(r+s)*(h-1);if(l<0||l>h-1){for(let n=0;n<p;n++){const r=n+u*k[2]+t*k[1]+e*k[0];g.values[r]=c}continue}const d=Math.floor(l),m=Math.ceil(l),y=l-d;for(let r=0;r<p;r++){let s=r+d*w[2]+n*w[1]+i*w[0];const c=v[s];s=r+m*w[2]+n*w[1]+i*w[0];const l=v[s];s=r+d*w[2]+a*w[1]+i*w[0];const h=v[s];s=r+m*w[2]+a*w[1]+i*w[0];const p=v[s],f=c+(l-c)*y,b=h+(p-h)*y;s=r+u*k[2]+t*k[1]+e*k[0],g.values[s]=f+(b-f)*o}}}else for(let n=0;n<b;++n){const a=b>1?r*(h-1)+n*f:.5*(r+s)*(h-1);if(a<0||a>h-1){for(let r=0;r<p;r++){const a=r+n*k[2]+t*k[1]+e*k[0];g.values[a]=c}continue}const o=Math.round(a),u=Math.round(l);for(let r=0;r<p;r++){const a=r+o*w[2]+u*w[1]+i*w[0],s=r+n*k[2]+t*k[1]+e*k[0];g.values[s]=v[a]}}}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}function D(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,exclusive:i,reverse:o}=r;Object(tt.a)(a,"cumsum");const u=et.backend_util.getAxesPermutation([s],a.shape.length);let c=a;null!=u&&(c=Object(Et.a)({inputs:{x:a},backend:n,attrs:{perm:u}}));const l=et.backend_util.getInnerMostAxes(1,a.shape.length)[0];if(l!==c.shape.length-1)throw new Error("backend.cumsum in CPU expects an inner-most "+`axis=${c.shape.length-1} but got axis=${l}`);const d=Object(et.upcastType)(c.dtype,"int32"),h=et.util.makeZerosTypedArray(et.util.sizeFromShape(c.shape),d),p=n.data.get(c.dataId).values,f=c.shape[c.shape.length-1],m=o?(e,t)=>e+f-t-1:(e,t)=>e+t;for(let e=0;e<p.length;e+=f)for(let t=0;t<f;t++){const n=m(e,t);if(0===t)h[n]=i?0:p[n];else{const r=m(e,t-1);h[n]=i?p[r]+h[r]:p[n]+h[r]}}const b=n.makeTensorInfo(c.shape,d,h);if(null!=u){const e=et.backend_util.getUndoAxesPermutation(u),t=Object(Et.a)({inputs:{x:b},backend:n,attrs:{perm:e}});return n.disposeIntermediateTensorInfo(b),n.disposeIntermediateTensorInfo(c),t}return b}function F(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:i,binaryOutput:o}=r;if(1===a.shape.length){const e=n.data.get(a.dataId).values,t=n.data.get(s.dataId).values,r=Object(en.a)(e,t,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,r)}if(2===a.shape.length){const e=n.bufferSync(a),t=n.bufferSync(s),r=Object(en.b)(e,t,i,o);return n.makeTensorInfo(r.shape,s.dtype,r.values)}throw new Error("Error in denseBincount: input must be at most rank 2, but got rank"+`${a.shape.length}.`)}function R(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockSize:s,dataFormat:i}=r;et.util.assert("NHWC"===i,()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${i}`),et.util.assert(s>1,()=>`blockSize should be > 1 for depthToSpace, but was: ${s}`);const o=a.shape[0],u=a.shape[1],c=a.shape[2],l=a.shape[3],d=u*s,h=c*s,p=l/(s*s),f=n.data.get(a.dataId).values,m=new Float32Array(o*d*h*p);let b=0;for(let e=0;e<o;++e)for(let t=0;t<d;++t){const n=Math.floor(t/s),r=t%s;for(let t=0;t<h;++t){const a=Math.floor(t/s),i=t%s,o=(r*s+i)*p;for(let t=0;t<p;++t){const r=t+o,s=r+l*(a+c*(n+u*e));m[b++]=f[s]}}}return n.makeTensorInfo([o,d,h,p],a.dtype,m)}function M(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:u,dimRoundingMode:c}=r;Object(tt.a)([a,s],"depthwiseConv2DNative");const l=et.util.computeStrides(a.shape),d=et.util.computeStrides(s.shape);let h=u;null==h&&(h=[1,1]),et.util.assert(et.backend_util.eitherStridesOrDilationsAreOne(i,h),()=>"Error in depthwiseConv2d: Either strides or dilations must be "+`1. Got strides ${i} and dilations '${h}'`);const p=et.backend_util.computeConv2DInfo(a.shape,s.shape,i,h,o,c,!0),{filterHeight:f,filterWidth:m,dilationHeight:b,dilationWidth:g,padInfo:y}=p,x=y.left,v=y.top,w=p.outChannels/p.inChannels,k=new et.TensorBuffer(p.outShape,a.dtype),O=n.data.get(a.dataId).values,I=n.data.get(s.dataId).values,N=k.values;for(let e=0;e<p.batchSize;++e){const t=e*l[0],n=e*k.strides[0];for(let e=0;e<p.outHeight;++e){const r=n+e*k.strides[1],a=e*p.strideHeight-v;for(let e=0;e<f;++e){const n=a+e*b;if(n<0||n>=p.inHeight)continue;const s=e*d[0],i=t+n*l[1];for(let e=0;e<p.outWidth;++e){const t=r+e*k.strides[2],n=e*p.strideWidth-x;for(let e=0;e<m;++e){const r=n+e*g;if(r<0||r>=p.inWidth)continue;const a=s+e*d[1],o=i+r*p.inChannels;let u=t,c=a;for(let e=0;e<p.inChannels;++e){const t=O[o+e];for(let e=0;e<w;++e)N[u+e]+=t*I[c+e];u+=w,c+=w}}}}}}return n.makeTensorInfo(k.shape,k.dtype,k.values)}function z(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,dilations:o,pad:u,dimRoundingMode:c,filterShape:l}=r;Object(tt.a)([a,s],"depthwiseConv2dNativeBackpropFilter");const d=et.backend_util.computeConv2DInfo(a.shape,l,i,o,u,c,!0),{strideHeight:h,strideWidth:p,filterHeight:f,filterWidth:m}=d,b=new et.TensorBuffer(d.filterShape,"float32"),g=d.padInfo.left,y=d.padInfo.top,x=d.outChannels/d.inChannels,v=n.data.get(a.dataId).values,w=new et.TensorBuffer(a.shape,a.dtype,v),k=n.data.get(s.dataId).values,O=new et.TensorBuffer(s.shape,s.dtype,k);for(let e=0;e<f;++e){const t=Math.max(0,Math.ceil((y-e)/h)),n=Math.min(d.outHeight,(d.inHeight+y-e)/h);for(let r=0;r<m;++r){const a=Math.max(0,Math.ceil((g-r)/p)),s=Math.min(d.outWidth,(d.inWidth+g-r)/p);for(let i=0;i<d.outChannels;++i){const o=Math.trunc(i/x),u=i%x;let c=0;for(let u=0;u<d.batchSize;++u)for(let l=t;l<n;++l){const t=e+l*h-y;for(let e=a;e<s;++e){const n=r+e*p-g;c+=w.get(u,t,n,o)*O.get(u,l,e,i)}}b.set(c,e,r,o,u)}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}function L(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{strides:i,dilations:o,pad:u,dimRoundingMode:c,inputShape:l}=r;Object(tt.a)([a,s],"depthwiseConv2DNativeBackpropInput");const d=et.util.computeStrides(a.shape),h=et.util.computeStrides(s.shape),p=et.backend_util.computeConv2DInfo(l,s.shape,i,o,u,c,!0),f=new et.TensorBuffer(p.inShape,"float32"),m=f.values,[b,g,y]=f.strides,x=n.data.get(a.dataId).values,[v,w,k]=d,O=n.data.get(s.dataId).values,[I,N,j]=h,{batchSize:S,filterHeight:T,filterWidth:C,inChannels:E,inHeight:$,inWidth:A,outChannels:_,outHeight:D,outWidth:F,strideHeight:R,strideWidth:M}=p,z=T-1-p.padInfo.top,L=C-1-p.padInfo.left,P=_/E;for(let e=0;e<S;++e)for(let t=0;t<E;++t)for(let n=0;n<$;++n){const r=n-z,a=Math.max(0,Math.ceil(r/R)),s=Math.min(D,(T+r)/R);for(let i=0;i<A;++i){const o=i-L,u=Math.max(0,Math.ceil(o/M)),c=Math.min(F,(C+o)/M);let l=0;for(let n=a;n<s;++n){const a=n*R-r;for(let r=u;r<c;++r){const s=r*M-o,i=v*e+w*n+k*r,u=I*(T-1-a)+N*(C-1-s)+j*t;for(let e=0;e<P;++e){const n=t*P+e,r=x[i+n],a=O[u+e];l+=r*a}}}m[b*e+g*n+y*i+t]=l}}return n.makeTensorInfo(f.shape,f.dtype,f.values)}function P(e){const{inputs:t,backend:n}=e,{x:r}=t,a=et.util.sizeFromShape(r.shape),s=n.data.get(r.dataId).values,i=Object(et.buffer)([a,a],r.dtype),o=i.values;for(let e=0;e<s.length;e++)o[e*a+e]=s[e];const u=[...r.shape,...r.shape];return n.makeTensorInfo(u,i.dtype,i.values)}function B(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:o}=r;let u;Object(tt.a)(a,"sum"),u="bool"===a.dtype?Object(nn.a)({inputs:{x:a},backend:n,attrs:{dtype:"int32"}}):Object(ct.a)({inputs:{x:a},backend:n});const c=u.shape.length,l=et.util.parseAxisParam(s,u.shape),d=et.backend_util.getAxesPermutation(l,c);let h=l,p=u;null!=d&&(p=Object(Et.a)({inputs:{x:u},backend:n,attrs:{perm:d}}),h=et.backend_util.getInnerMostAxes(h.length,c)),et.backend_util.assertAxesAreInnerMostDims("sum",h,p.shape.length);const[f,m]=et.backend_util.computeOutAndReduceShapes(p.shape,h),b=et.backend_util.upcastType(p.dtype,"int32");let g=Object(Rn.a)(n,f,b);const y=et.util.sizeFromShape(m),x=n.data.get(g.dataId).values,v=n.data.get(p.dataId).values;for(let e=0;e<x.length;++e){const t=e*y;let n=0;for(let e=0;e<y;++e)n+=v[t+e];x[e]=n}if(o){const e=et.backend_util.expandShapeToKeepDim(g.shape,l),t=g;g=i({inputs:{x:g},backend:n,attrs:{shape:e}}),n.disposeIntermediateTensorInfo(t)}return n.disposeIntermediateTensorInfo(u),null!=d&&n.disposeIntermediateTensorInfo(p),g}function W(e){const{inputs:t,backend:n,attrs:r}=e,{equation:a}=r,s=t,{allDims:o,summedDims:u,idDims:c}=et.backend_util.decodeEinsumEquation(a,s.length);et.backend_util.checkEinsumDimSizes(o.length,c,s);const{path:l,steps:d}=et.backend_util.getEinsumComputePath(u,c),h=d.length;let p=null,f=o.length;const m=[];for(let e=0;e<h;++e){for(const t of d[e]){const{permutationIndices:e,expandDims:r}=et.backend_util.getEinsumPermutation(f,c[t]);let a;et.backend_util.isIdentityPermutation(e)?a=s[t]:(a=Object(Et.a)({inputs:{x:s[t]},backend:n,attrs:{perm:e}}),m.push(a));const o=a.shape.slice();for(let e=0;e<r.length;++e)o.splice(r[e],0,1);et.util.arraysEqual(a.shape,o)||(a=i({inputs:{x:a},backend:n,attrs:{shape:o}}),m.push(a)),null===p?p=a:(p=Object(Fn.a)({inputs:{a:a,b:p},backend:n}),m.push(p))}e<h-1&&(l[e]>=0&&(p=B({inputs:{x:p},backend:n,attrs:{axis:l[e]-(o.length-f),keepDims:!1}}),m.push(p)),f--)}for(const e of m)e!==p&&n.disposeIntermediateTensorInfo(e);return p}function V(e){const{inputs:t,backend:n}=e,{dy:r,y:a}=t;Object(tt.a)([r,a],"eluGrad");const s=new Float32Array(et.util.sizeFromShape(a.shape)),i=n.data.get(a.dataId).values,o=n.data.get(r.dataId).values;for(let e=0;e<i.length;++e){const t=i[e];s[e]=t>=1?o[e]:o[e]*(t+1)}return n.makeTensorInfo(a.shape,"float32",s)}function U(e){const{inputs:t,backend:n,attrs:r}=e,{input:a}=t,{dim:s}=r,o=a.shape.length,u=a.shape.slice();let c=s;return s<0&&(et.util.assert(-(o+1)<=s,()=>`Axis must be in the interval [${-(o+1)}, ${o}]`),c=o+s+1),u.splice(c,0,1),i({inputs:{x:a},backend:n,attrs:{shape:u}})}function G(e,t,n){const r=e.shape,a=r[0],s=r[1],i=n.data.get(e.dataId),o=i.complexTensorInfos.real,u=i.complexTensorInfos.imag,c=[a,s],l=et.util.sizeFromShape(c),d=et.util.getTypedArrayFromDType("float32",l),h=et.util.getTypedArrayFromDType("float32",l);for(let e=0;e<a;e++){const r=Object(Qt.a)({inputs:{x:o},backend:n,attrs:{begin:[e,0],size:[1,s]}}),a=Object(Qt.a)({inputs:{x:u},backend:n,attrs:{begin:[e,0],size:[1,s]}}),i=Object(on.a)({inputs:{real:r,imag:a},backend:n}),{real:c,imag:l}=H(i,t,n),p=et.backend_util.mergeRealAndImagArrays(c,l);for(let t=0;t<s;t++){const n=et.backend_util.getComplexWithIndex(p,t);d[e*s+t]=n.real,h[e*s+t]=n.imag}n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(i)}const p=n.makeTensorInfo(c,"float32",d),f=n.makeTensorInfo(c,"float32",h),m=Object(on.a)({inputs:{real:p,imag:f},backend:n});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),m}function H(e,t,n){const r=et.util.sizeFromShape(e.shape),a=n.data.get(e.dataId),s=n.data.get(a.complexTensorInfos.real.dataId).values,i=n.data.get(a.complexTensorInfos.imag.dataId).values;if(q(r)){const a=K(s,i,r,t,n),o=[e.shape[0],e.shape[1]];if(t){const e=n.makeTensorInfo(o,"float32",a.real),t=n.makeTensorInfo(o,"float32",a.imag),s=n.makeTensorInfo([],"float32",et.util.createScalarValue(r,"float32")),i=Object(ct.a)({inputs:{x:s},backend:n}),u=nr.kernelFunc({inputs:{a:e,b:s},backend:n}),c=nr.kernelFunc({inputs:{a:t,b:i},backend:n}),l=n.data.get(u.dataId).values,d=n.data.get(c.dataId).values;return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(c),{real:l,imag:d}}return a}{const e=et.backend_util.mergeRealAndImagArrays(s,i),n=X(e,r,t);return et.backend_util.splitRealAndImagArrays(n)}}function q(e){return 0==(e&e-1)}function K(e,t,n,r,a){if(1===n)return{real:e,imag:t};const s=et.backend_util.mergeRealAndImagArrays(e,t),i=n/2,o=et.backend_util.complexWithEvenIndex(s),u=o.real,c=o.imag,l=[u.length],d=a.makeTensorInfo(l,"float32",u),h=a.makeTensorInfo(l,"float32",c),p=Object(on.a)({inputs:{real:d,imag:h},backend:a}),f=et.backend_util.complexWithOddIndex(s),m=f.real,b=f.imag,g=[m.length],y=a.makeTensorInfo(g,"float32",m),x=a.makeTensorInfo(g,"float32",b),v=Object(on.a)({inputs:{real:y,imag:x},backend:a}),w=K(u,c,i,r,a),k=w.real,O=w.imag,I=[k.length],S=a.makeTensorInfo(I,"float32",k),T=a.makeTensorInfo(I,"float32",O),C=Object(on.a)({inputs:{real:S,imag:T},backend:a}),E=K(m,b,i,r,a),$=E.real,A=E.imag,_=[$.length],D=a.makeTensorInfo(_,"float32",$),F=a.makeTensorInfo(_,"float32",A),R=Object(on.a)({inputs:{real:D,imag:F},backend:a
}),M=et.backend_util.exponents(n,r),z=[M.real.length],L=a.makeTensorInfo(z,"float32",M.real),P=a.makeTensorInfo(z,"float32",M.imag),B=Object(on.a)({inputs:{real:L,imag:P},backend:a}),W=Object(Fn.a)({inputs:{a:B,b:R},backend:a}),V=Object(vt.a)({inputs:{a:C,b:W},backend:a}),U=Object(rr.a)({inputs:{a:C,b:W},backend:a}),G=Object(hn.a)({inputs:{input:V},backend:a}),H=Object(hn.a)({inputs:{input:U},backend:a}),q=N({inputs:{input:V},backend:a}),X=N({inputs:{input:U},backend:a}),Y=j({inputs:[G,H],backend:a,attrs:{axis:0}}),Z=j({inputs:[q,X],backend:a,attrs:{axis:0}}),Q=a.data.get(Y.dataId).values,J=a.data.get(Z.dataId).values;return a.disposeIntermediateTensorInfo(d),a.disposeIntermediateTensorInfo(h),a.disposeIntermediateTensorInfo(p),a.disposeIntermediateTensorInfo(y),a.disposeIntermediateTensorInfo(x),a.disposeIntermediateTensorInfo(v),a.disposeIntermediateTensorInfo(S),a.disposeIntermediateTensorInfo(T),a.disposeIntermediateTensorInfo(C),a.disposeIntermediateTensorInfo(D),a.disposeIntermediateTensorInfo(F),a.disposeIntermediateTensorInfo(R),a.disposeIntermediateTensorInfo(L),a.disposeIntermediateTensorInfo(P),a.disposeIntermediateTensorInfo(B),a.disposeIntermediateTensorInfo(W),a.disposeIntermediateTensorInfo(V),a.disposeIntermediateTensorInfo(U),a.disposeIntermediateTensorInfo(G),a.disposeIntermediateTensorInfo(q),a.disposeIntermediateTensorInfo(H),a.disposeIntermediateTensorInfo(X),a.disposeIntermediateTensorInfo(Y),a.disposeIntermediateTensorInfo(Z),{real:Q,imag:J}}function X(e,t,n){const r=new Float32Array(2*t);for(let a=0;a<t;a++){let s=0,i=0;for(let r=0;r<t;r++){const o=et.backend_util.exponent(a*r,t,n),u=et.backend_util.getComplexWithIndex(e,r);s+=u.real*o.real-u.imag*o.imag,i+=u.real*o.imag+u.imag*o.real}n&&(s/=t,i/=t),et.backend_util.assignToTypedArray(r,s,i,a)}return r}function Y(e){const{inputs:t,backend:n}=e,{input:r}=t,a=et.util.sizeFromShape(r.shape),s=r.shape[r.shape.length-1],o=a/s,u=i({inputs:{x:r},backend:n,attrs:{shape:[o,s]}}),c=G(u,!1,n),l=i({inputs:{x:c},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(c),l}function Z(e){const{backend:t,attrs:n}=e,{shape:r,value:a,dtype:s}=n,i=s||et.util.inferDtype(a),o=et.util.getArrayFromDType(i,et.util.sizeFromShape(r));return Q(o,a,i),t.makeTensorInfo(r,i,o)}function Q(e,t,n){e.fill(t)}function J(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:i,bias:o,preluActivationWeights:u}=t,{strides:c,pad:l,dataFormat:d,dilations:h,dimRoundingMode:p,activation:f,leakyreluAlpha:m}=r;let b=S({inputs:{x:a,filter:i},backend:n,attrs:{strides:c,pad:l,dataFormat:d,dilations:h,dimRoundingMode:p}});if(o){const e=b;b=Object(vt.a)({inputs:{a:b,b:o},backend:n}),n.disposeIntermediateTensorInfo(e)}if(f){const e=b;b=s(n,b,f,u,m),n.disposeIntermediateTensorInfo(e)}return b}function ee(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:i,bias:o,preluActivationWeights:u}=t,{strides:c,pad:l,dataFormat:d,dilations:h,dimRoundingMode:p,activation:f,leakyreluAlpha:m}=r;let b=M({inputs:{x:a,filter:i},backend:n,attrs:{strides:c,pad:l,dataFormat:d,dilations:h,dimRoundingMode:p}});if(o){const e=b;b=Object(vt.a)({inputs:{a:b,b:o},backend:n}),n.disposeIntermediateTensorInfo(e)}if(f){const e=b;b=s(n,b,f,u,m),n.disposeIntermediateTensorInfo(e)}return b}function te(e){const{inputs:t,backend:n}=e,{params:r,indices:a}=t,s=et.util.sizeFromShape(r.shape),i=a.shape,o=i[i.length-1],[u,c,l,d]=et.backend_util.prepareAndValidate(r,a);if(0===c)return n.makeTensorInfo(u,r.dtype,[]);const h=Object(et.buffer)([c,l],r.dtype),p=n.data.get(a.dataId).values,f=n.data.get(r.dataId).values;for(let e=0;e<c;e++){const t=[];let n=0;for(let r=0;r<o;r++){const a=p[e*o+r];n+=a*d[r],t.push(a)}if(n<0||n>=s/l)throw new Error(`Invalid indices: ${t} does not index into ${r.shape}`);for(let t=0;t<l;t++)h.values[e*l+t]=f[n*l+t]}return n.makeTensorInfo(u,h.dtype,h.values)}function ne(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,indices:s}=t,{axis:o,batchDims:u}=r;Object(tt.a)([a,s],"gatherV2");let c=u;null==u&&(c=0);const l=et.util.sizeFromShape(s.shape),d=et.util.parseAxisParam(o,a.shape)[0],h=et.backend_util.segment_util.collectGatherOpShapeInfo(a,s,d,c),p=i({inputs:{x:a},backend:n,attrs:{shape:[h.batchSize,h.outerSize,h.dimSize,h.sliceSize]}}),f=i({inputs:{x:s},backend:n,attrs:{shape:[h.batchSize,l/h.batchSize]}}),m=[h.batchSize,h.outerSize,l/h.batchSize,h.sliceSize],b=n.bufferSync(f),g=n.bufferSync(p),y=Object(fr.a)(g,b,m);return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.makeTensorInfo(h.outputShape,y.dtype,y.values)}function re(e){const{inputs:t,backend:n}=e,{input:r}=t,a=et.util.sizeFromShape(r.shape),s=r.shape[r.shape.length-1],o=a/s,u=i({inputs:{x:r},backend:n,attrs:{shape:[o,s]}}),c=G(u,!0,n),l=i({inputs:{x:c},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(c),l}function ae(e){const{backend:t,attrs:n}=e,{start:r,stop:a,num:s}=n,i=Object($r.a)(r,a,s);return t.makeTensorInfo([i.length],"float32",i)}function se(e){function t(e){const t=e%l;let n=e-t+Math.max(0,t-i);const r=e-t+Math.min(t+i,d);let a=0;for(;n<=r;n++){const e=h[n];a+=e*e}return a}const{inputs:n,backend:r,attrs:a}=e,{x:s}=n,{depthRadius:i,bias:o,alpha:u,beta:c}=a;Object(tt.a)(s,"LRN");const l=s.shape[3],d=l-1,h=r.data.get(s.dataId).values,p=et.util.sizeFromShape(s.shape),f=new Float32Array(p);for(let e=0;e<p;e++){const n=t(e),r=h[e]*Math.pow(o+u*n,-c);f[e]=r}return r.makeTensorInfo(s.shape,s.dtype,f)}function ie(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,y:s,dy:i}=t,{depthRadius:o,bias:u,alpha:c,beta:l}=r;Object(tt.a)(i,"LRNGrad");const d=et.util.sizeFromShape(i.shape),h=i.shape[3],p=n.data.get(i.dataId).values,f=n.data.get(a.dataId).values,m=n.data.get(s.dataId).values,b=new Float32Array(d),g=d;for(let e=0;e<g;e++){const t=e%h,n=e-t+Math.max(0,t-o),r=e-t+Math.min(h,t+o+1);let a=0;for(let e=n;e<r;e++)a+=Math.pow(f[e],2);a=c*a+u;for(let t=n;t<r;t++){let n=-2*c*l*f[t]*m[e]/a;e===t&&(n+=Math.pow(a,-l)),n*=p[e],b[t]+=n}}return n.makeTensorInfo(i.shape,a.dtype,b)}function oe(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reductionIndices:s,keepDims:i}=r,o=n;let u=a.shape;const c=u.length,l=et.util.parseAxisParam(s,u);let d=l;const h=et.backend_util.getAxesPermutation(d,c);let p=o.data.get(a.dataId).values;if(null!=h){const e=new Array(c);for(let t=0;t<e.length;t++)e[t]=u[h[t]];p=Object(qr.a)(p,u,a.dtype,h,e),d=et.backend_util.getInnerMostAxes(d.length,c),u=e}Object(tt.a)(a,"max"),et.backend_util.assertAxesAreInnerMostDims("max",d,c);const[f,m]=et.backend_util.computeOutAndReduceShapes(u,d),b=et.util.sizeFromShape(m),g=Object(Hr.a)(p,b,f,a.dtype),y=o.write(g,f,a.dtype);let x=f;if(i){const e=et.backend_util.expandShapeToKeepDim(f,l);x=e}return{dataId:y,shape:x,dtype:a.dtype}}function ue(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t;Object(tt.a)(a,"maxPool");const{filterSize:s,strides:i,pad:o,dimRoundingMode:u}=r,c=1;et.util.assert(et.backend_util.eitherStridesOrDilationsAreOne(i,c),()=>"Error in maxPool: Either strides or dilations must be 1. "+`Got strides ${i} and dilations '${c}'`);const l=et.backend_util.computePool2DInfo(a.shape,s,i,c,o,u);let d;if(1===l.filterWidth&&1===l.filterHeight&&et.util.arraysEqual(l.inShape,l.outShape))d=Object(ct.a)({inputs:{x:a},backend:n});else{const e=n.data.get(a.dataId).values,t=et.util.computeStrides(a.shape),r=f(e,a.shape,a.dtype,t,l,"max");d=n.makeTensorInfo(l.outShape,a.dtype,r.values)}return d}function ce(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:u,dataFormat:c}=r;Object(tt.a)(a,"maxPool3d");const l=et.backend_util.computePool3DInfo(a.shape,s,i,1,o,u,c),d=n.data.get(a.dataId).values,h=b(d,a.shape,a.dtype,et.util.computeStrides(a.shape),l,"max");return n.makeTensorInfo(h.shape,"float32",h.values)}function le(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,{filterSize:i,strides:o,pad:u,dimRoundingMode:c}=r;Object(tt.a)([a,s],"maxPool3DGrad");const l=et.backend_util.computePool3DInfo(s.shape,i,o,1,u,c),d=n.bufferSync(s),h=g(d,l),p=l.strideDepth,f=l.strideHeight,m=l.strideWidth,b=l.dilationDepth,y=l.dilationHeight,x=l.dilationWidth,v=l.effectiveFilterDepth,w=l.effectiveFilterHeight,k=l.effectiveFilterWidth,O=v-1-l.padInfo.front,I=k-1-l.padInfo.left,N=w-1-l.padInfo.top,j=Object(et.buffer)(s.shape,"float32"),S=n.bufferSync(a);for(let e=0;e<l.batchSize;++e)for(let t=0;t<l.inChannels;++t)for(let n=0;n<l.inDepth;++n)for(let r=0;r<l.inHeight;++r)for(let a=0;a<l.inWidth;++a){const s=n-O,i=r-N,o=a-I;let u=0;for(let n=0;n<v;n+=b){const r=(s+n)/p;if(!(r<0||r>=l.outDepth||Math.floor(r)!==r))for(let a=0;a<w;a+=y){const s=(i+a)/f;if(!(s<0||s>=l.outHeight||Math.floor(s)!==s))for(let i=0;i<k;i+=x){const c=(o+i)/m;if(c<0||c>=l.outWidth||Math.floor(c)!==c)continue;const d=v*w*k-1-h.get(e,r,s,c,t),p=n*w*k+a*k+i,f=d===p?1:0;if(0===f)continue;const b=S.get(e,r,s,c,t);u+=b*f}}}j.set(u,e,n,r,a,t)}return n.makeTensorInfo(j.shape,j.dtype,j.values)}function de(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s,output:i}=t,o=s;Object(tt.a)([s,i],"maxPoolGrad");const{filterSize:u,strides:c,pad:l,dimRoundingMode:d}=r,h=et.backend_util.computePool2DInfo(o.shape,u,c,1,l,d),p=n.data.get(o.dataId).values,f=Object(et.buffer)(h.outShape,o.dtype,m(p,o.shape,o.dtype,h).values),b=h.strideHeight,g=h.strideWidth,y=h.dilationHeight,x=h.dilationWidth,v=h.effectiveFilterHeight,w=h.effectiveFilterWidth,k=w-1-h.padInfo.left,O=v-1-h.padInfo.top,I=Object(et.buffer)(o.shape,"float32"),N=n.data.get(a.dataId).values,j=Object(et.buffer)(a.shape,"float32",N);for(let e=0;e<h.batchSize;++e)for(let t=0;t<h.inChannels;++t)for(let n=0;n<h.inHeight;++n)for(let r=0;r<h.inWidth;++r){const a=n-O,s=r-k;let i=0;for(let n=0;n<v;n+=y){const r=(a+n)/b;if(!(r<0||r>=h.outHeight||Math.floor(r)!==r))for(let a=0;a<w;a+=x){const o=(s+a)/g;if(o<0||o>=h.outWidth||Math.floor(o)!==o)continue;const u=v*w-1-f.get(e,r,o,t),c=n*w+a,l=u===c?1:0;if(0===l)continue;const d=j.get(e,r,o,t);i+=d*l}}I.set(i,e,n,r,t)}return n.makeTensorInfo(I.shape,I.dtype,I.values)}function he(e,t,n,r,a){const s=et.util.computeStrides(t),i=f(e,t,n,s,a,"max"),o=m(e,t,n,a,!0,r);return[i.values,o.values]}function pe(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r,o=et.util.parseAxisParam(s,a.shape),u=et.backend_util.computeOutAndReduceShapes(a.shape,o),c=u[1],l=et.util.sizeFromShape(c),d=[],h=n.makeTensorInfo([],"float32",new Float32Array([l]));d.push(h);const p=Object(nn.a)({inputs:{x:a},backend:n,attrs:{dtype:"float32"}});d.push(p);const f=tr({inputs:{a:p,b:h},backend:n});d.push(f);const m=B({inputs:{x:f},backend:n,attrs:{axis:s,keepDims:i}});return d.forEach(e=>n.disposeIntermediateTensorInfo(e)),m}function fe(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:o}=r;Object(tt.a)(a,"min");const u=et.util.parseAxisParam(s,a.shape);let c=u;const l=et.backend_util.getAxesPermutation(c,a.shape.length);let d=a;null!=l&&(d=Object(Et.a)({inputs:{x:a},backend:n,attrs:{perm:l}}),c=et.backend_util.getInnerMostAxes(c.length,a.shape.length)),et.backend_util.assertAxesAreInnerMostDims("min",c,d.shape.length);const[h,p]=et.backend_util.computeOutAndReduceShapes(d.shape,c),f=et.util.sizeFromShape(p),m=et.util.makeZerosTypedArray(et.util.sizeFromShape(h),d.dtype),b=n.data.get(d.dataId).values;for(let e=0;e<m.length;++e){const t=e*f;let n=b[t];for(let e=0;e<f;++e){const r=b[t+e];r<n&&(n=r)}m[e]=n}null!=l&&n.disposeIntermediateTensorInfo(d);const g=n.makeTensorInfo(h,d.dtype,m);if(o){const e=et.backend_util.expandShapeToKeepDim(h,u),t=i({inputs:{x:g},backend:n,attrs:{shape:e}});return n.disposeIntermediateTensorInfo(g),t}return g}function me(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{paddings:s,mode:i}=r;Object(tt.a)(a,"mirrorPad");const o=s.map((e,t)=>e[0]+a.shape[t]+e[1]),u=s.map(e=>e[0]),c=s.map((e,t)=>e[0]+a.shape[t]),l="reflect"===i?0:1,d=n.data.get(a.dataId).values,h=a.shape.length,p=et.util.computeStrides(a.shape),f=et.util.sizeFromShape(o),m=o.length,b=et.util.computeStrides(o),g=et.util.getTypedArrayFromDType(a.dtype,f);for(let e=0;e<f;e++){let t=et.util.indexToLoc(e,m,b);for(let e=0;e<m;e++)t[e]<u[e]?t[e]=2*u[e]-t[e]-l:t[e]>=c[e]&&(t[e]=2*(c[e]-1)-t[e]+l);t=t.map((e,t)=>e-u[t]);const n=et.util.locToIndex(t,h,p);g[e]=d[n]}const y=n.write(g,o,a.dtype);return{dataId:y,shape:o,dtype:a.dtype}}function be(e){const{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{dim:s}=r,o=a.shape.length;let u=s;if(-1===u&&(u=o-1),u!==o-1)throw Error("Softmax along a non-last dimension is not yet supported. "+`Logits was rank ${o} and dim was ${u}`);const c=et.util.parseAxisParam([u],a.shape),l=oe({inputs:{x:a},backend:n,attrs:{reductionIndices:c,keepDims:!1}}),d=et.backend_util.expandShapeToKeepDim(l.shape,c),h=i({inputs:{x:l},backend:n,attrs:{shape:d}}),p=Object(rr.a)({inputs:{a:a,b:h},backend:n}),f=Object(Zn.a)({inputs:{x:p},backend:n}),m=B({inputs:{x:f},backend:n,attrs:{axis:c,keepDims:!1}}),b=i({inputs:{x:m},backend:n,attrs:{shape:d}}),g=tr({inputs:{a:f,b:b},backend:n});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(b),g}function ge(e){const{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{numSamples:s,seed:i,normalized:o}=r;Object(tt.a)(a,"multinomial");const u=o?a:be({inputs:{logits:a},backend:n,attrs:{dim:-1}}),c=u.shape[0],l=u.shape[1],d=n.data.get(u.dataId).values,h=[c,s],p=et.util.makeZerosTypedArray(et.util.sizeFromShape(h),"int32");for(let e=0;e<c;++e){const t=e*l,n=new Float32Array(l-1);n[0]=d[t];for(let e=1;e<n.length;++e)n[e]=n[e-1]+d[t+e];const r=ua.alea(i.toString()),a=e*s;for(let e=0;e<s;++e){const t=r();p[a+e]=n.length;for(let r=0;r<n.length;r++)if(t<n[r]){p[a+e]=r;break}}}return o||n.disposeIntermediateTensorInfo(u),n.makeTensorInfo(h,"int32",p)}function ye(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u}=r;Object(tt.a)(a,"NonMaxSuppression");const c=n.data.get(a.dataId).values,l=n.data.get(s.dataId).values,{selectedIndices:d}=ha(c,l,i,o,u);return n.makeTensorInfo([d.length],"int32",new Int32Array(d))}function xe(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u,padToMaxOutputSize:c}=r;Object(tt.a)(a,"NonMaxSuppressionPadded");const l=n.data.get(a.dataId).values,d=n.data.get(s.dataId).values,{selectedIndices:h,validOutputs:p}=fa(l,d,i,o,u,c);return[n.makeTensorInfo([h.length],"int32",new Int32Array(h)),n.makeTensorInfo([],"int32",new Int32Array([p]))]}function ve(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u,softNmsSigma:c}=r;Object(tt.a)(a,"NonMaxSuppressionWithScore");const l=n.data.get(a.dataId).values,d=n.data.get(s.dataId).values,h=i,p=o,f=u,m=c,{selectedIndices:b,selectedScores:g}=ba(l,d,h,p,f,m);return[n.makeTensorInfo([b.length],"int32",new Int32Array(b)),n.makeTensorInfo([g.length],"float32",new Float32Array(g))]}function we(e){const{inputs:t,backend:n,attrs:r}=e,{indices:a}=t,{depth:s,onValue:i,offValue:o}=r;Object(tt.a)(a,"oneHot");const u=et.util.sizeFromShape(a.shape),c=new Float32Array(u*s);c.fill(o);const l=n.data.get(a.dataId).values;for(let e=0;e<u;++e)l[e]>=0&&l[e]<s&&(c[e*s+l[e]]=i);return n.makeTensorInfo([...a.shape,s],"int32",c)}function ke(e){const{inputs:t,backend:n}=e,{x:r}=t;if("string"===r.dtype)throw new Error("zerosLike is not supported for string tensors");if("complex64"===r.dtype){const e=Object(hn.a)({inputs:{input:r},backend:n}),t=ke({inputs:{x:e},backend:n}),a=N({inputs:{input:r},backend:n}),s=ke({inputs:{x:a},backend:n}),i=Object(on.a)({inputs:{real:t,imag:s},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(s),i}return Z({backend:n,attrs:{shape:r.shape,value:0,dtype:r.dtype}})}function Oe(e){const{inputs:t,backend:n}=e,{x:r}=t;if("string"===r.dtype)throw new Error("onesLike is not supported for string tensors");if("complex64"===r.dtype){const e=Object(hn.a)({inputs:{input:r},backend:n}),t=Oe({inputs:{x:e},backend:n}),a=N({inputs:{input:r},backend:n}),s=ke({inputs:{x:a},backend:n}),i=Object(on.a)({inputs:{real:t,imag:s},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(s),i}return Z({backend:n,attrs:{shape:r.shape,value:1,dtype:r.dtype}})}function Ie(e){const{inputs:t,backend:n,attrs:r}=e,{axis:a}=r;if(1===t.length)return U({inputs:{input:t[0]},backend:n,attrs:{dim:a}});const s=t[0].shape,i=t[0].dtype;t.forEach(e=>{et.util.assertShapesMatch(s,e.shape,"All tensors passed to stack must have matching shapes"),et.util.assert(i===e.dtype,()=>"All tensors passed to stack must have matching dtypes")});const o=[],u=t.map(e=>{const t=U({inputs:{input:e},backend:n,attrs:{dim:a}});return o.push(t),t}),c=j({inputs:u,backend:n,attrs:{axis:a}});return o.forEach(e=>n.disposeIntermediateTensorInfo(e)),c}function Ne(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{paddings:s,constantValue:i}=r;Object(tt.a)(a,"pad");const o=s.map((e,t)=>e[0]+a.shape[t]+e[1]),u=s.map(e=>e[0]),c=n.data.get(a.dataId).values,l=et.util.sizeFromShape(a.shape),d=a.shape.length,h=et.util.computeStrides(a.shape),p=et.util.sizeFromShape(o),f=o.length,m=et.util.computeStrides(o),b=et.util.getTypedArrayFromDType(a.dtype,p);0!==i&&b.fill(i);for(let e=0;e<l;e++){const t=et.util.indexToLoc(e,d,h),n=t.map((e,t)=>e+u[t]),r=et.util.locToIndex(n,f,m);b[r]=c[e]}const g=n.write(b,o,a.dtype);return{dataId:g,shape:o,dtype:a.dtype}}function je(e){const{backend:t,attrs:n}=e,{start:r,stop:a,dtype:s,step:i}=n,o=Object(Ta.a)(r,a,i,s);return t.makeTensorInfo([o.length],s,o)}function Se(e){const{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:s,halfPixelCenters:i,size:o}=r;Object(tt.a)(a,"resizeBilinear");const u=et.util.computeStrides(a.shape),[c,l]=o,[d,h,p,f]=a.shape,m=n.data.get(a.dataId).values,b=new Float32Array(et.util.sizeFromShape([d,c,l,f])),g=[s&&c>1?h-1:h,s&&l>1?p-1:p],y=[s&&c>1?c-1:c,s&&l>1?l-1:l];let x=0;const v=g[0]/y[0],w=g[1]/y[1];for(let e=0;e<d;e++)for(let t=0;t<c;t++){let n;n=i?v*(t+.5)-.5:v*t;const r=Math.max(0,Math.floor(n)),a=n-r,s=Math.min(h-1,Math.ceil(n)),o=e*u[0]+r*u[1],c=e*u[0]+s*u[1];for(let e=0;e<l;e++){let t;t=i?w*(e+.5)-.5:w*e;const n=Math.max(0,Math.floor(t)),r=t-n,s=Math.min(p-1,Math.ceil(t)),l=o+n*u[2],d=c+n*u[2],h=o+s*u[2],g=c+s*u[2];for(let e=0;e<f;e++){const t=m[l+e],n=m[d+e],s=m[h+e],i=m[g+e],o=t+(s-t)*r,u=n+(i-n)*r,c=o+(u-o)*a;b[x++]=c}}}return n.makeTensorInfo([d,c,l,f],"float32",b)}function Te(e){const{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:i}=r;Object(tt.a)([s,a],"resizeBilinearGrad");const o=et.util.computeStrides(a.shape),[u,c,l,d]=a.shape,[,h,p]=s.shape,f=new Float32Array(u*c*l*d),m=[i&&h>1?c-1:c,i&&p>1?l-1:l],b=[i&&h>1?h-1:h,i&&p>1?p-1:p],g=m[0]/b[0],y=m[1]/b[1],x=n.data.get(s.dataId).values;let v=0;for(let e=0;e<u;e++){const t=e*o[0];for(let e=0;e<h;e++){const n=e*g,r=Math.floor(n),a=Math.min(Math.ceil(n),c-1),s=t+r*o[1],i=t+a*o[1],u=n-r,h=1-u;for(let e=0;e<p;e++){const t=e*y,n=Math.floor(t),r=Math.min(Math.ceil(t),l-1),a=t-n,c=1-a,p=s+n*o[2],m=s+r*o[2],b=i+n*o[2],g=i+r*o[2],w=h*c,k=h*a,O=u*c,I=u*a;for(let e=0;e<d;e++){const t=x[v++];f[p+e]+=t*w,f[m+e]+=t*k,f[b+e]+=t*O,f[g+e]+=t*I}}}}return n.makeTensorInfo([u,l,c,d],"float32",f)}function Ce(e){const{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:s,halfPixelCenters:i,size:o}=r;Object(tt.a)(a,"resizeNearestNeighbor");const u=et.util.computeStrides(a.shape),[c,l]=o,[d,h,p,f]=a.shape,m=n.data.get(a.dataId).values,b=new Float32Array(d*c*l*f),g=[s&&c>1?h-1:h,s&&l>1?p-1:p],y=[s&&c>1?c-1:c,s&&l>1?l-1:l],x=g[0]/y[0],v=g[1]/y[1];let w=0;for(let e=0;e<d;e++){const t=e*u[0];for(let e=0;e<c;e++){const n=i?x*(e+.5):x*e;let r=Math.min(h-1,s?Math.round(n):Math.floor(n));i&&(r=Math.max(0,r));const a=t+r*u[1];for(let e=0;e<l;e++){const t=i?v*(e+.5):v*e;let n=Math.min(p-1,s?Math.round(t):Math.floor(t));i&&(n=Math.max(0,n));const r=a+n*u[2];for(let e=0;e<f;e++){const t=m[r+e];b[w++]=t}}}}return n.makeTensorInfo([d,c,l,f],a.dtype,b)}function Ee(e){const{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:i}=r;Object(tt.a)([s,a],"resizeNearestNeighborGrad");const o=et.util.computeStrides(a.shape),u=et.util.computeStrides(s.shape),[c,l,d,h]=a.shape,[,p,f]=s.shape,m=new Float32Array(c*l*d*h),b=n.data.get(s.dataId).values,g=[i&&p>1?l-1:l,i&&f>1?d-1:d],y=[i&&p>1?p-1:p,i&&f>1?f-1:f],x=g[0]/y[0],v=g[1]/y[1],w=1/x,k=1/v,O=2*Math.ceil(w)+2,I=2*Math.ceil(k)+2;for(let e=0;e<c;e++){const t=e*o[0];for(let e=0;e<l;e++){const n=t+e*o[1],r=Math.floor(e*w),a=Math.floor(r-O/2);for(let r=0;r<d;r++){const s=n+r*o[2],c=Math.floor(r*k),g=Math.floor(c-I/2);for(let n=0;n<h;n++){let o=0;for(let s=0;s<O;s++){const c=s+a;if(c<0||c>=p)continue;const h=t+c*u[1],m=c*x,y=Math.min(l-1,i?Math.round(m):Math.floor(m));if(e===y)for(let e=0;e<I;e++){const t=e+g;if(t<0||t>=f)continue;const a=h+t*u[2],s=t*v,c=Math.min(d-1,i?Math.round(s):Math.floor(s));r===c&&(o+=b[a+n])}}m[s+n]=o}}}}return n.makeTensorInfo(a.shape,a.dtype,m)}function $e(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{dims:s}=r;Object(tt.a)(a,"reverse");const i=a.shape.length,o=et.util.parseAxisParam(s,a.shape);if(0===i)return Object(ct.a)({inputs:{x:a},backend:n});const u=new et.TensorBuffer(a.shape,a.dtype),c=n.bufferSync(a);for(let e=0;e<u.size;e++){const t=u.indexToLoc(e),n=t.slice();o.forEach(e=>n[e]=a.shape[e]-1-n[e]),u.set(c.get(...n),...t)}return n.makeTensorInfo(u.shape,u.dtype,u.values)}function Ae(e,t,n,r,a,s,i,o,u,c){const l=[r/a,a],d=e.values,h=t.values;if(0===r)return Object(et.buffer)(n,t.dtype);const p=Object(et.buffer)(l,t.dtype);p.values.fill(u);for(let e=0;e<s;e++){const s=[];let u=0;for(let t=0;t<i;t++){const n=d[e*i+t];s.push(n),u+=n*o[t]}if(u<0||u>=r/a)throw new Error(`Invalid indices: ${s} does not index into ${n}`);for(let n=0;n<a;n++)c?p.values[u*a+n]+=h[e*a+n]:p.values[u*a+n]=0===t.rank?h[0]:h[e*a+n]}return p}function _e(e){const{inputs:t,backend:n,attrs:r}=e,{indices:a,updates:s}=t,{shape:i}=r,{sliceRank:o,numUpdates:u,sliceSize:c,strides:l,outputSize:d}=et.backend_util.calculateShapes(s,a,i),h=!0,p=n.bufferSync(a),f=n.bufferSync(s),m=Ae(p,f,i,d,c,u,o,l,0,h);return n.makeTensorInfo(i,m.dtype,m.values)}function De(e){const{inputs:t,backend:n}=e,{condition:r,t:a,e:s}=t;Object(tt.a)([r,a,s],"select");const i=r.shape.length,o=n.data.get(r.dataId).values,u=n.data.get(a.dataId).values,c=n.data.get(s.dataId).values,l=Object(et.upcastType)(a.dtype,s.dtype),d=et.util.makeZerosTypedArray(et.util.sizeFromShape(a.shape),l);let h=0;const p=0===i||i>1||1===a.shape.length?1:et.util.sizeFromShape(a.shape.slice(1));for(let e=0;e<o.length;e++)for(let t=0;t<p;t++)1===o[e]?d[h++]=u[e]:d[h++]=c[e];return n.makeTensorInfo(a.shape,l,d)}function Fe(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,paddings:o}=r;Object(tt.a)([a],"spaceToBatchND");const u=et.util.sizeFromShape(s),c=[[0,0]];c.push(...o);for(let e=1+s.length;e<a.shape.length;++e)c.push([0,0]);const l=Oa.kernelFunc({inputs:{x:a},backend:n,attrs:{paddings:c,constantValue:0}}),d=et.backend_util.getReshaped(l.shape,s,u,!1),h=et.backend_util.getPermuted(d.length,s.length,!1),p=et.backend_util.getReshapedPermuted(l.shape,s,u,!1),f={x:l},m={shape:d},b=i({inputs:f,backend:n,attrs:m}),g={x:b},y={perm:h},x=Object(Et.a)({inputs:g,backend:n,attrs:y}),v={x:x},w={shape:p},k=i({inputs:v,backend:n,attrs:w});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(b),n.disposeIntermediateTensorInfo(x),k}function Re(e){const{inputs:t,backend:n}=e,{inputIndices:r,inputShape:a,newShape:s}=t;if(2!==r.shape.length)throw new Error(`Input indices should be a matrix but received shape\n        ${r.shape}`);if(1!==a.shape.length)throw new Error(`Input shape should be a vector but received shape\n        ${a.shape}`);if(1!==s.shape.length)throw new Error(`Target shape should be a vector but received shape ${s.shape}`);const i=Array.from(n.data.get(a.dataId).values),o=n.data.get(r.dataId).values,u=Array.from(n.data.get(s.dataId).values),[c,l,d]=Object(as.a)(o,r.shape,r.dtype,i,u);return[n.makeTensorInfo(l,r.dtype,c),n.makeTensorInfo([d.length],s.dtype,new Int32Array(d))]}function Me(e){const{inputs:t,backend:n,attrs:r}=e,{sparseIndices:a,sparseValues:s,defaultValue:i}=t,{outputShape:o}=r,{sliceRank:u,numUpdates:c,sliceSize:l,strides:d,outputSize:h}=et.backend_util.calculateShapes(s,a,o),p=!1,f=n.bufferSync(a),m=n.bufferSync(s),b=n.data.get(i.dataId).values[0],g=Ae(f,m,o,h,l,c,u,d,b,p);return n.makeTensorInfo(o,g.dtype,g.values)}function ze(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{numOrSizeSplits:s,axis:i}=r,o=et.util.parseAxisParam(i,a.shape)[0],u=et.backend_util.prepareSplitSize(a,s,o),c=new Array(a.shape.length).fill(0),l=a.shape.slice();return u.map(e=>{const t=[...l];t[o]=e;const r=Object(Qt.a)({inputs:{x:a},backend:n,attrs:{begin:c,size:t}});return c[o]+=e,r})}function Le(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{begin:s,end:o,strides:u,beginMask:c,endMask:l,ellipsisMask:d,newAxisMask:h,shrinkAxisMask:p}=r;Object(tt.a)(a,"stridedSlice");const{nonStrided:f,$begin:m,$strides:b,size:g,newShape:y,outShape:x}=et.slice_util.sliceInfo(a.shape,s,o,u,c,l,d,h,p),v=i({inputs:{x:a},backend:n,attrs:{shape:y}});let w;if(f){const e=Object(Qt.a)({inputs:{x:v},backend:n,attrs:{begin:m,size:g}});w=i({inputs:{x:e},backend:n,attrs:{shape:x}}),n.disposeIntermediateTensorInfo(e)}else if(x.some(e=>0===e))w=n.makeTensorInfo(x,a.dtype,[]);else{const e=n.bufferSync(v),t=Object(fs.a)(x,e,b,m);w=n.makeTensorInfo(t.shape,t.dtype,t.values)}const k=i({inputs:{x:w},backend:n,attrs:{shape:x}});return n.disposeIntermediateTensorInfo(v),n.disposeIntermediateTensorInfo(w),k}function Pe(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reps:s}=r;Object(tt.a)(a,"tile");const i=Object(vs.a)(n.bufferSync(a),s);return n.makeTensorInfo(i.shape,i.dtype,i.values)}function Be(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{k:s,sorted:i}=r;Object(tt.a)(a,"topk");const o=n.data.get(a.dataId).values,[u,c]=Object(ks.a)(o,a.shape,a.dtype,s,i);return[n.makeTensorInfo(u.shape,u.dtype,u.values),n.makeTensorInfo(c.shape,c.dtype,c.values)]}function We(e){const{inputs:t,attrs:n,backend:r}=e,{image:a,transforms:s}=t,{interpolation:i,fillMode:o,fillValue:u,outputShape:c}=n,[l,d,h,p]=a.shape,[f,m]=null!=c?c:[d,h],b=[l,f,m,p],g=et.util.computeStrides(a.shape),y=g[0],x=g[1],v=g[2],w=et.util.getTypedArrayFromDType(a.dtype,et.util.sizeFromShape(b));w.fill(u);const k=r.data.get(a.dataId).values,O=r.data.get(s.dataId).values;for(let e=0;e<l;++e){const t=1===s.shape[0]?O:O.subarray(8*e,8*e+8);for(let n=0;n<f;++n)for(let r=0;r<m;++r)for(let a=0;a<p;++a){let s;const c=t[6]*r+t[7]*n+1;if(0===c)continue;const l=(t[0]*r+t[1]*n+t[2])/c,p=(t[3]*r+t[4]*n+t[5])/c,f=Ve(l,h,o),m=Ve(p,d,o);switch(i){case"nearest":s=Xe(k,d,h,y,x,v,e,m,f,a,u);break;case"bilinear":s=Ye(k,d,h,y,x,v,e,m,f,a,u);break;default:throw new Error("Error in Transform: Expect 'nearest' or "+`'bilinear', but got ${i}`)}const b=e*y+n*x+r*v+a;w[b]=s}return r.makeTensorInfo(b,a.dtype,w)}const I=r.write(w,b,a.dtype);return{dataId:I,shape:a.shape,dtype:a.dtype}}function Ve(e,t,n){switch(n){case"reflect":return Ue(e,t);case"wrap":return Ge(e,t);case"nearest":return qe(e,t);case"constant":default:return He(e,t)}}function Ue(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const e=2*t;n<e&&(n=e*Math.trunc(-n/e)+n),n=n<-t?n+e:-n-1}else if(n>t-1)if(t<=1)n=0;else{const e=2*t;n-=e*Math.trunc(n/e),n>=t&&(n=e-n-1)}return et.util.clamp(0,n,t-1)}function Ge(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const e=t-1;n+=t*(Math.trunc(-n/e)+1)}else if(n>t-1)if(t<=1)n=0;else{const e=t-1;n-=t*Math.trunc(n/e)}return et.util.clamp(0,n,t-1)}function He(e,t){return e}function qe(e,t){return et.util.clamp(0,e,t-1)}function Ke(e,t,n,r,a,s,i,o,u,c,l){const d=i*r+o*a+u*s+c;return 0<=o&&o<t&&0<=u&&u<n?e[d]:l}function Xe(e,t,n,r,a,s,i,o,u,c,l){const d=Math.round(o),h=Math.round(u);return Ke(e,t,n,r,a,s,i,d,h,c,l)}function Ye(e,t,n,r,a,s,i,o,u,c,l){const d=Math.floor(o),h=Math.floor(u),p=d+1,f=h+1,m=(f-u)*Ke(e,t,n,r,a,s,i,d,h,c,l)+(u-h)*Ke(e,t,n,r,a,s,i,d,f,c,l),b=(f-u)*Ke(e,t,n,r,a,s,i,p,h,c,l)+(u-h)*Ke(e,t,n,r,a,s,i,p,f,c,l);return(p-o)*m+(o-d)*b}function Ze(e){const{inputs:t,attrs:n,backend:r}=e,{axis:a}=n,{x:s}=t;Object(tt.a)(s,"unique");const i=r.data.get(s.dataId).values,{outputValues:o,outputShape:u,indices:c}=Object(Ns.a)(i,a,s.shape,s.dtype);return[r.makeTensorInfo(u,s.dtype,o),r.makeTensorInfo([c.length],"int32",c)]}function Qe(e){const{inputs:t,backend:n,attrs:r}=e,{value:a}=t;let{axis:s}=r;s<0&&(s+=a.shape.length);const o=a.shape.length,u=a.shape[s],c=new Array(o-1);let l=0;for(let e=0;e<o;e++)e!==s&&(c[l++]=a.shape[e]);const d=new Array(o).fill(0),h=a.shape.slice();h[s]=1;const p=new Array(u);for(let e=0;e<p.length;e++){d[s]=e;const t=Object(Qt.a)({inputs:{x:a},backend:n,attrs:{begin:d,size:h}});p[e]=i({inputs:{x:t},backend:n,attrs:{shape:c}}),n.disposeIntermediateTensorInfo(t)}return p}function Je(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,segmentIds:s}=t,{numSegments:i}=r;Object(tt.a)(a,"unsortedSegmentSum");const o=a.shape.length,u=s.shape.length,c=[],l=[],d=o-u;let h=s;for(let e=0;e<d;++e){const t=U({inputs:{input:h},backend:n,attrs:{dim:e+1}});h=t,l.push(t)}for(let e=0;e<i;++e){const t=et.util.createScalarValue(e,"int32"),r=n.makeTensorInfo([],"int32",t),s=Bn({inputs:{a:r,b:h},backend:n}),i=Object(nn.a)({inputs:{x:s},backend:n,attrs:{dtype:"float32"}}),o=Object(Fn.a)({inputs:{a:i,b:a},backend:n}),u=B({inputs:{x:o},backend:n,attrs:{axis:0,keepDims:!1}});c.push(u),l.push(r),l.push(s),l.push(i),l.push(o),l.push(u)}const p=Ie({inputs:c,backend:n,attrs:{axis:0}});return l.forEach(e=>n.disposeIntermediateTensorInfo(e)),p}n.r(t),n.d(t,"MathBackendCPU",function(){return rt}),n.d(t,"version_cpu",function(){return st}),n.d(t,"shared",function(){return at});var et=n(0),tt=n(11);const nt=et.kernel_impls.whereImpl;class rt extends et.KernelBackend{constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new et.DataStorage(this,Object(et.engine)())}nextDataId(){return rt.nextDataId++}write(e,t,n){this.firstUse&&(this.firstUse=!1,Object(et.env)().get("IS_NODE")&&et.backend_util.warn("\n============================\nHi there 👋. Looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, which binds to TensorFlow C++, by running npm i @tensorflow/tfjs-node, or npm i @tensorflow/tfjs-node-gpu if you have CUDA. Then call require('@tensorflow/tfjs-node'); (-gpu suffix for CUDA) at the start of your program. Visit https://github.com/tensorflow/tfjs-node for more details.\n============================"));const r={id:this.nextDataId()};return this.data.set(r,{values:e,dtype:n,refCount:1}),r}makeTensorInfo(e,t,n){let r;if("string"===t&&null!=n&&n.length>0&&et.util.isString(n[0])){const a=n.map(e=>et.util.encodeString(e));r=this.write(a,e,t)}else r=this.write(n,e,t);return{dataId:r,shape:e,dtype:t}}refCount(e){if(this.data.has(e)){const t=this.data.get(e);return t.refCount}return 0}incRef(e){const t=this.data.get(e);t.refCount++}decRef(e){if(this.data.has(e)){const t=this.data.get(e);t.refCount--}}move(e,t,n,r,a){this.data.set(e,{values:t,dtype:r,refCount:a})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){const{dtype:t,complexTensorInfos:n}=this.data.get(e);if("complex64"===t){const e=this.readSync(n.real.dataId),t=this.readSync(n.imag.dataId);return et.backend_util.mergeRealAndImagArrays(e,t)}return this.data.get(e).values}bufferSync(e){const t=this.readSync(e.dataId);let n=t;if("string"===e.dtype)try{n=t.map(e=>et.util.decodeString(e))}catch(e){throw new Error("Failed to decode encoded string bytes into utf-8")}return Object(et.buffer)(e.shape,e.dtype,n)}makeOutput(e,t,n){
const r=this.write(e,t,n);return Object(et.engine)().makeTensorFromDataId(r,t,n,this)}disposeData(e,t=!1){if(this.data.has(e)){if(this.data.get(e).refCount--,!t&&this.data.get(e).refCount>0)return!1;const{complexTensorInfos:n}=this.data.get(e);null!=n&&(this.disposeData(n.real.dataId,!0),this.disposeData(n.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){const t=et.util.now();e();const n=et.util.now()-t;return{kernelMs:n}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){Object(tt.a)([e],"where");const t=this.readSync(e.dataId);return nt(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}rt.nextDataId=0;var at=n(183);const st="3.5.0";Object(et.registerBackend)("cpu",()=>new rt,1);var it=n(18);const ot=Object(it.a)(et.Elu,e=>e>=0?e:Math.exp(e)-1),ut={kernelName:et.Elu,backendName:"cpu",kernelFunc:ot};var ct=n(42);const lt={kernelName:et.LeakyRelu,backendName:"cpu",kernelFunc:r};var dt=n(27);const ht=Object(dt.a)((e,t)=>e<0?t*e:e),pt={kernelName:et.Prelu,backendName:"cpu",kernelFunc:a},ft=Object(it.a)(et.Relu,e=>Math.max(0,e)),mt={kernelName:et.Relu,backendName:"cpu",kernelFunc:ft},bt=Object(it.a)(et.Relu6,e=>Math.min(Math.max(0,e),6)),gt={kernelName:et.Relu6,backendName:"cpu",kernelFunc:bt},yt=Object(it.a)(et.Sigmoid,e=>1/(1+Math.exp(-e))),xt={kernelName:et.Sigmoid,backendName:"cpu",kernelFunc:yt};var vt=n(68);const wt={kernelName:et.Reshape,backendName:"cpu",kernelFunc:i},kt={kernelName:et.BatchMatMul,backendName:"cpu",kernelFunc:o},Ot={kernelName:et._FusedMatMul,backendName:"cpu",kernelFunc:u};var It=n(184);const Nt=Object(it.a)(et.Acos,e=>Math.acos(e)),jt={kernelName:et.Acos,backendName:"cpu",kernelFunc:Nt},St=Object(it.a)(et.Acosh,e=>Math.acosh(e)),Tt={kernelName:et.Acosh,backendName:"cpu",kernelFunc:St},Ct={kernelName:et.AddN,backendName:"cpu",kernelFunc:c};var Et=n(33);const $t={kernelName:et.All,backendName:"cpu",kernelFunc:l},At={kernelName:et.Any,backendName:"cpu",kernelFunc:d},_t={kernelName:et.ArgMax,backendName:"cpu",kernelFunc:h},Dt={kernelName:et.ArgMin,backendName:"cpu",kernelFunc:p},Ft=Object(it.a)(et.Asin,e=>Math.asin(e)),Rt={kernelName:et.Asin,backendName:"cpu",kernelFunc:Ft},Mt=Object(it.a)(et.Asinh,e=>Math.asinh(e)),zt={kernelName:et.Asinh,backendName:"cpu",kernelFunc:Mt},Lt=Object(it.a)(et.Atan,e=>Math.atan(e)),Pt={kernelName:et.Atan,backendName:"cpu",kernelFunc:Lt};var Bt=n(29);const Wt=Object(dt.a)((e,t)=>Math.atan2(e,t)),Vt=Object(Bt.a)(et.Atan2,Wt),Ut={kernelName:et.Atan2,backendName:"cpu",kernelFunc:Vt},Gt=Object(it.a)(et.Atanh,e=>Math.atanh(e)),Ht={kernelName:et.Atanh,backendName:"cpu",kernelFunc:Gt},qt={kernelName:et.AvgPool,backendName:"cpu",kernelFunc:y},Kt={kernelName:et.AvgPool3D,backendName:"cpu",kernelFunc:x},Xt={kernelName:et.AvgPool3DGrad,backendName:"cpu",kernelFunc:v},Yt={kernelName:et.AvgPoolGrad,backendName:"cpu",kernelFunc:w},Zt={kernelName:et.FusedBatchNorm,backendName:"cpu",kernelFunc:k};var Qt=n(54);const Jt={kernelName:et.BatchToSpaceND,backendName:"cpu",kernelFunc:O};var en=n(98);const tn={kernelName:et.Bincount,backendName:"cpu",kernelFunc:I};var nn=n(78),rn=n(185);const an=Object(it.a)(et.ClipByValue,(e,t)=>{const n=t;return e>n.clipValueMax?n.clipValueMax:e<n.clipValueMin?n.clipValueMin:e}),sn={kernelName:et.ClipByValue,backendName:"cpu",kernelFunc:an};var on=n(38);const un=e=>{const{x:t}=e.inputs,n=e.backend,r=new Float32Array(et.util.sizeFromShape(t.shape)),a=n.data.get(t.dataId),s=a.complexTensorInfos.real,i=a.complexTensorInfos.imag,o=n.data.get(s.dataId).values,u=n.data.get(i.dataId).values;for(let e=0;e<o.length;e++){const t=o[e],n=u[e];r[e]=Math.hypot(t,n)}return n.makeOutput(r,t.shape,"float32")},cn={kernelName:et.ComplexAbs,backendName:"cpu",kernelFunc:un};var ln=n(186);const dn={kernelName:et.Imag,backendName:"cpu",kernelFunc:N};var hn=n(61);const pn={kernelName:et.Concat,backendName:"cpu",kernelFunc:j},fn={kernelName:et.Conv2D,backendName:"cpu",kernelFunc:S},mn={kernelName:et.Conv2DBackpropFilter,backendName:"cpu",kernelFunc:T},bn={kernelName:et.Conv2DBackpropInput,backendName:"cpu",kernelFunc:C},gn={kernelName:et.Conv3D,backendName:"cpu",kernelFunc:E},yn={kernelName:et.Conv3DBackpropFilterV2,backendName:"cpu",kernelFunc:$},xn={kernelName:et.Conv3DBackpropInputV2,backendName:"cpu",kernelFunc:A},vn=Object(it.a)(et.Cos,e=>Math.cos(e)),wn={kernelName:et.Cos,backendName:"cpu",kernelFunc:vn},kn=Object(it.a)(et.Cosh,e=>Math.cosh(e)),On={kernelName:et.Cosh,backendName:"cpu",kernelFunc:kn},In={kernelName:et.CropAndResize,backendName:"cpu",kernelFunc:_},Nn={kernelName:et.Cumsum,backendName:"cpu",kernelFunc:D},jn={kernelName:et.DenseBincount,backendName:"cpu",kernelFunc:F},Sn={kernelName:et.DepthToSpace,backendName:"cpu",kernelFunc:R},Tn={kernelName:et.DepthwiseConv2dNative,backendName:"cpu",kernelFunc:M},Cn={kernelName:et.DepthwiseConv2dNativeBackpropFilter,backendName:"cpu",kernelFunc:z},En={kernelName:et.DepthwiseConv2dNativeBackpropInput,backendName:"cpu",kernelFunc:L},$n={kernelName:et.Diag,backendName:"cpu",kernelFunc:P},An={kernelName:et.Dilation2D,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,filter:a}=e,{strides:s,pad:i,dilations:o}=n,u=t,c=u.data.get(r.dataId).values,l=r.shape.length,d=u.data.get(a.dataId).values,h=a.shape.length,{batchSize:p,inHeight:f,inWidth:m,inChannels:b,outHeight:g,outWidth:y,padInfo:x,strideHeight:v,strideWidth:w,filterHeight:k,filterWidth:O,dilationHeight:I,dilationWidth:N,outShape:j}=et.backend_util.computeDilation2DInfo(r.shape,a.shape,s,i,"NHWC",o),S=et.util.sizeFromShape(j),T=j.length,C=et.util.getArrayFromDType(r.dtype,S);for(let e=0;e<p;++e)for(let t=0;t<g;++t){const n=t*v-x.top;for(let s=0;s<y;++s){const i=s*w-x.left;for(let o=0;o<b;++o){let u=Number.MIN_SAFE_INTEGER;for(let t=0;t<k;++t){const s=n+t*I;if(s>=0&&s<f)for(let n=0;n<O;++n){const p=i+n*N;if(p>=0&&p<m){const i=et.util.locToIndex([e,s,p,o],l,et.util.computeStrides(r.shape)),f=et.util.locToIndex([t,n,o],h,et.util.computeStrides(a.shape)),m=c[i]+d[f];m>u&&(u=m)}}}const p=et.util.locToIndex([e,t,s,o],T,et.util.computeStrides(j));C[p]=u}}}const E=u.write(et.util.toTypedArray(C,r.dtype),j,r.dtype);return{dataId:E,shape:j,dtype:r.dtype}}},_n={kernelName:et.Dilation2DBackpropFilter,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,filter:a,dy:s}=e,{strides:i,pad:o,dilations:u}=n,c=t,l=et.util.toNestedArray(r.shape,c.data.get(r.dataId).values),d=et.util.toNestedArray(a.shape,c.data.get(a.dataId).values),{batchSize:h,inHeight:p,inWidth:f,inChannels:m,outHeight:b,outWidth:g,padInfo:y,strideHeight:x,strideWidth:v,filterHeight:w,filterWidth:k,dilationHeight:O,dilationWidth:I,outShape:N}=et.backend_util.computeDilation2DInfo(r.shape,a.shape,i,o,"NHWC",u);et.util.assert(s.rank===N.length,()=>`Error in ${et.Dilation2DBackpropFilter}, dy `+`must have the same rank as output ${N.length}, but got `+`${s.rank}`);const j=et.util.toNestedArray(N,c.data.get(s.dataId).values),S=et.util.makeZerosNestedTypedArray(a.shape,a.dtype);for(let e=0;e<h;++e)for(let t=0;t<b;++t){const n=t*x-y.top;for(let r=0;r<g;++r){const a=r*v-y.left;for(let s=0;s<m;++s){let i=Number.MIN_SAFE_INTEGER,o=0,u=0;for(let t=0;t<w;++t){const r=n+t*O;if(r>=0&&r<p)for(let n=0;n<k;++n){const c=a+n*I;if(c>=0&&c<f){const a=l[e][r][c][s]+d[t][n][s];a>i&&(i=a,o=t,u=n)}}}S[o][u][s]+=j[e][t][r][s]}}}const T=c.write(et.util.toTypedArray(S,r.dtype),a.shape,a.dtype);return{dataId:T,shape:a.shape,dtype:a.dtype}}},Dn={kernelName:et.Dilation2DBackpropInput,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,filter:a,dy:s}=e,{strides:i,pad:o,dilations:u}=n,c=t,l=et.util.toNestedArray(r.shape,c.data.get(r.dataId).values),d=et.util.toNestedArray(a.shape,c.data.get(a.dataId).values),{batchSize:h,inHeight:p,inWidth:f,inChannels:m,outHeight:b,outWidth:g,padInfo:y,strideHeight:x,strideWidth:v,filterHeight:w,filterWidth:k,dilationHeight:O,dilationWidth:I,outShape:N}=et.backend_util.computeDilation2DInfo(r.shape,a.shape,i,o,"NHWC",u);et.util.assert(s.rank===N.length,()=>`Error in ${et.Dilation2DBackpropInput}, dy `+`must have the same rank as output ${N.length}, but got `+`${s.rank}`);const j=et.util.toNestedArray(N,c.data.get(s.dataId).values),S=et.util.makeZerosNestedTypedArray(r.shape,r.dtype);for(let e=0;e<h;++e)for(let t=0;t<b;++t){const n=t*x-y.top;for(let r=0;r<g;++r){const a=r*v-y.left;for(let s=0;s<m;++s){let i=Number.MIN_SAFE_INTEGER,o=n<0?0:n,u=a<0?0:a;for(let t=0;t<w;++t){const r=n+t*O;if(r>=0&&r<p)for(let n=0;n<k;++n){const c=a+n*I;if(c>=0&&c<f){const a=l[e][r][c][s]+d[t][n][s];a>i&&(i=a,o=r,u=c)}}}S[e][o][u][s]+=j[e][t][r][s]}}}const T=c.write(et.util.toTypedArray(S,r.dtype),r.shape,r.dtype);return{dataId:T,shape:r.shape,dtype:r.dtype}}};var Fn=n(69),Rn=n(214);const Mn={kernelName:et.Sum,backendName:"cpu",kernelFunc:B},zn={kernelName:et.Einsum,backendName:"cpu",kernelFunc:W},Ln={kernelName:et.EluGrad,backendName:"cpu",kernelFunc:V},Pn=Object(dt.a)((e,t)=>e===t?1:0),Bn=Object(Bt.a)(et.Equal,Pn,null,"bool"),Wn={kernelName:et.Equal,backendName:"cpu",kernelFunc:Bn},Vn=et.backend_util.ERF_P,Un=et.backend_util.ERF_A1,Gn=et.backend_util.ERF_A2,Hn=et.backend_util.ERF_A3,qn=et.backend_util.ERF_A4,Kn=et.backend_util.ERF_A5,Xn=Object(it.a)(et.Erf,e=>{const t=Math.sign(e),n=Math.abs(e),r=1/(1+Vn*n);return t*(1-((((Kn*r+qn)*r+Hn)*r+Gn)*r+Un)*r*Math.exp(-n*n))}),Yn={kernelName:et.Erf,backendName:"cpu",kernelFunc:Xn};var Zn=n(136);const Qn={kernelName:et.ExpandDims,backendName:"cpu",kernelFunc:U};var Jn=n(187);const er=Object(dt.a)((e,t)=>e/t),tr=Object(Bt.a)(et.RealDiv,er),nr={kernelName:et.RealDiv,backendName:"cpu",kernelFunc:tr};var rr=n(99);const ar={kernelName:et.FFT,backendName:"cpu",kernelFunc:Y},sr={kernelName:et.Fill,backendName:"cpu",kernelFunc:Z},ir={kernelName:et.FlipLeftRight,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:r}=e,a=n,s=et.util.getTypedArrayFromDType(r.dtype,et.util.sizeFromShape(r.shape)),[i,o,u,c]=r.shape,l=a.data.get(r.dataId).values;for(let e=0;e<i;e++){const t=e*u*o*c;for(let e=0;e<o;e++){const n=e*(u*c);for(let r=0;r<u;r++){const a=r*c;for(let o=0;o<c;o++){const d=[i,e,r,o],h=d[2],p=Math.round(u-h),f=t+n+a+o;let m=l[f];if(p>=0&&p<u){const e=p*c,r=t+n+e+o;m=l[r]}s[f]=m}}}}const d=a.write(s,r.shape,r.dtype);return{dataId:d,shape:r.shape,dtype:r.dtype}}};var or=n(188);const ur=Object(dt.a)((e,t)=>Math.floor(e/t)),cr=Object(Bt.a)(et.FloorDiv,ur,null,"int32"),lr={kernelName:et.FloorDiv,backendName:"cpu",kernelFunc:cr},dr={kernelName:et.FusedConv2D,backendName:"cpu",kernelFunc:J},hr={kernelName:et.FusedDepthwiseConv2D,backendName:"cpu",kernelFunc:ee},pr={kernelName:et.GatherNd,backendName:"cpu",kernelFunc:te};var fr=n(189);const mr={kernelName:et.GatherV2,backendName:"cpu",kernelFunc:ne};var br=n(190);const gr=Object(dt.a)((e,t)=>e>=t?1:0),yr=Object(Bt.a)(et.GreaterEqual,gr,null,"bool"),xr={kernelName:et.GreaterEqual,backendName:"cpu",kernelFunc:yr},vr={kernelName:et.IFFT,backendName:"cpu",kernelFunc:re},wr=Object(it.a)(et.IsFinite,e=>Number.isFinite(e)?1:0,"bool"),kr={kernelName:et.IsFinite,backendName:"cpu",kernelFunc:wr},Or=Object(it.a)(et.IsInf,e=>Math.abs(e)===1/0?1:0,"bool"),Ir={kernelName:et.IsInf,backendName:"cpu",kernelFunc:Or},Nr=Object(it.a)(et.IsNan,e=>Number.isNaN(e)?1:0,"bool"),jr={kernelName:et.IsNan,backendName:"cpu",kernelFunc:Nr};var Sr=n(191);const Tr=Object(dt.a)((e,t)=>e<=t?1:0),Cr=Object(Bt.a)(et.LessEqual,Tr,null,"bool"),Er={kernelName:et.LessEqual,backendName:"cpu",kernelFunc:Cr};var $r=n(192);const Ar={kernelName:et.LinSpace,backendName:"cpu",kernelFunc:ae};var _r=n(193);const Dr=Object(it.a)(et.Log1p,e=>Math.log1p(e)),Fr={kernelName:et.Log1p,backendName:"cpu",kernelFunc:Dr},Rr=Object(dt.a)((e,t)=>e&&t),Mr=Object(Bt.a)(et.LogicalAnd,Rr,null,"bool"),zr={kernelName:et.LogicalAnd,backendName:"cpu",kernelFunc:Mr},Lr=Object(it.a)(et.LogicalNot,e=>e?0:1,"bool"),Pr={kernelName:et.LogicalNot,backendName:"cpu",kernelFunc:Lr},Br=Object(dt.a)((e,t)=>e||t),Wr=Object(Bt.a)(et.LogicalOr,Br,null,"bool"),Vr={kernelName:et.LogicalOr,backendName:"cpu",kernelFunc:Wr},Ur={kernelName:et.LRN,backendName:"cpu",kernelFunc:se},Gr={kernelName:et.LRNGrad,backendName:"cpu",kernelFunc:ie};var Hr=n(194),qr=n(137);const Kr={kernelName:et.Max,backendName:"cpu",kernelFunc:oe};var Xr=n(195);const Yr={kernelName:et.MaxPool,backendName:"cpu",kernelFunc:ue},Zr={kernelName:et.MaxPool3D,backendName:"cpu",kernelFunc:ce},Qr={kernelName:et.MaxPool3DGrad,backendName:"cpu",kernelFunc:le},Jr={kernelName:et.MaxPoolGrad,backendName:"cpu",kernelFunc:de},ea={kernelName:et.MaxPoolWithArgmax,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{filterSize:a,strides:s,pad:i,includeBatchInIndex:o}=t,u=n;Object(tt.a)(r,"MaxPoolWithArgmax");const c=u.data.get(r.dataId).values,l=et.backend_util.computePool2DInfo(r.shape,a,s,[1,1],i),[d,h]=he(c,r.shape,r.dtype,o,l),p=u.write(d,l.outShape,r.dtype),f=u.write(h,l.outShape,r.dtype);return[{dataId:p,shape:l.outShape,dtype:r.dtype},{dataId:f,shape:l.outShape,dtype:"int32"}]}},ta={kernelName:et.Mean,backendName:"cpu",kernelFunc:pe},na={kernelName:et.Min,backendName:"cpu",kernelFunc:fe};var ra=n(196);const aa={kernelName:et.MirrorPad,backendName:"cpu",kernelFunc:me},sa=Object(dt.a)((e,t)=>{const n=e%t;return e<0&&t<0||e>=0&&t>=0?n:(n+t)%t}),ia=Object(Bt.a)(et.Mod,sa),oa={kernelName:et.Mod,backendName:"cpu",kernelFunc:ia};var ua=n(86);const ca={kernelName:et.Softmax,backendName:"cpu",kernelFunc:be},la={kernelName:et.Multinomial,backendName:"cpu",kernelFunc:ge};var da=n(197);const ha=et.kernel_impls.nonMaxSuppressionV3Impl,pa={kernelName:et.NonMaxSuppressionV3,backendName:"cpu",kernelFunc:ye},fa=et.kernel_impls.nonMaxSuppressionV4Impl,ma={kernelName:et.NonMaxSuppressionV4,backendName:"cpu",kernelFunc:xe},ba=et.kernel_impls.nonMaxSuppressionV5Impl,ga={kernelName:et.NonMaxSuppressionV5,backendName:"cpu",kernelFunc:ve};var ya=n(198);const xa={kernelName:et.OneHot,backendName:"cpu",kernelFunc:we},va={kernelName:et.ZerosLike,backendName:"cpu",kernelFunc:ke},wa={kernelName:et.OnesLike,backendName:"cpu",kernelFunc:Oe},ka={kernelName:et.Pack,backendName:"cpu",kernelFunc:Ie},Oa={kernelName:et.PadV2,backendName:"cpu",kernelFunc:Ne},Ia=Object(dt.a)((e,t)=>Math.pow(e,t)),Na=Object(Bt.a)(et.Pow,Ia),ja={kernelName:et.Pow,backendName:"cpu",kernelFunc:Na};var Sa=n(199),Ta=n(200);const Ca={kernelName:et.Range,backendName:"cpu",kernelFunc:je},Ea=Object(it.a)(et.Reciprocal,e=>1/e),$a={kernelName:et.Reciprocal,backendName:"cpu",kernelFunc:Ea},Aa={kernelName:et.ResizeBilinear,backendName:"cpu",kernelFunc:Se},_a={kernelName:et.ResizeBilinearGrad,backendName:"cpu",kernelFunc:Te},Da={kernelName:et.ResizeNearestNeighbor,backendName:"cpu",kernelFunc:Ce},Fa={kernelName:et.ResizeNearestNeighborGrad,backendName:"cpu",kernelFunc:Ee},Ra={kernelName:et.Reverse,backendName:"cpu",kernelFunc:$e},Ma={kernelName:et.RotateWithOffset,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:r}=e,{radians:a,fillValue:s,center:i}=t,o=n,u=et.util.getTypedArrayFromDType(r.dtype,et.util.sizeFromShape(r.shape)),[c,l,d,h]=r.shape,[p,f]=et.backend_util.getImageCenter(i,l,d),m=255,b=Math.sin(a),g=Math.cos(a),y=o.data.get(r.dataId).values;for(let e=0;e<c;e++){const t=e*d*l*h;for(let e=0;e<l;e++){const n=e*(d*h);for(let r=0;r<d;r++){const a=r*h;for(let i=0;i<h;i++){const o=[c,e,r,i],x=o[2],v=o[1];let w=(x-p)*g-(v-f)*b,k=(x-p)*b+(v-f)*g;w=Math.round(w+p),k=Math.round(k+f);let O=s;if("number"!=typeof s&&(O=3===i?m:s[i]),w>=0&&w<d&&k>=0&&k<l){const e=k*(d*h),n=w*h,r=t+e+n+i;O=y[r]}const I=t+n+a+i;u[I]=O}}}}const x=o.write(u,r.shape,r.dtype);return{dataId:x,shape:r.shape,dtype:r.dtype}}},za=Object(it.a)(et.Round,e=>{const t=Math.floor(e);return e-t<.5?Math.floor(e):e-t>.5?Math.ceil(e):t%2==0?t:t+1}),La={kernelName:et.Round,backendName:"cpu",kernelFunc:za};var Pa=n(201);const Ba={kernelName:et.ScatterNd,backendName:"cpu",kernelFunc:_e},Wa={kernelName:et.Select,backendName:"cpu",kernelFunc:De},Va=et.backend_util.SELU_SCALEALPHA,Ua=et.backend_util.SELU_SCALE,Ga=Object(it.a)(et.Selu,e=>e>=0?Ua*e:Va*(Math.exp(e)-1)),Ha={kernelName:et.Selu,backendName:"cpu",kernelFunc:Ga},qa=Object(it.a)(et.Sign,e=>e<0?-1:e>0?1:0),Ka={kernelName:et.Sign,backendName:"cpu",kernelFunc:qa},Xa=Object(it.a)(et.Sin,e=>Math.sin(e)),Ya={kernelName:et.Sin,backendName:"cpu",kernelFunc:Xa},Za=Object(it.a)(et.Sinh,e=>Math.sinh(e)),Qa={kernelName:et.Sinh,backendName:"cpu",kernelFunc:Za},Ja=1.1920928955078125e-7,es=Math.log(Ja)+2,ts=Object(it.a)(et.Softplus,e=>{const t=e>-es,n=e<es,r=Math.exp(e);let a;return a=n?r:t?e:Math.log(1+r),a}),ns={kernelName:et.Softplus,backendName:"cpu",kernelFunc:ts},rs={kernelName:et.SpaceToBatchND,backendName:"cpu",kernelFunc:Fe};var as=n(202);const ss={kernelName:et.SparseReshape,backendName:"cpu",kernelFunc:Re},is={kernelName:et.SparseToDense,backendName:"cpu",kernelFunc:Me},os={kernelName:et.SplitV,backendName:"cpu",kernelFunc:ze},us=Object(it.a)(et.Sqrt,e=>Math.sqrt(e)),cs={kernelName:et.Sqrt,backendName:"cpu",kernelFunc:us},ls={kernelName:et.Square,backendName:"cpu",kernelFunc:({inputs:e,backend:t})=>{const{x:n}=e,r=t;Object(tt.a)(n,"square");const a=r.data.get(n.dataId).values,s=new Float32Array(a.length);for(let e=0;e<a.length;++e){const t=a[e];s[e]=t*t}const i=r.write(s,n.shape,n.dtype);return{dataId:i,shape:n.shape,dtype:n.dtype}}};var ds=n(203);const hs=Object(it.a)(et.Step,(e,t)=>{const n=t;return isNaN(e)?NaN:e>0?1:n.alpha}),ps={kernelName:et.Step,backendName:"cpu",kernelFunc:hs};var fs=n(204);const ms={kernelName:et.StridedSlice,backendName:"cpu",kernelFunc:Le},bs=Object(it.a)(et.Tan,e=>Math.tan(e)),gs={kernelName:et.Tan,backendName:"cpu",kernelFunc:bs},ys=Object(it.a)(et.Tanh,e=>Math.tanh(e)),xs={kernelName:et.Tanh,backendName:"cpu",kernelFunc:ys};var vs=n(205);const ws={kernelName:et.Tile,backendName:"cpu",kernelFunc:Pe};var ks=n(206);const Os={kernelName:et.TopK,backendName:"cpu",kernelFunc:Be},Is={kernelName:et.Transform,backendName:"cpu",kernelFunc:We};var Ns=n(207);const js={kernelName:et.Unique,backendName:"cpu",kernelFunc:Ze},Ss={kernelName:et.Unpack,backendName:"cpu",kernelFunc:Qe},Ts={kernelName:et.UnsortedSegmentSum,backendName:"cpu",kernelFunc:Je},Cs=[Ot,It.a,jt,Tt,vt.b,Ct,$t,At,_t,Dt,Rt,zt,Pt,Ut,Ht,qt,Kt,Xt,Yt,kt,Zt,Jt,tn,nn.b,rn.a,sn,on.b,cn,pn,mn,bn,fn,yn,xn,gn,wn,On,In,Nn,jn,Sn,Tn,Cn,En,$n,An,Dn,_n,nr,zn,ut,Ln,Wn,Yn,Zn.b,Qn,Jn.a,ar,sr,ir,or.a,lr,dr,hr,pr,mr,br.a,xr,ct.b,vr,dn,kr,Ir,jr,lt,Sr.a,Er,Ar,_r.a,Fr,zr,Pr,Vr,Ur,Gr,Xr.a,Yr,Zr,Qr,Jr,ea,Kr,ta,na,ra.a,aa,oa,la,Fn.b,da.a,pa,ma,ga,ya.a,xa,wa,ka,Oa,ja,pt,Sa.a,Ca,hn.b,$a,mt,gt,wt,Aa,_a,Da,Fa,Ra,Ma,La,Pa.a,Ba,Wa,Ha,xt,Ka,Ya,Qa,Qt.b,ca,ns,rs,ss,is,os,cs,ls,ds.a,ps,ms,rr.b,Mn,gs,xs,ws,Os,Et.b,Is,js,Ss,Ts,va];for(const e of Cs)Object(et.registerKernel)(e)},function(e,t,n){"use strict";function r(e,t=null){return new class extends x{constructor(){super(...arguments),this.size=t}async iterator(){return e()}}}function a(e){return r(async()=>Object(g.f)(e),e.length)}function s(e){if(!Object(y.e)(e))throw new Error("The argument to zip() must be an object or array.");let t;if(Array.isArray(e))for(let n=0;n<e.length;n++)t=null==t?e[n].size:Math.min(t,e[n].size);else if(e instanceof Object)for(const n in e)t=null==t?e[n].size:Math.min(t,e[n].size);return r(async()=>{const t=await Object(y.c)(e,e=>{if(e instanceof x)return{value:e.iterator(),recurse:!1};if(Object(y.e)(e))return{value:null,recurse:!0};throw new Error("Leaves of the structure passed to zip() must be Datasets, not primitives.")});return Object(g.g)(t,g.c.SHORTEST)},t)}function i(e){if(null===e)return null;const t=e[0];if(Object(y.a)(t)){const t=o(e);return{value:t,recurse:!1}}return{value:null,recurse:!0}}function o(e){if(0===e.length)throw new Error("Can't make a batch of zero elements.");return e[0]instanceof m.Tensor?m.stack(e):m.tensor(e)}async function u(e,t={}){let n,r;"string"==typeof e?n=e:(n=e.url,r=_(e));const a=await m.util.fetch(n,r);if(a.ok){const e=new Uint8Array(await a.arrayBuffer());return new A(e,t)}throw new Error(a.statusText)}function c(e){return"string"==typeof e&&"file://"===e.substr(0,7)}function l(e,t={}){return new S(new F(e),t)}function d(e){const t=Object(g.e)(e);return r(async()=>t)}function h(e){return r(async()=>{const t=await e();return Object(g.e)(()=>t.next())})}async function p(e,t){return C.create(e,t)}async function f(e){return T.create(e)}n.r(t),n.d(t,"array",function(){return a}),n.d(t,"Dataset",function(){return x}),n.d(t,"zip",function(){return s}),n.d(t,"CSVDataset",function(){return S}),n.d(t,"TextLineDataset",function(){return v}),n.d(t,"csv",function(){return l}),n.d(t,"func",function(){return d}),n.d(t,"generator",function(){return h}),n.d(t,"microphone",function(){return f}),n.d(t,"webcam",function(){return p}),n.d(t,"FileDataSource",function(){return D}),n.d(t,"URLDataSource",function(){return F}),n.d(t,"version_data",function(){return R});var m=n(0),b=n(86),g=n(45),y=n(74);class x{constructor(){this.size=null}batch(e,t=!0){const n=this;let a;return m.util.assert(e>0,()=>`batchSize needs to be positive, but it is\n      ${e}`),a=this.size===1/0||null==this.size?this.size:t?Math.ceil(this.size/e):Math.floor(this.size/e),r(async()=>(await n.iterator()).columnMajorBatch(e,t,i),a)}concatenate(e){const t=this;let n;return n=this.size===1/0||e.size===1/0?1/0:null!=this.size&&null!=e.size?this.size+e.size:null,r(async()=>(await t.iterator()).concatenate(await e.iterator()),n)}filter(e){const t=this;let n;return n=this.size===1/0?1/0:null,r(async()=>(await t.iterator()).filter(t=>m.tidy(()=>e(t))),n)}async forEachAsync(e){return(await this.iterator()).forEachAsync(e)}map(e){const t=this;return r(async()=>(await t.iterator()).map(t=>m.tidy(()=>e(t))),this.size)}mapAsync(e){const t=this;return r(async()=>(await t.iterator()).mapAsync(e),this.size)}prefetch(e){if(null==e)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");const t=this;return r(async()=>(await t.iterator()).prefetch(e),this.size)}repeat(e){const t=this;let n;return n=null!=this.size&&e>0?this.size*e:0===e?0:null!=this.size&&(void 0===e||e<0)?1/0:null,r(async()=>{const n=Object(g.e)(async()=>({value:await t.iterator(),done:!1}));return Object(g.d)(n.take(e))},n)}skip(e){const t=this;let n;return n=null!=this.size&&e>=0&&this.size>=e?this.size-e:null!=this.size&&(this.size<e||void 0===e||e<0)?0:null,r(async()=>(await t.iterator()).skip(e),n)}shuffle(e,t,n=!0){if(null==e||e<0)throw null==this.size?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError("`Dataset.shuffle()` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for `tf.Tensor`s), consider setting "+`bufferSize to the dataset size (${this.size} elements)`);const a=this,s=b.alea(t||m.util.now().toString());return r(async()=>{let t=s.int32();return n&&(t+=s.int32()),(await a.iterator()).shuffle(e,t.toString())},this.size)}take(e){const t=this;let n;return n=null!=this.size&&this.size>e?e:null!=this.size&&this.size<=e?this.size:null,r(async()=>(await t.iterator()).take(e),n)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}}x.MAX_BUFFER_SIZE=1e4;class v extends x{constructor(e){super(),this.input=e}async iterator(){const e=await this.input.iterator(),t=e.decodeUTF8(),n=t.split("\n").map(e=>(e.endsWith("\r")&&(e=e.slice(0,-1)),e));return n}}const w='"',k=Symbol("out"),O=Symbol("field"),I=Symbol("quote"),N=Symbol("quoteafterquote"),j=Symbol("quoteinquote");class S extends x{constructor(e,t){super(),this.input=e,this.hasHeader=!0,this.fullColumnNames=null,this.columnNamesValidated=!1,this.columnConfigs=null,this.configuredColumnsOnly=!1,this.delimiter=",",this.delimWhitespace=!1,this.base=new v(e),t||(t={}),this.hasHeader=!1!==t.hasHeader,this.fullColumnNames=t.columnNames,this.columnConfigs=t.columnConfigs,this.configuredColumnsOnly=t.configuredColumnsOnly,t.delimWhitespace?(m.util.assert(null==t.delimiter,()=>"Delimiter should not be provided when delimWhitespace is true."),this.delimWhitespace=!0,this.delimiter=" "):this.delimiter=t.delimiter?t.delimiter:","}async columnNames(){return this.columnNamesValidated||await this.setColumnNames(),this.configuredColumnsOnly?Object.keys(this.columnConfigs):this.fullColumnNames}async setColumnNames(){const e=await this.maybeReadHeaderLine();if(!this.fullColumnNames&&!e)throw new Error("Column names must be provided if there is no header line.");this.fullColumnNames&&e&&m.util.assert(e.length===this.fullColumnNames.length,()=>"The length of provided columnNames ("+this.fullColumnNames.length.toString()+") does not match the length of the header line read from file ("+e.length.toString()+")."),this.fullColumnNames||(this.fullColumnNames=e);const t=this.fullColumnNames.reduce((e,t)=>(e[t]=e[t]+1||1,e),{}),n=Object.keys(t).filter(e=>t[e]>1);if(m.util.assert(0===n.length,()=>"Duplicate column names found: "+n.toString()),this.columnConfigs)for(const e of Object.keys(this.columnConfigs)){const t=this.fullColumnNames.indexOf(e);if(-1===t)throw new Error('The key "'+e+'" provided in columnConfigs does not match any of the column names ('+this.fullColumnNames.toString()+").")}this.columnNamesValidated=!0}async maybeReadHeaderLine(){if(this.hasHeader){const e=await this.base.iterator(),t=await e.next();if(t.done)throw new Error("No data was found for CSV parsing.");const n=t.value,r=this.parseRow(n,!1);return r}return null}async iterator(){this.columnNamesValidated||await this.setColumnNames();let e=await this.base.iterator();return this.hasHeader&&(e=e.skip(1)),e.map(e=>this.makeDataElement(e))}makeDataElement(e){const t=this.parseRow(e),n={},r={};for(let a=0;a<this.fullColumnNames.length;a++){const s=this.fullColumnNames[a],i=this.columnConfigs?this.columnConfigs[s]:null;if(!this.configuredColumnsOnly||i){const o=t[a];let u=null;if(""===o)if(i&&void 0!==i.default)u=i.default;else{if(i&&(i.required||i.isLabel))throw new Error(`Required column ${s} is empty in this line: ${e}`);u=void 0}else{const e=Number(o);if(isNaN(e))u=i&&"bool"===i.dtype?this.getBoolean(o):o;else if(i&&i.dtype)switch(i.dtype){case"float32":u=e;break;case"int32":u=Math.floor(e);break;case"bool":u=this.getBoolean(o);break;default:u=e}else u=e}i&&i.isLabel?r[s]=u:n[s]=u}}return 0===Object.keys(r).length?n:{xs:n,ys:r}}getBoolean(e){return"1"===e||"true"===e.toLowerCase()?1:0}parseRow(e,t=!0){const n=[];let r=0;const a=e.length;let s=k;for(let t=0;t<a;t++)switch(s){case k:switch(e.charAt(t)){case w:r=t+1,s=I;break;case this.delimiter:if(r=t+1," "===this.delimiter&&this.delimWhitespace)break;n.push(""),s=k;break;default:s=O,r=t}break;case O:switch(e.charAt(t)){case this.delimiter:n.push(e.substring(r,t)),s=k,r=t+1}break;case I:switch(e.charAt(t)){case w:s=N}break;case N:switch(e.charAt(t)){case this.delimiter:n.push(e.substring(r,t-1)),s=k,r=t+1;break;case w:s=I;break;default:s=j}break;case j:switch(e.charAt(t)){case w:s=I}}if(s===N?n.push(e.substring(r,a-1)):n.push(e.substring(r)),t&&n.length!==this.fullColumnNames.length)throw new Error(`Invalid row in csv file. Should have ${this.fullColumnNames.length} elements in a row, but got ${n}`);return n}}class T extends g.a{constructor(e){super(),this.microphoneConfig=e,this.isClosed=!1,this.fftSize=e.fftSize||1024;const t=Math.log2(this.fftSize);if(this.fftSize<0||t<4||t>14||!Number.isInteger(t))throw new Error("Invalid fftSize: it must be a power of 2 between "+`2 to 4 and 2 to 14, but got ${this.fftSize}`);if(this.numFrames=e.numFramesPerSpectrogram||43,this.sampleRateHz=e.sampleRateHz,this.columnTruncateLength=e.columnTruncateLength||this.fftSize,this.audioTrackConstraints=e.audioTrackConstraints,this.smoothingTimeConstant=e.smoothingTimeConstant||0,this.includeSpectrogram=!1!==e.includeSpectrogram,this.includeWaveform=!0===e.includeWaveform,!this.includeSpectrogram&&!this.includeWaveform)throw new Error("Both includeSpectrogram and includeWaveform are false. At least one type of data should be returned.")}summary(){return"microphone"}static async create(e={}){if(Object(m.env)().get("IS_NODE"))throw new Error("microphone API is only supported in browser environment.");const t=new T(e);return await t.start(),t}async start(){try{this.stream=await navigator.mediaDevices.getUserMedia({audio:null==this.audioTrackConstraints||this.audioTrackConstraints,video:!1})}catch(e){throw new Error(`Error thrown while initializing video stream: ${e.message}`)}if(!this.stream)throw new Error("Could not obtain audio from microphone.");const e=window.AudioContext||window.webkitAudioContext;if(this.audioContext=new e,this.sampleRateHz){if(this.audioContext.sampleRate!==this.sampleRateHz)throw new Error("Mismatch in sampling rate: "+`Expected: ${this.sampleRateHz}; `+`Actual: ${this.audioContext.sampleRate}`)}else this.sampleRateHz=this.audioContext.sampleRate;const t=this.audioContext.createMediaStreamSource(this.stream);this.analyser=this.audioContext.createAnalyser(),this.analyser.fftSize=2*this.fftSize,this.analyser.smoothingTimeConstant=this.smoothingTimeConstant,t.connect(this.analyser),this.freqData=new Float32Array(this.fftSize),this.timeData=new Float32Array(this.fftSize)}async next(){if(this.isClosed)return{value:null,done:!0};let e,t;const n=await this.getAudioData();if(this.includeSpectrogram){const t=this.flattenQueue(n.freqDataQueue);e=this.getTensorFromAudioDataArray(t,[this.numFrames,this.columnTruncateLength,1])}if(this.includeWaveform){const e=this.flattenQueue(n.timeDataQueue);t=this.getTensorFromAudioDataArray(e,[this.numFrames*this.fftSize,1])}return{value:{spectrogram:e,waveform:t},done:!1}}async capture(){return(await this.next()).value}async getAudioData(){const e=[],t=[];let n=0;return new Promise(r=>{const a=setInterval(()=>{this.includeSpectrogram&&(this.analyser.getFloatFrequencyData(this.freqData),this.freqData[0]===-1/0&&r({freqDataQueue:e,timeDataQueue:t}),e.push(this.freqData.slice(0,this.columnTruncateLength))),this.includeWaveform&&(this.analyser.getFloatTimeDomainData(this.timeData),t.push(this.timeData.slice())),++n===this.numFrames&&(clearInterval(a),r({freqDataQueue:e,timeDataQueue:t}))},this.fftSize/this.sampleRateHz*1e3)})}stop(){this.isClosed||(this.isClosed=!0,this.analyser.disconnect(),this.audioContext.close(),null!=this.stream&&this.stream.getTracks().length>0&&this.stream.getTracks()[0].stop())}toArray(){throw new Error("Can not convert infinite audio stream to array.")}getSampleRate(){return this.sampleRateHz}flattenQueue(e){const t=e[0].length,n=new Float32Array(e.length*t);return e.forEach((e,r)=>n.set(e,r*t)),n}getTensorFromAudioDataArray(e,t){const n=new Float32Array(m.util.sizeFromShape(t));return n.set(e,n.length-e.length),Object(m.tensor)(n,t)}}class C extends g.a{constructor(e,t){if(super(),this.webcamVideoElement=e,this.webcamConfig=t,this.isClosed=!0,this.resize=!1,this.needToResize())if(this.resize=!0,this.cropSize=[this.webcamConfig.resizeHeight,this.webcamConfig.resizeWidth],this.cropBoxInd=Object(m.tensor1d)([0],"int32"),this.webcamConfig.centerCrop){const e=1*this.webcamConfig.resizeWidth/this.webcamVideoElement.width,t=1*this.webcamConfig.resizeHeight/this.webcamVideoElement.height,n=(1-e)/2,r=(1-t)/2,a=n+e,s=t+r;this.cropBox=Object(m.tensor2d)([r,n,s,a],[1,4])}else this.cropBox=Object(m.tensor2d)([0,0,1,1],[1,4])}summary(){return"webcam"}static async create(e,t={}){if(Object(m.env)().get("IS_NODE"))throw new Error("tf.data.webcam is only supported in browser environment.");if(!e){if(e=document.createElement("video"),
!t.resizeWidth||!t.resizeHeight)throw new Error("Please provide webcam video element, or resizeWidth and resizeHeight to create a hidden video element.");e.width=t.resizeWidth,e.height=t.resizeHeight}const n=new C(e,t);return await n.start(),n}async start(){this.webcamConfig.facingMode&&m.util.assert("user"===this.webcamConfig.facingMode||"environment"===this.webcamConfig.facingMode,()=>`Invalid webcam facing mode: ${this.webcamConfig.facingMode}. `+"Please provide 'user' or 'environment'");try{this.stream=await navigator.mediaDevices.getUserMedia({video:{deviceId:this.webcamConfig.deviceId,facingMode:this.webcamConfig.facingMode?this.webcamConfig.facingMode:"user",width:this.webcamVideoElement.width,height:this.webcamVideoElement.height}})}catch(e){throw e.message=`Error thrown while initializing video stream: ${e.message}`,e}if(!this.stream)throw new Error("Could not obtain video from webcam.");try{this.webcamVideoElement.srcObject=this.stream}catch(e){console.log(e),this.webcamVideoElement.src=window.URL.createObjectURL(this.stream)}return this.webcamVideoElement.play(),this.isClosed=!1,new Promise(e=>{this.webcamVideoElement.onloadedmetadata=(()=>{e()})})}async next(){if(this.isClosed)return{value:null,done:!0};let e;try{e=m.browser.fromPixels(this.webcamVideoElement)}catch(e){throw new Error(`Error thrown converting video to pixels: ${JSON.stringify(e)}`)}if(!this.resize)return{value:e,done:!1};try{return{value:this.cropAndResizeFrame(e),done:!1}}catch(e){throw new Error(`Error thrown cropping the video: ${e.message}`)}finally{e.dispose()}}needToResize(){return!(!this.webcamConfig.resizeWidth||!this.webcamConfig.resizeHeight||this.webcamVideoElement.width===this.webcamConfig.resizeWidth&&this.webcamVideoElement.height===this.webcamConfig.resizeHeight)}cropAndResizeFrame(e){return Object(m.tidy)(()=>{const t=Object(m.expandDims)(Object(m.cast)(e,"float32"),0);let n;n=m.image.cropAndResize(t,this.cropBox,this.cropBoxInd,this.cropSize,"bilinear");const r=n.shape;return Object(m.reshape)(n,r.slice(1))})}async capture(){return(await this.next()).value}stop(){const e=this.stream.getTracks();e.forEach(e=>e.stop());try{this.webcamVideoElement.srcObject=null}catch(e){console.log(e),this.webcamVideoElement.src=null}this.isClosed=!0}toArray(){throw new Error("Can not convert infinite video stream to array.")}}class E{}var $=n(271);class A extends $.a{constructor(e,t={}){super(),this.file=e,this.options=t,m.util.assert(e instanceof Uint8Array||!!Object(m.env)().get("IS_BROWSER")&&(e instanceof File||e instanceof Blob),()=>"FileChunkIterator only supports File, Blob and Uint8Array right now."),this.offset=t.offset||0,this.chunkSize=t.chunkSize||1048576}summary(){return`FileChunks ${this.file}`}async next(){if(this.offset>=(this.file instanceof Uint8Array?this.file.byteLength:this.file.size))return{value:null,done:!0};const e=new Promise((e,t)=>{const n=this.offset+this.chunkSize;if(this.file instanceof Uint8Array)e(new Uint8Array(this.file.slice(this.offset,n)));else{const r=new FileReader;r.onload=(n=>{let a=r.result;if(a instanceof ArrayBuffer&&(a=new Uint8Array(a)),!(a instanceof Uint8Array))return t(new TypeError("FileReader returned unknown type."));e(a)}),r.onabort=(e=>t(new Error("Aborted"))),r.onerror=(e=>t(new Error(e.type)));const a=this.file.slice(this.offset,n);r.readAsArrayBuffer(a)}this.offset=n});return{value:await e,done:!1}}}const _=e=>{const t={method:e.method,headers:e.headers,body:e.body,mode:e.mode,credentials:e.credentials,cache:e.cache,redirect:e.redirect,referrer:e.referrer,integrity:e.integrity};return t};class D extends E{constructor(e,t={}){super(),this.input=e,this.options=t}async iterator(){if(c(this.input)&&Object(m.env)().get("IS_NODE")){const e=n(292);this.input=e.readFileSync(this.input.substr(7))}return new A(this.input,this.options)}}class F extends E{constructor(e,t={}){super(),this.url=e,this.fileOptions=t}async iterator(){return c(this.url)?new D(this.url,this.fileOptions).iterator():u(this.url,this.fileOptions)}}const R="3.5.0"},function(e,t,n){"use strict";function r(e,t){var n="";for(var r in t)n+=r+": "+t[r]+"\n";e.innerText=n}function a(){if(null!=G&&Z){var e=W.videoWidth,t=W.videoHeight,n=Math.min(e,t),r=n*L.params.faceFeedbackBoxRatio,a=(t-r)/2,s=(e-r)/2,i=s+r,o=a+r,u=Z.left.imagex,c=Z.left.imagey,l=Z.right.imagex,d=Z.right.imagey,h=!1,p=!1;u>s&&u<i&&l>s&&l<i&&(h=!0),c>a&&c<o&&d>a&&d<o&&(p=!0),G.style.border=h&&p?"solid green":"solid red"}else G.style.border="solid black"}function s(e,t,n){if(e)try{return ae.getEyePatches(e,t,n)}catch(e){return console.log("can't get pupil features ",e),null}}function i(e,t,n){e.width!=t&&(e.width=t),e.height!=n&&(e.height=n);var r=e.getContext("2d");r.drawImage(W,0,0,e.width,e.height)}async function o(e){var t=[];if(Z=await s(V,V.width,V.height),0===se.length)return console.log("regression not set, call setRegression()"),null;for(var n in se)t.push(se[n].predict(Z));return void 0!==e?null===t[e]?null:{x:t[e].x,y:t[e].y,eyeFeatures:Z}:0===t.length||null===t[0]?null:{x:t[0].x,y:t[0].y,eyeFeatures:Z,all:t}}async function u(){if(!J){i(V,V.width,V.height),Q=o();var e=performance.now()-Y;if(L.params.showFaceOverlay){var t=L.getTracker();U.getContext("2d").clearRect(0,0,W.videoWidth,W.videoHeight),t.drawFaceOverlay(U.getContext("2d"),t.getPositions())}if(L.params.showFaceFeedbackBox&&a(),Q=await Q,te(Q,e),Q){pe.push(Q);var n=0,r=0,s=pe.length;for(var c in pe.data)n+=pe.get(c).x,r+=pe.get(c).y;var l=S.bound({x:n/s,y:r/s});L.params.storingPoints&&(L.storePoints(l.x,l.y,fe),fe++,50==fe&&(fe=0)),L.params.showGazeDot&&(H.style.display="block"),H.style.transform="translate3d("+l.x+"px,"+l.y+"px,0)"}else H.style.display="none";requestAnimationFrame(u)}}async function c(){le=await g.getItem(ce),le=le||he;var e=await g.getItem(ue);for(var t in e=e||he,de=e,se)se[t].setData(e);console.log("loaded stored data into regression model")}async function l(){var e=se[0].getData()||de;g.setItem(ce,le),g.setItem(ue,e)}function d(){for(var e in g.clear(),se)se[e].init()}async function h(e){function t(e){f(W.videoWidth,W.videoHeight),L.setVideoViewerSize(L.params.videoViewerWidth,L.params.videoViewerHeight),B.appendChild(V),B.appendChild(U),B.appendChild(G),document.body.appendChild(H),e.target.removeEventListener(e.type,t)}var n="0px",r="0px";P=e,B=document.createElement("div"),B.id=L.params.videoContainerId,B.style.display=L.params.showVideo?"block":"none",B.style.position="fixed",B.style.top=n,B.style.left=r,B.style.width=L.params.videoViewerWidth+"px",B.style.height=L.params.videoViewerHeight+"px",W=document.createElement("video"),W.setAttribute("playsinline",""),W.id=L.params.videoElementId,W.srcObject=e,W.autoplay=!0,W.style.display=L.params.showVideo?"block":"none",W.style.position="absolute",W.style.width=L.params.videoViewerWidth+"px",W.style.height=L.params.videoViewerHeight+"px",V=document.createElement("canvas"),V.id=L.params.videoElementCanvasId,V.style.display="none",U=document.createElement("canvas"),U.id=L.params.faceOverlayId,U.style.display=L.params.showFaceOverlay?"block":"none",U.style.position="absolute",L.params.mirrorVideo&&(W.style.setProperty("-moz-transform","scale(-1, 1)"),W.style.setProperty("-webkit-transform","scale(-1, 1)"),W.style.setProperty("-o-transform","scale(-1, 1)"),W.style.setProperty("transform","scale(-1, 1)"),W.style.setProperty("filter","FlipH"),U.style.setProperty("-moz-transform","scale(-1, 1)"),U.style.setProperty("-webkit-transform","scale(-1, 1)"),U.style.setProperty("-o-transform","scale(-1, 1)"),U.style.setProperty("transform","scale(-1, 1)"),U.style.setProperty("filter","FlipH")),G=document.createElement("canvas"),G.id=L.params.faceFeedbackBoxId,G.style.display=L.params.showFaceFeedbackBox?"block":"none",G.style.border="solid",G.style.position="absolute",H=document.createElement("div"),H.id=L.params.gazeDotId,H.style.display=L.params.showGazeDot?"block":"none",H.style.position="fixed",H.style.zIndex=99999,H.style.left="-5px",H.style.top="-5px",H.style.background="red",H.style.borderRadius="100%",H.style.opacity="0.7",H.style.width="10px",H.style.height="10px",B.appendChild(W),document.body.appendChild(B),W.addEventListener("timeupdate",t),ye(),J=!1,Y=performance.now(),await u()}function p(){void 0===navigator.mediaDevices&&(navigator.mediaDevices={}),void 0===navigator.mediaDevices.getUserMedia&&(navigator.mediaDevices.getUserMedia=function(e){var t=navigator.webkitGetUserMedia||navigator.mozGetUserMedia;return t?new Promise(function(n,r){t.call(navigator,e,n,r)}):Promise.reject(new Error("Unfortunately, your browser does not support access to the webcam through the getUserMedia API. Try to use the latest version of Google Chrome, Mozilla Firefox, Opera, or Microsoft Edge instead."))})}function f(e,t){V&&(V.width=e,V.height=t),U&&(U.width=e,U.height=t)}n.r(t);n(274),n(294);const m={moveTickSize:50,videoContainerId:"webgazerVideoContainer",videoElementId:"webgazerVideoFeed",videoElementCanvasId:"webgazerVideoCanvas",faceOverlayId:"webgazerFaceOverlay",faceFeedbackBoxId:"webgazerFaceFeedbackBox",gazeDotId:"webgazerGazeDot",videoViewerWidth:320,videoViewerHeight:240,faceFeedbackBoxRatio:.66,showVideo:!0,mirrorVideo:!0,showFaceOverlay:!0,showFaceFeedbackBox:!0,showGazeDot:!0,camConstraints:{video:{width:{min:320,ideal:640,max:1920},height:{min:240,ideal:480,max:1080},facingMode:"user"}},dataTimestep:50,showVideoPreview:!0,applyKalmanFilter:!0,saveDataAcrossSessions:!0,storingPoints:!1};var b=m;window.requestAnimFrame=window.requestAnimationFrame||window.webkitRequestAnimationFrame||window.mozRequestAnimationFrame||window.oRequestAnimationFrame||window.msRequestAnimationFrame||function(e,t){return window.setTimeout(e,1e3/60)},window.cancelRequestAnimFrame=window.cancelCancelRequestAnimationFrame||window.webkitCancelRequestAnimationFrame||window.mozCancelRequestAnimationFrame||window.oCancelRequestAnimationFrame||window.msCancelRequestAnimationFrame||window.clearTimeout;var g=n(141),y=n(273);const x=function(){this.model=y.load({maxFaces:1}),this.predictionReady=!1};x.prototype.positionsArray=null,x.prototype.getEyePatches=async function(e,t,n){if(0===e.width)return null;const r=await this.model,a=await r.estimateFaces(e);if(0==a.length)return!1;this.positionsArray=a[0].scaledMesh;const s=this.positionsArray;var i=Math.round(Math.min(s[247][0],s[130][0],s[25][0])),o=Math.round(Math.min(s[247][1],s[27][1],s[190][1])),u=Math.round(Math.max(s[190][0],s[243][0],s[233][0])-i),c=Math.round(Math.max(s[25][1],s[23][1],s[112][1])-o),l=Math.round(Math.min(s[414][0],s[463][0],s[453][0])),d=Math.round(Math.min(s[414][1],s[257][1],s[467][1])),h=Math.round(Math.max(s[467][0],s[359][0],s[255][0])-l),p=Math.round(Math.max(s[341][1],s[253][1],s[255][1])-d);if(0===u||0===h)return console.log("an eye patch had zero width"),null;if(0===c||0===p)return console.log("an eye patch had zero height"),null;var f={},m=e.getContext("2d").getImageData(i,o,u,c);f.left={patch:m,imagex:i,imagey:o,width:u,height:c};var b=e.getContext("2d").getImageData(l,d,h,p);return f.right={patch:b,imagex:l,imagey:d,width:h,height:p},this.predictionReady=!0,f},x.prototype.getPositions=function(){return this.positionsArray},x.prototype.reset=function(){console.log("Unimplemented; Tracking.js has no obvious reset function")},x.prototype.drawFaceOverlay=function(e,t){if(t){e.fillStyle="#32EEDB",e.strokeStyle="#32EEDB",e.lineWidth=.5;for(let n=0;n<t.length;n++){const r=t[n][0],a=t[n][1];e.beginPath(),e.arc(r,a,1,0,2*Math.PI),e.closePath(),e.fill()}}},x.prototype.name="TFFaceMesh";var v=x;const w={transpose:function(e){for(var t=e.length,n=e[0].length,r=new Array(n),a=0;a<t;a++)for(var s=0;s<n;s++)0===a&&(r[s]=new Array(t)),r[s][a]=e[a][s];return r},getMatrix:function(e,t,n,r){for(var a=new Array(t.length),s=r-n+1,i=0;i<t.length;i++){a[i]=new Array(s);for(var o=n;o<=r;o++)a[i][o-n]=e[t[i]][o]}return a},getSubMatrix:function(e,t,n,r,a){for(var s=a-r+1,i=new Array(n-t+1),o=t;o<=n;o++){var u=o-t;i[u]=new Array(s);for(var c=r;c<=a;c++)i[u][c-r]=e[o][c]}return i},mult:function(e,t){t.length!=e[0].length&&console.log("Matrix inner dimensions must agree:");for(var n=new Array(e.length),r=new Array(e[0].length),a=0;a<t[0].length;a++){for(var s=0;s<e[0].length;s++)r[s]=t[s][a];for(var i=0;i<e.length;i++){0===a&&(n[i]=new Array(t[0].length));var o=e[i],u=0;for(s=0;s<e[0].length;s++)u+=o[s]*r[s];n[i][a]=u}}return n},LUDecomposition:function(e,t){for(var n=new Array(e.length),r=0;r<e.length;r++){n[r]=new Array(e[0].length);for(var a=0;a<e[0].length;a++)n[r][a]=e[r][a]}var s=e.length,i=e[0].length,o=new Array(s);for(r=0;r<s;r++)o[r]=r;var u=1,c=new Array,l=new Array(s);for(a=0;a<i;a++){for(r=0;r<s;r++)l[r]=n[r][a];for(r=0;r<s;r++){c=n[r];for(var d=Math.min(r,a),h=0,p=0;p<d;p++)h+=c[p]*l[p];c[a]=l[r]-=h}var f=a;for(r=a+1;r<s;r++)Math.abs(l[r])>Math.abs(l[f])&&(f=r);if(f!=a){for(p=0;p<i;p++){var m=n[f][p];n[f][p]=n[a][p],n[a][p]=m}p=o[f];o[f]=o[a],o[a]=p,u=-u}if(a<s&0!=n[a][a])for(r=a+1;r<s;r++)n[r][a]/=n[a][a]}t.length!=s&&console.log("Matrix row dimensions must agree.");for(a=0;a<i;a++)0===n[a][a]&&console.log("Matrix is singular.");var b=t[0].length,g=self.webgazer.mat.getMatrix(t,o,0,b-1);for(p=0;p<i;p++)for(r=p+1;r<i;r++)for(a=0;a<b;a++)g[r][a]-=g[p][a]*n[r][p];for(p=i-1;p>=0;p--){for(a=0;a<b;a++)g[p][a]/=n[p][p];for(r=0;r<p;r++)for(a=0;a<b;a++)g[r][a]-=g[p][a]*n[r][p]}return g},QRDecomposition:function(e,t){for(var n=new Array(e.length),r=0;r<e.length;r++){n[r]=new Array(e[0].length);for(var a=0;a<e[0].length;a++)n[r][a]=e[r][a]}for(var s,i=e.length,o=e[0].length,u=new Array(o),c=0;c<o;c++){s=0;for(r=c;r<i;r++)s=Math.hypot(s,n[r][c]);if(0!=s){n[c][c]<0&&(s=-s);for(r=c;r<i;r++)n[r][c]/=s;n[c][c]+=1;for(a=c+1;a<o;a++){var l=0;for(r=c;r<i;r++)l+=n[r][c]*n[r][a];l=-l/n[c][c];for(r=c;r<i;r++)n[r][a]+=l*n[r][c]}}u[c]=-s}t.length!=i&&console.log("Matrix row dimensions must agree.");for(a=0;a<o;a++)0===u[a]&&console.log("Matrix is rank deficient");var d=t[0].length,h=new Array(t.length);for(r=0;r<t.length;r++)h[r]=new Array(t[0].length);for(r=0;r<t.length;r++)for(a=0;a<t[0].length;a++)h[r][a]=t[r][a];for(c=0;c<o;c++)for(a=0;a<d;a++){for(l=0,r=c;r<i;r++)l+=n[r][c]*h[r][a];l=-l/n[c][c];for(r=c;r<i;r++)h[r][a]+=l*n[r][c]}for(c=o-1;c>=0;c--){for(a=0;a<d;a++)h[c][a]/=u[c];for(r=0;r<c;r++)for(a=0;a<d;a++)h[r][a]-=h[c][a]*n[r][c]}return w.getSubMatrix(h,0,o-1,0,d-1)}};var k=w,O=n(46);const I={};var N=10,j=6;I.Eye=function(e,t,n,r,a){this.patch=e,this.imagex=t,this.imagey=n,this.width=r,this.height=a},I.getEyeFeats=function(e){var t=this.resizeEye(e.left,N,j),n=this.resizeEye(e.right,N,j),r=this.grayscale(t.data,t.width,t.height),a=this.grayscale(n.data,n.width,n.height),s=[];this.equalizeHistogram(r,5,s);var i=[];this.equalizeHistogram(a,5,i);Array.prototype.slice.call(s),Array.prototype.slice.call(i);return s.concat(i)},I.DataWindow=function(e,t){this.data=[],this.windowSize=e,this.index=0,this.length=0,t&&(this.data=t.slice(t.length-e,t.length),this.length=this.data.length)},I.DataWindow.prototype.push=function(e){return this.data.length<this.windowSize?(this.data.push(e),this.length=this.data.length,this):(this.data[this.index]=e,this.index=(this.index+1)%this.windowSize,this)},I.DataWindow.prototype.get=function(e){return this.data[this.getTrueIndex(e)]},I.DataWindow.prototype.getTrueIndex=function(e){return this.data.length<this.windowSize?e:(e+this.index)%this.windowSize},I.DataWindow.prototype.addAll=function(e){for(var t=0;t<e.length;t++)this.push(e[t])},I.grayscale=function(e,t,n){for(var r=new Uint8ClampedArray(e.length>>2),a=0,s=0,i=0;i<n;i++)for(var o=0;o<t;o++){var u=.299*e[s]+.587*e[s+1]+.114*e[s+2];r[a++]=u,s+=4}return r},I.equalizeHistogram=function(e,t,n){var r=e.length;n||(n=e),t||(t=5);for(var a=Array(256).fill(0),s=0;s<r;s+=t)++a[e[s]];var i=255*t/r,o=0;for(s=0;s<256;++s){var u=a[s];o=u+=o,a[s]=u*i}for(s=0;s<r;++s)n[s]=a[e[s]];return n},I.threshold=function(e,t){for(let n=0;n<e.length;n++)e[n]=e[n]>t?255:0;return e},I.correlation=function(e,t){const n=Math.min(e.length,t.length);let r=0;for(let a=0;a<n;a++)e[a]===t[a]&&r++;return r/Math.max(e.length,t.length)},I.resizeEye=function(e,t,n){var r=document.createElement("canvas");r.width=e.width,r.height=e.height,r.getContext("2d").putImageData(e.patch,0,0);var a=document.createElement("canvas");return a.width=t,a.height=n,a.getContext("2d").drawImage(r,0,0,r.width,r.height,0,0,t,n),a.getContext("2d").getImageData(0,0,t,n)},I.bound=function(e){e.x<0&&(e.x=0),e.y<0&&(e.y=0);var t=Math.max(document.documentElement.clientWidth,window.innerWidth||0),n=Math.max(document.documentElement.clientHeight,window.innerHeight||0);return e.x>t&&(e.x=t),e.y>n&&(e.y=n),e},I.DebugBox=function(e){this.para=document.createElement("p"),this.div=document.createElement("div"),this.div.appendChild(this.para),document.body.appendChild(this.div),this.buttons={},this.canvas={},this.stats={};var t,n=e||300;t=this,setInterval(function(){r(t.para,t.stats)},n)},I.DebugBox.prototype.set=function(e,t){this.stats[e]=t},I.DebugBox.prototype.inc=function(e,t,n){this.stats[e]||(this.stats[e]=n||0),this.stats[e]+=t||1},I.DebugBox.prototype.addButton=function(e,t){this.buttons[e]||(this.buttons[e]=document.createElement("button"),this.div.appendChild(this.buttons[e]));var n=this.buttons[e];this.buttons[e]=n,n.addEventListener("click",t),n.innerText=e},I.DebugBox.prototype.show=function(e,t){this.canvas[e]||(this.canvas[e]=document.createElement("canvas"),this.div.appendChild(this.canvas[e]));var n=this.canvas[e];n.getContext("2d").clearRect(0,0,n.width,n.height),t(n)};var S=I;const T={InitRegression:function(){var e=700,t=10;this.ridgeParameter=Math.pow(10,-5),this.errorXArray=new S.DataWindow(e),this.errorYArray=new S.DataWindow(e),this.screenXClicksArray=new S.DataWindow(e),this.screenYClicksArray=new S.DataWindow(e),this.eyeFeaturesClicks=new S.DataWindow(e),this.trailTime=1e3,this.trailDataWindow=this.trailTime/b.moveTickSize,this.screenXTrailArray=new S.DataWindow(t),this.screenYTrailArray=new S.DataWindow(t),this.eyeFeaturesTrail=new S.DataWindow(t),this.trailTimes=new S.DataWindow(t),this.dataClicks=new S.DataWindow(e),this.dataTrail=new S.DataWindow(t);var n=[[1,0,1,0],[0,1,0,1],[0,0,1,0],[0,0,0,1]],r=[[.25,0,.5,0],[0,.25,0,.5],[.5,0,1,0],[0,.5,0,1]],a=.1;r=O.mul(r,a);var s=[[1,0,0,0,0,0],[0,1,0,0,0,0],[0,0,1,0,0,0],[0,0,0,1,0,0]],i=(s=[[1,0,0,0],[0,1,0,0]],47),o=O.mul(O.identity(2),i),u=O.mul(O.identity(4),1e-4),c=[[500],[500],[0],[0]];this.kalman=new T.KalmanFilter(n,s,r,o,u,c)},KalmanFilter:function(e,t,n,r,a,s){this.F=e,this.Q=n,this.H=t,this.R=r,this.P=a,this.X=s}};T.KalmanFilter.prototype.update=function(e){for(var t=O.add,n=O.sub,r=O.inv,a=O.identity,s=k.mult,i=k.transpose,o=s(this.F,this.X),u=t(s(s(this.F,this.P),i(this.F)),this.Q),c=n(e,s(this.H,o)),l=t(s(s(this.H,u),i(this.H)),this.R),d=s(u,s(i(this.H),r(l))),h=0;h<c.length;h++)c[h]=[c[h]];return this.X=t(o,s(d,c)),this.P=s(n(a(d.length),s(d,this.H)),u),i(s(this.H,this.X))[0]},T.ridge=function(e,t,n){var r=t[0].length,a=new Array(r),s=k.transpose(t),i=new Array,o=!0;do{for(var u=k.mult(s,t),c=0;c<r;c++)u[c][c]=u[c][c]+n;var l=k.mult(s,e);for(c=0;c<r;c++)a[c]=l[c][0];try{var d=0!==a.length?a.length/a.length:0;a.length*d!==a.length&&console.log("Array length must be a multiple of m"),i=u.length===u[0].length?O.LUsolve(O.LU(u,!0),l):webgazer.mat.QRDecomposition(u,l);for(c=0;c<r;c++)a[c]=i[c];o=!0}catch(e){n*=10,console.log(e),o=!1}}while(!o);return a},T.setData=function(e){for(var t=0;t<e.length;t++){var n=new Uint8ClampedArray(e[t].eyes.left.patch.data),r=new Uint8ClampedArray(e[t].eyes.right.patch.data);e[t].eyes.left.patch=new ImageData(n,e[t].eyes.left.width,e[t].eyes.left.height),e[t].eyes.right.patch=new ImageData(r,e[t].eyes.right.width,e[t].eyes.right.height),this.addData(e[t].eyes,e[t].screenPos,e[t].type)}},T.getCurrentFixationIndex=function(){for(var e=this.screenXTrailArray.get(0),t=this.screenYTrailArray.get(0),n=this.screenXTrailArray.length-1;n>=0;n--){var r=this.screenXTrailArray.get(n),a=this.screenYTrailArray.get(n),s=Math.sqrt(Math.pow(r-e,2)+Math.pow(a-t,2));if(s>72)return n+1}return n},T.addData=function(e,t,n){e&&("click"===n?(this.screenXClicksArray.push([t[0]]),this.screenYClicksArray.push([t[1]]),this.eyeFeaturesClicks.push(S.getEyeFeats(e)),this.dataClicks.push({eyes:e,screenPos:t,type:n})):"move"===n&&(this.screenXTrailArray.push([t[0]]),this.screenYTrailArray.push([t[1]]),this.eyeFeaturesTrail.push(S.getEyeFeats(e)),this.trailTimes.push(performance.now()),this.dataTrail.push({eyes:e,screenPos:t,type:n})))};var C=T;const E={RidgeReg:function(){this.init()}};E.RidgeReg.prototype.init=C.InitRegression,E.RidgeReg.prototype.addData=C.addData,E.RidgeReg.prototype.predict=function(e){if(!e||0===this.eyeFeaturesClicks.length)return null;for(var t=performance.now()-this.trailTime,n=[],r=[],a=[],s=0;s<this.trailDataWindow;s++)this.trailTimes.get(s)>t&&(n.push(this.screenXTrailArray.get(s)),r.push(this.screenYTrailArray.get(s)),a.push(this.eyeFeaturesTrail.get(s)));var i=this.screenXClicksArray.data.concat(n),o=this.screenYClicksArray.data.concat(r),u=this.eyeFeaturesClicks.data.concat(a),c=C.ridge(i,u,this.ridgeParameter),l=C.ridge(o,u,this.ridgeParameter),d=S.getEyeFeats(e),h=0;for(s=0;s<d.length;s++)h+=d[s]*c[s];var p=0;for(s=0;s<d.length;s++)p+=d[s]*l[s];if(h=Math.floor(h),p=Math.floor(p),b.applyKalmanFilter){var f=[h,p];return f=this.kalman.update(f),{x:f[0],y:f[1]}}return{x:h,y:p}},E.RidgeReg.prototype.setData=C.setData,E.RidgeReg.prototype.getData=function(){return this.dataClicks.data},E.RidgeReg.prototype.name="ridge";var $=E;const A={RidgeWeightedReg:function(){this.init()}};A.RidgeWeightedReg.prototype.init=C.InitRegression,A.RidgeWeightedReg.prototype.addData=C.addData,A.RidgeWeightedReg.prototype.predict=function(e){if(!e||0===this.eyeFeaturesClicks.length)return null;for(var t=performance.now()-this.trailTime,n=[],r=[],a=[],s=0;s<this.trailDataWindow;s++)this.trailTimes.get(s)>t&&(n.push(this.screenXTrailArray.get(s)),r.push(this.screenYTrailArray.get(s)),a.push(this.eyeFeaturesTrail.get(s)));var i=this.eyeFeaturesClicks.data.length,o=Array(i),u=Array(i),c=Array(i);for(s=0;s<i;s++){for(var l=Math.sqrt(1/(i-s)),d=this.eyeFeaturesClicks.getTrueIndex(s),h=0;h<this.eyeFeaturesClicks.data[d].length;h++){var p=this.eyeFeaturesClicks.data[d][h]*l;void 0!==o[d]?o[d].push(p):o[d]=[p]}u[d]=this.screenXClicksArray.get(s).slice(0,this.screenXClicksArray.get(s).length),c[d]=this.screenYClicksArray.get(s).slice(0,this.screenYClicksArray.get(s).length),u[s][0]=u[s][0]*l,c[s][0]=c[s][0]*l}var f=u.concat(n),m=c.concat(r),g=o.concat(a),y=C.ridge(f,g,this.ridgeParameter),x=C.ridge(m,g,this.ridgeParameter),v=S.getEyeFeats(e),w=0;for(s=0;s<v.length;s++)w+=v[s]*y[s];var k=0;for(s=0;s<v.length;s++)k+=v[s]*x[s];if(w=Math.floor(w),k=Math.floor(k),b.applyKalmanFilter){var O=[w,k];return O=this.kalman.update(O),{x:O[0],y:O[1]}}return{x:w,y:k}},A.RidgeWeightedReg.prototype.setData=C.setData,A.RidgeWeightedReg.prototype.getData=function(){return this.dataClicks.data},A.RidgeWeightedReg.prototype.name="ridgeWeighted";var _=A;const D={};Math.pow(10,-5);var F=700,R={X:[0],Y:[0]},M=10;D.RidgeRegThreaded=function(){this.init()},D.RidgeRegThreaded.prototype.init=function(){this.screenXClicksArray=new S.DataWindow(F),this.screenYClicksArray=new S.DataWindow(F),this.eyeFeaturesClicks=new S.DataWindow(F),this.screenXTrailArray=new S.DataWindow(M),this.screenYTrailArray=new S.DataWindow(M),this.eyeFeaturesTrail=new S.DataWindow(M),this.dataClicks=new S.DataWindow(F),this.dataTrail=new S.DataWindow(F),this.worker||(this.worker=new Worker("ridgeWorker.mjs"),this.worker.onerror=function(e){console.log(e.message)},this.worker.onmessage=function(e){R.X=e.data.X,R.Y=e.data.Y},console.log("initialized worker"));var e=[[1,0,1,0],[0,1,0,1],[0,0,1,0],[0,0,0,1]],t=[[.25,0,.5,0],[0,.25,0,.5],[.5,0,1,0],[0,.5,0,1]],n=.1;t=O.mul(t,n);var r=[[1,0,0,0,0,0],[0,1,0,0,0,0],[0,0,1,0,0,0],[0,0,0,1,0,0]],a=(r=[[1,0,0,0],[0,1,0,0]],47),s=O.mul(O.identity(2),a),i=O.mul(O.identity(4),1e-4),o=[[500],[500],[0],[0]];this.kalman=new C.KalmanFilter(e,r,t,s,i,o)},D.RidgeRegThreaded.prototype.addData=function(e,t,n){e&&this.worker.postMessage({eyes:S.getEyeFeats(e),screenPos:t,type:n})},D.RidgeRegThreaded.prototype.predict=function(e){if(!e)return null;for(var t=R.X,n=R.Y,r=S.getEyeFeats(e),a=0,s=0,i=0;i<r.length;i++)a+=r[i]*t[i],s+=r[i]*n[i];if(a=Math.floor(a),s=Math.floor(s),b.applyKalmanFilter){var o=[a,s];return o=this.kalman.update(o),{x:o[0],y:o[1]}}return{x:a,y:s}},D.RidgeRegThreaded.prototype.setData=C.setData,D.RidgeRegThreaded.prototype.getData=function(){return this.dataClicks.data},D.RidgeRegThreaded.prototype.name="ridge";var z=D;const L={tracker:{}};L.tracker.TFFaceMesh=v,L.reg=$,L.reg.RidgeWeightedReg=_.RidgeWeightedReg,L.reg.RidgeRegThreaded=z.RidgeRegThreaded,L.util=S,L.params=b;var P=null,B=null,W=null,V=null,U=null,G=null,H=null,q="",K=new Array(50),X=new Array(50),Y=performance.now(),Z=null,Q=null,J=!1,ee=function(e,t){},te=ee,ne=["click","move"],re=performance.now(),ae=new L.tracker.TFFaceMesh,se=[new L.reg.RidgeReg],ie={TFFacemesh:function(){return new L.tracker.TFFaceMesh}},oe={ridge:function(){return new L.reg.RidgeReg},weightedRidge:function(){return new L.reg.RidgeWeightedReg},threadedRidge:function(){return new L.reg.RidgeRegThreaded}},ue="webgazerGlobalData",ce="webgazerGlobalSettings",le={},de=[],he={data:[],settings:{}};L.computeValidationBoxSize=function(){var e=W.videoWidth,t=W.videoHeight,n=parseInt(W.style.width),r=parseInt(W.style.height),a=Math.min(e,t),s=Math.max(e,t),i=e==s?n/e:r/t,o=a*L.params.faceFeedbackBoxRatio*i,u=(r-o)/2,c=(n-o)/2;return[u,c,o,o]};var pe=new S.DataWindow(4),fe=0,me=function(e,t,n){if(!J){if(0===se.length)return console.log("regression not set, call setRegression()"),null;for(var r in se)Z&&se[r].addData(Z,[e,t],n)}},be=async function(e){me(e.clientX,e.clientY,ne[0]),L.params.saveDataAcrossSessions&&await l()},ge=function(e){if(!J){var t=performance.now();t<re+L.params.moveTickSize||(re=t,me(e.clientX,e.clientY,ne[1]))}},ye=function(){document.addEventListener("click",be,!0),document.addEventListener("mousemove",ge,!0)},xe=function(){document.removeEventListener("click",be,!0),document.removeEventListener("mousemove",ge,!0)};L.begin=function(e){return"https:"!==window.location.protocol&&"localhost"!==window.location.hostname&&window.chrome&&alert("WebGazer works only over https. If you are doing local development, you need to run a local server."),L.params.saveDataAcrossSessions&&c(),e=e||function(){console.log("No stream")},q?(h(q),L):(p(),new Promise(async(t,n)=>{let r;try{r=await navigator.mediaDevices.getUserMedia(L.params.camConstraints),h(r),t(L)}catch(t){e(),W=null,r=null,n(t)}}))},L.isReady=function(){return null!==V&&V.width>0},L.pause=function(){return J=!0,L},L.resume=async function(){return J?(J=!1,await u(),L):L},L.end=function(){return J=!0,document.body.removeChild(W),document.body.removeChild(V),L},L.stopVideo=function(){return P.getTracks()[0].stop(),document.body.removeChild(U),document.body.removeChild(G),L},L.detectCompatibility=function(){var e=navigator.mediaDevices.getUserMedia||navigator.getUserMedia||navigator.webkitGetUserMedia||navigator.mozGetUserMedia;return void 0!==e},L.showVideoPreview=function(e){return L.params.showVideoPreview=e,L.showVideo(e&&L.params.showVideo),L.showFaceOverlay(e&&L.params.showFaceOverlay),L.showFaceFeedbackBox(e&&L.params.showFaceFeedbackBox),L},L.showVideo=function(e){return L.params.showVideo=e,W&&(W.style.display=e?"block":"none"),B&&(B.style.display=e?"block":"none"),L},L.showFaceOverlay=function(e){return L.params.showFaceOverlay=e,U&&(U.style.display=e?"block":"none"),L},L.showFaceFeedbackBox=function(e){return L.params.showFaceFeedbackBox=e,G&&(G.style.display=e?"block":"none"),L},L.showPredictionPoints=function(e){return L.params.showGazeDot=e,H&&(H.style.display=e?"block":"none"),L},L.saveDataAcrossSessions=function(e){return L.params.saveDataAcrossSessions=e,L},L.applyKalmanFilter=function(e){return L.params.applyKalmanFilter=e,L},L.setCameraConstraints=async function(e){var t,n;if(L.params.camConstraints=e,P){L.pause(),t=P.getVideoTracks()[0];try{await t.applyConstraints(L.params.camConstraints),n=t.getSettings(),f(n.width,n.height)}catch(e){return void console.log(e)}L.setVideoViewerSize(L.params.videoViewerWidth,L.params.videoViewerHeight),L.getTracker().reset(),await L.resume()}},L.setStaticVideo=function(e){return q=e,L},L.setVideoViewerSize=function(e,t){L.params.videoViewerWidth=e,L.params.videoViewerHeight=t,W.style.width=e+"px",W.style.height=t+"px",B.style.width=e+"px",B.style.height=t+"px",U.style.width=e+"px",U.style.height=t+"px";var n=L.computeValidationBoxSize();G.style.top=n[0]+"px",G.style.left=n[1]+"px",G.style.width=n[2]+"px",G.style.height=n[3]+"px"},L.addMouseEventListeners=function(){return ye(),L},L.removeMouseEventListeners=function(){return xe(),L},L.recordScreenPosition=function(e,t,n){return me(e,t,n||ne[0]),L},L.storePoints=function(e,t,n){K[n]=e,X[n]=t},L.setTracker=function(e){if(void 0===ie[e]){for(var t in console.log("Invalid tracker selection"),console.log("Options are: "),ie)console.log(t);return L}return ae=ie[e](),L},L.setRegression=function(e){if(void 0===oe[e]){for(var t in console.log("Invalid regression selection"),console.log("Options are: "),oe)console.log(t);return L}return de=se[0].getData(),se=[oe[e]()],se[0].setData(de),L},L.addTrackerModule=function(e,t){ie[e]=function(){return new t}},L.addRegressionModule=function(e,t){oe[e]=function(){return new t}},L.addRegression=function(e){var t=oe[e]();return de=se[0].getData(),t.setData(de),se.push(t),L},L.setGazeListener=function(e){return te=e,L},L.clearGazeListener=function(){return te=ee,L},L.setVideoElementCanvas=function(e){return V=e,V},L.clearData=async function(){d()},L.getTracker=function(){return ae},L.getRegression=function(){return se},L.getCurrentPrediction=function(e){return o(e)},L.params.getEventTypes=function(){return ne.slice()},L.getVideoElementCanvas=function(){return V},L.getVideoPreviewToCameraResolutionRatio=function(){return[L.params.videoViewerWidth/W.videoWidth,L.params.videoViewerHeight/W.videoHeight]},L.getStoredPoints=function(){return[K,X]};t.default=L}]).default;