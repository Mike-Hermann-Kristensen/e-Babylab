# Generated by Django 3.1.7 on 2021-03-16 14:16

from django.db import migrations, models
import tinymce.models


class Migration(migrations.Migration):

    dependencies = [
        ('experiments', '0051_experiment_instrument'),
    ]

    operations = [
        migrations.AlterField(
            model_name='experiment',
            name='cdi_page_tpl',
            field=tinymce.models.HTMLField(default='{% extends "experiments/base.html" %} {% block title %}Vocabulary Checklist{% endblock %} {% block content %}\n<div class="container">\n    <div class="row">\n        <div class="col text-center">\n            <h1>Vocabulary Checklist</h1>\n        </div>\n    </div>\n    <div class="row">\n        <div class="col">\n            <div class="card">\n                <div class="card-body">\n                    {% if error_message %}\n                    <div class="alert alert-danger" role="alert">\n                        {{ error_message }}\n                    </div>\n                    {% endif %}\n\n                    <form id="parentform" action="{% url \'experiments:parentFormSubmit\' subject_data.id %}" method="post" novalidate>\n                        {% csrf_token %}\n                        <p class="card-text">\n                            Please mark the boxes for words your child understands. If your child uses another word with the same meaning (e.g., nana for grandma), mark it anyway. </br></br>\n                        </p>\n                        {{ parent_form.non_field_errors }}\n                        {% for field in parent_form %}\n                        {% if field.name == \'resolution_w\' or field.name == \'resolution_h\' or field.name == \'experiment\' or field.name == \'parent_form\' %}\n                            {{ field }}\n                        {% else %}\n                        <div class="word-item" value="{{ forloop.counter }}">\n                            <div class="field-wrapper">\n                                {{ field.errors }}\n                                {{ field }} &emsp; <label class="label-inline">{{ field.label }}</label>\n                                    \n                                <small class="form-text text-muted">{{ field.help_text }}</small>\n                            </div>\n                        </div>\n                        <br>\n                        {% endif %}\n                        {% endfor %}\n                        <button type="submit" class="btn btn-primary">Submit</button>\n                    </form>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n<script>\n    $(document).ready(function() {\n        $("#parentform").on(\'submit\', function() {\n            // to each unchecked checkbox\n            $(\'input:checkbox:not(:checked)\').each(function () {\n                // add hidden checkbox to be posted\n                $("#parentform").append("<input type=\'hidden\' name=\'" + this.name + "\' value=\'0\' />");\n            });\n        })\n    })\n</script>\n{% endblock %}', verbose_name='CDI page template'),
        ),
        migrations.AlterField(
            model_name='question',
            name='choices',
            field=models.TextField(blank=True, help_text='For types "radio", "select", and "select multiple", provide a comma-separated list of options (e.g., a, b, c). For types "integer range" and "age", provide the min and max integers (e.g., 1, 10). For type "sex", provide the female followed by the male display text (e.g., female, male).', null=True),
        ),
        migrations.AlterField(
            model_name='question',
            name='question_type',
            field=models.CharField(choices=[('text', 'text'), ('radio', 'radio'), ('select', 'select'), ('select-multiple', 'select multiple'), ('integer', 'integer'), ('number-range', 'integer range'), ('age', 'age'), ('sex', 'sex')], default='text', max_length=200),
        ),
    ]
