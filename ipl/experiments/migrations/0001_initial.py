# -*- coding: utf-8 -*-
# Generated by Django 1.11.10 on 2018-02-20 15:08
from __future__ import unicode_literals

import colorfield.fields
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import experiments.models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AnswerBase',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='BlockItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=20)),
                ('comment', models.TextField(blank=True, null=True)),
                ('background_colour', colorfield.fields.ColorField(default='#FFFFFF', max_length=18)),
                ('randomise_trials', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='ConsentQuestion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Experiment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('exp_name', models.CharField(max_length=200, verbose_name='experiment name')),
                ('created_on', models.DateTimeField(verbose_name='date created')),
                ('information_page', models.TextField(blank=True, null=True, verbose_name='welcome page')),
                ('introduction', models.TextField(blank=True, null=True, verbose_name='consent form introduction')),
                ('consent_fail_reason', models.TextField(blank=True, null=True, verbose_name='consent form fail message')),
                ('response_keys', models.CharField(blank=True, help_text='provide a comma-separated list if multiple response keys are allowed (e.g., up, down, left, right, a, b)', max_length=200, null=True, verbose_name='response key(s)')),
                ('loading_image', models.FileField(blank=True, null=True, upload_to=experiments.models.experiment_folder)),
                ('thank_you', models.TextField(blank=True, null=True, verbose_name='thank you page')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ListItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('list_name', models.CharField(max_length=20)),
                ('global_timeout', models.IntegerField(default=300000, verbose_name='global timeout (ms)')),
                ('experiment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='experiments.Experiment')),
            ],
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('required', models.BooleanField()),
                ('question_type', models.CharField(choices=[('text', 'text'), ('radio', 'radio'), ('select', 'select'), ('select-multiple', 'select multiple'), ('integer', 'integer')], default='text', max_length=200)),
                ('choices', models.TextField(blank=True, help_text='if the question type is "radio", "select", or "select multiple", provide a comma-separated list of options for this question.', null=True)),
                ('experiment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='experiments.Experiment')),
            ],
        ),
        migrations.CreateModel(
            name='SubjectData',
            fields=[
                ('id', models.CharField(max_length=36, primary_key=True, serialize=False, verbose_name='Unique ID')),
                ('participant_id', models.IntegerField(blank=True, null=True, verbose_name='Participant Number')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('resolution_w', models.IntegerField(default=0, verbose_name='Resolution Width')),
                ('resolution_h', models.IntegerField(default=0, verbose_name='Resolution Height')),
                ('experiment', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='experiments.Experiment')),
                ('listitem', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='experiments.ListItem')),
            ],
            options={
                'verbose_name': 'Participant data',
                'verbose_name_plural': 'Participant data',
            },
        ),
        migrations.CreateModel(
            name='TrialItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=20)),
                ('code', models.CharField(max_length=20)),
                ('visual_onset', models.IntegerField(default=0, verbose_name='visual onset (ms)')),
                ('audio_onset', models.IntegerField(default=0, verbose_name='audio onset (ms)')),
                ('audio_file', models.FileField(blank=True, null=True, upload_to=experiments.models.audio_folder)),
                ('visual_file', models.FileField(upload_to=experiments.models.visual_folder)),
                ('user_input', models.CharField(choices=[('NO', 'Do not require user input'), ('YES', 'Require user input')], default='NO', max_length=3)),
                ('max_duration', models.IntegerField(help_text='This value will be ignored for video trials which do not require user input.', verbose_name='maximum duration (ms)')),
                ('record_trial', models.BooleanField(default=True)),
                ('blockitem', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='experiments.BlockItem')),
            ],
        ),
        migrations.CreateModel(
            name='TrialResult',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(auto_now_add=True)),
                ('start_time', models.DateTimeField()),
                ('end_time', models.DateTimeField()),
                ('key_pressed', models.CharField(blank=True, max_length=255, null=True)),
                ('webcam_file', models.FileField(blank=True, null=True, upload_to=experiments.models.visual_folder)),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='experiments.SubjectData')),
                ('trialitem', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='experiments.TrialItem')),
            ],
        ),
        migrations.CreateModel(
            name='AnswerInteger',
            fields=[
                ('answerbase_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='experiments.AnswerBase')),
                ('body', models.IntegerField(blank=True, null=True)),
            ],
            bases=('experiments.answerbase',),
        ),
        migrations.CreateModel(
            name='AnswerRadio',
            fields=[
                ('answerbase_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='experiments.AnswerBase')),
                ('body', models.TextField(blank=True, null=True)),
            ],
            bases=('experiments.answerbase',),
        ),
        migrations.CreateModel(
            name='AnswerSelect',
            fields=[
                ('answerbase_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='experiments.AnswerBase')),
                ('body', models.TextField(blank=True, null=True)),
            ],
            bases=('experiments.answerbase',),
        ),
        migrations.CreateModel(
            name='AnswerSelectMultiple',
            fields=[
                ('answerbase_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='experiments.AnswerBase')),
                ('body', models.TextField(blank=True, null=True)),
            ],
            bases=('experiments.answerbase',),
        ),
        migrations.CreateModel(
            name='AnswerText',
            fields=[
                ('answerbase_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='experiments.AnswerBase')),
                ('body', models.TextField(blank=True, null=True)),
            ],
            bases=('experiments.answerbase',),
        ),
        migrations.AddField(
            model_name='consentquestion',
            name='experiment',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='experiments.Experiment'),
        ),
        migrations.AddField(
            model_name='blockitem',
            name='listitem',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='experiments.ListItem'),
        ),
        migrations.AddField(
            model_name='answerbase',
            name='question',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='experiments.Question'),
        ),
        migrations.AddField(
            model_name='answerbase',
            name='subject_data',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='experiments.SubjectData'),
        ),
    ]
